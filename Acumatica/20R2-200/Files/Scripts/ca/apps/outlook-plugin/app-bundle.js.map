{"version":3,"sources":["../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/app.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/app.css","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/app.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/containers/labeled-control.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/containers/labeled-control.css","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/containers/labeled-control.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/containers/screen-container.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/containers/screen-container.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/containers/vertical-stack.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/containers/vertical-stack.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/outlook-data/outlook-data.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/outlook-data/outlook-data.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/qp-command-button.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/qp-command-button.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/qp-container.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/controls/qp-container.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/enhanced-compose.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/home/copy.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/home/copy.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/home/index.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/home/index.html","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/main.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/services/authentication-service.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/services/screen-api-client.ts","../../../../../..E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/E:\\Bld6\\AC-FULL2020R25-JOB1\\code_repo\\ClientSideApps\\qp-packages\\outlook-plugin-app/src/apps/outlook-plugin/services/screen-data.ts"],"names":[],"mappings":"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","file":"apps/outlook-plugin/app-bundle.js","sourcesContent":["import { HttpClient, json } from 'aurelia-fetch-client'\nimport { autoinject, observable, TaskQueue } from 'aurelia-framework'\nimport { EventAggregator } from 'aurelia-event-aggregator';\nimport { ScreenApiClient, ApiManager } from './services/screen-api-client';\nimport { AuthenticationService } from './services/authentication-service';\n\ndeclare var requirejs\ndeclare var Office: any\n\n\n@autoinject\nexport class App {\n\n\n\n  @observable\n  // signedIn = false;\n  initialized = false;\n  username: string;\n  password: string;\n  @observable\n  apiType: string\n  outlookScreenId: string\n  constructor(private client: HttpClient, private tasqQueue: TaskQueue, private apiManager: ApiManager, private authenticationService: AuthenticationService) {\n    const _this = this\n    const root = requirejs.s.contexts._.config.baseUrl.replace(\"/scripts/ca/\", \"/\")\n    this.apiType = 'marina'\n    this.apiManager.setApiRoot('newui/look')\n    this.outlookScreenId = \"ou201000\"\n    \n    this.client.configure((client) => {\n\n      client\n        .withBaseUrl(root)\n        .withDefaults({\n          headers: {\n            'Accept': 'application/json',\n            'X-Requested-With': 'Fetch'\n          },\n          credentials: 'same-origin',\n\n        })\n\n        .withInterceptor({\n\n          async response(r) {\n            const response = await r.clone()\n            const contentType = response.headers.get(\"content-type\");\n            if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n              const x = await response.json()\n              if (x.diffType === \"redirect\") {\n                if (x.mode === 1) {\n                  if (x.url.indexOf(\"Frames/Outlook/FirstRun.html\") > -1) {\n                    _this.authenticationService.lostAuth()\n                    throw new Error('Not authenticated')\n                  }\n                } else if (x.mode === 2) {\n                  Office.context.ui.displayDialogAsync(x.url)\n                }\n              }\n            }\n            return r\n          }\n        })\n    })\n\n  }\n\n\n  apiTypeChanged(newValue) {\n    if (newValue == 'marina') {\n\n      this.apiManager.setApiRoot('newui/look')\n      this.outlookScreenId = \"ou201000\"\n    }\n    else if (newValue == 'sasha') {\n      this.apiManager.setApiRoot('newui/test')\n      this.outlookScreenId = \"OutlookPlugin\"\n    }\n    this.tasqQueue.flushMicroTaskQueue()\n\n  }\n\n  async signInWithToken() {\n\n    let signedIn\n    let failedToSignIn\n    const result = new Promise((resolve, reject) => { signedIn = resolve; failedToSignIn = reject })\n\n    Office.context.mailbox.getUserIdentityTokenAsync((asyncResult) => {\n      this.authenticationService.signInWithToken(asyncResult.value)\n        .then(x => {\n          signedIn()\n        })\n        .catch(x => {\n          failedToSignIn()\n        })\n    })\n    return result\n  }\n\n  async attached() {\n    let signalReady\n    const appReady = new Promise((r) => { signalReady = r })\n\n    Office.initialize = () => {\n      signalReady()\n      this.signInWithToken()\n        .then(() => { this.initialized = true })\n        .catch(x => { this.initialized = true })\n    }\n    return appReady\n  }\n\n  async logIn() {\n\n    await this.authenticationService.logIn(this.username, this.password)\n    if (this.authenticationService.authenticated) {\n      this.username = ''\n      this.password = ''\n    }\n  }\n\n\n}\n\n\n",".login-form {\n  padding: 12px;\n}\n\n.login-form input,\n.login-form button {\n  box-sizing: border-box;\n\n  width: 100%;\n  margin: 6px 0;\n  color: rgba(0, 0, 0, 0.64);\n  font-size: 19px;\n  font-weight: 500;\n\n  padding: 6px 8px;\n  border: solid 1px RGBA(0, 0, 0, 0.12);\n  border-radius: 3px;\n}\n\n.login-form input::placeholder {\n  font-style: normal;\n}\n\n.login-form button {\n  color: #444;\n  cursor: pointer;\n  padding: 5px;\n  background-color: #fff;\n\n  border: solid 1px #027ACC;\n  border-radius: 5px;\n  transition: all .1s ease-in-out;\n  -webkit-appearance: none;\n}\n\n.login-form button:focus,\n.login-form button:hover {\n  color: white;\n  background-color: #027ACC;\n  border: solid 1px #027ACC;\n\n}\n\n.login-form button:disabled {\n  color: #444;\n  cursor: default;\n  background-color: #eee;\n  border: solid 1px #ccc;\n}\n","<template>\n  <require from=\"./app.css\"></require>\n  <require from=\"./controls/containers/screen-container\"></require>\n  <!-- Api: ${apiType} -->\n  <hr>\n  <div if.bind=\"initialized && apiType\">\n    <div if.bind=\"authenticationService.authenticated\" style=\"background-color: white;\">\n      <qp-screen-container config.bind=\"{screenId:outlookScreenId}\">\n      </qp-screen-container>\n    </div>\n    <div else class='login-form'>\n      <input type=\"text\" name=\"username\" value.bind=\"username\" required placeholder=\"My Username\">\n      <input type=\"password\" value.bind=\"password\" required placeholder=\"My Password\">\n      <button click.delegate=\"logIn()\" disabled.bind=\"!username || !password\">Sign In</button>\n    </div>\n  </div>\n  <!-- <div else>\n    <h1>\n      choose api\n    </h1>\n    \n    <label><input type=\"radio\" checked.bind=\"apiType\" value=\"marina\"> Marina</label><br/>\n    <label><input type=\"radio\" checked.bind=\"apiType\" value=\"sasha\"> Sasha</label>\n  </div> -->\n</template>\n","import { bindable, bindingMode, computedFrom, customElement } from \"aurelia-framework\";\n\n@customElement(\"qp-labeled-control\")\nexport class QpLabeledControlCustomElement {\n  @bindable controlConfig\n  @bindable({ defaultBindingMode: bindingMode.twoWay }) controlValue\n  @bindable controlType = undefined\n\n\n  @computedFrom('controlConfig.displayName', 'controlConfig.action','controlConfig.suppressLabel')\n  get label() {\n    if(this.controlConfig?.suppressLabel){\n      return undefined\n    }\n    if (this.controlConfig?.action) {\n      return undefined\n    }\n    return this.controlConfig?.displayName\n  }\n}\n",".labeled-control__control .qp-text-editor {\n  width: 100%;\n}\n.labeled-control__control .qp-button{\n  width:100%;\n}\n","<template>\n  <require from=\"./labeled-control.css\"></require>\n  <div style=\"display:flex; margin: 5px;\" if.bind=\"controlConfig.visible === undefined  || controlConfig.visible !== false\">\n    <div style=\"flex:0 0 100px;\" if.bind=\"label\" class=\"labeled-control__label\">\n      <label>${label}</label>\n    </div>\n    <div style=\"flex:1 0 180px;\">\n      <enhanced-compose view-model.bind=\"controlType\" class=\"labeled-control__control\" value.two-way=\"controlValue\" config.bind='controlConfig'>\n      </enhanced-compose>\n    </div>\n  </div>\n</template>\n","import { customElement, autoinject, bindable } from \"aurelia-framework\";\nimport { QpContainerCustomElement } from \"../qp-container\";\nimport { ScreenInfo, ScreenData } from \"apps/outlook-plugin/services/screen-data\";\n\n@customElement(\"qp-screen-container\")\n@autoinject\nexport class QpScreenContainerCustomElement {\n\n\n\n  @bindable config\n  constructor(private screenInfo: ScreenInfo, private screenData: ScreenData) {\n\n  }\n\n  configChanged(newValue) {\n\n  }\n  attached() {\n    return this.screenInfo.initScreen(this.config.screenId)\n\n  }\n}\n","<template>\n  <div>\n    <div repeat.for=\"con of screenInfo.controls\">\n      <template if.bind=\"con.controls\">\n        <enhanced-compose controls.bind=\"con.controls\" view-model.bind=\"con.type\" config.bind='screenData.configs[con.id]'></enhanced-compose>\n      </template>\n      <template else>\n        <qp-labeled-control control-config.bind=\"screenData.configs[con.id]\" control-value.two-way=\"screenData.values[con.view][con.field]\" control-type.bind=\"con.type\"></qp-labeled-control>\n      </template>\n    </div>\n  </div>\n</template>\n","export class QpVerticalStackContainerCustomElement {\n  \n}\n","<template>\n  \n</template>\n","import { Container, autoinject, customElement, bindable, TaskQueue } from 'aurelia-framework'\nimport { ScreenData } from 'apps/outlook-plugin/services/screen-data'\nimport { EventAggregator } from 'aurelia-event-aggregator'\n\ndeclare var Office\n\n@autoinject\n@customElement('qp-outlook-data')\nexport class QpOutlookDataCustomElement {\n  @bindable config: IOutlookDataConfig\n  @bindable value\n\n  serialized: string\n  ran = false\n  constructor(private container: Container, private screenData: ScreenData, private taskQueue: TaskQueue, private eventAggregator: EventAggregator ) {\n\n\n  }\n\n  configChanged(n, o) {\n\n  }\n\n\n  attached() {\n\n    // if (o === undefined && !this.ran) {\n      // this.ran = true\n      this.taskQueue.queueTask(() => { this.updateValue() }      )\n    // }\n\n    // this.serialized = JSON.stringify(message, null, 2)\n\n    // this.screenData.setValue(\"ContactLastName\", message.sender.displayName)\n\n\n    // this.screenData.setValue(\"ContactDisplayName\", message.sender.displayName)\n\n  }\n  updateValue() {\n    const message = Office.context.mailbox.item\n    this.serialized = JSON.stringify(message, null, 2)\n    if (!message) {\n      return\n    }\n\n    if (this.config.fieldsMap) {\n      if (this.config.fieldsMap.isIncome) {\n        this.screenData.setValue(this.config.fieldsMap.isIncome , true)\n      }\n      if (this.config.fieldsMap.emailAddress) {\n        this.screenData.setValue(this.config.fieldsMap.emailAddress, message.sender.emailAddress)\n      }\n\n      if (this.config.fieldsMap.displayName) {\n        this.screenData.setValue(this.config.fieldsMap.displayName, message.sender.displayName)\n      }\n\n      if (this.config.fieldsMap.newFirstName) {\n        this.screenData.setValue(this.config.fieldsMap.newFirstName, getFirstName(message.sender.displayName))\n      }\n\n      if (this.config.fieldsMap.newLastName) {\n        this.screenData.setValue(this.config.fieldsMap.newLastName, getLastName(message.sender.displayName))\n      }\n\n      if (message.sender.emailAddress == \"\" || message.sender.emailAddress == Office.context.mailbox.userProfile.emailAddress) {\n        if (this.config.fieldsMap.isIncome) {\n          this.screenData.setValue(this.config.fieldsMap.isIncome, false)\n        }\n\n        if (this.config.fieldsMap.displayName) {\n          this.screenData.setValue(this.config.fieldsMap.displayName, \"\")\n        }\n\n        if (this.config.fieldsMap.newFirstName) {\n          this.screenData.setValue(this.config.fieldsMap.newFirstName, \"\")\n        }\n\n        if (this.config.fieldsMap.newLastName) {\n          this.screenData.setValue(this.config.fieldsMap.newLastName, \"\")\n        }\n      }\n\n\n      if (this.config.fieldsMap.messageId) {\n        this.screenData.setValue(this.config.fieldsMap.messageId, message.internetMessageId)\n      }\n      if (this.config.fieldsMap.subject) {\n        this.screenData.setValue(this.config.fieldsMap.subject, message.subject)\n      }\n      if (this.config.fieldsMap.itemId) {\n        this.screenData.setValue(this.config.fieldsMap.itemId, message.itemId)\n      }\n      if (this.config.fieldsMap.to) {\n        this.screenData.setValue(this.config.fieldsMap.to, serializeAddressList(message.to))\n      }\n      if (this.config.fieldsMap.cC) {\n        this.screenData.setValue(this.config.fieldsMap.cC, serializeAddressList(message.cc))\n      }\n      if (this.config.fieldsMap.ewsUrl) {\n        this.screenData.setValue(this.config.fieldsMap.ewsUrl, Office.context.mailbox.ewsUrl)\n      }\n\n\n      Office.context.mailbox.getCallbackTokenAsync(\n        (asyncResult) => {\n          // debugger\n          if (asyncResult.status === \"succeeded\") {\n\n            if (this.config.fieldsMap.apiToken) {\n              this.screenData.setValue(this.config.fieldsMap.apiToken, asyncResult.value)\n            }\n          }\n          this.eventAggregator.publish(\"execute-command\")\n          // this.screenData.executeCommand(undefined)\n        });\n\n    }\n  }\n}\n// <script src=\"//appsforoffice.microsoft.com/lib/1.1/hosted/office.js\" type=\"text/javascript\"></script>\ninterface IOutlookDataConfig {\n  [k: string]: any\n}\n\n\nfunction serializeAddressList(list) {\n  var msg = \"\";\n  if (list != null)\n    list.forEach(function (recip, index) {\n      msg = msg + \"\\\"\" + recip.displayName + \"\\\"\" + \" <\" + recip.emailAddress + \">;\";\n    });\n  return msg;\n}\n\nfunction getFirstName(displayName) {\n  displayName = displayName.trim();\n  while (displayName.indexOf(\"  \") > -1)\n    displayName = displayName.replace(\"  \", \" \");\n  let names = displayName.split(\" \");\n  let firstName = names.length > 1 ? names[0] : null;\n  return firstName;\n}\n\nfunction getLastName(displayName) {\n  displayName = displayName.trim();\n  while (displayName.indexOf(\"  \") > -1)\n    displayName = displayName.replace(\"  \", \" \");\n  let names = displayName.split(\" \");\n  let lastName = names.length > 1 ? names[names.length - 1] : names[0];\n  return lastName;\n}\n","<template>\n\n</template>\n","import { customElement, autoinject, bindable } from \"aurelia-framework\";\nimport { ScreenInfo } from \"../services/screen-data\";\n\n\n@customElement(\"qp-command-button\")\n\n@autoinject\nexport class QpCommandButtonCustomElement {\n  @bindable config\n  constructor(private screenData: ScreenInfo) {\n\n  }\n\n  click() {\n    this.screenData.executeCommand(this.config.command || this.config.action)\n  }\n}\n","<template >\n  <button style=\"\n  width:100%;\n  color: #333;\n  font-family: 'Segoe UI Regular WestEuropean','Segoe UI','Segoe WP',Tahoma,Arial,sans-serif;\n  font-size: 14px;\n  font-weight: 400;\n  box-sizing: border-box;\n  margin: 0;\n  box-shadow: none;\n  background-color: #f4f4f4;\n  border: 1px solid #f4f4f4;\n  cursor: pointer;\n  display: inline-block;\n  height: 2pc;\n  min-width: 5pc;\n  padding: 4px 20px 6px;\" if.bind=\"config.visible\" click.delegate=\"click()\" disabled.bind=\"config.disabled\">${config.DisplayName || config.displayName|| config.id}</button> \n</template>\n\n\n\n","import { autoinject, customElement, bindable } from \"aurelia-framework\";\nimport { ScreenData } from \"../services/screen-data\";\n\n@autoinject\n@customElement(\"qp-container\")\nexport class QpContainerCustomElement {\n\n  @bindable controls\n  constructor(private screenData: ScreenData) {\n    \n\n  }\n}\n\n\n","<template>\n  <div>\n    <div repeat.for=\"con of controls\">\n      <template if.bind=\"con.controls\">\n\n        <enhanced-compose controls.bind=\"con.controls\" view-model.bind=\"con.type\"\n          config.bind='screenData.configs[con.id]'>\n        </enhanced-compose>\n\n      </template>\n      <template else>\n        <qp-labeled-control control-config.bind=\"screenData.configs[con.id]\" control-value.two-way=\"screenData.fieldValues[con.view][con.field]\"\n        control-type.bind=\"con.type\"></qp-labeled-control>\n\n      </template>\n    </div>\n  </div>\n</template>\n","import { customElement, noView, bindable, autoinject, Container, TargetInstruction, CompositionEngine, ViewResources, ViewSlot, Controller, metadata, HtmlBehaviorResource } from 'aurelia-framework'\n\nimport { getLogger } from \"aurelia-logging\";\nconst logger = getLogger('enhanced-compose')\n\n@noView\n@customElement(\"enhanced-compose\")\n@autoinject\nexport class EnhancedComposeCustomElement {\n  @bindable viewModel\n  expressions: any[];\n  bindingContext: any;\n  overrideContext: any;\n  currViewModel: any;\n  currViewModelPromise: any;\n  currentViewModelPromise: Promise<void>;\n  currentViewModel: any;\n\n  constructor(private container: Container, private viewResources: ViewResources, private element: Element, private targetInstruction: TargetInstruction, private compositionEngine: CompositionEngine) {\n\n    this.expressions = this.targetInstruction.expressions;\n    // targetInstruction.expressions = [];\n  }\n\n  bind(bindingContext, overrideContext) {\n    this.bindingContext = bindingContext;\n    this.overrideContext = overrideContext;\n    this.viewModelChanged(this.viewModel);\n  }\n\n\n  getViewModelClassFromTagName(customElementTagName: string) {\n    const r = this.viewResources.getElement(customElementTagName);\n    if (r) {\n      return r.target\n    }\n    else {\n      const r = this.viewResources.getElement('qp-text-editor')\n    }\n  }\n\n\n\n\n\n  async viewModelChanged(viewModel) {\n\n    // only compose once\n    // for the sake of simplicity\n    if (this.currViewModel || this.currViewModelPromise) {\n      return;\n    }\n    if (viewModel) {\n\n      const vmClass = this.getViewModelClassFromTagName(viewModel)\n      if (!vmClass) {\n        logger.error(\"No client control exists for tag\", viewModel)\n      }\n      const scope = {\n        bindingContext: this.bindingContext,\n        overrideContext: this.overrideContext,\n        viewModel: vmClass,// viewModel,\n        container: this.container,\n        host: this.element,\n        viewResources: this.container.get(ViewResources),\n        viewSlot: this.container.get(ViewSlot)\n      };\n      this.currentViewModelPromise = this.compositionEngine\n        .compose(scope)\n        .then(\n          (controller: Controller) => {\n\n            this.currentViewModel = controller.viewModel;\n            const behaviorResource = metadata.get(\n              metadata.resource,\n              controller.viewModel.constructor\n            ) as any;\n            if (behaviorResource) {\n              const bindables = behaviorResource.properties;\n              for (const property of bindables) {\n                const expression = this.expressions.find(\n                  exp => exp.targetProperty === property.name\n                );\n                if (expression) {\n                  const b = expression.createBinding(controller.viewModel);\n                  controller.view.addBinding(b);\n                }\n              }\n            }\n\n            controller.bind(scope);\n          },\n          ex => {\n            logger.error(\"error composing\",ex)\n          }\n        )\n        .then(() => {\n          this.currentViewModelPromise = undefined;\n        });\n    }\n  }\n}\n","export class Home {\n\n}\n","<template>\n  <div class=\"au-animate animate-slide-in-right \">\n\n    Copy\n    пашел на \n  </div>\n</template>\n","export class Home {\n\n}\n","<template>\n  <div class=\"au-animate animate-slide-in-right \">\n    Home\nиди на\n  </div>\n</template>\n","import { Aurelia, PLATFORM } from 'aurelia-framework'\nimport environment from '../../environment';\nimport { EnhancedComposeCustomElement } from './enhanced-compose';\nimport { QpOutlookDataCustomElement } from './controls/outlook-data/outlook-data';\nimport { QpCommandButtonCustomElement } from './controls/qp-command-button';\nimport { QpContainerCustomElement } from './controls/qp-container';\nimport { QpLabeledControlCustomElement } from './controls/containers/labeled-control';\n\nexport function configure(aurelia: Aurelia) {\n\n  const globalFeatures = PLATFORM.global.globalControlsModules\n  aurelia.use\n    .basicConfiguration()\n    .plugin('aurelia-dialog')\n    .plugin('aurelia-ui-virtualization');\n\n  [\"apps/enhance/controls\", \"plugins/glue\"].forEach(i => {\n    aurelia.use.feature(i)\n  })\n\n  if (Array.isArray(globalFeatures)) {\n    globalFeatures.forEach(x => aurelia.use.feature(x))\n  }\n  aurelia.use.globalResources([EnhancedComposeCustomElement, QpOutlookDataCustomElement, QpCommandButtonCustomElement, QpContainerCustomElement, QpLabeledControlCustomElement])\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import { autoinject } from \"aurelia-framework\";\nimport { HttpClient, json } from 'aurelia-fetch-client'\n\ndeclare var requirejs\n\nconst root = requirejs.s.contexts._.config.baseUrl.replace(\"/scripts/ca/\", \"/\")\n@autoinject\nexport class AuthenticationService {\n\n  public authenticated: boolean = false\n  outlookAuthToken: string;\n  exId: string;\n\n  constructor(private client: HttpClient) {\n    const _this = this\n    this.client.configure(config => {\n\n      config.withInterceptor({\n        response(response, request) {\n          const reqUrl = request.url.toLowerCase()\n\n          if (reqUrl.indexOf('authdock') || reqUrl.indexOf('login')) {\n            return response\n          }\n          if (response.redirected && response.url.toLowerCase().indexOf('login') > -1) {\n            _this.authenticated = false\n            throw new Error('not authenticated')\n          } else {\n            return response\n          }\n        }\n      })\n    })\n  }\n\n  async signInWithToken(token: string) {\n    this.outlookAuthToken = token\n    let signedIn\n    let failedToSignIn\n    const result = new Promise((resolve, reject) => { signedIn = resolve; failedToSignIn = reject })\n\n    // Office.context.mailbox.getUserIdentityTokenAsync((asyncResult) => {\n\n    const formData = new FormData();\n    formData.append('token', this.outlookAuthToken);\n\n    this.client.fetch(`Frames/AuthDock.ashx?_returnUrl_=${root}success`, {\n      method: 'POST',\n      body: formData\n    }).then(async tokenAuthResult => {\n\n      if (tokenAuthResult.redirected) {\n\n        if (tokenAuthResult.url.endsWith('success')) {\n\n          this.authenticated = true\n          signedIn()\n        } else {\n          this.authenticated = false\n          if (tokenAuthResult.url.toLocaleLowerCase().indexOf('login') > -1) {\n            const target = new URL(tokenAuthResult.url)\n            this.exId = target.searchParams.get('exceptionid')\n          }\n\n          failedToSignIn()\n        }\n      }\n\n    })\n    // }    )\n    return result\n  }\n\n\n  async logIn(username: string, password: string) {\n\n    if (!this.exId && this.outlookAuthToken) {\n      try {\n        await this.signInWithToken(this.outlookAuthToken)\n      } catch {\n\n      }\n    }\n\n    this.client.fetch(`ui/Outlook/LogIn?exceptionid=${this.exId}`, {\n      method: 'POST',\n      body: json({ Login: username, Password: password })\n    })\n      .then((r) => {\n        this.exId = undefined\n        if (r.ok) {\n          this.authenticated = true\n        } else {\n          this.authenticated = false\n        }\n\n      })\n\n\n  }\n\n  lostAuth() {\n    this.authenticated = false\n  }\n}\n","import { autoinject } from \"aurelia-framework\";\n\nimport { HttpClient, json } from 'aurelia-fetch-client'\n\nlet apiRoot = 'newui/look/schema'\n\n@autoinject\nexport class ScreenApiClient {\n\n\n  constructor(private client: HttpClient, ) {\n\n  }\n\n  getScreenConfig(screenId: string): Promise<IScreenApiResult> {\n    return this.client.fetch(`${apiRoot}/${screenId}`)\n      .then(x => x.json())\n  }\n\n  postScreenData(screenId: string, data: {}): Promise<IScreenApiResult> {\n    return this.client.fetch(`${apiRoot}/${screenId}`,\n      {\n        method: 'POST',\n        body: json(data)\n      }).then(x => x.json())\n  }\n}\n\n\nexport class ApiManager {\n  setApiRoot(newApiRoot: string) {\n    apiRoot = newApiRoot\n  }\n}\nexport interface IScreenApiResult {\n  diffType: string\n  mode?: string\n  url?: string\n  controls: IControl[],\n  configs: { [x: string]: {} },\n  fieldValues: {\n    [x: string]: {\n      [x: string]: any\n    }\n  }\n}\n\nexport interface IControl {\n  type: string,\n  id: string,\n  view: string\n  field: string\n  controls: []\n}\n","import { singleton, TaskQueue, BindingEngine, autoinject } from 'aurelia-framework'\nimport { EventAggregator } from 'aurelia-event-aggregator'\nimport { ScreenApiClient, IControl } from './screen-api-client'\n\nconst RECORD_ID = '_RecordId'\n\n@singleton(\"screen-data\")\nexport class ScreenData {\n  fieldValues: {} = {}\n  configs: {} = {}\n\n  setValue(id: { view: string, field: string }, value: unknown) {\n    this.fieldValues[id.view][id.field] = value\n  }\n}\n\n// @singleton(\"screen-data\")\n@autoinject\nexport class ScreenInfo {\n\n\n  controls: IControl[]\n  originalValues: {} = {}\n  dirtyValues: {} = {}\n  screenId: string\n\n  constructor(private eventAggregator: EventAggregator, private screenData: ScreenData, private screenApiClient: ScreenApiClient, private bindingEngine: BindingEngine, private tq: TaskQueue) {\n    this.eventAggregator.subscribe(\"execute-command\", (d) => {\n\n      this.tq.flushMicroTaskQueue();\n      this.tq.queueTask(() => {\n        this.updateScreen(d)\n      })\n    })\n\n  }\n\n\n  async initScreen(screenId: string, blackBoxMatters?: unknown) {\n    this.screenData.fieldValues = {}\n    this.screenData.configs = {}\n    this.controls = []\n    this.screenId = screenId\n    return this.screenApiClient.getScreenConfig(screenId)\n      // .then()\n      // this.client.fetch(`${this.root}/newui/test/OutlookPlugin`)\n      //   .then(x => x.json())\n      .then(x => {\n        this.controls = x.controls\n        // this.newModel = x;\n        // this.controls = x.controls\n        // this.values = x.values\n        this.screenData.fieldValues = x.fieldValues\n        this.originalValues = JSON.parse(JSON.stringify(x.fieldValues))\n        this.screenData.configs = x.configs\n\n\n\n        for (let viewName in x.fieldValues) {\n          if (x.fieldValues.hasOwnProperty(viewName)) {\n            const viewFields = x.fieldValues[viewName]\n            for (let fieldName in viewFields) {\n              if (viewFields.hasOwnProperty(fieldName)) {\n                // const autopostback = x.configs[key]?.AutoPostback\n                const autopostback = false\n                const ob = this.generateValueObserver(viewName, fieldName, autopostback)\n                this.bindingEngine.propertyObserver(this.screenData.fieldValues[viewName], fieldName).subscribe(ob)\n              }\n            }\n\n            // const autopostback = x.configs[key]?.AutoPostback\n            // const ob = this.generateValueObserver(key, autopostback)\n            // this.bindingEngine.propertyObserver(this.screenData.fieldValues, key).subscribe(ob)\n          }\n        }\n\n      })\n  }\n\n  async updateScreen(command?: string) {\n    this.saving = true;\n\n\n    const saveData = Object.assign({}, { data: this.dirtyValues }, { command: command })\n    let haveData = false\n    for (let viewName in saveData.data) {\n      if (saveData.data.hasOwnProperty(viewName)) {\n        const viewFields = saveData.data[viewName]\n        for (let fieldName in viewFields) {\n          if (viewFields.hasOwnProperty(fieldName)) {\n            haveData = true\n            saveData.data[viewName][RECORD_ID] = this.screenData.fieldValues[viewName][RECORD_ID]\n            break\n          }\n        }\n      }\n    }\n\n    if (!haveData && !command) {\n      return\n    }\n\n    const updates = await this.screenApiClient.postScreenData(this.screenId, saveData)\n\n    if (updates.diffType == undefined) {\n\n      const newValues = updates.fieldValues\n\n      for (let viewName in newValues) {\n        if (newValues.hasOwnProperty(viewName)) {\n          const viewFields = newValues[viewName]\n          for (let fieldName in viewFields) {\n            if (viewFields.hasOwnProperty(fieldName)) {\n              // const autopostback = x.configs[key]?.AutoPostback\n              this.screenData.fieldValues[viewName][fieldName] = viewFields[fieldName]\n            }\n          }\n\n          // const autopostback = x.configs[key]?.AutoPostback\n          // const ob = this.generateValueObserver(key, autopostback)\n          // this.bindingEngine.propertyObserver(this.screenData.fieldValues, key).subscribe(ob)\n        }\n      }\n      this.screenData.configs = updates.configs\n    }\n    this.tq.flushMicroTaskQueue()\n    this.dirtyValues = {}\n\n\n  }\n  // storeValues(values: {}) {\n  //   this.fieldValues = values\n  // }\n\n  // storeConfigs(configs: {}) {\n  //   this.configs = configs\n  // }\n  // getValue(id: string): unknown {\n  //   return this.values[id]\n  // }\n\n\n  executeCommand(command: any) {\n    this.tq.flushMicroTaskQueue();\n    this.eventAggregator.publish(\"execute-command\", command)\n  }\n\n  generateValueObserver(viewName: string, fieldName: string, autoPostback: boolean) {\n\n\n    return (newValue, oldValue) => {\n      // if (!this.saving) {\n      if (!this.dirtyValues[viewName]) {\n        this.dirtyValues[viewName] = {}\n      }\n      this.dirtyValues[viewName][fieldName] = newValue\n\n      // replace with equals for object\n      if (this.dirtyValues[viewName][fieldName] === this.originalValues[viewName][fieldName]) {\n        delete this.dirtyValues[viewName][fieldName]\n      }\n\n\n      // }\n      // if (autoPostback) {\n      //   this.save()\n      // }\n    }\n  }\n}\n"]}