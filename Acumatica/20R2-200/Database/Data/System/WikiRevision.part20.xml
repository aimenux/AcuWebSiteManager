<?xml version="1.0" encoding="utf-8"?>
<data>
	<table name="WikiRevision">
		<col name="CompanyID" type="Int" default="Zero" />
		<col name="PageID" type="UniqueIdentifier" />
		<col name="Language" type="VarChar(50)" />
		<col name="PageRevisionID" type="Int" />
		<col name="Content" type="NVarChar(MAX)" />
		<col name="ContentHtml" type="NVarChar(MAX)" nullable="true" />
		<col name="PlainText" type="NVarChar(MAX)" />
		<col name="ApprovalByID" type="UniqueIdentifier" nullable="true" />
		<col name="ApprovalDateTime" type="DateTime" nullable="true" />
		<col name="CreatedByID" type="UniqueIdentifier" />
		<col name="CreatedDateTime" type="DateTime" />
		<col name="CompanyMask" type="VarBinary(32)" default="CompanyMaskReadOnly" />
		<col name="UID" type="UniqueIdentifier" />
		<col name="RecordSourceID" type="SmallInt" nullable="true" />
	</table>
	<rows>
		<row PageID="0f484be7-8b40-4276-9d9a-5dcbc8d6e047" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="d64b4e01-0529-0a1c-65dc-6c3ed99655cd" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 Acumatica ERP provides reporting tools to deliver customized business intelligence to everybody in your organization. By using Acumatica ERP reporting tools, you can develop new reports or modify existing ones, which can be delivered online, converted to PDF, or delivered by email. Reporting tools can be made available to users of the instance, and their access can be limited if necessary. You can distribute generic inquiries, reports, advanced filters, access rights to these objects, and analytical reports as a part of a customization project. For more information, see [HelpRoot_Dev_Customization\CG_Platform_Project|Customization Project].{br}

 Acumatica ERP offers a collection of reporting and analytic resources to make your job easier and more productive. The tools provided by Acumatica ERP allow you to work with important data presented in the most beneficial format to make decisions about your business or react to competitive market challenges. Reporting goes beyond the balance sheet and cash flow statements. To get the full benefits of your business processes, Acumatica ERP reporting tools make it possible to spot good and bad trends quickly, so that you can take action right away.{br}

The reporting toolkit includes generic inquiries, pivot tables, advanced filters, dashboards, Power BI pages, analytical reports, and the Acumatica Report                         Designer.
==Generic Inquiries==
You can create generic inquiries to get the information you want to view from the Acumatica ERP database. ((({S:Hint}We recommend that you obtain a basic knowledge of SQL (a standard language for storing, manipulating, and retrieving data in databases) to understand how the inquiries retrieve the data.
)))
You can view on the fly how each inquiry looks, and you can test its functionality by selecting parameters and viewing the results. Additionally, you can use generic inquiries to expose data from Acumatica ERP to OData clients, such as Microsoft Power BI and Microsoft Excel. For more information, see [HelpRoot_ReportingTools\SM__MNG_Managing_Generic_Inquiry|Managing Generic Inquiries].
==Advanced Filters==
You can create advanced filters for processing, inquiry and generic inquiry forms. Once you create an advanced filter for a particular form, it is shown as a tab on the form, both in the current user session and during future user sessions. For more information, see [HelpRoot_ReportingTools\GI_Reusable_Filters_Mapref|Managing Advanced Filters].
==Pivot Tables==
In Acumatica ERP, you can build pivot tables based on the data from generic inquiries. A pivot table is a data summarization tool that you can use to summarize, sort, reorganize, group, count, total or average data in a generic inquiry to view it from different perspectives. You can set up and change the pivot table structure by dragging fields to the panes. For more information, see [HelpRoot_ReportingTools\Pivot_Tables_Mapref|Managing Pivot Tables].
==Dashboards==
Dashboards are an important and convenient tool for monitoring and analyzing critical business information. Dashboardsdisplay widgets, such as charts, data tables, embedded pages, Power BI tiles, scorecard key performance indicators (KPIs), trend card KPIs, and wiki pages. {br}

You can customize dashboards so that users can view important information and quickly access further details. On the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form, you can add dashboards, specify their locations in the site map, and set up access rights. For more information, see [HelpRoot_ReportingTools\Administering_Dashboards_Mapref|Managing Dashboards]. 
==Power BI Pages==
In Acumatica ERP, you can build external applications into the product. For example, you can build Microsoft Power BI reports into Acumatica ERP to be displayed as Acumatica ERP forms. For more information, see [HelpRoot_ReportingTools\RP__Integration_Power_BI|Managing Power BI Integration]
==Analytical Reports==
Analytical reports in Acumatica ERP can be created with the Analytical Report Manager (ARM) toolkit. Reports that are constructed with this toolkit are called ARM reports to distinguish them from the reports created in the Acumatica Report                         Designer. {br}

The Analytical Report Manager toolkit gives you the ability to create financial reports that retrieve the amounts posted to particular General Ledger accounts and subaccounts. You can use the ARM toolkit rather than the Acumatica Report                         Designer to create financial reports that display data that is posted to general ledger accounts. The ARM toolkit can also be used to create project accounting reports that display project accounting data. For more information, see [HelpRoot_ReportingTools\GL__GL_ARM_Reports|Managing Analytical Reports].
== Report Designer==
 Acumatica Report                         Designer provides visual tools that you can use to design custom reports. With the Acumatica Report                         Designer, you can select data for a report, calculate required values based on the selected data, and customize a report layout. For more information, see [HelpRoot_ReportingTools\ReportDesigner_Main| Acumatica Report                         Designer Guide].
==Third-Party Reporting Solutions==
 Acumatica ERP is supported by more than 100 independent software vendors (ISVs) who develop products that integrate seamlessly with Acumatica ERP software. These products provide great capabilities to gain control over your reporting and business analytics. For more information, see [HelpRoot_ReportingTools\rp_3rdparty|Third-Party Reporting Solutions]
==Related Articles==
*[HelpRoot_ReportingTools\SM__MNG_Managing_Generic_Inquiry|Managing Generic Inquiries]
*[HelpRoot_ReportingTools\Pivot_Tables_Mapref|Managing Pivot Tables]
*[HelpRoot_ReportingTools\Administering_Dashboards_Mapref|Managing Dashboards]
*[HelpRoot_ReportingTools\RP__Integration_Power_BI|Managing Power BI Integration]
*[HelpRoot_ReportingTools\GL__GL_ARM_Reports|Managing Analytical Reports]
*[HelpRoot_ReportingTools\ReportDesigner_Main| Acumatica Report                         Designer Guide]]]></column>
			<column name="PlainText"><![CDATA[Overview of Reporting   Acumatica ERP provides reporting tools to deliver customized business intelligence to everybody in your         organization. By using  Acumatica ERP reporting tools, you can develop new reports or modify existing ones, which can be         delivered online, converted to PDF, or delivered by email. Reporting tools can be made         available to users of the instance, and their access can be limited if necessary. You can         distribute generic inquiries, reports, advanced filters, access rights to these objects, and         analytical reports as a part of a customization project. For more information, see  Customization Project.  Acumatica ERP offers a collection of reporting and analytic resources to make your job easier and more         productive. The tools provided by  Acumatica ERP allow you to work with important data presented in the most beneficial format to make         decisions about your business or react to competitive market challenges. Reporting goes         beyond the balance sheet and cash flow statements. To get the full benefits of your business         processes,  Acumatica ERP reporting tools make it possible to spot good and bad trends quickly, so that you can         take action right away. The reporting toolkit includes generic inquiries, pivot tables,         advanced filters, dashboards, Power BI pages, analytical reports, and the  Acumatica Report                         Designer. Generic Inquiries You can create generic inquiries to get the information you want to view from the  Acumatica ERP database.  We recommend that you obtain a basic knowledge of SQL (a standard language         for storing, manipulating, and retrieving data in databases) to understand how the inquiries         retrieve the data. You can view on the fly how each inquiry looks, and you can test its functionality by         selecting parameters and viewing the results. Additionally, you can use generic inquiries to         expose data from  Acumatica ERP to OData clients, such as Microsoft Power BI and Microsoft Excel. For more information,         see  Managing Generic Inquiries. Advanced Filters You can create advanced filters for processing, inquiry and generic inquiry forms. Once you         create an advanced filter for a particular form, it is shown as a tab on the form, both in         the current user session and during future user sessions. For more information, see  Managing Advanced Filters. Pivot Tables In  Acumatica ERP, you can build pivot tables based on the data from generic inquiries. A pivot table is a         data summarization tool that you can use to summarize, sort, reorganize, group, count, total         or average data in a generic inquiry to view it from different perspectives. You can set up         and change the pivot table structure by dragging fields to the panes. For more information,         see  Managing Pivot Tables. Dashboards Dashboards are an important and convenient tool for monitoring and analyzing critical         business information. Dashboards display widgets, such as charts, data tables, embedded pages, Power BI         tiles, scorecard key performance indicators (KPIs), trend card KPIs, and wiki pages.  You can customize         dashboards  so         that users can view important information and quickly access further details. On the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form, you can add dashboards, specify their locations         in the site map, and set up access rights. For more information, see  Managing Dashboards.  Power BI Pages In  Acumatica ERP, you can build external applications into the product. For example, you can build         Microsoft Power BI reports into  Acumatica ERP to be displayed as  Acumatica ERP forms. For more information, see  Managing Power BI IntegrationAnalytical Reports Analytical reports in  Acumatica ERP can be created with the Analytical Report Manager (ARM) toolkit. Reports that are         constructed with this toolkit are called ARM reports to distinguish them from the reports         created in the  Acumatica Report                         Designer.  The Analytical Report Manager toolkit gives you the ability to create financial reports         that retrieve the amounts posted to particular General Ledger accounts and subaccounts. You         can use the ARM toolkit rather than the  Acumatica Report                         Designer to create financial reports that display data that is posted to general ledger accounts.         The ARM toolkit can also be used to create project accounting reports that display project         accounting data. For more information, see  Managing Analytical Reports.  Report Designer  Acumatica Report                         Designer provides visual tools that you can use to design custom reports. With the  Acumatica Report                         Designer, you can select data for a report, calculate required values based on the selected data,         and customize a report layout. For more information, see   Acumatica Report                         Designer Guide. Third-Party Reporting Solutions  Acumatica ERP is supported by more than 100 independent software vendors (ISVs) who develop products         that integrate seamlessly with  Acumatica ERP software. These products provide great capabilities to gain control over your reporting         and business analytics. For more information, see  Third-Party Reporting Solutions]]></column>
		</row>
		<row PageID="5737bca9-aebb-446d-9e1a-bc5fcfad6797" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="950dba76-3b0b-a0d8-e787-f8c38dc11e0c" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A generic inquiry is an Acumatica ERP tool that has an easy-to-use web-based interface and gives you the ability to pull data from the Acumatica ERP database and display it on a customizable form. Generic inquiries can serve as a base for dashboard widgets and pivot tables, and as an entry point for data entry forms.{br}

In Acumatica ERP, you can create and manage generic inquiry forms by using the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. You can edit the view and the titles of the generic inquiry form, and arrange the form elements as you need. After you save your changes, you can immediately review them.{br}

In this part of the guide, you will learn how to create and configure generic inquires in Acumatica ERP.
==Access Rights for Modifying Generic Inquiries==
To be able to manage generic inquiries, you need a role that provides sufficient access rights (the ''Delete'' level) to the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. By default, the built-in ''Administrator'' role provides the access rights for working with generic inquiries. If you have sufficient access rights, the '''Customization''' menu is displayed on the form title bar. For more information, see [HelpRoot_Interface\Form_Interface|Parts of a Form].]]></column>
			<column name="PlainText"><![CDATA[Managing Generic Inquiries A generic inquiry is an  Acumatica ERP tool that has an easy-to-use web-based interface and gives you the ability to pull data         from the  Acumatica ERP database and display it on a customizable form. Generic inquiries can serve as a base for         dashboard widgets and pivot tables, and as an entry point for data entry forms. In  Acumatica ERP, you can create and manage generic inquiry forms by using the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. You can edit the view and the titles of the         generic inquiry form, and arrange the form elements as you need. After you save your         changes, you can immediately review them. In this part of the guide, you will learn how to create and configure generic inquires in            Acumatica ERP. Access Rights for Modifying Generic Inquiries To be able to manage generic inquiries, you need a role that provides sufficient access         rights (the  Delete  level) to the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. By         default, the built-in  Administrator  role provides the access rights for working with         generic inquiries. If you have sufficient access rights, the            Customization  menu is displayed on the form title bar. For more         information, see  Parts of a Form. ]]></column>
		</row>
		<row PageID="8ced4306-3fc8-478e-be08-873e3dedef5b" Language="en-US" PageRevisionID="1" Content="To work with a generic inquiry, you need a basic understanding of how the needed data is requested from the Acumatica ERP database. Thus, you need general knowledge of data access classes (DACs). &#xA;In the topics of this chapter, you will learn how to explore UI elements on an Acumatica ERP form to discover the DACs you need to use to design a generic inquiry." PlainText="Discovering DACs To work with a generic inquiry, you need a basic understanding of how the needed data       is requested from the  Acumatica ERP database. Thus, you need general knowledge of data access classes (DACs).  In the topics         of this chapter, you will learn how to explore UI elements on an  Acumatica ERP form to discover the DACs you need to use to design a generic inquiry. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="9a570ba7-be59-215e-aa2f-6dc1b51dc3c2" RecordSourceID="22377" />
		<row PageID="51ede759-d530-4101-bb3a-274e8a922faa" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c444e9a2-884a-c184-439c-b2aaa5245175" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, the data is stored in a database. However, users of Acumatica ERP do not access the database directly. Instead, they access the data access classes (DACs), as shown in the illustration below. A data access class is a programming object used to represent and provide access to a database table in the code of Acumatica ERP.((({S:Hint}In these topics, the terms ''data access class'', ''data class'', and ''table'' are used interchangeably. All these terms refer to the data access class but not the database table.
)))[anchor|#_919d2609-2762-4308-92db-775d8644e8c2][anchor|#_6d7581b4-aac4-499a-9e47-822aca8d25bb][image:UserGuide/Images/GI_Discovering_DACs_DACs.png|popup|Data access workflow|300px]
When working with generic inquiries, you retrieve data from the data access classes rather than working with the database tables directly. {br}

Data access classes contains data fields that hold different data that has been entered in Acumatica ERP. The data fields that you select to retrieve data from will be the columns of the resulting generic inquiry form. {br}

To work with an inquiry, you need to find the data access classes and data fields that underlie the key elements on the relevant data entry form or forms. To do this, you inspect these user interface elements.
==Learning Objectives==
In this chapter, you will learn how to inspect UI elements to find the underlying data fields.
==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, and you need to modify an existing generic inquiry to better meet the needs of a particular group of users or all users. Before you start to modify the inquiry, you need to find out what DACs store the data that you want to modify. For this purpose, you need to inspect the needed UI elements.
==Inspection of UI Elements ==
You usually create or modify a generic inquiry to get a certain result. Consequently, you know which data you need to retrieve. Thus, you have to explore which data access classes and data fields you can use to access this data.{br}

To find the underlying data access classes and fields, you can explore the forms related to the needed data. For example, suppose that you want to find the data field that holds the sales order numbers. When a sales order is created on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form, a sales order number is assigned to it. Thus, you have to open this form, press Ctrl+Alt and click the '''Order Nbr.''' element on the form. The '''Element Properties''' dialog box opens. You are interested in the values in the '''Data Class''' and '''Data Field''' boxes (as shown in the following screenshot), which correspond to the data access class and data field you need to specify when you modify the generic inquiry.[anchor|#_e7295f27-e5ae-4ad1-a10d-e37f88336147][anchor|#_77396b71-8d4b-41f2-a162-122e47c66698][image:UserGuide/Images/GI_Discovering_DACs_GS_with_GI_ElementInspection.png|popup|Form element inspection|450px]((({S:Hint}You can get more information about the data access class structure and its data fields by clicking '''Actions''' > '''View Data Class Source''' in the dialog box (also shown in the screenshot above). The system opens the [HelpRoot_FormReference\SM_20_45_70|Source Code] ([~/?ScreenId=SM204570|SM204570]) form in a pop-up window with the details of the data access class.
)))
You use the '''Data Class''' values you discover when you add data access classes on the '''Tables''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. The selected generic inquiry can access various data fields of the data access classes that are listed on this tab. You will use the '''Data Field''' value to customize various generic inquiry parameters, conditions, and listed items in the results grid (that is, the table of the generic inquiry form that shows its results).{br}

If you are inspecting an element with a drop-down control, you can also view the list of values for the element (as the following screenshot demonstrates). To do this, in the '''Element Properties''' dialog box, you click the '''Combo Box Values''' button and the system displays the '''Combo Box Values''' dialog box. In the dialog box, you can review the list of options available for the drop-down control. The '''Value''' column lists the values stored in the database, and the '''Description''' column lists the corresponding captions that are displayed in the user interface. You use the values from the '''Value''' column in complex conditions and in formulas in generic inquiries and reports. [anchor|#_1842b31a-d95d-493a-ad8a-16ab3cbfbf82][anchor|#_752af64b-3336-4e2a-8a11-db0d8410f954][image:UserGuide/Images/GI_Discovering_DACs_drop-down.png|popup|Inspection of a form element with a drop-down control |450px]
==DAC Names and Aliases==
For each inquiry, the data access classes the system uses to retrieve data are specified on the '''Tables''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. {br}

The full name of any data access class is quite lengthy, consisting of the namespace and the class name. For example, ''PX.Objects.AR.ARPayment'' is the full name of the data access class that holds information about accounts receivable payments, where {{PX.Objects.AR}} is the namespace, and {{ARPayment}} is the class name. {br}

For each data access class, you can specify a shortened version of the name in the '''Alias''' column and use it to designate the table. For example, ''ARPayment'' can be used as alias for the ''PX.Objects.AR.ARPayment'' data access class. If you do not specify a value in the '''Alias''' column, the value from the '''Table Name''' column will be used instead.{br}

The following screenshot shows the list of data access classes and their aliases for the ''AR-Payments and Applications'' generic inquiry (with the ''Payments and Applications'' site map title).[anchor|#_1c298e22-03f3-4275-bc82-c135eb733034][anchor|#_a11c73cf-d31a-413c-b821-003a13b82a9c][image:UserGuide/Images/GI_Discovering_DACs_GS_with_GI_Tables_tab.png|popup|The list of data access classes and their aliases|450px]
You use aliases to specify (on other tabs of the form) which data access class the system will use to access a data field for an inquiry. ]]></column>
			<column name="PlainText"><![CDATA[Discovering DACs: General Information In  Acumatica ERP, the data is stored in a database. However, users of  Acumatica ERP do not access the database directly. Instead, they access the data access classes (DACs),         as shown in the illustration below. A data access class is a programming object used to         represent and provide access to a database table in the code of  Acumatica ERP. In         these topics, the terms  data access class ,  data class , and  table  are         used interchangeably.  All these terms refer to         the data access class but not the database table. Data access workflow When working with generic inquiries, you retrieve data from the data access classes rather         than working with the database tables directly.  Data access classes contains data fields that hold different data that has been entered in            Acumatica ERP. The data fields that you select to retrieve data from will be the columns of the         resulting generic inquiry form.  To work with an inquiry, you need to find the data access classes and data fields that         underlie the key elements on the relevant data entry form or forms. To do this, you inspect         these user interface elements. Learning Objectives In this chapter, you will learn how to inspect UI elements to find the underlying data         fields. Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company, and you need to modify an existing generic inquiry to better meet the         needs of a particular group of users or all users. Before you start to modify the inquiry,         you need to find out what DACs store the data that you want to modify. For this purpose, you         need to inspect the needed UI elements. Inspection of UI Elements  You usually create or modify a generic inquiry to get a certain result. Consequently, you         know which data you need to retrieve. Thus, you have to explore which data access classes         and data fields you can use to access this data. To find the underlying data access classes and fields, you can explore the forms related to         the needed data. For example, suppose that you want to find the data field that holds the         sales order numbers. When a sales order is created on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form, a sales order number         is assigned to it. Thus, you have to open this form, press Ctrl+Alt and click the          Order Nbr.  element on the form. The  Element           Properties  dialog box opens. You are interested in the values in the          Data Class  and  Data Field  boxes (as shown in         the following screenshot), which correspond to the data access class and data field you need         to specify when you modify the generic inquiry. Form element inspection You can get more information about the data access class structure and its         data fields by clicking  Actions View Data Class Source  in the dialog box (also shown in the screenshot above). The system opens the             ([~/?ScreenId=SM204570|SM204570]) Source Code (SM204570) form in a pop-up window with the         details of the data access class. You use the  Data Class  values you discover when you add data access         classes on the  Tables  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. The selected generic inquiry can         access various data fields of the data access classes that are listed on this tab. You will         use the  Data Field  value to customize various generic inquiry         parameters, conditions, and listed items in the results grid (that is, the table of the         generic inquiry form that shows its results). If you are inspecting an element with a drop-down control, you can also view the list of         values for the element (as the following screenshot demonstrates). To do this, in the          Element Properties  dialog box, you click the  Combo Box           Values  button and the system displays the  Combo Box             Values  dialog box. In the dialog box, you can review the list of options         available for the drop-down control. The  Value  column lists the         values stored in the database, and the  Description  column lists the         corresponding captions that are displayed in the user interface. You use the values from the          Value  column in complex conditions and in formulas in generic         inquiries and reports.  Inspection of a form element with a drop-down control  DAC Names and Aliases For each inquiry, the data access classes the system uses to retrieve data are specified on         the  Tables  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         (SM208000) form.  The full name of any data access class is quite lengthy, consisting of the namespace and         the class name. For example,  PX.Objects.AR.ARPayment  is the full name of the data         access class that holds information about accounts receivable payments, where            PX.Objects.AR  is the namespace, and  ARPayment  is the         class name.  For each data access class, you can specify a shortened version of the name in the          Alias  column and use it to designate the table. For example,          ARPayment  can be used as alias for the  PX.Objects.AR.ARPayment  data access         class. If you do not specify a value in the  Alias  column, the value from the  Table Name  column         will be used instead. The following screenshot shows the list of data access classes and their aliases for the            AR-Payments and Applications  generic inquiry (with the  Payments and           Applications  site map title). The list of data access classes and their aliases You use aliases to specify (on other tabs of the form) which data access class the system will         use to access a data field for an inquiry.  ]]></column>
		</row>
		<row PageID="b0d356c9-b08a-4540-b38a-60cb8aa80735" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c7aa293e-2b9b-797c-056e-8c26f1dc39c7" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The following activity will walk you through the process of inspecting the user interface elements on Acumatica ERP forms to find the data access classes (DACs) and data fields related to these elements. {br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations. A sales representative has requested that you create a generic inquiry that lists sales orders. The inquiry should include the following data for each listed sales order: the sales order number, the order type, the status, the date, and the customer name.{br}

To get started in this effort, you need to inspect the relevant user interface elements on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form and the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form—the data entry forms on which sales orders and customers are created—in order to figure out which data access classes and data fields are related to them. (In this activity, you will only inspect the UI elements. You will not develop the generic inquiry.)
==Process Overview==
In this activity, you will inspect the relevant user interface elements of the entry forms whose data will be used in the generic inquiry. To do this, for each relevant element on the form, you will invoke the '''Element Properties''' dialog box, which displays the data class and field you will need when you develop the generic inquiry.[anchor|#_2453473f-ade8-4e86-860e-7c220b01fc1e]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_20e62d05-502a-4056-aec3-e1e0e05177c4]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step: Inspecting the UI Elements ==
To inspect the UI elements, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form.
#Point to the '''Order Type''' box, press Ctrl+Alt, and then click. The '''Element Properties''' dialog box opens.
#Note the values of the '''Data Class''' and '''Data Field''' elements (''SOOrder'' and ''OrderType'', respectively), which are the data access class and field you need. 
#:The '''Data Class''' value reflects a data access class you need to add on the '''Tables''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, so that the inquiry can access various data fields of the data access class. You will use the '''Data Field''' value when you customize various generic inquiry parameters and conditions, as well as listed items on the results grid (that is, the table showing the inquiry results).
#Close the dialog box.
#Repeat Instructions 2–4 for the following UI elements on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] form, making a note of the applicable data access class and data field for each:
#*'''Order Nbr.'''
#* '''Status'''
#* '''Date'''
#Open the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form.
#Point to the '''Customer ID''' box, press Ctrl+Alt, and then click. The '''Element Properties''' dialog box opens.
#:((({S:Hint}Although the '''Customer''' element appears on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] form (and contains the relevant customer ID and customer name), you will inspect the '''Customer ID''' and '''Customer Name''' elements on the [HelpRoot_FormReference\AR_30_30_00|Customers] form because these are separate elements that hold the details of customer records, which are created on the [HelpRoot_FormReference\AR_30_30_00|Customers] form.
)))
#Make a note of the values of the '''Data Class''' and '''Data Field''' elements (''Customer'' and ''AccountCD'', respectively), which are the class and field you need. 
#Close the dialog box.
#Repeat Instructions 7–9 for the '''Customer Name''' box. You will note that the '''Data Class''' and '''Data Field''' elements are ''Customer'' and ''AcctName'', respectively.
]]></column>
			<column name="PlainText"><![CDATA[Discovering DACs:          To         Inspect UI         Elements The following activity will walk you through the process of inspecting the user                 interface elements on  Acumatica ERP forms to find the data access classes (DACs) and data fields related to these                 elements.  Story Suppose that you are a technical specialist in your company who is working on simple                 customizations. A sales representative has requested that you create a generic                 inquiry that lists sales orders. The inquiry should include the following data for                 each listed sales order: the sales order number, the order type, the status, the                 date, and the customer name. To get started in this effort, you need to inspect the relevant user interface                 elements on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form and the                       ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form—the data                 entry forms on which sales orders and customers are created—in order to figure                 out which data access classes and data fields are related to them. (In this                 activity, you will only inspect the UI elements. You will not develop the generic                 inquiry.) Process Overview In this activity, you will inspect the relevant user interface elements of the entry                 forms whose data will be used in the generic inquiry. To do this, for each relevant                 element on the form, you will invoke the  Element Properties                  dialog box, which displays the data class and field you will need when you develop                 the generic inquiry. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step: Inspecting the UI Elements  To inspect the UI elements, do the following: Open the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form. Point to the  Order Type  box, press Ctrl+Alt, and then                     click. The  Element Properties  dialog box opens. Note the values of the  Data Class  and  Data                         Field  elements ( SOOrder  and  OrderType ,                     respectively), which are the data access class and field you need.  The                              Data Class  value reflects a data access class you                         need to add on the  Tables  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, so that the                         inquiry can access various data fields of the data access class. You will                         use the  Data Field  value when you customize various                         generic inquiry parameters and conditions, as well as listed items on the                         results grid (that is, the table showing the inquiry results). Close the dialog box. Repeat Instructions 2–4 for the following UI elements on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders form, making a note of the applicable                     data access class and data field for each: Order Nbr. Status Date Open the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form. Point to the  Customer ID  box, press Ctrl+Alt, and then                     click. The  Element Properties  dialog box opens. Although the  Customer  element appears on                         the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders form (and contains the                         relevant customer ID and customer name), you will inspect the                              Customer ID  and  Customer                             Name  elements on the   ([~/?ScreenId=AR303000|AR303000]) Customers form because these are separate                         elements that hold the details of customer records, which are created on the                               ([~/?ScreenId=AR303000|AR303000]) Customers form. Make a note of the values of the  Data Class  and                          Data Field  elements ( Customer  and                          AccountCD , respectively), which are the class and field you need.  Close the dialog box. Repeat Instructions 7–9 for the  Customer Name  box. You                     will note that the  Data Class  and  Data                         Field  elements are  Customer  and  AcctName ,                     respectively. ]]></column>
		</row>
		<row PageID="1b6e6d3f-a830-4bc7-81c0-67f8118e0d79" Language="en-US" PageRevisionID="1" Content="&#xA; Acumatica ERP includes predefined generic inquiries, which are customizable data inquiry forms.{br}&#xA;&#xA;In the topics of this chapter, you will learn how to copy a predefined generic inquiry and adjust it to the needs of your organization by doing any of the following: changing the tables that are used in the inquiry, adding or removing parameters, or changing the results grid. " PlainText="Copying a Predefined          Inquiry  Acumatica ERP includes predefined generic inquiries, which are customizable data inquiry                 forms. In the topics of this chapter, you will learn how to copy a predefined generic                 inquiry and adjust it to the needs of your organization by doing any of the                 following: changing the tables that are used in the inquiry, adding or removing                 parameters, or changing the results grid.  " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="60668893-e1d7-3bf9-3265-e0c6eda60936" RecordSourceID="22377" />
		<row PageID="40f8eaa5-8a6d-49aa-b81f-c3cf4a75dac9" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="47164779-ea0d-0094-4bc8-89a3e62e2db0" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 Acumatica ERP includes predefined generic inquiries, whose settings can be viewed on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. These predefined generic inquiries are stored in the system data—that is, the data of the ''System'' tenant, which is the tenant installed by the system.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to make a copy of an existing generic inquiry.
==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, and you need to modify a predefined generic inquiry to meet particular specifications.
==Modification of a Predefined Inquiry==
If you were to directly customize any predefined generic inquiries in the system, the system would not update the settings of any predefined generic inquiries that you have customized. That is, after an upgrade, any predefined generic inquiries that you have customized will not include any changes that may have been made to the system data with this upgrade. For example, if a database table previously included in the generic inquiry was removed in the system data of a newer version of Acumatica ERP, after an upgrade to this version, the customized generic inquiry that includes this table will no longer work. {br}

Thus, we strongly recommend that instead of directly modifying a predefined generic inquiry, you make a copy of the predefined inquiry and modify the copy.((({S:Hint}Some predefined generic inquiries are configured as entry point forms on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form—that is, for these inquiries, the '''Replace Entry Screen with this Inquiry in Menu''' check box is selected on the '''Entry Point''' tab, and the navigation path to the corresponding entry form is configured on the '''Navigation''' tab. When you copy one of these generic inquiries, the system does not copy the settings defined on the '''Entry Point''' tab. Also, on the '''Navigation''' tab, the system changes the value in the '''Window Mode''' box to ''Same Tab'' for the copied navigation path that was defined for the original generic inquiry on the '''Navigation''' tab, indicating that the entry point form will be opened instead of the predefined generic inquiry in the same browser tab.
)))
==Resetting of Changes Made to a Predefined Inquiry ==
If you have directly customized a generic inquiry instead of making a copy and customizing the copy, you can revert your changes to the generic inquiry. You reset the settings of the customized generic inquiry to the default settings by clicking '''Clipboard''' > '''Reset to Default''' on the form toolbar of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. The system restores the predefined settings of the generic inquiry from the system data.((({S:Danger}When you perform this step, all customizations for this generic inquiry in the tenant will be lost.
)))]]></column>
			<column name="PlainText"><![CDATA[Copying a Predefined Inquiry: General Information  Acumatica ERP includes predefined generic inquiries, whose settings can be viewed on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. These predefined generic inquiries         are stored in the system data—that is, the data of the  System  tenant, which is         the tenant installed by the system. Learning Objectives In this chapter, you will learn how to make a copy of an existing generic inquiry. Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company, and you need to modify a predefined generic inquiry to meet particular         specifications. Modification of a Predefined Inquiry If you were to directly customize any predefined generic inquiries in the system, the         system would not update the settings of any predefined generic inquiries that you have         customized. That is, after an upgrade, any predefined generic inquiries that you have         customized will not include any changes that may have been made to the system data with this         upgrade. For example, if a database table previously included in the generic inquiry was         removed in the system data of a newer version of  Acumatica ERP, after an upgrade to this version, the customized generic inquiry that includes this         table will no longer work.  Thus, we strongly recommend that instead of directly modifying a predefined generic         inquiry, you make a copy of the predefined inquiry and modify the copy. Some predefined generic inquiries are configured as entry point forms on the             ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form—that is, for these         inquiries, the  Replace Entry Screen with this Inquiry in Menu  check         box is selected on the  Entry Point  tab, and the navigation path to         the corresponding entry form is configured on the  Navigation  tab.         When you copy one of these generic inquiries, the system does not copy the settings defined         on the  Entry Point  tab. Also, on the            Navigation  tab, the system changes the value in the            Window Mode  box to  Same Tab  for the copied navigation path         that was defined for the original generic inquiry on the  Navigation          tab, indicating that the entry point form will be opened instead of the predefined generic         inquiry in the same browser tab. Resetting of Changes Made to a Predefined Inquiry  If you have directly customized a generic inquiry instead of making a copy and customizing         the copy, you can revert your changes to the generic inquiry. You reset the settings of the         customized generic inquiry to the default settings by clicking  Clipboard Reset to Default  on the form toolbar of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         (SM208000) form. The system restores the predefined settings of the generic inquiry from the         system data. When you perform this step, all customizations for this           generic inquiry in the tenant will be lost. ]]></column>
		</row>
		<row PageID="aad752bb-38f7-4df2-bf88-ab74b280eb0d" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ca3cfb22-5f5c-95f8-797e-24b9b63f421b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to make a copy of a generic inquiry and create a new inquiry based on the copied generic inquiry.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations. An accountant of your company has requested an inquiry that collects data about invoices and memos. You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant has requested some additions to the inquiry. In this activity, acting as the technical specialist, you will copy the predefined generic inquiry to leave it intact, and then you will modify its copy as requested.((({S:Hint}The Invoices and Memos (AR3010PL) inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
To make a copy of the generic inquiry for modification while leaving the existing generic inquiry intact, you will use the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. On this form, you will copy the original inquiry, paste the copy, and save it with its new name. In this activity, you will only make a copy of an existing inquiry; you will not modify it.((({S:Hint}We recommend that you use naming conventions for the generic inquiries that you create or copy from predefined inquiries. For example, in this activity the copied inquiry title will start with ''DB'' to indicate that the inquiry is being added to the database manually, rather than automatically during product installation.
)))[anchor|#_3cff1239-bd9c-4b1e-b348-77a073048556]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_138019af-6e9e-4f05-bf94-749d24104bf1]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step: Making a Copy of the Generic Inquiry==
To make a copy of the generic inquiry with the inquiry title ''AR-Invoices and Memos'' and assign a different name to the copy, do the following:[anchor|#_bab815ea-9e5a-4813-a46f-9877b8e714e2]
#Open the Invoices and Memos (AR3010PL) form.
#On the form title bar, click '''Customization''' > '''Edit Generic Inquiry'''. The system opens the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form with the details of this generic inquiry. The inquiry title is ''AR-Invoices and Memos''.
#On the form toolbar, click the clipboard icon, and select '''Copy'''.
#Click '''Add New Record'''.
#In the '''Inquiry Title''' box, type <tt>DB-ARInvoicesMemos</tt>.
#Press Tab on the keyboard or move the focus to any other box on the form.
#On the form toolbar, click the clipboard icon, and select '''Paste'''.
#Click '''Save'''. Now you are working with ''DB-ARInvoicesMemos'', a copy of the ''AR-Invoices and Memos'' generic inquiry that has a different name and can be modified as needed without the ''AR-Invoices and Memos'' inquiry being affected.

Note that the copied inquiry has the same visibility settings as the source inquiry. It can be accessed from the user interface because the '''Make Visible on the UI''' check box is selected in the Summary area of the form. Also, it has the same site map title, workspace, and category. Because the source and copied generic inquiries have different screen identifiers, both inquiries can be accessed from the same workspace. To avoid the identical titles causing confusion in the workspace, you can change the site map title at any time. You can also clear the '''Make Visible on the UI''' check box until you are ready to publish your inquiry.]]></column>
			<column name="PlainText"><![CDATA[Copying a Predefined Inquiry: To Copy an Existing Generic Inquiry In this activity, you will learn how to make a copy of a generic inquiry and create a                 new inquiry based on the copied generic inquiry. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations. An accountant of your company has requested an inquiry that collects                 data about invoices and memos. You have offered the predefined Invoices and Memos                 (AR3010PL) generic inquiry form, which has the  AR-Invoices and Memos  inquiry                 title and the  Invoices and Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but the accountant has                 requested some additions to the inquiry. In this activity, acting as the technical                 specialist, you will copy the predefined generic inquiry to leave it intact, and                 then you will modify its copy as requested. The Invoices and Memos (AR3010PL) inquiry form, which is the list of                 the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview To make a copy of the generic inquiry for modification while leaving the existing                 generic inquiry intact, you will use the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. On this form, you will copy the original inquiry, paste the                 copy, and save it with its new name. In this activity, you will only make a copy of                 an existing inquiry; you will not modify it. We recommend that you use naming conventions for the generic inquiries                 that you create or copy from predefined inquiries. For example, in this activity the                 copied inquiry title will start with  DB  to indicate that the inquiry is being                 added to the database manually, rather than automatically during product                 installation. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step: Making a Copy of the Generic Inquiry To make a copy of the generic inquiry with the inquiry title  AR-Invoices and                     Memos  and assign a different name to the copy, do the following: Open the Invoices and Memos (AR3010PL) form. On the form title bar, click  Customization Edit Generic Inquiry . The system opens the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form with the details of this generic inquiry. The inquiry title                     is  AR-Invoices and Memos . On the form toolbar, click the clipboard icon, and select                          Copy . Click  Add New Record . In the  Inquiry Title  box, type                          DB-ARInvoicesMemos . Press Tab on the keyboard or move the focus to any other box on the form. On the form toolbar, click the clipboard                     icon ,                      and select  Paste . Click  Save . Now you are working with                          DB-ARInvoicesMemos , a copy of the  AR-Invoices and Memos                      generic inquiry that has a different name and can be modified as needed without                     the  AR-Invoices and Memos  inquiry being affected. Note that the copied inquiry has the same visibility settings as the source inquiry.                 It can be accessed from the user interface because the  Make Visible on                     the UI  check box is selected in the Summary area of the form. Also,                 it has the same site map title, workspace, and category. Because the source and                 copied generic inquiries have different screen identifiers, both inquiries can be                 accessed from the same workspace. To avoid the identical titles causing confusion in                 the workspace, you can change the site map title at any time. You can also clear the                      Make Visible on the UI  check box until you are ready to                 publish your inquiry. ]]></column>
		</row>
		<row PageID="1a26ad28-0b0a-495e-8e14-610a29c19430" Language="en-US" PageRevisionID="1" Content="&#xA;In the topics of this chapter, you will learn how to modify the results of an existing generic inquiry. Specifically, you will learn how to manage column visibility, enable or disable the built-in navigation to data entry forms, manage quick search, configure quick filters, change column default captions, and adjust column width." PlainText="Modifying Inquiry Results In the topics of this chapter, you will learn how to modify the results of an existing generic     inquiry. Specifically, you will learn how to manage column visibility, enable or disable the     built-in navigation to data entry forms, manage quick search, configure quick filters, change     column default captions, and adjust column width. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8ff95007-fe5a-1cb7-ec15-08a533329ecd" RecordSourceID="22377" />
		<row PageID="b0903394-3fed-4c7f-a55b-e8a740bb39d2" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="41e301a5-0871-4f04-c440-d2c48f46f5ae" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A generic inquiry has a table (also referred to as a ''results grid'') with the inquiry results. To make minor modifications to the results of an existing inquiry, you may want to make changes to two groups of elements on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form:[anchor|#_f317fa08-f4bc-440b-a670-599e5b48c4e5]
*The settings on the '''Results Grid''' tab, where you can define which data fields the system should display in the inquiry results (that is, which columns will appear in the results grid). You add a row to the table on this tab for each column to appear on the results grid, and in the row, you select the data field whose values the system should display. Also, you can use the '''Results Grid''' tab to make quick modifications of an inquiry, as described in the following sections.
*The settings in the Selection area of the form, which you can use to specify how many records will be displayed and whether you will include deleted records in the inquiry results.
{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to modify an existing generic inquiry in the following ways[anchor|#_ea7cea74-1144-4a03-8b1b-7a855d19cfa3]
*Hiding or revealing columns
*Adding a data field to the results
*Changing the caption of a column 
*Specifying the default navigation setting of a column in the inquiry results
*Adding a quick filter to the inquiry results

==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company. You need to modify an existing generic inquiry whose results are similar to those you want the inquiry to have, but you want to make some modifications to the results.
==Column Visibility==
You hide or reveal columns shown on a generic inquiry form by clearing or selecting, respectively, the '''Visible''' check box on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. When you add a new row on this tab (which corresponds to a column in the results grid of the inquiry form), the check box is selected by default. If this check box is cleared, the column will not be visible initially but a user can make the column visible as needed by using the '''Column Configuration''' dialog box of the table on the inquiry form.
==Default Navigation==[anchor|#_7472e202-e014-4b33-a0fb-f1a2f4dab5f5]
You enable or disable the built-in navigation by using the '''Default Navigation''' check box on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. This functionality works only for fields that have a default form specified in the source code. With the '''Default Navigation''' check box selected, the system displays the values in these fields as links in the inquiry results. When a user clicks such a link, the default form is opened in a pop-up window. For example, for the field that holds the invoice reference number, the default form is the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form. When you add a new row to the list on the '''Results Grid''' tab, the '''Default Navigation''' check box is selected by default.
==Use of Columns in Quick Searches==
By selecting or clearing the '''Use in Quick Search''' check box on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you determine which columns of the resulting generic inquiry form are used by the Acumatica ERP search functionality. When you add a row on this tab, the check box is selected by default, indicating that the system will search for keywords in the values of the column. If the check box is cleared, the system will ignore the values of the column while searching through the inquiry data. {br}

You might use these check boxes, for example, to indicate to the system to search only in columns that hold information about the customer identifier, customer name, and document description. By using only the columns with this information, you avoid possible matches in other columns and give users the most relevant search results. 
==Column Captions==
You can change the default caption to be used on the generic inquiry form for any column. To do this, on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you type the needed caption in the '''Caption''' column of the corresponding row of the '''Results Grid''' tab.
==Quick Filters==
You determine which columns are used as quick filters by default by selecting or clearing the '''Quick Filter''' check box on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. With the check box selected, the system adds a quick filter for the column to the filtering area of the resulting generic inquiry form. For more information about filters in Acumatica ERP, see [anchor|#ctl00_usrCaption_tlbPath_lblScreenTitle][https://help-2020r1.acumatica.com/(W(59))/wiki/show|Filtering and Sorting in Acumatica ERP: General Information].
==Column Width==
If needed, you can specify the exact width of a column in pixels in the '''Width (px)''' column in the corresponding row of the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. If you don't specify the width of a column, the system calculates the value automatically.
==The Number of Records Extracted from the Database==
You can limit the number of records to be listed in the inquiry results. In the Selection area of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you can specify the following settings:[anchor|#_100da003-8045-45b6-8566-11e4081832e4]
*'''Select Top''': In this box, you specify the maximum number of records to be displayed in the table showing the inquiry results; the remaining rows of the inquiry results will not be shown at all. For example, if the specified value is ''20'', the system displays the first 20 results. By default, no value is specified for the '''Select Top''' setting, and the system shows all the records in the inquiry results. 
*:If you specify a value in this box, the sort order you have specified on the '''Sort Order''' tab is applied before the specified number of records is selected for display. If you have not specified a sort order, the error icon is displayed on the '''Sort Order''' tab. In this case, on the bottom of the page on the '''Sort Order''' tab, the system displays the default sort order that is applied. For details, see [HelpRoot_ReportingTools\GI_Sorting_and_Grouping_Mapref|Applying Sorting and Grouping].
*'''Records per Page''': In this box, you specify the number of records the system displays per page in the table of the generic inquiry form that shows the inquiry results. You specify this setting to make it convenient for users to view the inquiry results. If you specify a number of records that cannot fit on a page, the scroll bar will be shown. By default, no value is specified for the '''Records per Page''' setting, and the system automatically adjusts the number of records to the window in which Acumatica ERP is running.
((({S:Warn}If you specify numbers that are too large in the '''Select Top''' or '''Records per Page''' box (or in both boxes), this can increase the time to process the inquiry and can cause performance degradation in the server.
)))
==Inclusion of Deleted Records in Inquiry Results==
In some cases, you may want to include deleted records among the inquiry results. For example, suppose that your company provides services for a customer and has generated an invoice for this customer in Acumatica ERP and sent it to the customer. Further suppose that after some time, you find out that the company has complained about the provided services, and a manager has approved the deletion of the invoice so that the customer no longer owes the company for the disputed services. You delete the invoice of the customer. (Because the invoice has not been released yet, it can be edited or deleted.) Then during your company’s audit, you generate the [HelpRoot_ReportReference\AR_62_15_00|AR Register] ([~/?ScreenId=AR621500|AR621500]) report, in which the invoice number is missing. To give the interested parties a way to find and view invoices whose numbers are missing, you have decided to create an inquiry on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form based on the ''AR-Invoices and Memos'' inquiry, except that you will include deleted records in the results.{br}

You can include deleted records in the inquiry results by selecting the '''Show Deleted Records''' check box in the Selection area of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form. By default, this check box is cleared. With this check box selected, the system displays the deleted records in the inquiry results, indicating the deleted records by selecting the check box in a new column. By default, this column has the '''Is Deleted''' caption, but you can change this caption in the '''Caption''' column of the '''Results Grid''' tab of the form. We recommend entering a descriptive caption for this column, for example, ''Deleted'' followed by the type of record.{br}

The following screenshot demonstrates rows added to the '''Results Grid''' tab to show the deleted records of the <tt>Batch</tt> and <tt>Ledger</tt> tables. Notice that the ''Deleted Batch'' and ''Deleted Ledger'' column captions, respectively, have been specified for these tables.[anchor|#_eb5f6cfe-9db1-4cb7-9831-622b5f37edb5][anchor|#_d22c3330-35d7-4072-9b07-209c60d70189][image:UserGuide/Images/GI_Modifying_Inq_Res_DeletedRecords.png|popup|Rows added to show deleted records in the Journal Transaction inquiry|450px]
The following screenshot shows the ''Journal Transactions'' generic inquiry, in which the records of deleted batches and ledgers are now included. Newly added columns can be used for filtering records, as can other columns.[anchor|#_c364c871-f156-4541-b19d-bce6cd0c3556][anchor|#_114faacc-9fae-4503-a529-97a1d3d09574][image:UserGuide/Images/GI_Modifying_Inq_Res_DeletedRecords_Results.png|popup|Records of the Journal Transaction inquiry filtered by the deleted batches|450px]]]></column>
			<column name="PlainText"><![CDATA[Modifying Inquiry Results: General Information A generic inquiry has a table (also referred to as a  results grid ) with the inquiry         results. To make minor modifications to the results of an existing inquiry, you may want to         make changes to two groups of          elements         on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form: The settings on the  Results Grid  tab, where you can define which           data fields the system should display in the inquiry results (that is, which columns will           appear in the results grid). You add a row to the table on this tab for each column to           appear on the results grid, and in the row, you select the data field whose values the           system should display. Also, you can use the  Results Grid  tab to           make quick modifications of an inquiry, as described in the following sections. The settings in the Selection area of the form, which you can use to specify how many           records will be displayed and whether you will include deleted records in the inquiry           results. Learning Objectives In this chapter, you will learn how to modify an existing generic inquiry in the following         ways Hiding or revealing columns Adding a data field to the results Changing the caption of a column  Specifying the default navigation setting of a column in the inquiry results Adding a quick filter to the inquiry results Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company. You need to modify an existing generic inquiry whose results are similar         to those you want the inquiry to have, but you want to make some modifications to the         results. Column Visibility You hide or reveal columns shown on a generic inquiry form by clearing or selecting,         respectively, the  Visible  check box on the  Results           Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form.         When you add a new row on this tab (which corresponds to a column in the results grid of the         inquiry form), the check box is selected by default. If this check box is cleared, the         column will not be visible initially but a user can make the column visible as needed by         using the  Column Configuration  dialog box of the table on the inquiry         form. Default Navigation You enable or disable the built-in navigation by using             the  Default Navigation  check box on the  Results                 Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)             form. This functionality works only for fields that have a default form specified in the             source code. With the  Default Navigation  check box selected, the             system displays the values in these fields as links in the inquiry results. When a user             clicks such a link, the default form is opened in a pop-up window. For example, for the             field that holds the invoice reference number, the default form is the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form. When you add a new row to             the list on the  Results Grid  tab, the  Default                 Navigation  check box is selected by default. Use of Columns in Quick Searches By selecting or clearing the  Use in Quick Search  check box on the            Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you determine which columns of the resulting generic inquiry form are         used by the  Acumatica ERP search functionality. When you add a row on this tab, the check box is selected by         default, indicating that the system will search for keywords in the values of the column. If         the check box is cleared, the system will ignore the values of the column while searching         through the inquiry data.  You might use these check boxes, for example, to indicate to the system to search only in         columns that hold information about the customer identifier, customer name, and document         description. By using only the columns with this information, you avoid possible matches in         other columns and give users the most relevant search results.  Column Captions You can change the default caption to be used on the generic inquiry form for any column.         To do this, on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you type         the needed caption in the  Caption  column of the corresponding row of         the  Results Grid  tab. Quick Filters You determine which columns are used as quick filters by default by selecting or clearing         the  Quick Filter  check box on the  Results Grid          tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. With the check box         selected, the system adds a quick filter for the column to the filtering area of the         resulting generic inquiry form. For more information about filters in  Acumatica ERP, see  Filtering and           Sorting in Acumatica ERP: General Information Filtering and Sorting in Acumatica ERP: General Information. Column Width If needed, you can specify the exact width of a column in pixels in the  Width           (px)  column in the corresponding row of the  Results           Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form.         If you don't specify the width of a column, the system calculates the value         automatically. The Number of Records Extracted from the Database You can limit the number of records to be listed in the inquiry results. In the Selection         area of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you can specify         the following settings: Select Top : In this box, you specify the maximum number of           records to be displayed in the table showing the inquiry results; the remaining rows of           the inquiry results will not be shown at all. For example, if the specified value is              20 , the system displays the first 20 results. By default, no value is specified           for the  Select Top  setting, and the system shows all the records in           the inquiry results.  If you specify a value in this box, the sort order you have             specified on the  Sort Order  tab is applied before the specified             number of records is selected for display. If you have not specified a sort order, the             error icon is displayed on the  Sort Order  tab. In this case, on             the bottom of the page on the  Sort Order  tab, the system displays             the default sort order that is applied. For details, see  Applying Sorting and Grouping. Records per Page : In this box, you specify the number of records           the system displays per page in the table of the generic inquiry form that shows the           inquiry results. You specify this setting to make it convenient for users to view the           inquiry results. If you specify a number of records that cannot fit on a page, the scroll           bar will be shown. By default, no value is specified for the  Records per             Page  setting, and the system automatically adjusts the number of records to           the window in which  Acumatica ERP is running. If you specify          numbers         that are too large          in the  Select Top  or  Records per Page  box (or         in both boxes), this can increase the time to process the inquiry and can cause performance         degradation in the server. Inclusion of Deleted Records in Inquiry Results In some cases, you may want to include deleted records among the inquiry results. For         example, suppose that your company provides services for a customer and has generated an         invoice for this customer in  Acumatica ERP and sent it to the customer. Further suppose that after some time, you find out that the         company has complained about the provided services, and a manager has approved the deletion         of the invoice so that the customer no longer owes the company for the disputed services.         You delete the invoice of the customer. (Because the invoice has not been released yet, it         can be edited or deleted.) Then during your company’s audit, you generate the   ([~/?ScreenId=AR621500|AR621500]) AR Register (AR621500) report, in which the invoice number is         missing. To give the interested parties a way to find and view invoices whose numbers are         missing, you have decided to create an inquiry on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form based on the  AR-Invoices and           Memos  inquiry, except that you will include deleted records in the results. You can include deleted records in the inquiry results by selecting the  Show           Deleted Records  check box in the Selection area of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form. By default, this check box is cleared. With         this check box selected, the system displays the deleted records in the inquiry results,         indicating the deleted records by selecting the check box in a new column. By default, this         column has the  Is Deleted  caption, but you can change this caption in         the  Caption  column of the  Results Grid  tab of         the form. We recommend entering a descriptive caption for this column, for example,            Deleted  followed by the type of record. The following screenshot demonstrates rows added to the  Results Grid          tab to show the deleted records of the  Batch  and            Ledger  tables. Notice that the  Deleted Batch  and  Deleted           Ledger  column captions, respectively, have been specified for these tables. Rows added to show deleted records in the Journal Transaction inquiry The following screenshot shows the  Journal Transactions  generic inquiry, in which         the records of deleted batches and ledgers are now included. Newly added columns can be used         for filtering records, as can other columns. Records of the Journal Transaction inquiry filtered by the deleted batches ]]></column>
		</row>
		<row PageID="86bf3daa-ffe8-411a-8a39-6450b22c02d2" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b5d976d5-2205-d3f0-1db7-d1d1d6f91cb5" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to include an additional column of data in the results grid.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has requested an inquiry that displays data about invoices and memos. You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant has requested the following changes to this generic inquiry:[anchor|#_67ae074a-78e6-4d4e-a0be-c3e02781b72d]
*Add the identifier of the related project (that is, the project related to the listed invoice) to the inquiry results and name the column '''Project ID'''
*Add the ability to view the details of any project by clicking its identifier in the '''Project ID''' column
*Add the ability to filter the inquiry results by an identifier of a project
*Place the '''Project ID''' column after the column that holds the reference numbers of invoices and memos

In the system preparation for this activity, you will copy the predefined generic inquiry to leave the original inquiry intact; you will modify its copy as requested.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
In the Summary area of the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, you will inspect the '''Project/Contract''' element to find the related data access class (DAC) and data field. Then you will make changes to the copied inquiry on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. You will add a data field on the '''Results Grid''' tab of the form.[anchor|#_8418c2fc-d26f-41c2-a4aa-f414b3cc2908]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_3fa971eb-3cc1-4070-befc-b294cecdab8e]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to modify a generic inquiry.
)))

==Step 1: Inspecting UI Elements==
To discover the data access classes and data fields you will need to use in future steps, do the following:[anchor|#ul_fz3_2rw_2gb]
#Inspect the '''Project/Contract''' element in the Summary area of the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form to find the related data access class (DAC) and data field. For the exact steps to do this, see [HelpRoot_ReportingTools\GI_Discovering_DACs_inspect_element_Activity|Discovering DACs: To Inspect UI Elements].
#:((({S:Hint}While you are working with a generic inquiry on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, it is convenient to have the form or forms containing the UI elements open in a separate tab, so that you can quickly switch between the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form and the form you are using to inspect the elements.
)))
#Make a note of the discovered DAC and data field of the '''Project/Contract''' element.

==Step 2: Adding a Data Field, Changing the Caption, and Setting Up Default Navigation and Filtering==
To add a column to the results grid of the existing inquiry, do the following:((({S:Hint}If some columns mentioned in the activity are not available in the table, make them visible by using the '''Column Configuration''' dialog box of the table.
)))[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB1-ARInvoicesMemos''.
#In the '''Site Map Title''' box of the Summary area, type <tt>Invoices and Memos with Projects</tt>.
#On the '''Results Grid''' tab, add a row, and specify the following settings in the added row:
#*'''Object''': <tt>ARInvoice</tt>
#* '''Data Field''': <tt>ProjectID</tt>
#:Notice that the '''Visible'''check box is selected by default, which indicates that the system will display the added column in the inquiry. Also notice that the '''Default Navigation''' check box is selected by default, indicating that the values in this column will be shown as links, because the [HelpRoot_FormReference\PM_30_10_00|Projects] ([~/?ScreenId=PM301000|PM301000]) form is specified for the data field as the default form defined in the source code. In the generic inquiry resulting from these changes, when a user clicks a link in this column, the system opens the [HelpRoot_FormReference\PM_30_10_00|Projects] form in a pop-up window with the selected project details.
#In the '''Caption''' column, type the caption (name) of the requested column (''Project ID''). 
#In the '''Quick Filter''' column, select the check box for the added row.

You have added the row that corresponds to the '''Project ID''' column. Currently, it is the last row, so '''Project ID''' would be the rightmost column on the generic inquiry form. In the next step, you will move the row so that the column appears in the needed place on the inquiry form.
==Step 3: Moving the Rows and Previewing Your Changes==
To move rows and preview the inquiry, do the following:[anchor|#_28d29dfe-d1c0-4a68-b223-d25864fd8f55]
#While remaining on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form with the ''DB1-ARInvoicesMemos'' generic inquiry selected, again open the '''Results Grid''' tab.
#Move the focus to any row in the table except the row you added.
#Drag the added row immediately after the row that holds reference number information (that is, the row with a '''Data Field''' setting of ''RefNbr'').
#On the form toolbar, click '''Save'''.
#Click the eye icon on the side panel to preview how your changes have affected the ''DB1-ARInvoicesMemos'' inquiry (which has the ''Invoices and Memos with Projects'' site map title). Notice that the '''Project''' column has been added (see the following screenshot) so that an accountant can see the related projects while viewing the list of invoices and memos in the results grid.
[anchor|#_c812435e-022d-4bd0-b29e-70e02e5520ad][anchor|#_db3119d5-097b-42a5-a9ba-c124f853b047][image:UserGuide/Images/GI_Modifying_Inquiry_Results_GS_with_GI_AddedProjectsColumn_tab.png|popup|The Invoices and Memos with Projects generic inquiry|450px]]]></column>
			<column name="PlainText"><![CDATA[Modifying Inquiry Results:          To         Include an Additional Output         Field In this activity, you will learn how to modify an existing generic inquiry to include                 an additional column of data in the results grid. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has requested an inquiry that                 displays data about invoices and memos. You have offered the predefined Invoices and                 Memos (AR3010PL) generic inquiry form, which has the  AR-Invoices and Memos                  inquiry title and the  Invoices and Memos  site map title specified on the                       ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but the accountant                 has requested the following changes to this generic inquiry: Add the identifier of the related project (that is, the project related to the                     listed invoice) to the inquiry results and name the column  Project                         ID Add the ability to view the details of any project by clicking its identifier in                     the  Project ID  column Add the ability to filter the inquiry results by an identifier of a project Place the  Project ID  column after the column that holds                     the reference numbers of invoices and memos In the system preparation for this activity, you will copy the predefined generic                 inquiry to leave the original inquiry intact; you will modify its copy as                 requested. The Invoices and Memos (AR3010PL) generic inquiry form, which is the                 list of the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview In the Summary area of the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000)                 form, you will inspect the  Project/Contract  element to find                 the related data access class (DAC) and data field. Then you will make changes to                 the copied inquiry on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)                 form. You will add a data field on the  Results Grid  tab of                 the form. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to modify a generic                     inquiry. Step 1: Inspecting UI Elements To discover the data access classes and data fields you will need to use in future                 steps, do the following: Inspect the  Project/Contract  element in the Summary area                     of the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form to find the                     related data access class (DAC) and data field. For the exact steps to do this,                     see  Discovering DACs: To Inspect UI Elements. While you are working with a generic inquiry on the                               ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form, it is convenient to                         have the form or forms containing the UI elements open in a separate tab, so                         that you can quickly switch between the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form and the form you are using                         to inspect the elements. Make a note of the discovered DAC and data field of the                          Project/Contract  element. Step 2: Adding a Data Field, Changing the Caption, and Setting Up Default                 Navigation and Filtering To add a column to the results grid of the existing inquiry, do the following: If some columns mentioned in the activity are not available in the                 table, make them visible by using the  Column Configuration                  dialog box of the table. Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          DB1-ARInvoicesMemos . In the  Site Map Title  box of the Summary area, type                          Invoices and Memos with Projects . On the  Results Grid  tab, add a row, and specify the                     following settings in the added row: Object :  ARInvoice Data Field :  ProjectID Notice that the  Visible check box is selected by                         default, which indicates that the system will display the added column in                         the inquiry. Also notice that the  Default Navigation                          check box is selected by default, indicating that the values in this column                         will be shown as links, because the   ([~/?ScreenId=PM301000|PM301000]) Projects (PM301000) form is specified for                         the data field as the default form defined in the source code. In the                         generic inquiry resulting from these changes, when a user clicks a link in                         this column, the system opens the   ([~/?ScreenId=PM301000|PM301000]) Projects form in a pop-up window with the selected project details. In the  Caption  column, type the caption (name) of the                     requested column                         ( Project                         ID ).  In the  Quick Filter  column, select the check box for the                     added                      row . You have added the row that corresponds to the  Project ID                  column. Currently, it is the last row, so  Project ID  would be                 the rightmost column on the generic inquiry form. In the next step, you will move                 the row so that the column appears in the needed place on the inquiry form. Step 3: Moving the Rows and Previewing Your Changes To move rows and preview the inquiry, do the following: While remaining on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)                     form with the  DB1-ARInvoicesMemos  generic inquiry selected, again open                     the  Results Grid  tab. Move the focus to any row in the table except the row you added. Drag the added row immediately after the row that holds reference number                     information (that is, the row with a  Data Field  setting                     of  RefNbr ). On the form toolbar, click  Save . Click the eye icon on the side panel to preview how your changes have affected                     the  DB1-ARInvoicesMemos  inquiry (which has the  Invoices and Memos with                         Projects  site map title). Notice that the  Project                      column has been added (see the following screenshot) so that an accountant can                     see the related projects while viewing the list of invoices and memos in the                     results grid. The Invoices and Memos with Projects generic inquiry ]]></column>
		</row>
		<row PageID="9a7171d1-534a-423c-9896-b34cdc1c5796" Language="en-US" PageRevisionID="1" Content="&#xA;You can sort the results of an inquiry by using simple filters in column headers. You can also group the inquiry results by specifying grouping conditions and adding rows that return aggregated values for a group.{br}&#xA;&#xA;In the topics of this chapter, you will learn how to configure the default sorting and grouping of the inquiry results." PlainText="Applying Sorting and Grouping You can sort the results of an inquiry by using simple filters in column headers. You can also     group the inquiry results by specifying grouping conditions and adding rows that return     aggregated values for a group. In the topics of this chapter, you will learn how to configure the default sorting and     grouping of the inquiry results. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="9cb17f0f-d4d0-bdb1-a663-e2ea3cb87b02" RecordSourceID="22377" />
		<row PageID="98a9f17d-59a3-4d5b-aeb9-b6753265a889" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1b985901-38a8-628d-77ea-b9c6cf221ba1" RecordSourceID="22377">
			<column name="Content"><![CDATA[
While viewing the results in the results grid of a generic inquiry (or in any table in Acumatica ERP), a user can sort the output data by using simple filters in column headers. When you create or modify the generic inquiry, you can define how the inquiry data is sorted by default, by specifying the columns to be used for sorting.{br}

Also, you can group inquiry data by specifying grouping settings and by adding rows that return aggregated values for a group.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to modify an existing generic inquiry in the following ways:[anchor|#_7fb515b1-7704-48a1-a2ff-a87ef5af95f1]
*By grouping the inquiry output
*By aggregating the inquiry output
*By adding a default sort order for the inquiry output

==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company. To speed up inquiry creation, you have copied an existing generic inquiry that provides results similar to those you need. Now you want to group and aggregate the inquiry output and add a sort order to suit your needs.
==Sorting Settings==
You can use the settings on the '''Sort Order''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form to specify how the inquiry data is sorted—that is, the default order in which the results should be displayed on the generic inquiry form. For example, the inquiry results can be sorted by date and by customer name. To do this, on the '''Sort Order''' tab, you add a row for each data field of each particular column that you want to use for sorting the inquiry results. In these rows, you specify whether the results are sorted in ascending or descending order of the values in the column; the default ''Ascending'' sort order is selected by default when you add a row. ((({S:Hint}Any user-defined sorting that a user of an inquiry specifies (by clicking the column header and specifying a condition in the dialog box) overrides any default sorting you specify on the '''Sort Order''' tab.
)))
If an inquiry has no sorting settings specified on the '''Sort Order''' tab, the system displays a warning in the tab title, as shown in the following screenshot. Until you define sorting settings, the default sorting settings, which are shown at the bottom of the screen, are used for the inquiry.[anchor|#_72ca993a-1ccc-4691-9fdb-999d6e7dc3b4][anchor|#_82405aff-e4c2-4790-98a2-0b0cfce62207][image:UserGuide/Images/GI_Sorting_and_Grouping_GS_with_GI_Default_Sort_Order.png|popup|Warning about the default sort order|450px]
==Grouping Settings==
On the '''Grouping''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you can specify the data field or fields by which you would like to group data. On the '''Results Grid''' tab, you can also add rows that will hold aggregated values of these groups. For example, you may want to group sales orders by date and status to get the count of sales orders, as well as their total and average amounts for each day and status.{br}

For data fields specified on the '''Grouping''' tab, you use the '''Aggregate Function''' column on the '''Results Grid''' tab to define how the resulting values should be calculated for the grouped values. The following aggregate functions are available:[anchor|#_f18c9fdb-900c-430e-9f6a-9f3b613be7ad]
*''AVG'': Returns the average of all non-null values of the group
*''COUNT'': Returns a count of all values of the group
*''MAX'': Returns the maximum value of all values of the group
*''MIN'': Returns the minimum value of all values of the group
*''SUM'': Returns the sum of all values of the group

If no function is selected in the '''Aggregate Function''' column for a data field used for grouping the following aggregate functions are applied by default:[anchor|#_6573eb9d-5480-4e87-ae50-f1be44b9471a]
*''SUM'' is applied to the columns with the numeric type. 
*''MAX'' is applied to the other columns. 

The aggregate function must correspond with the type of the field selected in the '''Data Field''' column. Selecting the ''SUM'' function for a character data type (such as customer&rsquo;s name, an address, or an email address) causes a run-time error. For the calculated columns, you have to select the appropriate aggregation function manually, because no single function applies to them by default.]]></column>
			<column name="PlainText"><![CDATA[Applying Sorting and Grouping: General Information While viewing the results in the results grid of a generic inquiry (or in any table in  Acumatica ERP), a user can sort the output data by using simple filters in column headers. When you         create or modify the generic inquiry, you can define how the inquiry data is sorted by         default, by specifying the columns to be used for sorting. Also, you can group inquiry data by specifying grouping settings and by adding rows that         return aggregated values for a group. Learning Objectives In this chapter, you will learn how to modify an existing generic inquiry in the following         ways: By grouping the inquiry output By aggregating the inquiry output By adding a default sort order for the inquiry output Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company. To speed up inquiry creation, you have copied an existing generic         inquiry that provides results similar to those you need. Now you want to group and aggregate         the inquiry output and add a sort order to suit your needs. Sorting Settings You can use the settings on the  Sort Order  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form to specify how the inquiry data is         sorted—that is, the default order in which the results should be displayed on the generic         inquiry form. For example, the inquiry results can be sorted by date and by customer name.         To do this, on the  Sort Order  tab, you add a row for each data field         of each particular column that you want to use for sorting the inquiry results. In these         rows, you specify whether the results are sorted in ascending or descending order of the         values in the column; the default  Ascending  sort order is selected by default when         you add a row.  Any user-defined sorting that a user of an inquiry specifies (by clicking the         column header and specifying a condition in the dialog box) overrides any default sorting         you specify on the  Sort Order  tab. If an inquiry has no sorting settings specified on the  Sort Order          tab, the system displays a warning in the tab title, as shown in the following screenshot.         Until you define sorting settings, the default sorting settings, which are shown at the         bottom of the screen, are used for the inquiry. Warning about the default sort order Grouping Settings On the  Grouping  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you can specify the data field or         fields by which you would like to group data. On the  Results Grid          tab, you can also add rows that will hold aggregated values of these groups. For example,         you may want to group sales orders by date and status to get the count of sales orders, as         well as their total and average amounts for each day and status. For data fields specified on the  Grouping  tab, you use the            Aggregate Function  column on the  Results           Grid  tab to define how the resulting values should be calculated for the         grouped values. The following aggregate functions are available: AVG : Returns the average of all non-null values of the group COUNT : Returns a count of all values of the group MAX : Returns the maximum value of all values of the group MIN : Returns the minimum value of all values of the group SUM : Returns the sum of all values of the group If no function is selected in the  Aggregate Function  column for a         data field used for grouping the following aggregate functions are applied by default: SUM  is applied to the columns with the numeric type.  MAX  is applied to the other columns.  The aggregate function must correspond with the type of the field selected in the            Data Field  column. Selecting the  SUM  function for a         character data type (such as customer's name, an address, or an email address) causes a         run-time error. For the calculated columns, you have to select the appropriate aggregation         function manually, because no single function applies to them by default. ]]></column>
		</row>
		<row PageID="61ee434c-549b-408c-a4ab-1415a713bf9b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7bc8cdc5-8a6c-9789-11b5-9e3b1718ec8d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to add grouping and sorting conditions.{br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has requested a generic inquiry that collects data about invoices and memos. You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant would like the results to list not individual invoices but instead the average invoice amount of each customer, with these rows sorted in descending order by the average invoice amount.{br}

In the system preparation for this activity, you will copy the predefined inquiry to leave the original inquiry intact; you will modify its copy as requested.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form for the copied inquiry, you will look for the row that corresponds to the '''Customer Name''' column in the inquiry results and note the value in the '''Data Field''' column. You will add a grouping condition with the noted data field on the '''Grouping''' tab. Then you will add a row that will hold the average invoice amount on the '''Results Grid''' tab, and you will sort these rows in descending order by this amount.[anchor|#_6e651d46-1862-4dc0-a794-20d222984012]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_31bf7267-e124-4035-ba8e-e3c7c62b60cd]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to modify a generic inquiry.
)))

==Step 1: Adding a Grouping Condition==
To modify the generic inquiry to add a grouping condition, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB2-ARInvoicesMemos''.
#On the '''Results Grid''' tab, look for the row with the ''AcctName'' value in the '''Data Field''' column, which corresponds to the '''Customer Name''' column in the inquiry results.
#:((({S:Hint}If the '''Visible''' check box is cleared for a row, the corresponding column on the inquiry is not visible initially, but you can make the column visible by using the '''Column Configuration''' dialog box of the table.
)))
#On the '''Grouping''' tab, click '''Add Row''' on the table toolbar; in the '''Data Field''' column of the added row, specify the value you found (that is, ''BAccountR.AcctName''). 
#On the form toolbar, click '''Save'''.

==Step 2: Adding a Row to Hold the Aggregated Value==
To modify the generic inquiry to add a row with an aggregation function, do the following:[anchor|#_8f019781-937b-4fa4-a9dc-fa3cd913c076]
#While remaining on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form with the ''DB2-ARInvoicesMemos'' generic inquiry selected, on the '''Results Grid''' tab, find the row that holds the document balance (<tt>CuryDocBal</tt>), and specify the following settings:
#*'''Visible''': Selected
#*'''Caption''': <tt>Average Amount</tt>
#*'''Aggregate Function''': ''AVG''
#Clear the '''Visible''' check box for all rows except for the requested two—that is, except for the rows with ''AcctName'' and'' CuryDocBal'' in the '''Data Field''' column.
#On the form toolbar, click '''Save''' .

==Step 3: Adding the Default Sorting Order==
To modify the generic inquiry to add a sorting condition, do the following:[anchor|#_3139cbe7-dbd9-452d-a20e-3451ef12128f]
#While remaining on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form with the ''DB2-ARInvoicesMemos'' generic inquiry selected, on the '''Sort Order''' tab, to deactivate the sorting condition that was copied from the source inquiry, clear the check box in the '''Active''' column of the only row.
#Click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Data Field''': ''ARInvoice.CuryDocBal''
#* '''Sort Order''': ''Descending''
#On the form toolbar, click '''Save'''.
#Click the eye icon on the side panel to preview how your changes have affected the generic inquiry form. The generic inquiry form now has two columns, as shown in the following screenshot. The records are grouped so that the '''Customer Name''' column displays the customer names, with one row shown for each customer. The values in the '''Average Amount''' column display the average amount of all invoices of the customer listed in a row instead of the inquiry displaying each invoice value in a separate row. Also notice that the rows are sorted by the amounts in descending order (also shown in the following screenshot).
[anchor|#_9be11631-f294-4b39-90f3-b65f7d9e5e12][anchor|#_83e39c29-7660-44d0-9cc5-4d437f0a4a02][image:UserGuide/Images/GI_Sorting_and_Grouping_GS_with_GI_Grouped_Sorted_Output.png|popup|Generic inquiry with the average invoice amount grouped by customer name|450px]
==Self-Test Exercise==
Now that you have learned how to use sorting and grouping conditions, try to apply this knowledge. Working with the inquiry you have created in this activity, observe how the values in the '''Average Amount''' column of the inquiry change when you select different functions in the '''Aggregate Function''' column on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.]]></column>
			<column name="PlainText"><![CDATA[Applying Sorting and Grouping: To Group and Sort Inquiry          Data In this activity, you will learn how to modify an existing generic inquiry to add                 grouping and sorting conditions. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has requested a generic inquiry                 that collects data about invoices and memos. You have offered the predefined                 Invoices and Memos (AR3010PL) generic inquiry form, which has the  AR-Invoices and                     Memos  inquiry title and the  Invoices and Memos  site map title                 specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but                 the accountant would like the results to list not individual invoices but instead                 the average invoice amount of each customer, with these rows sorted in descending                 order by the average invoice amount. In the system preparation for this activity, you will copy the predefined inquiry to                 leave the original inquiry intact; you will modify its copy as requested. The Invoices and Memos (AR3010PL) generic inquiry form, which is the                 list of the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview On the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form for the copied inquiry,                 you will look for the row that corresponds to the  Customer                     Name  column in the inquiry results and note the value in the                      Data Field  column. You will add a grouping condition with                 the noted data field on the  Grouping  tab. Then you will add a                 row that will hold the average invoice amount on the  Results                     Grid  tab, and you will sort these rows in descending order by this                 amount. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to modify a generic                     inquiry. Step 1: Adding a Grouping Condition To modify the generic inquiry to add a grouping condition, do the following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          DB2-ARInvoicesMemos . On the  Results Grid  tab, look for the row with the                          AcctName  value in the  Data Field  column, which                     corresponds to the  Customer Name  column in the inquiry                         results. If the  Visible  check box is                         cleared for a row, the corresponding column on the inquiry is not visible                         initially, but you can make the column visible by using the                              Column Configuration  dialog box of the                         table. On the  Grouping  tab, click  Add Row                      on the table toolbar; in the  Data Field  column of the                     added row, specify the value you found (that is,  BAccountR.AcctName ).  On the form toolbar, click  Save . Step 2: Adding a Row to Hold the Aggregated Value To modify the generic inquiry to add a row with an aggregation function, do the                 following: While remaining on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)                     form with the  DB2-ARInvoicesMemos  generic inquiry selected, on the                          Results Grid  tab, find the row that holds the                     document balance ( CuryDocBal ), and specify the following                         settings: Visible : Selected Caption :  Average                             Amount Aggregate Function :  AVG Clear the  Visible  check box for all rows except for the                     requested two—that is, except for the rows with  AcctName  and                          CuryDocBal  in the  Data Field  column. On the form toolbar, click  Save  . Step 3: Adding the Default Sorting Order To modify the generic inquiry to add a sorting condition, do the following: While remaining on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)                     form with the  DB2-ARInvoicesMemos  generic inquiry selected, on the                          Sort Order  tab, to deactivate the sorting condition                     that was copied from the source inquiry, clear the check box in the                          Active  column of the only row. Click  Add Row  on the table toolbar, and specify the                     following settings in the added row: Data Field :  ARInvoice.CuryDocBal Sort Order :  Descending On the form toolbar, click  Save . Click the eye icon on the side panel to preview how your changes have affected                     the generic inquiry form. The generic inquiry form now has two columns, as shown                     in the following screenshot. The records are grouped so that the                          Customer Name  column displays the customer names,                     with one row shown for each customer. The values in the  Average                         Amount  column display the average amount of all invoices of the                     customer listed in a row instead of the inquiry displaying each invoice value in                     a separate row. Also notice that the rows are sorted by the amounts in                     descending order (also shown in the following screenshot). Generic inquiry with the average invoice amount grouped by customer                     name Self-Test Exercise Now that you have learned how to use sorting and grouping conditions, try to apply                 this knowledge. Working with the inquiry you have created in this activity, observe                 how the values in the  Average Amount  column of the inquiry                 change when you select different functions in the  Aggregate                     Function  column on the  Results Grid  tab of                 the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. ]]></column>
		</row>
		<row PageID="513737c4-2f79-4b7f-ac27-79831ca6757f" Language="en-US" PageRevisionID="1" Content="&#xA;In the topics of this chapter, you will learn how to define conditions and parameters to limit the data to be displayed on a generic inquiry form." PlainText="Using Conditions and Parameters In the topics of this chapter, you will learn how to define conditions and parameters to limit     the data to be displayed on a generic inquiry form. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="efca3b16-dba1-45ab-8dea-1a5d10932b1f" RecordSourceID="22377" />
		<row PageID="cc229d39-2c78-4f97-9805-f8d91eb81d54" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="2f9b3eab-fb00-0a73-fab2-90d356f44ce3" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can define the results of a generic inquiry—that is, the data in the results grid of the generic inquiry form—by adding default conditions to the inquiry on the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. On this form, you can also define parameters that will be shown on the Selection area of the resulting generic inquiry form, thus giving users the ability to specify conditions that limit the data.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to modify an existing generic inquiry as follows:[anchor|#_7fb515b1-7704-48a1-a2ff-a87ef5af95f1]
*Add a Selection area with parameters so that users of the generic inquiry form can view the most relevant data for their current information needs
*Specify conditions to limit the listed data by default

==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company. You want to modify an existing generic inquiry to use conditions to further customize the displayed data, or you want to add or modify parameters so that users can view the needed data.]]></column>
			<column name="PlainText"><![CDATA[Using Conditions and Parameters: General Information You can define the results of a generic inquiry—that is, the data in the results grid         of the generic inquiry form—by adding default conditions to the inquiry on the            Conditions  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         (SM208000) form. On this form, you can also define parameters that will be shown on the         Selection area of the resulting generic inquiry form, thus giving users the ability to         specify conditions that limit the data. Learning Objectives In this chapter, you will learn how to modify an existing generic inquiry as follows: Add a Selection area with parameters so that users of the generic inquiry form can view           the most relevant data for their current information needs Specify conditions to limit the listed data by default Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company. You want to modify an existing generic inquiry to use conditions to         further customize the displayed data, or you want to add or modify parameters so that users         can view the needed data. ]]></column>
		</row>
		<row PageID="2903105e-9c74-4833-8649-271473c4f6b1" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="fb32618c-07bd-c6b8-13bb-1e5ddc38d937" RecordSourceID="22377">
			<column name="Content"><![CDATA[
For generic inquiries that you develop or modify, you can construct simple or complex conditions to be applied to the data to be displayed. You can also configure parameters that correspond to UI elements on the generic inquiry form. By using these UI elements, users can narrow the inquiry results to meet their current needs for information.
==Construction of Conditions==
You can limit the data to be displayed in the results of a generic inquiry by adding conditions to the inquiry on the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. For example, suppose that you are designing or modifying an inquiry that lists open sales orders that have been created on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form. To do this, you will define the following conditions that must be met for inquiry results to be listed: The order type equals ''SO'', and the order status equals ''Open''.{br}

You construct conditions by adding rows to the table on the '''Conditions''' tab and by specifying the applicable data fields (from the data access classes specified for the inquiry), logical conditions, and values. For this example, you add the condition to limit the data to only orders with the ''Open'' status, as shown in the following screenshot.[anchor|#_4d869f2b-5ad4-44b4-9be5-b2970202afe9][anchor|#_9e02d31c-fcfa-43cb-a855-b146b65b76a6][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Condition_Example.png|popup|Condition to display only open sales orders|450px]
==Specification of Values in Conditions==
While constructing conditions in a generic inquiry, you can use the predefined values of data fields in the database, such as document statuses, and the predefined names of options stored in the database, such as document types. (A document status value is generally inserted by the system, based the defined workflow. A document type value is entered by a user, who selects the needed option from the drop-down list.) {br}

To use the predefined values of data fields, on the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you select the '''From Schema''' check box for the data field and the system will display possible values in the drop-down list in the'''Value 1''' and, for some conditions (for example, ''Is Between''),'''Value 2''' columns. In the following screenshot, which shows the condition used to display sales orders with the ''Open'' status that have been created on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form, you can see that the '''From Schema''' check box is selected and the predefined values of the document status are shown in the '''Value 1''' column. [anchor|#_c25b798f-a870-437e-afa8-3d9fa589070e][anchor|#_e34b384a-e77f-4112-8326-e660d491dac0][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Condition_Example_Shema_Selected.png|popup|Condition that uses predefined values in the database|450px]
To use the predefined names of options, you perform actions that are similar to those described above. For example, the [HelpRoot_FormReference\AR_30_40_00|Cash Sales] ([~/?ScreenId=AR304000|AR304000]) form has the '''Type''' drop-down list with the ''Cash Sale'' and ''Cash Return'' options. On the ''AR-Cash Sales'' inquiry (with the ''Cash Sales'' site map title), which lists documents created on the [HelpRoot_FormReference\AR_30_40_00|Cash Sales] form, the '''Type''' column (which corresponds to the drop-down list on the entry form) lists the values in the {{ARCashSale.DocType}} data field. {br}

Further suppose that you would like to copy the inquiry and modify the copy to return only cash sales with the ''Cash Sale'' type, which requires you to define a condition. As the value in the condition, you should use the option name stored in the database, which you can find by inspecting the element, as described in [HelpRoot_ReportingTools\GI_Discovering_DACs_Mapref|Discovering DACs]. On the [HelpRoot_FormReference\AR_30_40_00|Cash Sales] form, you inspect the '''Type''' element, and note that the option name for ''Cash Sale'' is ''CSL''. {br}

Also, you can define a value to be a formula that uses the values of particular data fields. To specify a formula as a value, on the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, you click the edit button in the '''Value 1''' or '''Value 2''' column to open the Formula Editor dialog box. For details, see [HelpRoot_ReportingTools\GI_Using_Formulas_General_Info|Using Formulas: General Information]. In a formula, if you use a value of a data field with a drop-down control, then you should use the value that is stored in the database, rather than the one that is displayed in the user interface. For details, see [HelpRoot_ReportingTools\GI_Discovering_DACs_General_Info|Discovering DACs: General Information].{br}

If you are designing a condition that is not based on predefined values—as you would for data fields that store amounts or dates, which vary widely and are not predefined in the system—you clear the '''From Schema''' check box in the row with the data field. For example, suppose that you are designing an inquiry that returns only sales orders that have been created on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] form with a total amount that is greater than or equal to 2000. You add the condition shown in the following screenshot. [anchor|#_8578b874-3e46-4ddf-926b-b2e6038795a9][anchor|#_1d6da366-3dbe-4e1a-b53f-f6cfd8de208a][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Condition_Example_Shema_Cleared.png|popup|Condition that uses a value specified by a user|450px]
==Use of Brackets and Operators==
To limit the results of a generic inquiry, you might need to compose complex conditions: logical expressions that consist of multiple conditions. To do this, on the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you use opening and closing parentheses to indicate to the system the order of conditions, as well as the ''And'' or ''Or'' operator to join these conditions. By default, when you add a new row, the ''And'' operator is inserted for a row added to this tab. {br}

The following screenshot displays two active conditions joined with the ''And'' operator. The resulting complex condition is applied to sales orders that have been created on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form. With this complex condition specified, the resulting generic inquiry returns only open sales orders with a total amount greater than or equal to 2000. [anchor|#_9a6c8ce2-8b67-4781-a6e0-15d9ff171fcc][anchor|#_6d4db9ed-5d5e-4fcd-b33b-90b3f213abf1][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Condition_Example_Operator_And.png|popup|Two conditions joined with the And operator|450px]
==Use of Parameters==
Although some generic inquiry forms consist of only the table with the results, on others, users have the ability to make selections to view specific data displayed in the table of the inquiry form, such as that for a particular date range or warehouse (or both). To do this, on the '''Parameters''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you configure parameters, which correspond to optional or required boxes and other controls that will be placed in the Selection area of the generic inquiry form (above the table with the results) in the order and layout you specify. {br}

On the '''Parameters''' tab, you add a row for each element to be added to the Selection area, with the appropriate settings so that the inquiry will retrieve the relevant data from the DACs. In the '''Name''' column, you specify the identifier of the parameter without spaces. You use this identifier to create conditions for the parameter. In the '''Display Name''' column, you specify the caption to be used for the element.{br}

You define the type of control to be used for the parameter, which can be any of the following, by the value you specify in the '''Schema Field''' column:[anchor|#ul_w2w_23n_vlb]
*A selection box (that is, a lookup box that has a corresponding lookup table): If a selection box will be used, in the column, you select the data field whose value you want to use for filtering.
*A check box: In the column, you select the ''&lt;Checkbox&gt;'' option.
*A drop-down list: In the column, you select ''&lt;Combobox&gt;'', as shown in the following screenshot for a parameter being defined for an inquiry for sales orders that have been defined on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form. Because the parameter corresponds to the '''Status''' drop-down list on the form, you need to select &lt;''Combobox''&gt;. In this case, you also need to define the list of options in the '''Combo Box Values''' dialog box, which you can invoke by clicking the '''Combo Box Values''' on the table toolbar.
[anchor|#_f56ca1ba-cc25-436a-94b3-5c3cee870ec0][anchor|#_cf6930c1-52f6-4ca7-b968-b89ec625d891][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Parameter_Example_Schema.png|popup|Selection of the control type of the parameter|450px]
Optionally, you can specify a default value for the parameter in the '''Default Value''' column. The '''From Schema''' check box works with the '''Default Value''' column in the same way as the '''From Schema''' check box works with the '''Value 1''' column and '''Value 2''' columns on the '''Conditions''' tab of this form.
==Creation of Conditions for Parameters==
You must create corresponding conditions for every parameter that you define on the '''Parameters''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. If a parameter does not have a corresponding condition specified on the '''Conditions''' tab, user selections for the element corresponding to the parameter will not affect the records that are returned; however, the element will still be displayed in the Selection area of the resulting inquiry form.{br}

On the '''Conditions''' tab, the inquiry parameters used in conditions appear in square brackets to distinguish them from data fields. Inquiry parameters are specified in the '''Data Field''', '''Value 1''' and '''Value 2''' columns. For example, suppose that you are modifying an inquiry that lists sales orders that have been created on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form. For the inquiry, you added a parameter with the ''OrderStatus'' name on the '''Parameters''' tab of this form. On the '''Conditions''' tab, you can select the ''&#91;OrderStatus&#93;'' parameter as a data field or a value.{br}

Suppose that for an inquiry form that lists sales orders, you were asked to add the '''Open Only''' check box to the Selection area of the inquiry form instead of limiting the output to list only open sales orders by default. When a user selects the check box, the inquiry should display only open sales orders; if the check box is cleared, it should list all available orders. You can add the ''OrderStatus'' parameter on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form and define it as a check box that is cleared by default, as shown in the following screenshot.[anchor|#_de491376-8e83-44f5-b677-9d56c4bdf8a0][anchor|#_da294dab-aa81-43cf-a3b0-8ffca9b63ea5][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Parameter_Example_Checkbox.png|popup|The OrderStatus parameter defined as a check box |450px]
Then on the '''Conditions''' tab, you add a complex condition for the parameter you added, as shown in the following screenshot. The condition has the following meaning: If the '''Order Status''' check box is selected, display only orders with the ''Open'' status; otherwise, display the records without regard to status.[anchor|#_ee145b7e-9cdf-49df-9eba-0b632db29e37][anchor|#_5cce6555-5e2e-42ca-bf63-dbf035d34185][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Parameter_Complex_Condition.png|popup|A complex condition corresponding to the OrderStatus parameter|450px]
If you need the system to display the output results if a user of the generic inquiry form selects no values for a particular element in the Selection area that corresponds to a parameter, you should add a complex condition in which you indicate to the system that the parameter value can be empty.
For example, suppose that for the inquiry you are modifying (which lists sales orders that have been created on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] form), you have been asked to add the '''Date From''' and '''Date To''' boxes to the Selection area of the inquiry form to give users the ability to specify a date range for the sales orders to be listed; you also need to add the parameters on the '''Parameters''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form. If you do not indicate to the system that the values of these parameters can be empty, the system will not display any results if a user clears the '''Date From''' and '''Date To''' boxes. {br}

Thus, for each of these date range parameters, you need to add a complex condition on the '''Conditions''' tab, as shown in the following screenshot, that specifies that the '''Date From''' and '''Date To''' boxes can be empty. If you add such a condition and a user leaves the '''Date From''' box empty and specifies a date in the '''Date To''' box, for example, the inquiry results display sales orders that have been created before the date specified in the '''Date To''' box. ((({S:Hint}If you did not include a condition on the '''Conditions''' tab to indicate that the parameter can be left empty, and if a user left the '''Date From''' box empty on the generic inquiry form, the inquiry would compare the empty value with the dates of order creation. Because in the database there are no records with empty order creation dates, the inquiry results would be empty.
)))[anchor|#_18c62ac8-5234-4291-a7c8-47322f53a867][anchor|#_4c511600-81cb-4d1d-acf9-26d8d24c50c1][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Parameter_IsEmpty_Condition.png|popup|Complex conditions to display results if a user clears either parameter value|450px]
==Arrangement of Elements on the Generic Inquiry Form==
You can change the arrangement of the elements that are displayed in the Selection area of the generic inquiry form you are designing by using the '''Arrange Parameters in X Column''' box in the Summary area of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. In this box, you specify the number of columns in which the elements corresponding to parameters will be placed on the resulting inquiry form. {br}

For example, if an inquiry has two parameters and '''Arrange Parameters in X Column''' is set to ''1'' on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, then the system arranges the elements corresponding to the parameters in a single column, as shown in the following screenshot, which shows a generic inquiry that lists invoices that have been created on the [HelpRoot_FormReference\IN_30_10_00|Receipts] ([~/?ScreenId=IN301000|IN301000]) form.[anchor|#_5954eeb8-8c40-4cc8-a902-16e865a310da][anchor|#_4d112820-a9ee-4f31-831b-f30302cf5f5e][image:UserGuide/Images/GI_Modifying_Inquiry_Results_parameters_in_1_column.png|popup|Elements arranged in one column in the Selection area of the generic inquiry form|450px]
If '''Arrange Parameters in X Column''' is set to ''2'' on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, then the system arranges the elements corresponding to the parameters in two columns, as the following screenshot demonstrates.[anchor|#_6d3a2bc7-f57c-4b48-9b69-2f3391b8628e][anchor|#_8f8098a9-f657-47f3-88f6-7a49e3e0aa12][image:UserGuide/Images/GI_Modifying_Inquiry_Results_parameters_in_2_columns.png|popup|Elements arranged in two columns in the Selection area of the generic inquiry form|450px]]]></column>
			<column name="PlainText"><![CDATA[Using Conditions and Parameters: Conditions and Parameters For generic inquiries that you develop or modify, you can construct simple or complex         conditions to be applied to the data to be displayed. You can also configure parameters that         correspond to UI elements on the generic inquiry form. By using these UI elements, users can         narrow the inquiry results to meet their current needs for information. Construction of Conditions You can limit the data to be displayed in the results of a generic inquiry by adding         conditions to the inquiry on the  Conditions  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. For example, suppose that you are         designing or modifying an inquiry that lists open sales orders that have been created on the             ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form. To do this, you will define         the following conditions that must be met for inquiry results to be listed: The order type         equals  SO , and the order status equals  Open . You construct conditions by adding rows to the table on the            Conditions  tab and by specifying the applicable data fields (from         the data access classes specified for the inquiry), logical conditions, and values. For this         example, you add the condition to limit the data to only orders with the  Open  status,         as shown in the following screenshot. Condition to display only open sales orders Specification of Values in Conditions While constructing conditions in a generic inquiry, you can use the predefined values of         data fields in the database, such as document statuses, and the predefined names of options         stored in the database, such as document          types .         (A document status value is generally inserted by the system, based the defined workflow. A         document type value is entered by a user, who selects the needed option from the drop-down         list.)  To use the predefined values of data fields, on the  Conditions  tab         of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you select the            From Schema  check box for the data field and the system will         display possible values in         the  drop-down         list in the Value         1          and , for some         conditions (for example,  Is Between ), Value 2  columns. In the following screenshot,         which shows the condition used to display sales orders with the  Open  status that have         been created on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form, you can         see that the  From Schema  check box is selected and the predefined         values of the document status are shown in the  Value 1  column.  Condition that uses predefined values in the database To use the predefined names of options, you perform actions that are similar to those         described above. For example, the   ([~/?ScreenId=AR304000|AR304000]) Cash Sales (AR304000) form has the            Type  drop-down list with the  Cash Sale  and  Cash           Return  options. On the  AR-Cash Sales  inquiry (with the  Cash Sales  site         map title), which lists documents created on the   ([~/?ScreenId=AR304000|AR304000]) Cash Sales form, the            Type  column          (which         corresponds to the drop-down list on the entry form)  lists the values in         the  ARCashSale.DocType  data field.  Further suppose that you would like to copy the inquiry and modify the copy to return only          cash         sales          with the  Cash Sale  type , which requires you to define a condition.         As the value in the condition, you should use the option name stored in the database, which         you can find by inspecting the element, as described in  Discovering DACs. On the   ([~/?ScreenId=AR304000|AR304000]) Cash Sales form, you         inspect the  Type  element, and note that the option name for  Cash           Sale  is  CSL .  Also, you can define a value to be a formula that uses the values of particular data         fields. To specify a formula as a value, on the  Conditions  tab of the             ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form, you click the edit button in the            Value 1  or  Value 2  column to open the         Formula Editor dialog box. For details, see  Using Formulas: General Information. In a formula, if you use a         value of a data field with a drop-down control, then you should use the value that is stored         in the database, rather than the one that is displayed in the user interface. For details,         see  Discovering DACs: General Information. If you are designing a condition that is not based on predefined values—as you would         for data fields that store amounts or dates, which vary widely and are not predefined in the         system—you clear the  From Schema  check box in the row with the         data field. For example, suppose that you are designing an inquiry that returns only sales         orders that have been created on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders form with         a total amount that is greater than or equal to 2000. You add the condition shown in the         following screenshot.  Condition that uses a value specified by a user Use of Brackets and Operators To limit the results of a generic inquiry, you might need to compose complex conditions:         logical expressions that consist of multiple conditions. To do this, on the            Conditions  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         (SM208000) form, you use opening and closing parentheses to indicate to the system the order         of conditions, as well as the  And  or  Or  operator to join these conditions. By         default, when you add a new row, the  And  operator is inserted for a row added to this         tab.  The following screenshot displays two active conditions joined with the  And          operator. The resulting complex condition is applied to sales orders that have been created         on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form. With this complex         condition specified, the resulting generic inquiry returns only open sales orders with a         total amount greater than or equal to 2000.  Two conditions joined with the And operator Use of Parameters Although some generic inquiry forms consist of only the table with the results, on others,         users have the ability to make selections to view specific data displayed in the table of         the inquiry form, such as that for a particular date range or warehouse (or both). To do         this, on the  Parameters  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you configure parameters, which         correspond to optional or required boxes and other controls that will be placed in the         Selection area of the generic inquiry form (above the table with the results) in the order         and layout you specify.  On the  Parameters  tab, you add a row for each element to be added to         the Selection area, with the appropriate settings so that the inquiry will retrieve the         relevant data from the DACs. In the  Name  column, you specify the         identifier of the parameter without spaces. You use this          identifier          to create conditions for the parameter. In the  Display Name  column,         you specify the caption to be used for the element. You define the type of control to be used for the parameter, which can be any of the         following, by the value you specify in the  Schema Field  column: A selection box (that is, a lookup box that has a corresponding lookup table): If a             selection box will be used, in the column, you select the data field whose value you             want to use for filtering. A check box: In the column, you select the  <Checkbox>  option. A drop-down list: In the column, you select  <Combobox> , as shown in the             following screenshot for a parameter being defined for an inquiry for sales orders that             have been defined on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form.             Because the parameter corresponds to the  Status  drop-down list on             the form, you need to select < Combobox >. In this case, you also need to define             the list of options in the  Combo Box Values  dialog box, which you             can invoke by clicking the  Combo Box Values  on the table             toolbar. Selection of the control type of the parameter Optionally, you can specify a default value for the parameter in the  Default           Value  column. The  From Schema  check box works with the            Default Value  column in the same way as the  From           Schema  check box works with the  Value 1  column and            Value 2  columns on the  Conditions  tab of         this form. Creation of Conditions for Parameters You must create corresponding conditions for every parameter that you define on the            Parameters  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         (SM208000) form. If a parameter does not have a corresponding condition specified on the            Conditions  tab, user selections for the element corresponding to         the parameter will not affect the records that are returned; however, the element will still         be displayed in the Selection area of the resulting inquiry form. On the  Conditions  tab, the inquiry parameters used in conditions         appear in square brackets to distinguish them from data fields. Inquiry parameters are         specified in the  Data Field ,  Value 1  and            Value 2  columns. For example, suppose that you are modifying an         inquiry that lists sales orders that have been created on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form. For the inquiry, you added a         parameter with the  OrderStatus  name on the  Parameters  tab of         this form. On the  Conditions  tab, you can select the            [OrderStatus]  parameter as a data field or a value. Suppose that for an inquiry form that lists sales orders, you were asked to add the            Open Only  check box to the Selection area of the inquiry form         instead of limiting the output to list only open sales orders by default. When a user         selects the check box, the inquiry should display only open sales orders; if the check box         is cleared, it should list all available orders. You can add the  OrderStatus          parameter on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form and define it as a check         box that is cleared by default, as shown in the following screenshot. The OrderStatus parameter defined as a check box  Then on the  Conditions  tab, you add a complex condition for the         parameter you added, as shown in the following screenshot. The condition has the following         meaning: If the  Order Status  check box is selected, display only         orders with the  Open  status; otherwise, display the records without regard to         status. A complex condition corresponding to the OrderStatus parameter If you need the system to display the output results if a user of the generic inquiry form         selects no values for a particular element in the Selection area that corresponds to a         parameter, you should add a complex condition in which you indicate to the system that the         parameter value can be empty. For example, suppose that for the inquiry you are modifying (which lists sales orders that         have been created on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders form), you have been         asked to add the  Date From  and  Date To  boxes         to the Selection area of the inquiry form to give users the ability to specify a date range         for the sales orders to be listed; you also need to add the parameters on the            Parameters  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         form. If you do not indicate to the system that the values of these parameters can be empty,         the system will not display any results if a user clears the  Date           From  and  Date To  boxes.  Thus, for each of these date range parameters, you need to add a complex condition on the            Conditions  tab, as shown in the following screenshot, that         specifies that the  Date From  and  Date To  boxes         can be empty. If you add such a condition and a user leaves the  Date           From  box empty and specifies a date in the  Date To  box,         for example, the inquiry results display sales orders that have been created before the date         specified in the  Date To  box.            If you            did           not include a condition on the  Conditions  tab to indicate that the           parameter can be left empty , and if a user left the  Date             From  box empty on the generic inquiry form, the inquiry would compare the           empty value with the dates of order creation. Because in the database there are no records           with empty order creation dates, the inquiry results would be empty. Complex conditions to display results if a user clears either parameter value Arrangement of Elements on the Generic Inquiry Form You can change the arrangement of the elements that are displayed in the Selection area of         the generic inquiry form you are designing by using the  Arrange Parameters in X           Column  box in the Summary area of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In this box, you specify the         number of columns in which the elements corresponding to parameters will be placed on the         resulting inquiry form.  For example, if an inquiry has two parameters and  Arrange Parameters in X           Column  is set to  1  on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         form, then the system arranges the elements corresponding to the parameters in a single         column, as shown in the following screenshot, which shows a generic inquiry that lists         invoices that have been created on the   ([~/?ScreenId=IN301000|IN301000]) Receipts         (IN301000) form. Elements arranged in one column in the Selection area of the generic inquiry           form If  Arrange Parameters in X Column  is set to  2  on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form, then the system arranges the elements         corresponding to the parameters in two columns, as the following screenshot         demonstrates. Elements arranged in two columns in the Selection area of the generic inquiry           form ]]></column>
		</row>
		<row PageID="bd8cec7b-c14f-41eb-aff2-8c7811e7e9b4" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="eba56726-6336-0dba-6c2b-bf94379bef4d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to limit the data displayed to a specific range of financial periods—that is, to include a date condition.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has requested an inquiry form that displays data about invoices. You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant wants the inquiry form to show results limited to a range of financial periods that the accountant wants to analyze. Specifically, the inquiry form should display only invoices (that is, no other document types) posted from the ''12-2018'' financial period through the ''01-2019'' financial period (including the starting and ending periods).{br}

In the system preparation for this activity, you will copy the predefined inquiry to leave the original inquiry intact; you will modify its copy as requested.((({S:Hint}The Invoices and Memos (AR3010PL) inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form for the copied inquiry, you will look for the row that corresponds to the '''Post Period''' column of the inquiry and note the value in the '''Data Field''' column. You will add the condition for the inquiry on the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form. With this condition, the results grid will display only documents that fall within the specified range of financial periods.[anchor|#_c9fb081f-9ccb-424f-9d0f-62bfd13d222e]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_2eae95fc-28bc-4e16-8770-0f93e0a3bd8c]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to modify a generic inquiry.
)))

==Step 1: Adding a Condition for a Document Type==
To modify the generic inquiry by adding a condition for a document type, do the following:[anchor|#_787a05d9-f58d-4102-bb02-7eafa0a60ebe]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB3-ARInvoicesMemos''.
#On the '''Results Grid''' tab, look for the row that corresponds to the '''Type''' column, and make a note of the value in the '''Data Field''' column.
#:((({S:Hint}To find the row on the '''Results Grid''' tab that corresponds to the '''Type''' column, in the resulting generic inquiry form, make a note of the order number of the '''Type''' column in the set of columns. Suppose the order number is ''x''. Then return to the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, and in the '''Visible''' column, from the top, count only the rows for which the check box is selected. In the row that corresponds to ''x'' (for example, the fourth row if the order number was 4), the value in the '''Field Name''' column corresponds to the '''Type''' column in the resulting generic inquiry form.
)))
#On the '''Conditions''' tab, click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Data Field''': ''ARInvoice.DocType''
#* '''Condition''': ''Equals''
#* '''From Schema''': Cleared
#*'''Value 1''': <tt>INV</tt>
#On the form toolbar, click '''Save'''.

==Step 2: Adding a Date Condition==
To modify the generic inquiry by adding a date condition, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#While you are still viewing the ''DB3-ARInvoicesMemos'' inquiry on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, on the '''Results Grid''' tab, look for the row that corresponds to the '''Post Period''' column, and make a note of the value in the '''Data Field''' column.
#On the '''Conditions''' tab, click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Data Field''': ''ARInvoice.FinPeriodID''
#* '''Condition''': ''Is Between''
#* '''From Schema''': Selected
#*'''Value 1''': <tt>12-2018</tt>
#*'''Value 2''': <tt>01-2019</tt>
#On the form toolbar, click '''Save'''.
#Click the eye icon on the side panel to preview how your changes have affected the inquiry. The system has applied the conditions you have added, so that the resulting generic inquiry displays only the invoices within the range of financial periods that you specified for the condition in the '''Value 1''' and '''Value 2''' boxes (''12-2018'' through ''01-2019'').
]]></column>
			<column name="PlainText"><![CDATA[Using Conditions and Parameters: To Add a Date Condition In this activity, you will learn how to modify an existing generic inquiry to limit                 the data displayed to a specific range of financial periods—that is, to                 include a date condition. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has requested an inquiry form that                 displays data about invoices. You have offered the predefined Invoices and Memos                 (AR3010PL) generic inquiry form, which has the  AR-Invoices and Memos  inquiry                 title and the  Invoices and Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but the accountant wants                 the inquiry form to show results limited to a range of financial periods that the                 accountant wants to analyze. Specifically, the inquiry form should display only                 invoices (that is, no other document types) posted from the  12-2018  financial                 period through the  01-2019  financial period (including the starting and                 ending periods). In the system preparation for this activity, you will copy the predefined inquiry to                 leave the original inquiry intact; you will modify its copy as requested. The Invoices and Memos (AR3010PL) inquiry form, which is the list of                 the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview On the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form for the copied inquiry,                 you will look for the row that corresponds to the  Post Period                  column of the inquiry and note the value in the  Data Field                  column. You will add the condition for the inquiry on the                      Conditions  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form. With this condition, the results                 grid will                 display                  only documents that fall within the specified range of financial periods. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to modify a generic                     inquiry. Step 1: Adding a Condition for a Document Type To modify the generic inquiry by adding a condition for a document type, do the                 following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          DB3-ARInvoicesMemos . On the  Results Grid  tab, look for the row that                     corresponds to the  Type  column, and make a note of the                     value in the  Data Field                          column. To find the row on the  Results Grid  tab                         that corresponds to the  Type  column, in the resulting                         generic inquiry form, make a note of the order number of the                              Type  column in the set of columns. Suppose the                         order number is  x . Then return to the  Results                             Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry                         form, and in the  Visible  column, from the top, count                         only the rows for which the check box is selected. In the row that                         corresponds to  x  (for example, the fourth row if the order number was                         4), the value in the  Field Name  column corresponds to                         the  Type  column in the resulting generic inquiry                         form. On the  Conditions  tab, click  Add                         Row  on the table toolbar, and specify the following settings in                     the added row: Data Field :  ARInvoice.DocType Condition :  Equals From Schema : Cleared Value 1 :                                  INV On the form toolbar, click  Save . Step 2: Adding a Date Condition To modify the generic inquiry by adding a date condition, do the following: While you are still viewing the  DB3-ARInvoicesMemos  inquiry on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, on the                          Results Grid  tab, look for the row that corresponds                     to the  Post Period  column, and make a note of the value                     in the  Data Field  column. On the  Conditions  tab, click  Add                         Row  on the table toolbar, and specify the following settings in                     the added row: Data Field :  ARInvoice.FinPeriodID Condition :  Is Between From Schema : Selected Value 1 :  12-2018 Value 2 :  01-2019 On the form toolbar, click  Save . Click the eye icon on the side panel to preview how your changes have affected                     the inquiry. The system has applied the conditions you have added, so that the                     resulting generic inquiry displays only the invoices within the range of                     financial periods that you specified for the condition in the  Value                         1  and  Value 2  boxes ( 12-2018                      through  01-2019 ). ]]></column>
		</row>
		<row PageID="b1ed5c97-7ab9-401f-9798-e499054a8cdc" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="501e12bf-1d95-52d8-83ff-7ab3c6ef7703" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to give users the ability to limit the data displayed to a specific range of financial periods—that is, to add boxes corresponding to parameters to define the range.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has requested an inquiry form that displays data about invoices and memos. You have offered the predefined Invoices and Memos (AR3010PL) inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant has asked you to design the inquiry form to give users the ability to limit the results to a user-defined range of financial periods—that is, it should be possible for a user to specify the needed range of periods.{br}

In the system preparation for this activity, you will copy the predefined inquiry to leave the original inquiry intact; you will modify its copy as requested.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form for the copied inquiry, you will look for the row that corresponds to the '''Post Period''' column of the inquiry and note the value in the '''Data Field''' column. You will add two parameters (''Period From'' and ''Period To'') on the '''Parameters''' tab. Then you will specify how the system should apply the values of these parameters to the inquiry output by adding a condition on the '''Conditions''' tab. [anchor|#_a914ef0a-6346-4e06-9194-1b6809ea72cc]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_03b90211-893a-4b7c-8a89-8392567f9e7d]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to modify a generic inquiry.
)))

==Step 1: Adding Parameters==
To modify the generic inquiry to add parameters, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB4-ARInvoicesMemos''.
#On the '''Results Grid''' tab, look for the row that corresponds to the '''Post Period''' column, and make note of the value in the '''Data Field''' column.
#On the '''Parameters''' tab, click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Name''': <tt>PeriodFrom</tt>
#*'''Schema Field''': ''ARInvoice.FinPeriodID''
#* '''Display Name''': <tt>Period From</tt>
#*'''From Schema''': Selected
#*'''Default Value''': <tt>01-2018</tt>
#Again click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Name''': <tt>PeriodTo</tt>
#*'''Schema Field''': ''ARInvoice.FinPeriodID''
#* '''Display Name''': <tt>Period To</tt>
#*'''From Schema''': Selected
#*'''Default Value''': <tt>02-2019</tt>
#On the form toolbar, click '''Save'''.

==Step 2: Adding a Condition for the Parameters==
To modify the generic inquiry by adding a condition, do the following:[anchor|#_8f019781-937b-4fa4-a9dc-fa3cd913c076]
#While you are still viewing the ''DB4-ARInvoicesMemos'' inquiry, on the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Data Field''': ''ARInvoice.FinPeriodID''
#* '''Condition''': ''Is Between''
#* '''From Schema''': Cleared
#*'''Value 1''': ''&#91;PeriodFrom&#93;''
#* '''Value 2''': ''&#91;PeriodTo&#93;''
#On the form toolbar, click '''Save'''.
#Click the eye icon on the side panel to preview how your changes have affected the inquiry. The system has added the boxes corresponding to the parameters to the Selection area (see the following screenshot). You can specify a range of financial periods and view only the invoices and memos within the range of specified financial periods.
[anchor|#_8d2f0f69-b25c-4136-8cb0-24af27d54db2][anchor|#_e48b88c8-343e-465b-abde-a994ee99f80e][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Parameters_Area.png|popup|Generic inquiry with parameters that define a range|450px]
==Self-Test Exercise==
Now that you have learned about conditions and parameters, you should change the condition for the inquiry you have developed in this activity, so that the inquiry will return records if a user has cleared either box or both boxes in the Selection area.((({S:Hint}On the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you need to split the added condition into two complex conditions, one for each parameter. In the complex condition, you should use the ''OR'' operator and the ''Is Empty'' condition.
)))]]></column>
			<column name="PlainText"><![CDATA[Using Conditions and Parameters: To Add Period-Range Parameters to the Selection         Area In this activity, you will learn how to modify an existing generic inquiry to give                 users the ability to limit the data displayed to a specific range of financial                 periods—that is, to add boxes corresponding to parameters to define the                 range. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has requested an inquiry form that                 displays data about invoices and memos. You have offered the predefined Invoices and                 Memos (AR3010PL) inquiry form, which has the  AR-Invoices and Memos  inquiry                 title and the  Invoices and Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but the accountant has                 asked you to design the inquiry form to give users the ability to limit the results                 to a user-defined range of financial periods—that is, it should be possible                 for a user to specify the needed range of periods. In the system preparation for this activity, you will copy the predefined inquiry to                 leave the original inquiry intact; you will modify its copy as requested. The Invoices and Memos (AR3010PL) generic inquiry form, which is the                 list of the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview On the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form for the copied inquiry,                 you will look for the row that corresponds to the  Post Period                  column of the inquiry and note the value in the  Data Field                  column. You will add two parameters ( Period From  and  Period To ) on the                      Parameters  tab. Then you will specify how the system                 should apply the values of these parameters to the inquiry output by adding a                 condition on the  Conditions  tab.  System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to modify a generic                     inquiry. Step 1: Adding Parameters To modify the generic inquiry to add parameters, do the following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          DB4-ARInvoicesMemos . On the  Results Grid  tab, look for the row that                     corresponds to the  Post Period  column, and make note of                     the value in the  Data Field  column. On the  Parameters  tab, click  Add                         Row  on the table toolbar, and specify the following settings in                     the added row: Name :  PeriodFrom Schema Field :  ARInvoice.FinPeriodID Display Name :  Period                             From From Schema : Selected Default Value :                              01-2018 Again click  Add Row  on the table toolbar, and specify the                     following settings in the added row: Name :  PeriodTo Schema Field :  ARInvoice.FinPeriodID Display Name :  Period                             To From Schema : Selected Default Value :                              02-2019 On the form toolbar, click  Save . Step 2: Adding a Condition for the Parameters To modify the generic inquiry by adding a condition, do the following: While you are still viewing the  DB4-ARInvoicesMemos  inquiry, on the                          Conditions  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, click  Add                         Row  on the table toolbar, and specify the following settings in                     the added row: Data Field :  ARInvoice.FinPeriodID Condition :  Is Between From Schema : Cleared Value 1 :  [PeriodFrom] Value 2 :  [PeriodTo] On the form toolbar, click  Save . Click the eye icon on the side panel to preview how your changes have affected                     the inquiry. The system has added the boxes corresponding to the parameters to                     the Selection area (see the following screenshot). You can specify a range of                     financial periods and view only the invoices and memos within the range of                     specified financial periods. Generic inquiry with parameters that define a range Self-Test Exercise Now that you have learned about conditions and parameters, you should change the                 condition for the inquiry you have developed in this activity, so that the inquiry                 will return records if a user has cleared either box or both boxes in the Selection                 area. On the  Conditions  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you need to split the                 added condition into two complex conditions, one for each parameter. In the complex                 condition, you should use the  OR  operator and the  Is Empty                  condition. ]]></column>
		</row>
		<row PageID="15a8dc6b-4410-4eca-8e52-48dec6d41d66" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="90b748fe-2a70-058d-6384-91ba83164578" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to give users the ability to limit the data displayed by a value of some data field. To give users the ability to select that value, you will include a parameter for this data field in the Selection area of the inquiry form.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has requested an inquiry that displays data about invoices and memos. You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant wants to give users the ability to filter the inquiry results by a particular customer—that is, users should be able to select a particular customer in the Selection area of the resulting generic inquiry form and review only that customer’s invoices and memos.{br}

In the system preparation for this activity, you will copy the predefined inquiry to leave the original inquiry intact; you will modify its copy as requested.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form for the copied inquiry, you will look for the row that corresponds to the '''Customer''' column of the inquiry and note the value in the '''Data Field''' column. You will add the ''Customer'' parameter on the '''Parameters''' tab. Then you will specify how the system should apply the value of the parameter to the inquiry output by adding a condition on the '''Conditions''' tab. [anchor|#_9e2ecfea-e69f-4b67-962b-10497621c08b]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_1d29b177-61b4-43f2-858c-ec631c206f03]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to modify a generic inquiry.
)))

==Step 1: Adding a Parameter==
To modify the generic inquiry to add a parameter, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB5-ARInvoicesMemos''.
#On the '''Results Grid''' tab, look for the row that corresponds to the '''Customer''' column, and note the value in the '''Data Field''' column.
#On the '''Parameters''' tab, click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Name''': <tt>Customer</tt>
#*'''Schema Field''': ''ARInvoice.CustomerID''
#* '''Display Name''': <tt>Customer</tt>
#*'''From Schema''': Selected
#On the form toolbar, click '''Save'''.

==Step 2: Adding a Condition for the Parameter==
To modify the generic inquiry by adding a condition, do the following:[anchor|#_d31989dc-1154-44b0-92d0-82fea1633173]
#While you are still viewing the ''DB5-ARInvoicesMemos'' inquiry, on the '''Conditions''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Brackets''': ''(''
#* '''Data Field''': ''ARInvoice.CustomerID''
#* '''Condition''': ''Equals''
#* '''From Schema''': Cleared
#*'''Value 1''': ''&#91;Customer&#93;''
#* '''Operator''': ''Or''
#Again click '''Add Row''' on the table toolbar, and specify the following settings in the added row:
#*'''Data Field''': ''&#91;Customer&#93;''
#* '''Condition''': ''Is Empty''
#* '''From Schema''': Cleared
#*'''Brackets''': '')''
#On the form toolbar, click '''Save'''.
#Click the eye icon on the side panel to preview how your changes have affected the inquiry form. The system adds the box corresponding to the parameter to the Selection area (see the following screenshot). You can select a particular customer account and view only invoices and memos for the customer, or you can leave the box empty.
[anchor|#_8d2f0f69-b25c-4136-8cb0-24af27d54db2][anchor|#_e48b88c8-343e-465b-abde-a994ee99f80e][image:UserGuide/Images/GI_Conditions_and_Parameters_GS_with_GI_Field_Parameter_Area.png|popup|Generic inquiry with a box that filters data by customer|450px]]]></column>
			<column name="PlainText"><![CDATA[Using Conditions and Parameters: To Add a Field Parameter to the Selection Area In this activity, you will learn how to modify an existing generic inquiry to give                 users the ability to limit the data displayed by a value of some data field. To give                 users the ability to select that value, you will include a parameter for this data                 field in the Selection area of the inquiry form. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has requested an inquiry that                 displays data about invoices and memos. You have offered the predefined Invoices and                 Memos (AR3010PL) generic inquiry form, which has the  AR-Invoices and Memos                  inquiry title and the  Invoices and Memos  site map title specified on the                       ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but the accountant                 wants to give users the ability to filter the inquiry results by a particular                 customer—that is, users should be able to select a particular customer in the                 Selection area of the resulting generic inquiry form and review only that customer’s                 invoices and memos. In the system preparation for this activity, you will copy the predefined inquiry to                 leave the original inquiry intact; you will modify its copy as requested. The Invoices and Memos (AR3010PL) generic inquiry form, which is the                 list of the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview On the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form for the copied inquiry,                 you will look for the row that corresponds to the  Customer                  column of the inquiry and note the value in the  Data Field                  column. You will add the  Customer  parameter on the                      Parameters  tab. Then you will specify how the system                 should apply the value of the parameter to the inquiry output by adding a condition                 on the  Conditions  tab.  System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to modify a generic                     inquiry. Step 1: Adding a Parameter To modify the generic inquiry to add a parameter, do the following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area,                      select                          DB5-ARInvoicesMemos . On the  Results Grid  tab, look for the row that                     corresponds to the  Customer  column, and note the value in                     the  Data Field  column. On the  Parameters  tab, click  Add                         Row  on the table toolbar, and specify the following settings in                     the added row: Name :  Customer Schema Field :  ARInvoice.CustomerID Display Name :                              Customer From Schema : Selected On the form toolbar, click  Save . Step 2: Adding a Condition for the Parameter To modify the generic inquiry by adding a condition, do the following: While you are still viewing the  DB5-ARInvoicesMemos  inquiry, on the                          Conditions  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, click  Add                         Row  on the table toolbar, and specify the following settings in                     the added row: Brackets :  ( Data Field :  ARInvoice.CustomerID Condition :  Equals From Schema : Cleared Value 1 :  [Customer] Operator :  Or Again click  Add Row  on the table toolbar, and specify the                     following settings in the added row: Data Field :  [Customer] Condition :  Is Empty From Schema : Cleared Brackets :  ) On the form toolbar, click  Save . Click the eye icon on the side panel to preview how your changes have affected                     the inquiry form. The system adds the box corresponding to the parameter to the                     Selection area (see the following screenshot). You can select a particular                     customer account and view only invoices and memos for the customer, or you can                     leave the box empty. Generic inquiry with a box that filters data by customer ]]></column>
		</row>
		<row PageID="2bf8b3e6-dc68-46fc-a124-14f00fc7f7df" Language="en-US" PageRevisionID="1" Content="&#xA;You can use formulas to perform different operations with the values in columns on the results grid of a generic inquiry you are developing or modifying. Formulas give you the ability to use advanced calculations and data transformation functions if some values in the inquiry rows are calculated or are dependent on the data in other data fields.{br}&#xA;&#xA;In the topics of this chapter, you will learn how to use formulas when designing a generic inquiry." PlainText="Using Formulas You can use formulas to perform different operations with the values in columns on the results     grid of a generic inquiry you are developing or modifying. Formulas give you the ability to use     advanced calculations and data transformation functions if some values in the inquiry rows are     calculated or are dependent on the data in other data fields. In the topics of this chapter, you will learn how to use formulas when designing a generic     inquiry. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="4cd1abf6-9e87-1c49-15d9-87eb9ed1bc96" RecordSourceID="22377" />
		<row PageID="83d3edbc-ebf1-4cc2-8b96-0671c4530cb8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3105103e-419f-2276-cae3-12c2201c8cef" RecordSourceID="22377">
			<column name="Content"><![CDATA[
When you are developing or modifying generic inquiries in Acumatica ERP, you can use formulas to perform different operations with the values in the columns in the results grid, for greater flexibility to present the information users need. To do this, you can type formulas manually into certain boxes, or you can use the Formula Editor dialog box to construct or edit these formulas. The formulas used are similar to the formulas used in Excel. You can define parameters and construct a formula by using operators and functions. {br}{TOC}
==Learning Objectives==
In this part, you will learn how to modify an existing generic inquiry by using formulas.
==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, including developing and modifying generic inquiries to give users information they need to do their jobs. In some situations, you may want to perform calculations on values before presenting them or transform the data in some way.
==Usage of the Formula Editor Dialog Box==
You can use formulas on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form to do the following:[anchor|#_1bcc45c1-7464-476c-8170-4d1760b792e8]
*Define the content of columns and style of rows and cells in the inquiry results—that is, the data displayed in the table (results grid) of the generic inquiry form. In this case, you can invoke the Formula Editor dialog box on the '''Results Grid''' tab in a cell in the '''Data Field''' column, in a cell in the '''Style''' column, and in the '''Row Style''' box.
*Define conditions for the data that should be included in the inquiry results. In this case, on the '''Conditions''' tab, you can invoke the Formula Editor dialog box in a cell in the '''Value 1''' or '''Value 2''' column.
*Group data in the inquiry results. In this case, on the '''Grouping''' tab, you can invoke the Formula Editor dialog box in a cell in the '''Data Field''' column.
*Define a sort order for data in the inquiry results. In this case, on the '''Sort Order''' tab, you invoke the Formula Editor dialog box in a cell in the '''Data Field''' column.
*Define navigation to Acumatica ERP forms in generic inquiries. In this case, on the '''Navigation''' tab, you can invoke the Formula Editor dialog box in a cell in the '''Parameter''' column.

On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, each row represents a column in the resulting inquiry form. To use the Formula Editor dialog box (shown in the following screenshot) to specify a formula that determines the value in a column of the resulting inquiry form, you click in the '''Data Field''' column of the row that represents the column and then click the Edit button. [anchor|#_09961d06-4302-4f85-b01b-8cc3448195b5][anchor|#_25b1de84-914f-4d3e-8c73-f1ee655efa36][image:UserGuide/Images/GI_Using_Formulas_GS_with_GI_Formula_Editor.png|popup|The Formula Editor components|450px]
The Formula Editor dialog box includes the following panes:[anchor|#_74978e8e-7fb6-451c-9521-db6c36f2c93f]
*Component Type (upper left): Displays the types of operators, functions, and fields that can be used as formula components. You click any of the types to display the corresponding list of available components in the Component Selection pane.
*Component Selection (upper right): For the component type selected in the Component Types pane, displays the list of available components. You click a component to add it to the formula at the bottom of the dialog box. You can search for the needed component by using the Search box at the top of the Component Selection pane.
*Formula Text (bottom): Contains the text of the formula, which you can edit manually. The formula may include the selected components, arguments of the manually inserted components, and other elements, all arranged in accordance with the syntax of the formula.

You can enter the formula directly in the Formula Text pane or compose it by selecting fields and using operators and functions. 
==Use of Formulas to Highlight Rows and Columns==
By using the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you can use formulas to specify the display style of a row or a particular cell in the inquiry results by invoking the Formula Editor as follows: [anchor|#ul_ex5_pbx_5mb]
*In the '''Row Style''' box to affect the display style of a row based on the value in a particular column of a row
*In the '''Style''' column of the row with the data field that holds the value to affect the display style of only a cell based on the value in a particular column of a row

For example, suppose that you have an inquiry that lists open cases and shows the priority of each case in the '''Priority''' column, and that you would like to highlight with red the entire rows that display cases with a high priority. On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you invoke the Formula Editor in the '''Row Style''' box. You use the <tt>IIf</tt> function for this purpose and compose the following formula: <tt>=IIf(&#91;CRCase.Priority&#93;=&rsquo;H&rsquo;, &rsquo;red&rsquo;, &rsquo;default&rsquo;)</tt>. The system reads the formula as follows: If the value in the '''Priority''' column equals ''H'', then highlight it with red; otherwise, use the default style (which is predefined and has no highlighting).{br}

If you would like to use red highlighting for only the cell in the '''Priority''' column for a case with high priority, you add the formula to the '''Style''' column for the row with the data field that holds the value of the case priority.{br}

When you invoke the Formula Editor in the '''Row Style''' box or in the '''Style''' column of the''' Results Grid''' tab, the system displays the '''Styles''' component type in the Component Type pane of the Formula Editor. The Component Selection pane lists the available styles from this component type, as shown in the following screenshot.[anchor|#_b68110c2-50c3-4a08-95e4-6d0bf1b969e8][anchor|#_a24d3c13-cc41-4555-a5e4-30b9f3d27e6c][image:UserGuide/Images/GI_Using_Formulas_GS_with_GI_Formula_Editor_Styles.png|popup|The Styles component type|450px]
==Usage of Formulas for String Values==
You can use formulas for text strings—for example, to change uppercase to lowercase, to select a part of a string, to replace a string value with a new one, or to concatenate multiple strings. When you select the text category, you can find all the available functions listed in the Formula Editor.((({S:Hint}When you construct a formula in the '''Data Field''' box of any row, it does not matter what value is specified in the '''Object''' box in the same row.
)))
Some operations with strings depend on the database management system that you use with Acumatica ERP—MS SQL or MySQL. For example, suppose that in a column, you would like to see a value that is a combination of the sales order identifier and its description, separated by a space. If you are using MySQL, in the '''Data Field''' box of the corresponding row, you construct the following formula: <tt>= Concat(&#91;SOOrder.OrderNbr&#93;, &rsquo; &rsquo;, &#91;SOOrder.OrderDescr&#93;)</tt>. To perform the same operation in MS SQL, in the '''Data Field''' box of the corresponding row, you can use the same''Concat() '' function (the same manner as in MySQL), or you can type an expression in which strings are connected by a plus sign, as follows: <tt>= &#91;SOOrder.OrderNbr&#93; + &rsquo; &rsquo; + &#91;SOOrder.OrderDescr&#93;</tt>. The formulas that you construct in the Formula Editor are valid for both database management systems.]]></column>
			<column name="PlainText"><![CDATA[Using Formulas: General Information When you are developing or modifying generic inquiries in  Acumatica ERP, you can use formulas to perform different operations with the values in the columns in         the results grid, for greater flexibility to present the information users need. To do this,         you can type formulas manually into certain boxes, or you can use the Formula Editor dialog         box to construct or edit these formulas. The formulas used are similar to the formulas used         in Excel. You can define parameters and construct a formula by using operators and         functions.  Learning Objectives In this part, you will learn how to modify an existing generic inquiry by using         formulas. Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company, including developing and modifying generic inquiries to give users         information they need to do their jobs. In some situations, you may want to perform         calculations on values before presenting them or transform the data in some way. Usage of the Formula Editor Dialog Box You can use formulas on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form to         do the following: Define the content of columns and style of rows and cells in the            inquiry           results —that is, the data displayed in           the table (results grid) of the generic inquiry form. In this case, you can invoke the           Formula Editor dialog box on the  Results Grid  tab in a cell in the              Data Field  column, in a cell in the  Style            column, and in the  Row Style  box. Define conditions for the data that should be included in the inquiry results. In this           case, on the  Conditions  tab, you can  invoke the Formula Editor           dialog box in a cell in the  Value 1  or  Value             2  column. Group data in the inquiry results. In this case, on the  Grouping            tab, you can invoke the Formula Editor dialog box in a cell in the  Data             Field  column. Define a sort order for data in the inquiry results. In this case, on the              Sort Order  tab, you invoke the Formula Editor dialog box in a           cell in the  Data Field  column. Define navigation to  Acumatica ERP forms in generic inquiries. In this case, on the  Navigation  tab,           you can invoke the Formula Editor dialog box in a cell in the              Parameter  column. On the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form, each row represents a column in the resulting         inquiry form. To use the Formula Editor dialog box (shown in the following screenshot) to         specify a formula that determines the value in a column of the resulting inquiry form, you         click in the  Data Field  column of the row that represents the column         and then click the Edit button.  The Formula Editor components The Formula Editor dialog box includes the following panes: Component Type (upper left): Displays the types of operators, functions, and fields that           can be used as formula components. You click any of the types to display the corresponding           list of available components in the Component Selection pane. Component Selection (upper right): For the component type selected in the Component           Types pane, displays the list of available components. You click a component to add it to           the formula at the bottom of the dialog box. You can search for the needed component by           using the Search box at the top of the Component Selection pane. Formula Text (bottom): Contains the text of the formula, which you can edit manually.           The formula may include the selected components, arguments of the manually inserted           components, and other elements, all arranged in accordance with the syntax of the           formula. You can enter the formula directly in the         F ormula         Text pane  or compose it by selecting fields         and using operators and functions.  Use          of Formulas to          Highlight         Rows and Columns By using the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you can use formulas to specify         the display style of a row or a particular cell in the inquiry results by invoking the         Formula Editor as follows:  In the  Row Style  box to affect the display style of a row based             on the value in a particular column of a row In the  Style  column of the row with the data field that holds             the value to affect the display style of only a cell based on the value in a particular             column of a row For example, suppose that you have an inquiry that lists open cases and shows the priority         of each case in the  Priority  column, and that you would like to         highlight with red the entire rows that display cases with a high priority. On the            Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you invoke the Formula Editor in the  Row Style          box. You use the  IIf  function for this purpose and compose the following         formula:  =IIf([CRCase.Priority]='H', 'red', 'default') . The system reads         the formula as follows: If the value in the  Priority  column equals            H , then highlight it with red; otherwise, use the default style (which is         predefined and has no highlighting). If you would like to use red highlighting for only the cell in the            Priority  column for a case with high priority, you add the formula         to the  Style  column for the row with the data field that holds the         value of the case priority. When you invoke the Formula Editor in the  Row Style  box or in the            Style  column of the  Results Grid  tab, the         system displays the  Styles  component type in the Component Type pane         of the Formula Editor. The Component Selection pane lists the available styles from this         component type, as shown in the following screenshot. The Styles component type Usage of Formulas for String Values You can use formulas for text strings—for example, to change uppercase to lowercase,         to select a part of a string, to replace a string value with a new one, or to concatenate         multiple strings. When you select the text category, you can find all the available         functions listed in the Formula Editor. When you construct a formula in the  Data Field  box of         any row, it does not matter what value is specified in the  Object  box         in the same row. Some operations with strings depend on the database management system that you use with  Acumatica ERP—MS SQL or MySQL. For example, suppose that in a column, you would like to see a         value that is a combination of the sales order identifier and its description, separated by         a space. If you are using MySQL, in the  Data Field  box of the         corresponding row, you construct the following formula:  =           Concat([SOOrder.OrderNbr], ' ', [SOOrder.OrderDescr]) . To perform the same         operation in MS SQL, in the  Data Field  box of the corresponding row,         you can use the same Concat()   function (the same manner as in MySQL), or you can type         an expression in which strings are connected by a plus sign, as follows:  =           [SOOrder.OrderNbr] + ' ' + [SOOrder.OrderDescr] . The formulas that you         construct in the Formula Editor are valid for both database management systems. ]]></column>
		</row>
		<row PageID="19efa0ca-f6d5-4500-a598-fef5f4dd9a82" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="fa9d2135-55c4-f940-2f57-764d300b136a" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to highlight all rows in the results grid that meet a condition.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has requested an inquiry form that displays data about invoices and memos. You offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant has asked you to develop a similar generic inquiry form in which you highlight with yellow the rows of documents whose balance exceeds $1000.{br}

In the system preparation for this activity, you will copy the predefined generic inquiry to leave the original inquiry intact; you will modify its copy as you complete this activity. ((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
In this activity, on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you will look for the row that corresponds to the '''Balance''' column of the copied generic inquiry form and note the value in the '''Data Field''' column for the row. You will add the formula in the '''Row Style''' box in the table toolbar of the tab by using the Formula Editor dialog box.{br}

In this activity, you will refer to a copy of the ''AR-Invoices and Memos'' generic inquiry that was created while completing the [HelpRoot_ReportingTools\GI_Coping_Predefined_Inquiry_To_Copy_Existing_GI_Activity|Copying a Predefined Inquiry: To Copy an Existing Generic Inquiry] activity.[anchor|#_400b49d5-842e-4bd6-9909-b51e7d7a009d]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_810e9e3a-c433-4515-95fa-ba5529f87677]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to modify a generic inquiry.
)))

==Step 1: Invoking the Formula Editor Dialog Box==
To invoke the Formula Editor dialog box in order to modify the generic inquiry to add a style formula for certain rows, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB6-ARInvoicesMemos''.
#On the '''Results Grid''' tab, look for the row that corresponds to the '''Balance''' column, and note the value in the '''Data Field''' column (''CuryDocBal''). Make sure that the '''Visible''' check box is selected for the row.
#:((({S:Hint}If the '''Visible''' check box is cleared for a row, the corresponding column is not visible initially on the resulting inquiry form, but users can make it visible as needed by using the '''Column Configuration''' dialog box of the table.
)))
#In the '''Row Style''' box, click the Edit button to invoke the Formula Editor dialog box.

==Step 2: Adding a Formula to Highlight Rows==
On the table toolbar of the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form working with the ''DB6-ARInvoicesMemos'' generic inquiry, you invoked the Formula Editor dialog box for the '''Row Style''' box. While you are still in the Formula Editor dialog box, do the following:[anchor|#_66ef467e-a4b7-4269-84b2-845348e7e954]
#In the Component Type (upper left) pane of the dialog box, click '''Functions''' > '''Other'''. The system displays the list of available functions in the Component Selection (upper right) pane of the dialog box.
#In the Component Selection pane, double-click the ''IIf( expr, truePart, falsePart )'' function. The system copies it to the Formula Text (bottom) pane, where you can edit the formula.
#In the Formula Text pane, replace the ''expr'' parameter in the copied expression with the data field that holds the document balance as follows: 
##In the Component Type pane, click '''Fields'''.
##In the Formula Text pane, select only the ''expr'' string in the copied expression.
##In the search box in the top right of the dialog box, start typing the data field name you noted—''CuryDocBal''—and in the search results in the Component Selection pane, double-click ''&#91;ARInvoice.CuryDocBal&#93;''. (When you are indicating a data field in a formula, the DAC name precedes the data field name, and this complex name is enclosed in brackets.)
##:In the Formula Text pane, notice that the system has replaced the ''expr'' string with the selected data field name.
##After the field name, type <tt>&gt; 1000</tt> to specify a condition for the field value exceeding $1000.
#In the Formula Text pane, replace the ''truePart'' parameter in the copied expression with the requested color as follows:
##In the Component Type pane, click '''Styles'''.
##In the Formula Text pane, select only the ''truePart'' string in the copied expression.
##In the Component Selection pane, double-click the ''&rsquo;yellow&rsquo;'' value. 
##:Notice that the system has replaced the ''truePart'' string with the selected value.
#In the Formula Text pane, replace the ''falsePart'' parameter in the copied expression with the default color as follows:
##In the Component Type pane, click '''Styles'''.
##In the Formula Text pane, select only the ''falsePart'' string in the copied expression.
##In the Component Selection pane, double-click the ''&rsquo;default&rsquo;'' value. 
##:Notice that the system has replaced the ''falsePart'' string with the selected value.
#:The resulting formula should look as follows: ''IIf( &#91;ARInvoice.CuryDocBal&#93;&gt;1000, &rsquo;yellow&rsquo;, &rsquo;default&rsquo; )''. That is, highlight with yellow if the value of''ARInvoice.CuryDocBal '' is more than 1000, and highlight with the default color if the value is less than 1000.
#Click '''OK''' to save your changes and close the Formula Editor dialog box.
#On the form toolbar, click '''Save'''.
#Click the eye icon on the side panel to preview how your changes have affected the inquiry. The system applies the row style you have added, so that the resulting generic inquiry highlights with yellow the rows with documents whose balance exceeds $1000 (see the following screenshot).
[anchor|#_f1adc9d1-aedc-4d81-9d10-67c79599400e][anchor|#_8b15980e-2d8c-4080-9a4a-f0862d081e85][image:UserGuide/Images/GI_Using_Formulas_GS_with_GI_Highlight_Row.png|popup|The inquiry with the highlighted rows|450px]
==Self-Test Exercise==
Now that you learned how to highlight rows of a generic inquiry form, try to apply this knowledge and highlight only cells that contain values exceeding $1000 in the '''Balance''' column of the inquiry.((({S:Hint}On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you specify the formula in the '''Style''' column for the row with the ''CuryDocBal'' value in the '''Data Field''' column.
)))]]></column>
			<column name="PlainText"><![CDATA[Using Formulas: To Highlight Row with Color In this activity, you will learn how to modify an existing generic inquiry to                 highlight all rows in the results grid that meet a condition. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has requested an inquiry form that                 displays data about invoices and memos. You offered the predefined Invoices and                 Memos (AR3010PL) generic inquiry form, which has the  AR-Invoices and Memos                  inquiry title and the  Invoices and Memos  site map title specified on the                       ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but the accountant                 has asked you to develop a similar generic inquiry form in which you highlight with                 yellow the rows of documents whose balance exceeds $1000. In the system preparation for this activity, you will copy the predefined generic                 inquiry to leave the original inquiry intact; you will modify its copy as you                 complete this activity.  The Invoices and Memos (AR3010PL) generic                     inquiry form, which is the list of the invoices and memos that have been created                     on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the                     substitute form that is opened when you click the  Invoices and Memos  link                     in a workspace or a list of search results. Process Overview In this activity, on the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you will look for the                 row that corresponds to the  Balance  column of the copied                 generic inquiry form and note the value in the  Data Field                  column for the row. You will add the formula in the  Row Style                  box in the table toolbar of the tab by using the Formula Editor dialog box. In this activity, you will refer to a copy of the  AR-Invoices and Memos                  generic inquiry that was created while completing the  Copying a Predefined Inquiry: To Copy an Existing Generic Inquiry activity. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to modify a generic                     inquiry. Step 1: Invoking the Formula Editor Dialog Box To invoke the Formula Editor dialog box in order to modify the generic inquiry to add                 a style formula for certain rows, do the following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          DB6-ARInvoicesMemos . On the  Results Grid  tab, look for the row that                     corresponds to the  Balance  column, and note the value in                     the  Data Field  column ( CuryDocBal ). Make sure that                     the  Visible  check box is selected for the row. If the  Visible  check box is cleared for a                         row, the corresponding column is not visible initially on the resulting                         inquiry form, but users can make it visible as needed by using the                              Column Configuration  dialog box of the                         table. In the  Row Style  box, click the Edit button to invoke the                     Formula Editor dialog box. Step 2: Adding a Formula to Highlight Rows On the table toolbar of the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form working with the                      DB6-ARInvoicesMemos  generic inquiry, you invoked the Formula Editor                 dialog box for the  Row Style  box. While you are still in the                 Formula Editor dialog box, do the following: In the Component Type (upper left) pane of the dialog box, click  Functions Other . The system displays the list of available functions in the                     Component Selection (upper right) pane of the dialog box. In the Component Selection pane, double-click the  IIf( expr, truePart,                         falsePart )  function. The system copies it to the Formula Text (bottom)                     pane, where you can edit the formula. In the Formula Text pane, replace the  expr  parameter in the copied                     expression with the data field that holds the document balance as follows:  In the Component Type pane, click  Fields . In the Formula Text pane, select only the  expr  string in the                             copied expression. In the search box in the top right of the dialog box, start typing the                             data field name you noted— CuryDocBal —and in the                             search results in the Component Selection pane, double-click                                  [ARInvoice.CuryDocBal] . (When you are indicating a data field                             in a formula, the DAC name precedes the data field name, and this                             complex name is enclosed in brackets.) In the Formula Text pane,                                 notice that the system has replaced the  expr  string with the                                 selected data field name. After the field name, type  > 1000  to specify a                             condition for the field value exceeding $1000. In the Formula Text pane, replace the  truePart  parameter in the copied                     expression with the requested color as follows: In the Component Type pane, click  Styles . In the Formula Text pane, select only the  truePart  string in the                             copied expression. In the Component Selection pane, double-click the  'yellow'  value.                                  Notice that the system has replaced the  truePart  string                                 with the selected value. In the Formula Text pane, replace the  falsePart  parameter in the copied                     expression with the default color as follows: In the Component Type pane, click  Styles . In the Formula Text pane, select only the  falsePart  string in the                             copied expression. In the Component Selection pane, double-click the  'default'                              value.  Notice that the system has replaced the  falsePart                                  string with the selected value. The resulting formula should look as follows:  IIf(                             [ARInvoice.CuryDocBal]>1000, 'yellow', 'default' ) . That is,                         highlight with yellow if the value of ARInvoice.CuryDocBal   is more                         than 1000, and highlight with the default color if the value is less than                         1000. Click  OK  to save your changes and close the Formula                     Editor dialog box. On the form toolbar, click  Save . Click the eye icon on the side panel to preview how your changes have affected                     the inquiry. The system applies the row style you have added, so that the                     resulting generic inquiry highlights with yellow the rows with documents whose                     balance exceeds $1000 (see the following screenshot). The inquiry with the highlighted rows Self-Test Exercise Now that you learned how to highlight rows of a generic inquiry form, try to apply                 this knowledge and highlight only cells that contain values exceeding $1000 in the                      Balance  column of the inquiry. On the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you specify the formula                 in the  Style  column for the row with the  CuryDocBal                  value in the  Data Field  column. ]]></column>
		</row>
		<row PageID="de99da1f-4517-45dd-85cf-b2d5f5dbd790" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="47b857ce-5a18-99aa-fd4d-1910adaa969e" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to concatenate string values.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. The sales team of your company has requested that on the Sales Orders (SO3010PL) generic inquiry form, which has the ''SO-SalesOrder'' inquiry title and the ''Sales Orders'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you add each sales order’s description after its number in the '''Order Nbr.''' column, whose name (caption) should be changed to '''Order Number and Description'''. The column should contain this information in the following format: &lt;order number&gt;––&lt;order description&gt;.{br}

In the system preparation for this activity, you will copy the predefined generic inquiry to leave the original inquiry intact; you will modify its copy as you complete this activity. ((({S:Hint}The Sales Orders (SO3010PL) inquiry form, which is the list of the sales orders that have been created on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form, is the substitute form that is opened when you click the ''Sales Orders'' link in a workspace or a list of search results.
)))
==Process Overview==
In this activity, on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you will look for the row that corresponds to the '''Order Nbr.''' column of the copied generic inquiry form. In this row, you will invoke the Formula Editor dialog box in the '''Data Field''' column and add a formula that corresponds to the requested format.{br}

In the activity, you will use a copy of the <tt>SO-SalesOrder</tt> generic inquiry that you can create by following the instructions in the [HelpRoot_ReportingTools\GI_Coping_Predefined_Inquiry_To_Copy_Existing_GI_Activity|Copying a Predefined Inquiry: To Copy an Existing Generic Inquiry] activity.
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_e5a88d9d-f3eb-4ea9-9977-46523d0e1427]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*User name: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Invoking the Formula Editor Dialog Box==
To invoke the Formula Editor dialog box in order to add a formula for a row, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB1-SalesOrder''.
#On the '''Results Grid''' tab, in the '''Data Field''' column, look for the row that corresponds to the order number; it contains the ''OrderNbr'' value. Make sure the '''Visible''' check box is selected for the row.
#:((({S:Hint}If the '''Visible''' check box is cleared for a row, the corresponding column is not visible initially on the resulting inquiry form, but users can make it visible as needed by using the '''Column Configuration''' dialog box of the table.
)))
#Click the cell that contains'' OrderNbr'' in the '''Data Field''' column until you see the Edit button, and then click the button to invoke the Formula Editor dialog box.

==Step 2: Adding a Formula for String Values==
While working with the ''DB1-SalesOrder'' generic inquiry on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you invoked the Formula Editor dialog box for the cell with ''OrderNbr'' in the '''Data Field''' column. While you are still in the Formula Editor dialog box, do the following:[anchor|#_66ef467e-a4b7-4269-84b2-845348e7e954]
#In the Component Type (upper left) pane of the dialog box, click '''Functions''' > '''Text'''. The system displays the list of available functions in the Component Selection (upper right) pane of the dialog box.
#In the Component Selection pane, double-click the ''Concat( str1, str2, ... )'' function. The system copies it to the Formula Text (bottom) pane, where you can edit the formula.
#In the Formula Text pane, replace the ''str1'' parameter in the copied function with the data field that holds the order number as follows: 
##In the Component Type pane, click '''Fields'''.
##In the Formula Text pane, select only the ''str1'' string in the copied expression.
##In the search box in the top right of the dialog box, start typing the data field name you noted—''OrderNbr''—and in the search results in the Component Selection pane, double-click ''&#91;SOOrder.OrderNbr&#93;''.
##:In the Formula Text pane, notice that the system has replaced the ''str1'' string with the selected data field name. (When you are indicating a data field in a formula, the DAC name precedes the field name, and this complex name is enclosed in brackets.)
##After the field name and the comma, type <tt>&rsquo;--&rsquo;</tt> to separate the values of two fields.
#By using actions similar to those in the previous instruction, replace the''str2 '' parameter in the function with the ''OrderDescr'' field name.
#:Notice that the system has replaced the ''str2'' with the selected data field name.
#Delete the dots after the second parameter of the function.
#:The resulting formula should look as follows: ''Concat( &#91;SOOrder.OrderNbr&#93;, &rsquo; - &rsquo;, &#91;SOOrder.OrderDesc&#93; )''. That is, in the '''Order Number''' column, display the concatenated string of the two strings retrieved from the ''OrderNbr'' and ''OrderDescr'' data fields.
#In the bottom of the dialog box, click '''Validate''' to validate the function that you have constructed. Correct mistakes, if there are any.
#Click '''OK''' to save your changes and close the Formula Editor dialog box.
#On the '''Results Grid''' tab, in the same row with the inserted formula, in the '''Caption''' column, type the new caption as follows: <tt>Order number and description</tt>.
#On the form toolbar, click '''Save'''.
#Click the eye icon on the side panel to preview how your changes have affected the inquiry. The system applies the changes you have made, so that the resulting generic inquiry displays the order number and order description in the same column (see the following screenshot).
[anchor|#_f1adc9d1-aedc-4d81-9d10-67c79599400e][anchor|#_8b15980e-2d8c-4080-9a4a-f0862d081e85][image:UserGuide/Images/GI_Formulas_SOrders.png|popup|Inquiry results with the concatenated strings|450px]]]></column>
			<column name="PlainText"><![CDATA[Using Formulas: To Concatenate Strings In this activity, you will learn how to modify an existing generic inquiry to                 concatenate string values. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. The sales team of your company has requested that on the Sales                 Orders (SO3010PL) generic inquiry form, which has the  SO-SalesOrder  inquiry                 title and the  Sales Orders  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you add each sales                 order’s description after its number in the  Order Nbr.                  column, whose name (caption) should be changed to  Order Number and                     Description . The column should contain this information in the                 following format: <order number>––<order description>. In the system preparation for this activity, you will copy the predefined generic                 inquiry to leave the original inquiry intact; you will modify its copy as you                 complete this activity.  The Sales Orders (SO3010PL) inquiry form, which is the list of the                 sales orders that have been created on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form, is the substitute form                 that is opened when you click the  Sales Orders  link in a workspace or a list                 of search results. Process Overview In this activity, on the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you will look for the                 row that corresponds to the  Order Nbr.  column of the copied                 generic inquiry form. In this row, you will invoke the Formula Editor dialog box in                 the  Data Field  column and add a formula that corresponds to                 the requested format. In the activity, you will use a copy of the  SO-SalesOrder  generic                 inquiry that you can create by following the instructions in the  Copying a Predefined Inquiry: To Copy an Existing Generic Inquiry activity. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  User name:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Invoking the Formula Editor Dialog Box To invoke the Formula Editor dialog box in order to add a formula for a row, do the                 following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          DB1-SalesOrder . On the  Results Grid  tab, in the  Data                         Field  column, look for the row that corresponds to the order                     number; it contains the  OrderNbr  value. Make sure the                          Visible  check box is selected for the row. If the  Visible  check box is cleared for a                         row, the corresponding column is not visible initially on the resulting                         inquiry form, but users can make it visible as needed by using the                              Column Configuration  dialog box of the                         table. Click the cell that contains  OrderNbr  in the  Data                         Field  column until you see the Edit button, and then click the                     button to invoke the Formula Editor dialog box. Step 2: Adding a Formula for String Values While working with the  DB1-SalesOrder  generic inquiry on the                      Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you invoked the Formula                 Editor dialog box for the cell with  OrderNbr  in the  Data                     Field  column. While you are still in the Formula Editor dialog box,                 do the following: In the Component Type (upper left) pane of the dialog box, click  Functions Text . The system displays the list of available functions in the                     Component Selection (upper right) pane of the dialog box. In the Component Selection pane, double-click the  Concat( str1, str2, ...                         )  function. The system copies it to the Formula Text (bottom) pane,                     where you can edit the formula. In the Formula Text pane, replace the  str1  parameter in the copied                     function with the data field that holds the order number as follows:  In the Component Type pane, click  Fields . In the Formula Text pane, select only the  str1  string in the                             copied expression. In the search box in the top right of the dialog box, start typing the                             data field name you noted— OrderNbr —and in the search                             results in the Component Selection pane, double-click                                  [SOOrder.OrderNbr] . In the Formula Text pane, notice that                                 the system has replaced the  str1  string with the selected                                 data field name. (When you are indicating a data field in a formula,                                 the DAC name precedes the field name, and this complex name is                                 enclosed in brackets.) After the field name and the comma, type  '--'  to                             separate the values of two fields. By using actions similar to those in the previous instruction, replace                         the str2   parameter in the function with the  OrderDescr  field                         name. Notice that the system has replaced the  str2  with the                         selected data field name. Delete the dots after the second parameter of the function. The resulting                         formula should look as follows:  Concat( [SOOrder.OrderNbr], ' - ',                             [SOOrder.OrderDesc] ) . That is, in the  Order                             Number  column, display the concatenated string of the two                         strings retrieved from the  OrderNbr  and  OrderDescr  data                         fields. In the bottom of the dialog box, click  Validate  to                     validate the function that you have constructed. Correct mistakes, if there are                     any. Click  OK  to save your changes and close the Formula                     Editor dialog box. On the  Results Grid  tab, in the same row with the                     inserted formula, in the  Caption  column, type the new                     caption as follows:  Order number and description . On the form toolbar, click  Save . Click the eye icon on the side panel to preview how your changes have affected                     the inquiry. The system applies the changes you have made, so that the resulting                     generic inquiry displays the order number and order description in the same                     column (see the following screenshot). Inquiry results with the concatenated strings ]]></column>
		</row>
		<row PageID="48a469d4-3004-453b-a8b9-861dfb2a418a" Language="en-US" PageRevisionID="1" Content="&#xA;You can enable navigation from a generic inquiry form to other Acumatica ERP forms. You can define the values in particular columns of the inquiry form as links to forms where the related records and their settings can be viewed. You can also configure a side panel of the inquiry form with icons a user can click to open the form that you have specified.{br}&#xA;&#xA;In the topics of this chapter, you will learn how to configure navigation from a generic inquiry form to other Acumatica ERP forms." PlainText="Enabling Navigation You can enable navigation from a generic inquiry form to other  Acumatica ERP     forms. You can define the values in particular columns of the inquiry form as links to forms     where the related records and their settings can be viewed. You can also configure a side panel     of the inquiry form with icons a user can click to open the form that you have specified. In the topics of this chapter, you will learn how to configure navigation from a generic     inquiry form to other  Acumatica ERP     forms. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="932733ec-f7df-fb28-b695-36fe5f2f70c9" RecordSourceID="22377" />
		<row PageID="30994ae2-7c9b-4814-b4e7-86e1ab49c51a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e51e35be-3888-9a25-a27f-2c477444f8a6" RecordSourceID="22377">
			<column name="Content"><![CDATA[
When you design a generic inquiry by using the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you can define navigation options that give users of the inquiry form the ability to quickly access related records and work more effectively. You can add a side panel with related forms that are displayed as tabs. You can also define any column of the results grid of the inquiry form to contain links to an Acumatica ERP form; users can click these links to view the particular record on its data entry form. {br}

For example, suppose that in a generic inquiry form that lists purchase orders, you have turned on and configured built-in navigation for the '''Vendor ID''' column, which contains links to the [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000]) form. On the generic inquiry form, in the row of any purchase order, a user can click the link in this column to view the details of the vendor from which the items were purchased.{br}

On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, you can turn on the built-in navigation for any column of the results grid. You use the '''Navigation''' tab of the form to specify the list of forms to which users can navigate from the inquiry. For each form, you can specify navigation parameters and select the way to open the form.{br}{TOC}
==Learning Objectives==
In this part, you will learn how to specify different navigation options from generic inquiries to make the user&rsquo;s work easier.
==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, including developing and modifying generic inquiries to give users information they need to do their jobs. You want to give users flexible ways to navigate between Acumatica ERP forms, including from generic inquiry forms, according to your business requirements.[anchor|#section_xtk_vb5_xlb]
==Built-In Navigation Capabilities==[anchor|#_8666d56d-b8bd-4424-b144-4c18e7f62e8d]
You enable or disable the built-in navigation by using the '''Default Navigation''' check box on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. This functionality works only for fields that have a default form specified in the source code. With the '''Default Navigation''' check box selected, the system displays the values in these fields as links in the inquiry results. When a user clicks such a link, the default form is opened in a pop-up window. For example, for the field that holds the invoice reference number, the default form is the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form. When you add a new row to the list on the '''Results Grid''' tab, the '''Default Navigation''' check box is selected by default.
==Navigation to Non-Default Forms==
You can customize navigation to non-default forms. In this case, on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you need to select the data field that should be displayed in the inquiry results as a link to a non-default form. For this data field, you cancel the default navigation by clearing the '''Default Navigation''' check box, and you specify the non-default form in the '''Navigate To''' column. If you leave the '''Default Navigation''' check box selected, the form selected in the '''Navigate To''' column will be ignored—that is, the link will open the default form. If you clear the '''Default Navigation''' check box and you don&rsquo;t specify a form in the '''Navigate To''' column for the data field, the data field will not be displayed as a link.
==Navigation Settings==
On the '''Navigation''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you specify the list of forms to which users can navigate from the resulting generic inquiry, as well as various other navigation settings. For each form to which you want to support navigation, on this tab, you need to specify the following:[anchor|#_842955db-935f-4598-aa0a-a7e3c9c64191]
#The form to which you want to navigate, in the '''Screens''' pane of the tab. In this pane, you specify and then click the form. 
#:You can specify a form of any of the following types:
#*Inquiry
#*Data entry (or primary)
#*Report
#*Mass processing
#*Dashboard
#:You can specify a form with hidden key fields, as you can any other forms; an example of a form with hidden key fields is the [HelpRoot_FormReference\CR_30_60_15|Email Activity] ([~/?ScreenId=CR306015|CR306015]) form.
#The navigation mode (in the '''Window Mode''' box of the right pane) in which the form you have added is opened; see the next section of this topic for details.
#The data field values (in the '''Navigation Parameters''' table of the right pane of the tab) the system should pass to the form when it is opened. For example, if you want the user to click a link to view the details of a sales order on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form, you need to pass the order type and the order number.
#:The system maps the fields of the form you have added in the '''Screens''' pane to the fields of the generic inquiry that you are configuring. When you select a field in the '''Field''' column of the '''Navigation Parameters''' table, the system suggests the following options in the '''Parameter''' column, depending of the type of the form:
#*Inquiry form or mass processing form: Fields of all data access classes used in the inquiry
#*Data entry form: Key fields of the entry form
#*Report form: Report parameters
#*Dashboard: Dashboard parameters
#:The selection of navigation parameters is shown in the following screenshot.
[anchor|#_87b8baa6-41cc-4a08-937f-b1144e5076d9][anchor|#_ac43809b-58c7-4820-b008-b890bfde30f0][image:UserGuide/Images/GI_Enabling_Navigation_GS_with_GI_Navigation_Parameters.png|popup| Navigation parameters suggested by the system|450px]
==Ways That Forms Can Be Opened==
In the right pane of the '''Navigation''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you can specify the navigation mode of each form that can be opened from the generic inquiry form. The navigation mode determines how the form is opened when the user of the inquiry form clicks the link. For each form, you select one of the following options in the '''Window Mode''' box: [anchor|#_891845d1-e951-4ad3-b748-db8b6ad02010]
*''Same Tab'' (default): The form is opened in the same browser tab, replacing the inquiry form. 
*''New Tab'': The form opens in a new tab of the same browser.
*''Pop-Up Window'': The form opens in a pop-up window.
*''Side Panel'': The form opens inthe side panel.

==Use of a Side Panel==
When the ''Side Panel'' option is selected in the '''Window Mode''' box of the '''Navigation''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, a user of the resulting generic inquiry form can quickly edit the desired values of any listed record in the side panel while still viewing the main generic inquiry form.{br}

If the ''Side Panel'' option is selected on the '''Navigation''' tab, the '''Icon''' box is displayed right of the '''Window Mode''' box. In the '''Icon''' box, you can select the icon to be displayed on the side panel bar. On the resulting generic inquiry form, if the user clicks the icon, the system opens the side panel with the form to which navigation has been configured.{br}

You can add multiple side panel navigation settings to a generic inquiry. The only factor limiting the number of side panel navigation settings is the set of data fields that can be passed as parameters (specified on the '''Tables''' tab of the form). If a form requires a parameter for which you have no data to pass, the navigation will not work. You can expand the set of data fields that can be passed as parameters by adding new tables on the '''Tables''' tab and setting up table relations on the '''Relations''' tab.{br}

You can add a dashboard with parameters to a side panel. If you do this, you add the navigation settings for a dashboard in the same way as you add a navigation path for any other form. When a user clicks a record of the resulting inquiry form, the system filters the widget data in the dashboard in the side panel by using the parameters passed from the inquiry.]]></column>
			<column name="PlainText"><![CDATA[Configuring Navigation: General Information When you design a generic inquiry by using the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         (SM208000) form, you can define navigation options that give users of the inquiry form the         ability to quickly access related records and work more effectively. You can add a side         panel with related forms that are displayed as tabs. You can also define any column of the         results grid of the inquiry form to contain links to an  Acumatica ERP form; users can click these links to view the particular record on its data entry form.  For example, suppose that in a generic inquiry form that lists purchase orders, you have         turned on and configured built-in navigation for the  Vendor ID          column, which contains links to the   ([~/?ScreenId=AP303000|AP303000]) Vendors (AP303000)         form. On the generic inquiry form, in the row of any purchase order, a user can click the         link in this column to view the details of the vendor from which the items were         purchased. On the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form, you can turn on the built-in navigation for         any column of the results grid. You use the  Navigation  tab of the         form to specify the list of forms to which users can navigate from the inquiry. For each         form, you can specify navigation parameters and select the way to open the form. Learning Objectives In this part, you will learn how to specify different navigation options from generic         inquiries to make the user's work easier. Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company, including developing and modifying generic inquiries to give users         information they need to do their jobs. You want to give users flexible ways to navigate         between  Acumatica ERP forms, including from generic inquiry forms, according to your business requirements. Built-In Navigation Capabilities You enable or disable the built-in navigation by using             the  Default Navigation  check box on the  Results                 Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)             form. This functionality works only for fields that have a default form specified in the             source code. With the  Default Navigation  check box selected, the             system displays the values in these fields as links in the inquiry results. When a user             clicks such a link, the default form is opened in a pop-up window. For example, for the             field that holds the invoice reference number, the default form is the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form. When you add a new row to             the list on the  Results Grid  tab, the  Default                 Navigation  check box is selected by default. Navigation to Non-Default Forms You can customize navigation to non-default forms. In this case, on the  Results           Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form,         you need to          select          the data field that should be displayed in the inquiry results as a link to a non-default         form. For this data field, you cancel the default navigation by clearing the            Default Navigation  check box, and you specify the non-default form         in the  Navigate To  column. If you leave the  Default           Navigation  check box selected, the form selected in the  Navigate           To  column will be ignored—that is, the link will open the default form.         If you clear the  Default Navigation  check box and you don't specify a         form in the  Navigate To  column for the data field, the data field         will not be displayed as a link. Navigation Settings On the  Navigation  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you specify the list of forms to         which users can navigate from the resulting generic inquiry, as well as various other         navigation settings. For each form to which you want to support navigation, on this tab, you         need to specify the following: The form to which you want to navigate, in the  Screens  pane of           the tab. In this pane, you specify and then click the form.  You can specify a form of             any of the following types: Inquiry Data entry (or primary) Report Mass processing Dashboard Y ou             can specify a form with hidden key fields, as you can any other forms; an example of a             form with hidden key fields is the   ([~/?ScreenId=CR306015|CR306015]) Email Activity             (CR306015) form. The navigation mode (in the  Window Mode  box of the right pane) in           which the form you have added is opened; see the next section of this topic for           details. The data field values (in the  Navigation Parameters  table of the           right pane of the tab) the system should pass to the form when it is opened. For example,           if you want the user to click a link to view the details of a sales order on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form, you need to pass the order type           and the order number. The system maps the fields of the form you have added in the                Screens  pane to the fields of the generic inquiry that you are             configuring. When you select a field in the  Field  column of the                Navigation Parameters  table, the system              suggests              the following options in the  Parameter  column, depending of the             type of the form: Inquiry form or mass processing form:                F ields               of all data access classes used in the inquiry Data entry form: Key fields of the entry form Report form: Report parameters Dashboard: Dashboard parameters The             selection of navigation parameters is shown in the following           screenshot.  Navigation parameters suggested by the system Ways That Forms Can Be Opened In the right pane of the  Navigation  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you can specify the navigation         mode of each form that can be opened from the generic inquiry form. The navigation mode         determines how the form is opened when the user of the inquiry form clicks the link. For         each form, you select one of the following options in the  Window Mode          box:  Same Tab  (default): The form is opened in the same browser tab, replacing the           inquiry form.  New Tab : The form opens in a new tab of the same browser. Pop-Up Window : The form opens in a pop-up window. Side Panel : The form opens           in the           side panel. Use of a Side Panel When the  Side Panel  option is selected in the  Window Mode  box         of the  Navigation  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, a user of the resulting generic         inquiry form can quickly          edit          the desired values of any listed record in the side panel while still viewing the main         generic inquiry form. If the  Side Panel  option is selected on the  Navigation  tab,         the  Icon  box is displayed right of the  Window           Mode  box. In the  Icon  box, you can select the icon to         be displayed on the side panel bar.         O n         the resulting generic inquiry form , if the user          clicks          the icon, the system opens the side panel with the form to which navigation has been         configured. You         can add multiple side panel navigation settings to a generic inquiry.  The         only factor limiting the number of side panel navigation settings is the set of data fields         that can be passed as parameters (specified on the  Tables  tab of the         form). If a form requires a parameter for which you have no data to pass,          the         navigation will not work . You can expand the set of data fields that can         be passed as parameters by adding new tables on the  Tables  tab and         setting up table relations on the  Relations  tab. You can add a dashboard with parameters to a side panel. If you do this, you add the         navigation settings for a dashboard in the same way as you add a navigation path for any         other form. When a user clicks a record of the resulting inquiry form, the system filters         the widget data in the dashboard in the side panel by using the parameters passed from the         inquiry. ]]></column>
		</row>
		<row PageID="f873d0cb-ffde-4793-8927-0d28a3e918c0" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="5d5f5aa4-611a-9ad6-778f-f7721943a868" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to add the ability to view the details of a record selected in the inquiry results in the side panel.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has requested an inquiry form that displays data about invoices and memos. You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant has asked you to give users the capability to view the details of any listed invoice or memo in a side panel.{br}

In the system preparation for this activity, you will copy the predefined inquiry to leave the original inquiry intact; you will modify its copy as requested.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
On the '''Navigation''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you will specify the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form to be displayed in a side panel of the resulting inquiry form. You will also provide the navigation settings the system should use to display the details of the invoice or memo whose identifier the user clicks in the inquiry results.[anchor|#_7484faf5-f84f-4e8f-a065-d2ceea2e343e]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_d4654887-8cd5-427e-ae9a-c2557390a4b0]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to modify a generic inquiry.
)))

==Step: Specifying Navigation Settings for the Side Panel==
To modify the copied generic inquiry to specify the needed navigation settings for the side panel, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB7-ARInvoicesMemos''.
#On the '''Navigation''' tab, in the '''Screens''' pane, add a row, and select the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form as the row value. To do this, you click the selector icon; in the lookup table, type <tt>AR301000</tt> in the Search box, and double-click the row with the form.
#On the form toolbar, click '''Save'''.
#On the '''Navigation''' tab, while the row you added is still selected in the '''Screens''' pane, specify the following settings in the right pane:
#*'''Window Mode''': ''Side Panel''
#* '''Icon''': ''account details''
#*:((({S:Hint}This box appears when you select ''Side Panel'' in the '''Window Mode''' box.
)))
#In the '''Navigation Parameters''' table (also in the right pane), add a row, and specify the following settings in the added row:
#*'''Field''': ''DocType''
#* '''Parameter''': ''ARInvoice.DocType''
#Add another row, and specify the following settings:
#*'''Field''': ''RefNbr''
#* '''Parameter''': ''ARInvoice.RefNbr''
#On the form toolbar, click '''Save'''.
#Click the eye icon on the side panel to preview how your changes have affected the inquiry. Click a row with an invoice or memo, and notice that the system displays its details in the side panel (see the following screenshot).
[anchor|#_8d2f0f69-b25c-4136-8cb0-24af27d54db2][anchor|#_e48b88c8-343e-465b-abde-a994ee99f80e][image:UserGuide/Images/GI_Enabling_Navigation_GS_with_GI_Side_Panel.png|popup|Generic inquiry with a side panel|450px]
==Self-Test Exercise==
Now that you learned how to enable the side panel and specify navigation parameters, try to apply the knowledge and add the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form to the side panel to a copy of the AR-Invoices and Memos generic inquiry. On the resulting inquiry, by clicking a row, users should be able to view the details of a customer account associated with any invoice or memo listed in the inquiry results.((({S:Hint}On the '''Navigation''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, you add a row with the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form, select the window mode, select an icon, and specify the navigation parameters suggested by the system.
)))]]></column>
			<column name="PlainText"><![CDATA[Configuring Navigation: To Enable the Side Panel In this activity, you will learn how to modify an existing generic inquiry to add the                 ability to view the details of a record selected in the inquiry results in the side                 panel. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has requested an inquiry form that                 displays data about invoices and memos. You have offered the predefined Invoices and                 Memos (AR3010PL) generic inquiry form, which has the  AR-Invoices and Memos                  inquiry title and the  Invoices and Memos  site map title specified on the                       ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but the accountant                 has asked you to give users the capability to view the details of any listed invoice                 or memo in a side panel. In the system preparation for this activity, you will copy the predefined inquiry to                 leave the original inquiry intact; you will modify its copy as requested. The Invoices and Memos (AR3010PL) generic inquiry form, which is the                 list of the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview On the  Navigation  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you will specify the                       ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form to be displayed in                 a side panel of the resulting inquiry form. You will also provide the navigation                 settings the system should use to display the details of the invoice or memo whose                 identifier the user clicks in the inquiry results. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to modify a generic                     inquiry. Step: Specifying Navigation Settings for the Side Panel To modify the copied generic inquiry to specify the needed navigation settings for                 the side panel, do the following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          DB7-ARInvoicesMemos . On the  Navigation  tab, in the                          Screens  pane, add a row, and select the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form as the row value. To                     do this, you click the selector icon; in the lookup table, type                          AR301000  in the Search box, and double-click the row                     with the form. On the form toolbar, click  Save . On the  Navigation  tab, while the row you added is still                     selected in the  Screens  pane, specify the following                     settings in the right pane: Window Mode :  Side Panel Icon :  account details This                                 box appears when you select  Side Panel  in the                                      Window Mode                          box. In the  Navigation Parameters  table (also in the right                     pane), add a                     row ,                      and specify the following settings in the added row: Field :  DocType Parameter :  ARInvoice.DocType Add another row, and specify the following settings: Field :  RefNbr Parameter :  ARInvoice.RefNbr On the form toolbar, click  Save . Click the eye icon on the side panel to preview how your changes have affected                     the inquiry. Click a row with an invoice or memo, and notice that the system                     displays its details in the side panel (see the following screenshot). Generic inquiry with a side panel Self-Test Exercise Now that you learned how to enable the side panel and specify navigation parameters,                 try to apply the knowledge and add the   ([~/?ScreenId=AR303000|AR303000]) Customers                 (AR303000) form to the side panel to a copy of the AR-Invoices and Memos generic                 inquiry. On the resulting inquiry, by clicking a row, users should be able to view                 the details of a customer account associated with any invoice or memo listed in the                 inquiry results. On the  Navigation  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form, you add a row with the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form, select the window mode,                 select an icon, and specify the navigation parameters suggested by the                 system. ]]></column>
		</row>
		<row PageID="a7f2f111-dfa5-437d-9d2f-ab21a0f188d9" Language="en-US" PageRevisionID="1" Content="&#xA;Sometimes you might need a faster way to access particular information in the system, such as the contacts of a particular vendor or the customers list. In Acumatica ERP, you can access such information through the corresponding data entry form. After you click the magnifier icon in the appropriate box, the list of records opens in the pop-up window. The data entry forms are convenient for entering new data, but once you have entered most data, you may need to view the list of records instead.{br}&#xA;&#xA;In the topics of this chapter, you will learn how to help users find needed information with a help of a generic inquiry used as a substitute form." PlainText="Making a Generic Inquiry a Substitute Form Sometimes you might need a faster way to access particular information in the system, such as     the contacts of a particular vendor or the customers list. In  Acumatica ERP,     you can access such information through the corresponding data entry form. After you click the     magnifier icon in the appropriate box, the list of records opens in the pop-up window. The data     entry forms are convenient for entering new data, but once you have entered most data, you may     need to view the list of records instead. In the topics of this chapter, you will learn how to help users find needed information with a     help of a generic inquiry used as a substitute form. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e48e4363-1b66-3b55-7d9c-f42150074ab3" RecordSourceID="22377" />
		<row PageID="2c051f97-c884-4d23-81d1-38fb4336dd52" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="da895583-d848-61aa-fa91-8827bb3e356d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, you can create a generic inquiry that presents a list of records that were entered on a particular data entry form (which is called the ''primary form'' in this context). Once you have created the generic inquiry form, you can use it as an ''entry point'' to the primary form. This means that when you click the name of the primary form while searching for or navigating to it, you will instead access the generic inquiry form that contains the list of records. If you click the link of a record identifier in the list, the primary form (that is, the data entry form) opens with that record displayed. The generic inquiry form is called the ''substitute form'' in this context.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to substitute an inquiry form for a data entry form.
==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, including developing and modifying generic inquiries to give users information they need to do their jobs. You need to give users the ability to scan lists of records and find needed records quickly. You will accomplish this task by substituting inquiry forms (lists of records) for the related data entry forms.
==Substitution of an Inquiry Form for a Primary Form==
You configure the replacement of a primary form with a substitute form on the '''Entry Point''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. To do this, in the '''Entry Screen Settings''' section of the form, you specify the primary form in the '''Entry Screen''' box and then select '''Replace Entry Screen with This Inquiry in Menu''' check box.((({S:Hint}Replacing a primary form with a substitute form in this way does not remove the primary form, which can still be used. This setting affects only which form is ''initially'' opened when a user clicks the form name in a workspace menu or search results.
))){br}

When you replace a primary form with an inquiry form, the system automatically adds the corresponding navigation settingsfor this inquiry on the '''Navigation''' tab. It also sets the '''Window Mode''' for the path to the ''Inline'' option (as shown in the following screenshot), which is not available for selection by users.[anchor|#_e6d0d98d-b995-4167-adb0-c987c43f1d1e][anchor|#_d617f706-1ef9-478c-839d-944a4e9b2324][image:UserGuide/Images/GI_Enabling_Navigation_GS_with_GI_EntryPointInline.png|popup|The Window Mode setting of Inline|450px]
When you save an inquiry with the replacement of a data entry form configured for this inquiry, the system adds a row to the [HelpRoot_FormReference\SM_20_85_00|Lists as Entry Points] ([~/?ScreenId=SM208500|SM208500]) form. This row contains the entry screen identifier and name in the '''Entry Screen ID''' column, the substitute screen identifier and name in the '''Substitute Screen ID''' column, and the indicator of whether the replacement is active in the '''Active''' column.
==Suspension of the Replacement of an Entry Form with a Substitute Form==
You can activate or suspend the replacement of any entry form any time you want. You could, for example, do this temporarily, to make an inquiry form invisible to other users while you are making modifications to it. You can suspend the replacement in either of the following ways:[anchor|#_4e38959a-99ce-416b-87c2-11e641ff76a4]
*On the [HelpRoot_FormReference\SM_20_85_00|Lists as Entry Points] ([~/?ScreenId=SM208500|SM208500]) form, by clearing the check box in the '''Active''' column in the row for the entry form that was replaced
*On the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, by clearing the '''Replace Entry Screen with Inquiry in Menu''' check box on the '''Entry Point''' tab ('''Entry Screen Settings''' section) for the generic inquiry that was used as a substitute form

Suspending the replacement does not remove the entry with the pair of forms from the list on the [HelpRoot_FormReference\SM_20_85_00|Lists as Entry Points] form. For details about suspending the replacement of an entry form, see [HelpRoot_ReportingTools\GI_Making_GI_as_Entry_Point_Cancelling_Entry_Point_Activity|Making a Generic Inquiry a Substitute Form: To Suspend the Replacement of a Primary Form].((({S:Hint}On the [HelpRoot_FormReference\SM_20_85_00|Lists as Entry Points] form, if you delete the row containing the entry form and the corresponding substitute form, the following changes occur in the system:[anchor|#_0bc291d8-0f2e-41a9-bcac-ebe944efeae3]
*The replacement is canceled, but the forms are not deleted.
*On the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, the '''Replace Entry Screen with Inquiry in Menu''' check box on the '''Entry Point''' tab ('''Entry Screen Settings''' section) is cleared.
)))
==Publication of a Generic Inquiry Form as a Substitute Form==
You can use only a published generic inquiry form as a substitute form. When an inquiry has been created, you can publish it. To publish the generic inquiry, in the Summary area of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you select the '''Make Visible on the UI''' check box. When you save your changes, the system automatically assigns a screen identifier to the generic inquiry form. The system also automatically assigns the default workspace (that is, ''Data Views'') and the default category (that is, ''Inquiries'') to this inquiry form. After you activate the suspension of a data entry form with this generic inquiry form, the generic inquiry form inherits the workspace and category settings from the data entry form.
==Modification of a Published Substitute Form==
If you want to modify an inquiry that is currently used as a substitute form, you can temporarily hide it—that is, make the inquiry not visible to other users.{br}

You can hide a published inquiry form that has been configured as a substitute form in one of the following ways:[anchor|#ul_ft3_lp3_ylb]
*By clearing '''Active''' on the [HelpRoot_FormReference\SM_20_85_00|Lists as Entry Points] ([~/?ScreenId=SM208500|SM208500]) form 
*By clearing the '''Replace Entry Screen with Inquiry in Menu''' check box on the '''Entry Point''' tab on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form
((({S:Danger}We strongly recommend leaving the '''Make Visible on the UI''' check box selected on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form for a generic inquiry that has been published already. Clearing the check box also causes the system to clear the value of the '''Screen ID''' box, which may cause issues with any widgets and pivot tables based on the published generic inquiry.
)))
==Additional Operations on a Substitute Form==
With the settings in the '''Operations with Records''' section of the '''Entry Point''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you can specify additional operations that a user can perform on a substitute form. By selecting the appropriate check boxes in this section, you enable the following capabilities for the inquiry form:[anchor|#ul_ic3_p1c_5p]
*Mass actions on records (the '''Enable Mass Actions on Records''' check box): When you select this check box, the '''Mass Actions''' tab appears on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form. On this tab, you can select any of the available options from the drop-down list according to your needs. The available options depend on the content of the entry form for which you have created the inquiry form. For example, the following options might be available for the form: ''Validate Address'' and ''Mark As Validated''. 
*:After you have selected the required options and saved your changes to the generic inquiry, the selected commands will appear in the '''Actions''' menu on the form toolbar of the substitute form. A user can select one record or multiple records and then apply any available command to the selected records. Some actions can cause pop-up windows to be displayed. You can define the types of these actions when you test your customization.
*:((({S:Hint}In Acumatica ERP, mass actions that involve redirection to other forms and display of pop-up windows are not supported because this scenario may cause performance issues.
)))
*Mass removal of records (the '''Enable Mass Record Deletion''' check box): If you select this check box, the '''Delete''' button and the Included column will be available on the substitute form. A user can select one record or multiple records and then delete them. Additionally, you can configure the system to automatically confirm the deletion of records after this button is clicked and before the records are actually deleted.
*Automatic confirmation of record deletion (the '''Auto-Confirm Custom Delete Confirmations''' check box): If you select this check box, when a user tries to delete one record or multiple records, the system deletes the records without confirmation.
*Mass update of records (the '''Enable Mass Record Update''' check box): If you select this check box, the '''Update''' and '''Update All''' commands will be available in the '''Actions''' menu on the form toolbar of the substitute form; also, the Included column will be available on the substitute form. When you configure this capability, you select the field or fields that should be updated if the user clicks one of these options. A user can select one record or multiple records on the substitute form and then change the specified fields of the selected records.
*:((({S:Hint}If the ('''Enable Mass Record Update''' check box is selected on the '''Entry Point''' tab, the '''Mass Update Fields''' tab appears on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form.
)))
*Creation of new records (the '''Enable New Record Creation''' check box): If you select this check box, the '''New Record''' button will be available on the form toolbar of the substitute form. When a user clicks the button, the entry form opens so that the user can add a new record.
*:((({S:Hint}If you enable the creation of new records on the substitute form, you can define default values for the fields that appear when you add a record. The system will automatically enter these values in the corresponding UI elements when a user adds a new record. You define the default values in the '''New Record Defaults''' table on the '''Entry Point''' tab.
)))
((({S:Hint}If you need to use additional operations on a substitute form (that is, if you select any of the check boxes described above), we recommend that you modify the predefined generic inquiry instead of creating a copy of the predefined generic inquiry and modifying the copy.
)))
==Access Rights to Substitute Forms==
In Acumatica ERP, every form has its own levels of access rights that you can specify for the user roles in the system by using the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form. You can change the level of access rights to the data entry and generic inquiry forms independently of each other. However, when an inquiry form replaces the corresponding data entry form, it becomes the substitute form and inherits the level of access rights the users of each role have to the data entry form. Thus, to change the access rights users have to the substitute form, you need to change the access rights to the entry form. You can manage access rights to substitute forms in the same ways as you manage access rights to other generic inquiries. For more information about access rights, see [HelpRoot_ReportingTools\GI_Access_Rights_Mapref|Managing Access Rights To Generic Inquiries].{br}

If you suspend an inquiry form’s replacement of a data entry form, the level of access to the inquiry form reverts to its initial state (that is, the levels of access rights roles had to the inquiry form before it was defined to replace a data entry form).]]></column>
			<column name="PlainText"><![CDATA[Making a Generic Inquiry a Substitute Form: General Information In  Acumatica ERP, you can create a generic inquiry that presents a list of records that were entered on a         particular data entry form (which is called the  primary form  in this context). Once         you have created the generic inquiry form, you can use it as an  entry point  to the         primary form. This means that when you click the name of the primary form while searching         for or navigating to it, you will instead access the generic inquiry form that contains the         list of records. If you click the link of a record identifier in the list, the primary form         (that is, the data entry form) opens with that record displayed. The generic inquiry form is         called the  substitute form  in this context. Learning Objectives In this chapter, you will learn how to          substitute         an inquiry form for a data entry form. Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company, including developing and modifying generic inquiries to give users         information they need to do their jobs. You need to give users the ability to scan lists of         records and find needed records quickly. You will accomplish this task by substituting         inquiry forms (lists of records) for the related data entry forms. Substitution of an Inquiry Form for a Primary Form You configure the replacement of a primary form with a substitute form on the            Entry Point  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         (SM208000) form. To do this, in the  Entry Screen Settings  section of         the form, you specify the primary form in the  Entry Screen  box and         then select  Replace Entry Screen with This Inquiry in Menu  check           box. Replacing a primary form with a substitute form in this way does not remove the           primary form, which can still be used. This setting affects only which form is              initially  opened when a user clicks the form name in a workspace menu or search           results. When you replace a primary form with an inquiry form, the system automatically adds the         corresponding navigation settings for this inquiry on the  Navigation  tab. It also         sets the  Window Mode  for the path to the  Inline  option (as         shown in the following screenshot), which is not available for selection by users. The Window Mode setting of Inline When you save an inquiry with the replacement of a data entry form configured for this         inquiry, the system adds a row to the   ([~/?ScreenId=SM208500|SM208500]) Lists as Entry Points (SM208500) form. This         row contains the entry screen identifier and name in the  Entry Screen           ID  column, the substitute screen identifier and name in the            Substitute Screen ID  column, and the indicator of whether the         replacement is active in the  Active  column. Suspension of the Replacement of an Entry Form with a Substitute Form You can activate or suspend the replacement of any entry form any time you want. You could,         for example, do this temporarily, to make an inquiry form invisible to other users while you         are making modifications to it. You can suspend the replacement in either of the following         ways: On the   ([~/?ScreenId=SM208500|SM208500]) Lists as Entry Points (SM208500) form, by clearing the check box in the              Active  column in the row for the entry form that was           replaced On the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, by clearing the              Replace Entry Screen with Inquiry in Menu  check box on the              Entry Point  tab ( Entry Screen Settings            section) for the generic inquiry that was used as a substitute form Suspending the replacement does not remove the entry with the pair of forms from the list         on the   ([~/?ScreenId=SM208500|SM208500]) Lists as Entry Points form. For details about suspending the replacement of         an entry form, see  Making a Generic Inquiry a Substitute Form: To Suspend the Replacement of a Primary Form. On the   ([~/?ScreenId=SM208500|SM208500]) Lists as Entry Points form, if you delete the row containing         the entry form and the corresponding substitute form, the following changes occur in the           system: The replacement is canceled, but the forms are not deleted. On the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form, the  Replace Entry Screen with               Inquiry in Menu  check box on the  Entry Point  tab               ( Entry Screen Settings  section) is cleared. Publication of a Generic Inquiry Form as a Substitute Form You can use only a published generic inquiry form as a substitute form. When an inquiry has         been created, you can publish it. To publish the generic inquiry, in the Summary area of the             ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you select the            Make Visible on the UI  check box. When you save your changes, the         system automatically assigns a screen identifier to the generic inquiry form.          The         system also automatically assigns the default workspace (that is,  Data Views ) and the         default category (that is,  Inquiries ) to this inquiry form .          After         you activate the suspension of a data entry form with this generic inquiry         form , the generic inquiry form inherits the workspace and category         settings from the data entry form. Modification of a Published Substitute Form If you want to modify an inquiry that is currently used as a substitute form, you can         temporarily hide it—that is, make the inquiry not visible to other users. You can hide a published inquiry form that has been configured as a substitute form in one         of the following ways: By clearing  Active  on the   ([~/?ScreenId=SM208500|SM208500]) Lists as Entry Points           (SM208500) form  By clearing the  Replace Entry Screen with Inquiry in Menu  check           box on the  Entry Point  tab on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form We strongly recommend leaving the  Make Visible on the           UI  check box selected on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form for a generic inquiry that has been published already. Clearing the         check box also causes the system to clear the value of the  Screen ID          box, which may cause issues with any widgets and pivot tables based on the published generic         inquiry. Additional Operations on a Substitute Form With the settings in the  Operations with Records  section of the            Entry Point  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you can specify additional operations that a user can         perform on a substitute form. By selecting the appropriate check boxes in this section, you         enable the following capabilities for the inquiry form: Mass actions on records  (the  Enable Mass Actions on             Records  check box): When you select this check box, the  Mass             Actions  tab appears on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry           form. On this tab, you can select any of the available options from the drop-down list           according to your needs. The available options depend on the content of the entry form for           which you have created the inquiry           form.            For example, the following options might be available for the form :              Validate Address  and  Mark As Validated .  After you have selected the             required options and saved your changes to the generic inquiry, the selected commands             will appear in the  Actions  menu on the form toolbar of the             substitute form.             A              user can select one record or multiple records  and then apply any             available command to the selected records. Some actions can cause pop-up windows to be             displayed. You can define the types of these actions when you test your             customization. In  Acumatica ERP, mass actions that involve redirection to other forms and display of pop-up windows             are not supported because this scenario may cause performance issues. Mass removal of records (the  Enable Mass Record Deletion  check           box): If you select this check box, the  Delete  button and the           Included column will be available on the substitute form. A user can select one record or           multiple records and then delete them.            Additionally,           you can configure the system to automatically confirm the deletion of records after this           button is clicked and before the records are actually deleted. Automatic confirmation of record deletion (the  Auto-Confirm Custom Delete             Confirmations  check box): If you select this check box, when a user tries to           delete one record or multiple records, the system deletes the records without           confirmation. Mass update of records (the  Enable Mass Record Update  check box):           If you select this check box, the  Update  and  Update             All  commands will be available in the  Actions  menu on           the form toolbar of the substitute           form;            also, the Included column            will be available           on the substitute form. When you configure this capability,            you           select the field or fields that should be updated if the user clicks one of these           options.  A user can select one record or multiple records on the           substitute form and then change the specified fields of the selected records. If the ( Enable Mass Record Update  check box is             selected on the  Entry Point  tab, the  Mass Update               Fields  tab appears on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry             form. Creation of new records (the  Enable New Record Creation  check           box): If you select this check box, the  New Record  button will be           available on the form toolbar of the substitute form. When a user clicks the button, the           entry form opens so that the user can add a new record. If you enable the             creation of new records on the substitute form, you can define default values for the             fields that appear when you add a record. The system will automatically enter these             values in the corresponding UI elements when a user adds a new record. You define the             default values in the  New Record Defaults  table on the                Entry Point  tab. If you need to use additional operations on a substitute form (that is, if         you select any of the check boxes described above), we recommend that you modify the         predefined generic inquiry instead of creating a copy of the predefined generic inquiry and         modifying the copy. Access Rights to Substitute Forms In  Acumatica ERP, every form has its own levels of access rights that you can specify for the user roles         in the system by using the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020) form. You can change         the level of access rights to the data entry and generic inquiry forms independently of each         other. However, when an inquiry form replaces the corresponding data entry form, it becomes         the substitute form and inherits the level of access rights the users of each role have to         the data entry form. Thus, to change the access rights users have to the substitute form,         you need to change the access rights to the entry form. You can manage access rights to         substitute forms in the same ways as you manage access rights to other generic inquiries.         For more information about access rights, see  Managing Access Rights To Generic Inquiries. If you suspend an inquiry form’s replacement of a data entry form, the level of access to         the inquiry form reverts to its initial state (that is, the levels of access rights roles         had to the inquiry form before it was defined to replace a data entry form). ]]></column>
		</row>
		<row PageID="b8acf4fb-fbf5-408a-b92c-6658267a5f57" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="97fe78ad-6da5-0ed1-8151-7d1679ad419c" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to make it a substitute form for a primary data entry form. Once you have done this, when a user clicks the name of the entry form in a workspace or a list of search results, the system will open the substitute form. If the user clicks a record name in the inquiry results, the entry form will open.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has asked you to replace the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form with a generic inquiry. You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form; this form is the substitute form for the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] form by default. The accountant said that this inquiry form generally provides the needed functionality, but that the new form should also give users the abilities to view the total tax amount and to create a new document directly on the inquiry form.{br}

In the system preparation for this activity, you will copy the predefined inquiry to leave the original inquiry intact; you will modify its copy as requested.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
On the '''Entry Point''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you will specify the requested generic inquiry as a substitute form for the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, and enable the creation of new records and deletion of multiple records.[anchor|#_4d5f0d89-8396-411c-a73d-a2bce749e29d]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_76092ad6-dffd-4749-bd02-6b6734c68147]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials: 
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to modify a generic inquiry.
)))

==Step: Defining the Generic Inquiry as an Entry Point==
To modify the generic inquiry to replace the primary form, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''DB8-ARInvoicesMemos''. 
#In the '''Site Map Title''' box of the Summary area, type <tt>Invoices and Memos Version 2</tt> or a title of your choice.
#On the '''Results Grid''' tab, add a row with the following settings:
#*'''Object''': ''ARInvoice''
#* '''Data Field''': ''TaxTotal''
#* '''Caption''': <tt>Total Tax</tt>
#On the '''Entry Point''' tab, in the '''Entry Screen Settings''' section, do the following:
##In the '''Entry Screen''' box, select the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form. To do this, you click the selector icon; in the lookup table, type <tt>AR301000</tt> in the Search box, and double-click the row with the form.
##To replace the selected entry form with the substitute form (that is, to direct the system to display the generic inquiry form instead of the entry form when a user clicks the menu item), select the '''Replace Entry Screen with this Inquiry in Menu''' check box. 
#To give a user the ability to add new records from the substitute form, in the '''Operations With Records''' section, select the '''Enable New Record Creation''' check box. With this check box selected, the '''New Record''' button appears on the form toolbar of the substitute form (that is, the inquiry form). When the user clicks this button, the system opens the entry form so that the user can add a new record.
#On the form toolbar, click '''Save'''.
#On the '''Navigation''' tab, review the navigation settings, which have been added automatically, and notice that the '''Window Mode''' is set to ''Inline'' and unavailable for editing. This means that the substitute form opens in the same browser tab when a user is adding a new record or viewing the details of an existing record.
#Click the eye icon on the side panel to preview how your changes have affected the inquiry. The system has added to the form toolbar the actions you have enabled. If you double-click a row in the table, the system opens the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] form with the details of the selected record.
#Search for the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] form by its name, ''Invoices and Memos'', and notice that the search results do not contain the name of the form. Then search for the form by its identifier, ''AR301000'', and notice that when you click the resulting form, the system opens the inquiry form that is configured as the substitute form.
]]></column>
			<column name="PlainText"><![CDATA[Making a Generic Inquiry a Substitute Form: To Configure an Inquiry as an Entry         Point In this activity, you will learn how to modify an existing generic inquiry to make it                 a substitute form for a primary data entry form. Once you have done this, when a                 user clicks the name of the entry form in a workspace or a list of search results,                 the system will open the substitute form. If the user clicks a record name in the                 inquiry results, the entry form will open. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has asked you to replace the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form with a generic inquiry.                 You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form,                 which has the  AR-Invoices and Memos  inquiry title and the  Invoices and                     Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form; this form is the                 substitute form for the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos form by                 default. The accountant said that this inquiry form generally provides the needed                 functionality, but that the new form should also give users the abilities to view                 the total tax amount and to create a new document directly on the inquiry form. In the system preparation for this activity, you will copy the predefined inquiry to                 leave the original inquiry intact; you will modify its copy as requested. The Invoices and Memos (AR3010PL) generic inquiry form, which is the                 list of the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview On the  Entry Point  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you will specify the                 requested generic inquiry as a substitute form for the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, and enable the creation                 of new records and deletion of multiple records. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials:  Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to modify a generic                     inquiry. Step: Defining the Generic Inquiry as an Entry Point To modify the generic inquiry to replace the primary form, do the following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          DB8-ARInvoicesMemos .  In the  Site Map Title  box of the Summary area, type                          Invoices and Memos Version 2  or a title of your                     choice. On the  Results Grid  tab, add a row with the following                         settings: Object :  ARInvoice Data Field :                              TaxTotal Caption :  Total Tax On the  Entry Point  tab, in the  Entry Screen                         Settings  section, do the following: In the  Entry Screen  box, select the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form. To do this,                             you click the selector icon; in the lookup table, type                                  AR301000  in the Search box, and double-click                             the row with the form. To replace the selected entry form with the substitute form (that is, to                             direct the system to display the generic inquiry form instead of the                             entry form when a user clicks the menu item), select the                                  Replace Entry Screen with this Inquiry in                                 Menu  check box.  To give a user the ability to add new records from the substitute form, in the                          Operations With Records  section, select the                          Enable New Record Creation  check box. With this check                     box selected, the  New Record  button appears on the form                     toolbar of the substitute form (that is, the inquiry form). When the user clicks                     this button, the system opens the entry form so that the user can add a new                     record. On the form toolbar, click  Save . On the  Navigation  tab, review the navigation settings,                     which have been added automatically, and notice that the  Window                         Mode  is set to  Inline  and unavailable for editing. This                     means that the substitute form opens in the same browser tab when a user is                     adding a new record or viewing the details of an existing record. Click the eye icon on the side panel to preview how your changes have affected                     the inquiry. The system has added to the form toolbar the actions you have                     enabled. If you double-click a row in the table, the system opens the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos form with the details of the selected                     record. Search for the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos form by its name,                          Invoices and Memos , and notice that the search results do not contain                     the name of the form. Then search for the form by its identifier,                          AR301000 , and notice that when you click the resulting form, the                     system opens the inquiry form that is configured as the substitute form. ]]></column>
		</row>
		<row PageID="0aa4a6f5-9ad0-4775-bef8-aea6c9642f85" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="13bf0e63-7446-40de-9f55-68f1663f04d3" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to clear the replacement of a primary form with a substitute form. Once you have done this, when a user clicks the name of the entry form in a workspace or a list of search results, the system will open the entry form instead of the substitute form it currently opens.
==Story==
Suppose that you are a technical specialist in your company who is working on customizations. Earlier, you configured Acumatica ERP in your company so that the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form is replaced with the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. Now an accountant of your company has asked you to make changes to the generic inquiry that is defined as a substitute form. Before you begin making these changes, you need to suspend the replacement of the primary form, so that the generic inquiry form is not opened while you are in the process of making changes to it.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process overview==
On the [HelpRoot_FormReference\SM_20_85_00|Lists as Entry Points] ([~/?ScreenId=SM208500|SM208500]) form, you will clear the replacement for the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] form.[anchor|#_9a887117-75ef-420b-8af6-d0013efee246]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_001409f2-a340-41c7-9bbd-eafe7f618117]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step: Suspending the Replacement of an Entry Form==
To suspend the replacement of the entry form, do the following:[anchor|#ol_qdf_ccr_ns]
#Open the [HelpRoot_FormReference\SM_20_85_00|Lists as Entry Points] ([~/?ScreenId=SM208500|SM208500]) form.
#In the table, locate the row with ''AR301000 - Invoices and Memos'' in the '''Entry Screen ID''' column, and clear the check box in the '''Active''' column for the row.
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Making a Generic Inquiry a Substitute Form: To Suspend the Replacement of a Primary         Form In this activity, you will learn how to clear the                  replacement                  of a primary form with a substitute form. Once you have done this, when a user                 clicks the name of the entry form in a workspace or a list of search results, the                 system will open the entry form instead of the substitute form it currently                 opens. Story Suppose that you are a technical specialist in your company who is working on                 customizations. Earlier, you configured  Acumatica ERP in your company so that the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos                 (AR301000) form is replaced with the predefined Invoices and Memos (AR3010PL)                 generic inquiry form, which has the  AR-Invoices and Memos  inquiry title and                 the  Invoices and Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. Now an accountant of                 your company has asked you to make changes to the generic inquiry that is defined as                 a substitute form. Before you begin making these changes, you need to suspend the                 replacement of the primary form, so that the generic inquiry form is not opened                 while you are in the process of making changes to it. The Invoices and Memos (AR3010PL) generic inquiry form, which is the                 list of the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process overview On the   ([~/?ScreenId=SM208500|SM208500]) Lists as Entry Points (SM208500) form, you will clear the                 replacement for the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos form. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step: Suspending the Replacement of an Entry Form To suspend the replacement of the entry form, do the following: Open the   ([~/?ScreenId=SM208500|SM208500]) Lists as Entry Points (SM208500) form. In the table, locate the row with  AR301000 - Invoices and Memos  in the                          Entry Screen ID  column, and clear the check box in                     the  Active  column for the row. On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="580cb297-5e86-48af-8c09-d88e971992bd" Language="en-US" PageRevisionID="1" Content="&#xA;In the course of working with generic inquiries, you may need to transfer a generic inquiry to another company or application instance. You may also need to export inquiry results to an XLS file.{br}&#xA;&#xA;In the topics of this chapter, you will learn how to transfer an inquiry by using export and import operations." PlainText="Transferring an Inquiry In the course of working with generic inquiries, you may need to transfer a generic inquiry to     another company or application instance. You may also need to export inquiry results to an XLS     file. In the topics of this chapter, you will learn how to transfer an inquiry by using export and     import operations. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3171812e-4497-bbad-a75c-c6e0d8371d16" RecordSourceID="22377" />
		<row PageID="4839df7f-854b-4673-8bf3-570facf214f0" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="62c0275d-2c99-fe90-18ea-c4263f3951f0" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can transfer a generic inquiry to another company or application instance as an XML file. To do this, you first need to export the inquiry as an XML file and then need to import the file in the target company or instance. Besides, you can export a generic inquiry form as an RPX file.{br}

Also, you can export inquiry results (that is, the data in the results grid of a generic inquiry form) to an XLS file. Later you can transfer these inquiry results to another system that is not Acumatica ERP. In Excel, you can perform calculations for some columns and rows.
==Learning Objectives==
In this chapter, you will learn how to export and import a generic inquiry form as an XML file, how to export a generic inquiry form as an RPX file, and how to export inquiry results to an XLS file.
==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, including developing and modifying generic inquiries to give users information they need to do their jobs. You need to export an existing generic inquiry to transfer it to another company or application instance.
==Export of a Generic Inquiry with Advanced Filters==
If you export to an XML file a generic inquiry with advanced filters of any type configured—an advanced personal filter, an advanced shared filter, or an advanced default filter—the generic inquiry is exported with all of the advanced filters. If you then import the XML file to another tenant in which a user with the same username exists, all the filters are available in the generic inquiry results. If a user with another username imports the XML file, only the advanced shared filters are available for the user.
==Export of a Generic Inquiry that a Pivot Table Is Based On==
If you export to an XML file a generic inquiry for which a pivot table is saved as a filter tab, the system exports this inquiry with this pivot table. When you import this inquiry, the system also imports the related pivot table as a filter tab. {br}

If you have configured a pivot table by using the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form—that is, if you have configured a pivot table as a form—then during export and import operations of the generic inquiry that the pivot table is based on, this pivot table is not transferred. If you want to have the pivot table transferred with the inquiry, you need to export and then import the pivot table separately on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form.((({S:Danger}When you import a pivot table on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] form, the '''Make Visible on the UI''', '''Site Map Title''', and '''Workspace''', '''Category''' settings are not set.
)))
==Export of Inquiry Results to an XLS File==
You can export top records of inquiry results to XLS file. You specify a number of records to export in the Selection area, in the '''Export Top''' box. By default, in this box, a value is not set. Inquiry results can include thousands of records. Processing of a large number of records impacts server performance and increases the time to perform the inquiry. In this case, you can limit a large number of records by specifying a value in the '''Export Top''' box.((({S:Hint}If you specify the values that can increase the time to process the inquiry and can cause the server performance degradation, the system displays a warning.
)))
==Export of a Generic Inquiry that Is the Source of a Report==
The exported inquiry can be used as a source for building a report by using the Acumatica Report                         Designer tool. You can export a generic inquiry as an RPX file to be used for creating a report in Acumatica Report                         Designer. To do this, on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form with the inquiry selected, click '''Export as Report''' on the form toolbar. The system will export the generic inquiry as an RPX file. The name of the RPX file corresponds to the name in the '''Inquiry Title''' box, but can include only letters and digits. If other symbols are used in the '''Inquiry Title''' box, they are deleted when the name is assigned to the RPX file. The resulting exported file will contain information about the data access classes (DACs) of the generic inquiry, such as the list of DACs, the relations between the DACs, the sort order, and the grouping.]]></column>
			<column name="PlainText"><![CDATA[Transferring an Inquiry: General Information You can transfer a generic inquiry to another company or application instance as an XML         file. To do this, you first need to export the inquiry as an XML file and then need to         import the file in the target company or instance. Besides, you can export a generic inquiry         form as an RPX file. Also, you can export inquiry results (that is, the data in the results grid of a generic         inquiry form) to an XLS file. Later you can transfer these inquiry results to another system         that is not  Acumatica ERP. In Excel, you can perform calculations for some columns and rows. Learning Objectives In this chapter, you will learn how to export and import a generic inquiry form as an XML         file, how to export a generic inquiry form as an RPX file, and how to export inquiry results         to an XLS file. Applicable Scenarios You         are responsible for the customization of  Acumatica ERP in your company, including developing and modifying generic inquiries to give users         information they need to do their jobs.  You need to export an existing         generic inquiry to transfer it to another company or application instance. Export of a Generic Inquiry with Advanced Filters If you export to an XML file a generic inquiry with advanced filters of any type         configured—an advanced personal filter, an advanced shared filter, or an advanced         default filter—the generic inquiry is exported with all of the advanced filters. If         you then import the XML file to another tenant in which a user with the same username         exists, all the filters are available in the generic inquiry results. If a user with another         username imports the XML file, only the advanced shared filters are available for the         user. Export of a Generic Inquiry that a Pivot Table Is Based On If you export to an XML file a generic inquiry for which a pivot table is saved as a filter         tab, the system exports this inquiry with this pivot table. When you import this inquiry,         the system also imports the related pivot table as a filter tab.  If you have configured a pivot table by using the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables         (SM208010) form—that is, if you have configured a pivot table as a form—then         during export and import operations of the generic inquiry that the pivot table is based on,         this pivot table is not transferred. If you want to have the pivot table transferred with         the inquiry, you need to export and then import the pivot table separately on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form. When you import a pivot table on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables         form, the  Make Visible on the UI ,  Site Map           Title , and  Workspace ,  Category          settings are not set. Export of Inquiry Results to an XLS File You can export top records of inquiry results to XLS file. You specify a number of records         to export in the Selection area, in the  Export Top  box. By default,         in this box, a value is not set. Inquiry results can include thousands of records.         Processing of a large number of records impacts server performance and increases the time to         perform the inquiry. In this case, you can limit a large number of records by specifying a         value in the  Export Top  box. If you specify the           values that can increase the time to process the inquiry and can cause the server           performance degradation, the system displays a warning. Export of a Generic Inquiry that Is the Source of a Report The exported inquiry can be used as a source for building a report by using the  Acumatica Report                         Designer tool. You can export a generic inquiry as an RPX file to be used for creating a report in            Acumatica Report                         Designer. To do this, on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form with the         inquiry selected, click  Export as Report  on the form toolbar. The         system will export the generic inquiry as an RPX file. The name of the RPX file corresponds         to the name in the  Inquiry Title  box, but can include only letters         and digits. If other symbols are used in the  Inquiry Title  box, they         are deleted when the name is assigned to the RPX file. The resulting exported file will         contain information about the data access classes (DACs) of the generic inquiry, such as the         list of DACs, the relations between the DACs, the sort order, and the grouping. ]]></column>
		</row>
		<row PageID="a9522553-3ecc-49bc-b1af-a67d1a781157" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="161db23d-1e84-1566-9d08-7faad0240191" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to export an existing inquiry as an XML file and then import the inquiry.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations. Further suppose that your company uses multitenant configuration, and that the predefined Invoices and Memos (AR3010PL) generic inquiry form was deleted from one tenant by mistake. The accounting department that uses the tenant has asked you to recover the inquiry form. You have decided to transfer the predefined generic inquiry form from one tenant of your company to another.
==Process Overview==
To perform this activity, you need two tenants to be configured in your system: the one from which you export the generic inquiry form, and the one to which you import the generic inquiry form. You will configure these tenants during system preparation. (For more information on managing tenants, see [https://help-2020r1.acumatica.com/(W(56))/Help?ScreenId=ShowWiki&pageid=d1270885-9df7-43b2-8f82-6a2074a4f4c1|Managing Tenants].) On one tenant, you will export the Invoices and Memos (AR3010PL) generic inquiry form as an XML file by using the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. Then on another tenant, you import will the XML file with the inquiry.[anchor|#_8cb1d156-615f-45bc-bdeb-8cde5c9b8992]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_e5a88d9d-f3eb-4ea9-9977-46523d0e1427]
#You have installed an Acumatica ERP instance with two tenants that have the ''U100'' dataset. (Although you can name these tenants as you wish, in this activity, they will be referred to as ''U1'' and ''U2'' for simplicity.) A system administrator can perform this task for you.
#You have signed in to the Acumatica ERP tenant ''U1'' with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}User ''gibbs'' is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration.
)))

==Step 1: Exporting the Existing Generic Inquiry==
To export the generic inquiry, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box, select ''AR-Invoices and Memos''.
#On the form toolbar, click '''Clipboard''' > '''Export as XML'''.
#Perform the necessary steps, which depend on your browser and settings, to download the <tt>AR-Invoices and Memos.xml</tt> file with the exported data.

The file is downloaded to the folder that is configured in your browser as a default folder.
==Step 2: Importing the Generic Inquiry==
To import the generic inquiry, do the following:[anchor|#_9e8b2536-da15-442b-ac2a-04e73b242329]
#In the right corner of the top pane on the Acumatica ERP screen, click the User menu button, and select '''Sign Out'''.
#Sign in to Acumatica ERP tenant ''U2'' with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form.
#On the form toolbar, click '''Clipboard''' > '''Import from XML'''.
#In the '''Upload XML File''' dialog box, click '''Choose File''', and select the <tt>AR-Invoices and Memos.xml</tt> file to import.
#Click '''Upload''' to upload the file to the system.

The system saves the generic inquiry automatically.]]></column>
			<column name="PlainText"><![CDATA[Transferring an Inquiry: To Export and Import an Existing Inquiry as XML File In this activity, you will learn how to export an existing inquiry as an XML file and                 then import the inquiry. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations. Further suppose that your company uses multitenant configuration,                 and that the predefined Invoices and Memos (AR3010PL) generic inquiry form was                 deleted from one tenant by mistake. The accounting department that uses the tenant                 has asked you to recover the inquiry form. You have decided to transfer the                 predefined generic inquiry form from one tenant of your company to another. Process Overview To perform this activity, you need two tenants to be configured in your system: the                 one from which you export the generic inquiry form, and the one to which you import                 the generic inquiry form. You will configure these tenants during system                 preparation. (For more information on managing tenants, see  Managing Tenants Managing Tenants.) On one tenant, you will                 export the Invoices and Memos (AR3010PL) generic inquiry form as an XML file by                 using the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. Then on                 another tenant, you import will the XML file with the inquiry. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with two tenants that have the  U100  dataset. (Although you                     can name these tenants as you wish, in this activity, they will be referred to                     as  U1  and  U2  for simplicity.) A system administrator can perform                     this task for you. You have signed in to the  Acumatica ERP tenant  U1  with the following credentials: Username:  gibbs Password:  123 User  gibbs  is assigned the  Administrator                          role, which has sufficient access rights to manage system                         configuration. Step 1: Exporting the Existing Generic Inquiry To export the generic inquiry, do the following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box, select  AR-Invoices and                         Memos . On the form toolbar, click  Clipboard Export as XML . Perform the necessary steps, which depend on your browser and settings, to                     download the  AR-Invoices and Memos.xml  file with the                     exported data. The file is downloaded to the folder that is configured in your browser as a default                 folder. Step 2: Importing the Generic Inquiry To import the generic inquiry, do the following: In the right corner of the top pane on the  Acumatica ERP screen, click the User menu button, and select  Sign                         Out . Sign in to  Acumatica ERP tenant  U2  with the following credentials: Username:  gibbs Password:  123 Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form. On the form toolbar, click  Clipboard Import from XML . In the  Upload XML File  dialog box, click                          Choose File , and select the  AR-Invoices and                         Memos.xml  file to import. Click  Upload  to upload the file to the system. The system saves the generic inquiry automatically. ]]></column>
		</row>
		<row PageID="3742f4d4-2895-4624-83bb-dd923cba2028" Language="en-US" PageRevisionID="1" Content="In Acumatica ERP, a generic inquiry is a customizable data inquiry form that you can create. The creation of a generic inquiry consists of number of stages.&#xA;In the topics of this chapter, you will learn what the inquiry development stages are and how to create a simple inquiry." PlainText="Creating a Generic Inquiry In  Acumatica ERP, a generic inquiry is a customizable data inquiry form that you can create. The creation of       a generic inquiry consists of number of stages. In the topics of this chapter, you will         learn what the inquiry development stages are and how to create a simple inquiry. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="80306717-d89b-77ee-92dc-cb7447a95166" RecordSourceID="22377" />
		<row PageID="4bea05b9-faf4-4071-a24b-c1bc87135a07" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="bfe977b4-dd71-9696-ce80-325bce23a9a9" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A generic inquiry collects the data from the Acumatica ERP database based on the settings you specify when you design the inquiry. It then sorts, filters, and displays the inquiry results according to the settings you have specified, so that a user does not have to perform all these steps manually. Because generic inquiries provide so much flexibility, the inquiry design process depends on your organization’s specific business needs.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to do the following:[anchor|#_0d2d07b2-26fe-4503-82cc-70c0eecbeb2b]
*Prepare to create an inquiry 
*Create a simple inquiry with one table
*Publish an inquiry
{br}{TOC}
==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, including developing and modifying generic inquiries to give users information they need to do their jobs. You need to deliver different inquiry forms that your colleagues may need for getting their jobs done.
==Preparation for Creating a Generic Inquiry==
To design a generic inquiry in Acumatica ERP, you need to have general knowledge of data access classes (DACs). In Acumatica ERP, the data is stored in a database, but users do not access the database directly; instead, they access it through data access classes. When building inquiries, you retrieve data from the data access classes rather than working with the database tables directly. {br}

Before you begin creating the generic inquiry, you gather the needed information by doing the following:[anchor|#_7e7fc309-c9f4-4336-a962-9dab22d46887]
#''Identifying the DACs to be used for the inquiry'': The data to be used in a generic inquiry is available through DACs, which represent specific data from the system database. Based on the business needs the inquiry will meet, you need to decide what general type of data you want to collect from the system database in order to list it in the results grid of the inquiry form. Thus, you need to know on which form this data is entered.
#''Inspecting UI elements to find the DACs and data fields'': Based on the data you will use in the generic inquiry, you have to open the data entry forms where the data is entered and explore the user interface elements of the forms to find out which classes and data fields you can use to access this data. 
#:For example, to discover the data access class that provides access to the sales order numbers, you need to inspect the form elements of the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form.

For more information, see [HelpRoot_ReportingTools\GI_Discovering_DACs_General_Info|Discovering DACs: General Information].
==Creation of a Generic Inquiry==
To create a generic inquiry, you perform the following general steps:[anchor|#_7e21b20e-79a0-4568-8f9a-8fe712528be2]
#Creating a generic inquiry: You create a generic inquiry on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. For easier navigation between inquiries, we recommend that your organization define and follow naming conventions for the inquiry identifiers that you will enter in the '''Inquiry Title''' box. 
#:((({S:Hint}On this form, if you define user-selectable parameters that give users the ability to narrow the inquiry results, you can optionally specify the number of columns in which the inquiry parameters will be arranged on the resulting generic inquiry form, the maximum number of records to be displayed in the inquiry results, and the number of records to be displayed on every page of the inquiry results.
)))
#Specifying DACs: On the '''Tables''' tab of this form, you select the DACs (which are referred to as ''tables'' in most user interface elements) to be used in your generic inquiry. For each table, you specify a value in the '''Alias''' column. This value will be used in SQL statements to designate the table. You can type the value in the '''Alias''' column manually or leave it empty; if you do not specify a value, the value from the '''Table Name''' column will be used instead.
#Configuring the results grid: On the '''Results Grid''' tab of the form, you select the column values from the DACs to display data. On this tab, you can specify how the results of the search in the database tables should be displayed, with each row on this tab corresponding to a column in the results grid of the inquiry form. You can specify formulas in the '''Data Field''' column to calculate the values of columns in the results grid by using the Formula Editor dialog box. In this dialog box, the formula can be entered directly in the formula editing area or composed by selecting fields and using operators and functions. For details, see [HelpRoot_ReportingTools\GI_Modifying_Inquiry_Results_General_Info|Modifying Inquiry Results: General Information] and [HelpRoot_ReportingTools\GI_Using_Formulas_General_Info|Using Formulas: General Information].

==Preview of Generic Inquiry==
After you have completed the basic steps of creating the generic inquiry on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form and saved the settings you have specified on the form, you can preview the inquiry to make sure it meets your expectations. You can preview an inquiry directly from this form by clicking the eye icon on the side panel of the form. In this case, the system displays the resulting generic inquiry form on the panel in the same browser tab. You can also preview an inquiry by clicking the '''View Inquiry''' button on the form toolbar. In this case, the system displays inquiry results in a new browser tab.
==Refinement of a Generic Inquiry==
The creation of a generic inquiry can involve additional specifications, based on the business needs of the users. In this case, you can use other tabs of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form to achieve the needed results, previewing the refined inquiry form as you make changes.{br}

To further refine the generic inquiry you are designing, you can use the following functionality:[anchor|#_647eb148-e7be-493b-98ad-d1a7e74a084f]
#Table relations: You can specify table relations between data access classes on the '''Relations''' tab, so that the system can generate SQL requests to get the required data from the tables involved. In the '''Table Relations''' area of this tab, you can specify the relations between '''Parent''' and '''Child''' tables by selecting a '''Join Type'''. In the '''Data Field Links for Active Relations''' area of this tab, for each pair of related tables, you can specify the '''Link Condition''' between the columns of the tables. 
#Parameters: On the '''Parameters''' tab, you select and configure the parameters to be placed in the Selection area of the generic inquiry form. The user can make selections in this area to filter the data displayed in the table. For more details about the parameters and conditions, see [HelpRoot_ReportingTools\GI_Conditions_and_Parameters_General_Info|Using Conditions and Parameters: General Information].
#Conditions: You can use the '''Conditions''' tab to specify conditions that filter the data to be displayed. For example, an inquiry displaying a customer&rsquo;s balance, based on the specified conditions, can hide invoices with a balance of zero. For more details about the parameters and conditions, see [HelpRoot_ReportingTools\GI_Conditions_and_Parameters_General_Info|Using Conditions and Parameters: General Information].
#Sorting: You can use the '''Sort Order''' tab to specify how the inquiry data is sorted—that is, the default order in which the results should be displayed on the inquiry form. For more details about the sorting and grouping, see [HelpRoot_ReportingTools\GI_Sorting_and_Grouping_Mapref|Applying Sorting and Grouping].
#Grouping: You can group inquiry data by specifying grouping conditions on the '''Grouping''' tab. For example, you can group sales orders by date and status to get the count of sales orders, and their total and average amounts for each day and each status. 
#Navigation: On the '''Navigation''' tab, you can optionally configure inquiry columns to contain links to Acumatica ERP forms. For example, you can configure a generic inquiry so that a user will be able to open the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form with the details of a particular document in a new browser tab or in the side panel by clicking the link in the '''Reference Nbr.''' column of the inquiry. For details, see [HelpRoot_ReportingTools\GI_Enabling_Navigation_General_Info|Configuring Navigation: General Information].
#Entry point: By using the '''Entry Point''' tab, you can optionally define the generic inquiry to be an entry point (that is, a substitute form) instead of the existing primary Acumatica ERP form. If you do this, when a user clicks the name of the primary form while navigating or searching, the system will open the generic inquiry form containing the list of records, and when you click the name of a record in the list, the primary form will open with that record selected. For more details about making a generic inquiry an entry point, see [HelpRoot_ReportingTools\GI_Gi_as_Entry_Point_Mapref|Making a Generic Inquiry a Substitute Form].

==Publication of a Generic Inquiry==
When an inquiry has been created and all the necessary settings have been specified, you can preview and then publish it, so that it can be used by other users. To publish the generic inquiry form, on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you select the '''Make Visible on the UI''' check box for the generic inquiry to be published. The system automatically assigns the default workspace (that is, ''Data Views'') and the default category (that is, ''Inquiries'') to this inquiry form, but you can override these settings at any time. For details on the automatic assignment of a workspace and category, see [HelpRoot_Interface\UIG__con_New_UI_Categories_Workspaces|Categories and Workspaces for Entities of Specific Forms].((({S:Warn}For details on the publication of a generic inquiry that is configured as a substitute form, see [HelpRoot_ReportingTools\GI_Gi_as_Entry_Point_Mapref|Making a Generic Inquiry a Substitute Form].
)))
When you save the inquiry with the '''Make Visible on the UI''' check box selected, the system assigns the inquiry form an automatically generated screen ID in a format similar to that of the screen IDs of other forms in the system, with ''GI'' as the two-letter module code, followed by a six-digit number that is one greater than the number portion of the most recently assigned screen ID for a generic inquiry. The system then adds the inquiry form to the site map so that it can be accessed from the specified workspace.{br}

To change the automatically assigned screen identifier of a generic inquiry, you can click the '''Change Screen ID''' button on the form toolbar of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form. In the dialog box that opens, you enter the new screen ID for the generic inquiry. If this screen ID is not unique, the system displays an error and prompts you to enter another screen ID.
If you change a screen ID for a generic inquiry, the system changes this screen ID in all the system objects that are related to this generic inquiry.((({S:Hint}The screen ID, title, workspace, and category of an inquiry can be modified on the [HelpRoot_FormReference\SM_20_05_20|Site Map] ([~/?ScreenId=SM200520|SM200520]) form.
)))
==Specification of Access Rights to the Generic Inquiry==
After you have published the generic inquiry, you can manage access rights to generic inquiries. On the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form, you select a role and select one of the predefined levels of access rights. For more information, see [HelpRoot_ReportingTools\GI_Access_Rights_Mapref|Managing Access Rights To Generic Inquiries].
==Modification of a Published Generic Inquiry==
Users of a published generic inquiry form or their supervisors may request changes to the form.((({S:Hint}In some cases, you will modify the generic inquiry directly. In other situations, you will leave the original inquiry intact, copy it, and make changes to a copy of it.
)))
If you want to modify a generic inquiry form, you can temporarily hide it (that is, make it not visible to other users). To temporarily hide the inquiry, you clear the values of the '''Workspace''' and '''Category''' boxes on the [HelpRoot_FormReference\SM_20_05_20|Site Map] ([~/?ScreenId=SM200520|SM200520]) form or on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.((({S:Danger}We strongly recommend that on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you leaving the '''Make Visible on the UI''' check box selected for an inquiry that has been published already. Clearing the check box also clears the value of the '''Screen ID''' box, which may cause issues with the widgets or pivot tables based on the published inquiry.
)))]]></column>
			<column name="PlainText"><![CDATA[Creating a Generic Inquiry: General Information A generic inquiry collects the data from the  Acumatica ERP database based on the settings you specify when you design the inquiry. It then sorts,         filters, and displays the inquiry results according to the settings you have specified, so         that a user does not have to perform all these steps manually. Because generic inquiries         provide so much flexibility, the inquiry design process depends on your organization’s         specific business needs. Learning Objectives In this chapter, you will learn how to do the following: Prepare to create an inquiry  Create a simple inquiry with one table Publish an inquiry Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company, including developing and modifying generic inquiries to give users         information they need to do their jobs. You need to deliver different inquiry forms that         your colleagues may need for getting their jobs done. Preparation for Creating a Generic Inquiry To design a generic inquiry in  Acumatica ERP,          you need to have general knowledge of data access classes (DACs). In  Acumatica ERP, the data is stored in a database, but users do not access the database directly;         instead, they access it through data access classes. When building inquiries, you retrieve         data from the data access classes rather than working with the database tables directly.  Before you begin creating the generic inquiry, you gather the needed information by doing         the following: Identifying the DACs to be used for the inquiry : The data to be used in a generic           inquiry is available through DACs, which represent specific data from the system database.           Based on the business needs the inquiry will meet, you need to decide what general type of           data you want to collect from the system database in order to list it in the results grid           of the inquiry form. Thus, you need to know on which form this data is entered. Inspecting UI elements to find the DACs and data fields : Based on the data you           will use in the generic inquiry, you have to open the data entry forms where the data is           entered and explore the user interface elements of the forms to find out which classes and           data fields you can use to access this data.  For example, to discover the data access             class that provides access to the sales order numbers, you need to inspect the form             elements of the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders (SO301000) form. For more information, see  Discovering DACs: General Information. Creation of a Generic Inquiry To create a generic inquiry, you perform the following general steps: Creating a generic inquiry: You create a generic inquiry on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. For easier navigation between           inquiries, we recommend that your organization define and follow naming conventions for           the inquiry identifiers that you will enter in the  Inquiry Title            box.  On this form, if you define user-selectable parameters that give             users the ability to narrow the inquiry results, you can optionally specify the number             of columns in which the inquiry parameters will be arranged on the resulting generic             inquiry form, the maximum number of records to be displayed in the inquiry results, and             the number of records to be displayed on every page of the inquiry results. Specifying DACs: On the  Tables  tab of this form, you select the           DACs (which are referred to as  tables  in most user interface elements) to be used           in your generic inquiry. For each table, you specify a value in the              Alias  column. This value will be used in SQL statements to           designate the table. You can type the value in the  Alias  column manually or leave it empty;           if you do not specify a value, the value from the  Table Name  column           will be used instead. Configuring the results grid: On the  Results Grid  tab of the           form, you select the column values from the DACs to display data. On this tab, you can           specify how the results of the search in the database tables should be displayed, with           each row on this tab corresponding to a column in the results grid of the inquiry form.           You can specify formulas in the  Data Field  column to calculate the           values of columns in the results grid by using the Formula Editor dialog box. In this           dialog box, the formula can be entered directly in the formula editing area or composed by           selecting fields and using operators and functions. For details, see  Modifying Inquiry Results: General Information and  Using Formulas: General Information. Preview of Generic Inquiry After you have completed the basic steps of creating the generic inquiry on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form and saved the         settings you have specified on the form, you can preview the inquiry to make sure it meets         your expectations. You can preview an inquiry directly from this form by clicking the eye         icon on the side panel of the form. In this case, the system displays the resulting generic         inquiry form on the panel in the same browser tab. You can also preview an inquiry by         clicking the  View Inquiry  button on the form toolbar. In this case,         the system displays inquiry results in a new browser tab. Refinement of a Generic Inquiry The creation of a generic inquiry can involve additional specifications, based on the         business needs of the users. In this case, you can use other tabs of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form to achieve the needed results,         previewing the refined inquiry form as you make changes. To further refine the generic inquiry you are designing, you can use the following         functionality: Table relations: You can specify table relations between data access classes on the              Relations  tab, so that the system can generate SQL requests to           get the required data from the tables involved. In the  Table             Relations  area of this tab, you can specify the relations between  Parent  and  Child            tables by selecting a  Join Type . In the  Data Field Links             for Active Relations  area of this tab, for each pair of related tables, you           can specify the  Link Condition  between the columns of the tables.  Parameters: On the  Parameters  tab, you select and configure the           parameters to be placed in the Selection area of the generic inquiry form. The user can           make selections in this area to filter the data displayed in the table. For more details           about the parameters and conditions, see  Using Conditions and Parameters: General Information. Conditions: You can use the  Conditions  tab to specify conditions           that filter the data to be displayed. For example, an inquiry displaying a customer's           balance, based on the specified conditions, can hide invoices with a balance of zero. For           more details about the parameters and conditions, see  Using Conditions and Parameters: General Information. Sorting: You can use the  Sort Order  tab to specify how the           inquiry data is sorted—that is, the default order in which the results should be displayed           on the inquiry form. For more details about the sorting and grouping, see  Applying Sorting and Grouping. Grouping: You can group inquiry data by specifying grouping conditions on the              Grouping  tab. For example, you can group sales orders by date and           status to get the count of sales orders, and their total and average amounts for each day           and each status.  Navigation: On the  Navigation            tab, you can optionally configure inquiry columns to contain links to  Acumatica ERP forms. For example, you can configure a generic inquiry so that a user will be able to           open the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form with the details of           a particular document in a new browser tab or in the side panel by clicking the link in           the  Reference Nbr.  column of the inquiry. For details, see  Configuring Navigation: General Information. Entry point: By using the  Entry Point  tab, you can optionally           define the generic inquiry to be an entry point (that is, a substitute form) instead of           the existing primary  Acumatica ERP form. If you do this, when a user clicks the name of the primary form while navigating           or searching, the system will open the generic inquiry form containing the list of           records, and when you click the name of a record in the list, the primary form will open           with that record selected. For more details about making a generic inquiry an entry point,           see  Making a Generic Inquiry a Substitute Form. Publication of a Generic Inquiry When an inquiry has been created and all the necessary settings have been specified, you         can preview and then publish         it,          so that it can be used by other users . To         publish the generic inquiry form, on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you select the  Make Visible on the           UI  check box for the generic inquiry to be published. The system automatically         assigns the default workspace (that is,  Data Views ) and the default category (that         is,  Inquiries ) to this inquiry form, but you can override these settings at any time.         For details on the automatic assignment of a workspace and category, see  Categories and Workspaces for Entities of Specific Forms. For details on the publication of a generic inquiry that is configured         as a substitute form, see  Making a Generic Inquiry a Substitute Form. When you save the inquiry with the  Make Visible on the UI  check box         selected, the system assigns the inquiry form an automatically generated screen ID in a         format similar to that of the screen IDs of other forms in the system, with  GI  as the         two-letter module code, followed by a six-digit number that is one greater than the number         portion of the most recently assigned screen ID for a generic inquiry. The system then adds         the inquiry form to the site map so that it can be accessed from the specified         workspace. To change the automatically assigned screen identifier of a generic inquiry, you can click         the  Change Screen ID  button on the form toolbar of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form. In the dialog box that opens, you enter the         new screen ID for the generic inquiry. If this screen ID is not unique, the system displays         an error and prompts you to enter another screen ID. If you change a screen ID for a generic inquiry, the system changes this screen ID in all         the system objects that are related to this generic inquiry. The screen ID, title, workspace, and category of an inquiry can be modified         on the   ([~/?ScreenId=SM200520|SM200520]) Site Map (SM200520) form. Specification of Access Rights to the Generic Inquiry After you have published the generic inquiry, you can manage access rights to generic         inquiries. On the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020) form, you select a         role and select one of the predefined levels of access rights. For more information, see            Managing Access Rights To Generic Inquiries. Modification of a Published Generic Inquiry Users of a published generic inquiry form or their supervisors may request changes to the         form. In some cases, you will modify the generic inquiry directly. In other         situations, you will leave the original inquiry intact, copy it, and make changes to a copy         of it. If you want to modify a generic inquiry form, you can temporarily hide it (that is, make it         not visible to other users). To temporarily hide the inquiry, you clear the values of the            Workspace  and  Category  boxes on the   ([~/?ScreenId=SM200520|SM200520]) Site Map (SM200520) form or on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. We strongly recommend that on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you leaving the            Make Visible on the UI  check box selected for an inquiry that has         been published already. Clearing the check box also clears the value of the            Screen ID  box, which may cause issues with the widgets or pivot         tables based on the published inquiry. ]]></column>
		</row>
		<row PageID="4b966d58-7aac-4b80-b529-6cfb0f1025ac" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="0342fee7-e747-f112-8427-a222e2c45f34" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create a simple generic inquiry that collects data from one data access class (DAC). The activity describes the steps of designing a sample generic inquiry for testing purposes, so that you can develop a better understanding of the process.{br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including the creation and modification of generic inquiry forms. An accountant of your company has requested an inquiry form that collects data about invoices and memos. You have offered the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, but the accountant instead wants a simpler inquiry that displays columns with the document type, reference number, and the balance of the invoice with that number. The accountant has asked you to leave the default access rights to the inquiry.
==Process Overview==
The generic inquiry that you are going to create will have three columns to display the invoice reference number, the balance, and the document type. Thus, you will start by inspecting the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form to explore which data access classes you can use to access the needed data.{br}

Once you obtain these details, you will create a generic inquiry on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form and configure its results grid (that is, the columns and rows with data to be displayed).{br}

When the inquiry has been created and all the necessary settings have been specified, you preview and then publish the inquiry.[anchor|#_2477a74a-f1a1-4bac-be02-954cf10ff844]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_4573c39d-c628-40f5-b92e-d08baf75c648]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Discovering DACs and Data Fields==
To inspect user interface elements, do the following:[anchor|#_8c8d4b6d-f5c6-4567-b0a2-5fe2e7993f6a]
#Open the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form.
#Point to the '''Reference Nbr.''' element, press Ctrl+Alt, and then click. The '''Element Properties''' dialog box opens. You are interested in two elements, '''Data Class''' and '''Data Field'''; these elements correspond to the data access class and data field you need, which are, respectively, ''ARInvoice'' and ''RefNbr''. 
#:((({S:Hint}As an alternative, you can click '''Customization''' > '''Inspect Element''' on the form title bar and then click the '''Reference Nbr.''' element.
)))
#While you are pointing at the '''Balance''' element, press Ctrl+Alt and click to quickly open the '''Element Properties''' dialog box. Notice that the '''Data Class''' is again ''ARInvoice'', while the '''Data Field''' is ''CuryDocBal''. 
#Inspect the '''Type''' element, and notice that its '''Data Field''' is ''DocType'' and that the '''Data Class''' is again ''ARInvoice''.
#:You have discovered that the data access class you need is ''ARInvoice'' and the data fields you need are ''DocType'', ''RefNbr'', and ''CuryDocBal''.

==Step 2: Creating the Generic Inquiry==
To begin the process of creating the generic inquiry, do the following: [anchor|#ol_uw1_g5f_ms]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the Summary area, in the '''Inquiry Title''' box, type the name for the inquiry: <tt>DB-SampleGenericInquiry</tt>.
#Leave the '''Select Top x Records''' box blank, so that you can display all the inquiry results.
#On the '''Tables''' tab, do the following:
##On the table toolbar, click '''Add Row'''.
##In the '''Table Name''' column of the added row, select ''PX.Objects.AR.ARInvoice''. (In this example, you need to add a row for only this DAC, because the fields that are going to be used are in this DAC.) 
##:((({S:Hint}The list has about 600 DACs, so in the lookup table, you should use the Search box (upper right) to find the DAC.
)))
##In the '''Alias''' column, type <tt>ARInvoice</tt>.
#On the form toolbar, click '''Save'''.

==Step 3: Configuring the Results Grid==
 To configure the results grid (that is, the columns showing the data in the generic inquiry form), do the following: [anchor|#ol_ovb_g5f_ms]
#On the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form with ''DB-SampleGenericInquiry'' selected, on the form toolbar, click '''Add Row''' to add a new row, and do the following:
#:((({S:Hint}To speed up the selection of items from the list, start typing the names of the values. The system will filter the list based on your input.
)))
##In the '''Object''' column of the added row, select ''ARInvoice''.
##In the '''Data Field''' column, select ''DocType''.
#Again click '''Add Row''' to add a new row, and do the following:
##In the '''Object''' column of the added row, select ''ARInvoice''.
##In the '''Data Field''' column, select ''RefNbr''.
#Again click '''Add Row''' to add a new row, and do the following:
##In the '''Object''' column of the added row, select ''ARInvoice''.
##In the '''Data Field''' column, select ''CuryDocBal''.
#:Notice that the '''Visible''' and '''Default Navigation''' check boxes are selected by default for all rows. That is, the system will display the added columns in the inquiry.
# On the form toolbar, click '''Save'''.

==Step 4: Previewing the Generic Inquiry Form==
To preview the generic inquiry form you have created, click the eye icon on the side panel of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form while you are viewing the generic inquiry.
==Step 5: Making the New Inquiry Visible to Other Users==
To add the inquiry you have created to the site map, do the following:[anchor|#_8858dc4f-e64e-4328-9d38-d3b1d56b161c]
#On the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, open the ''DB-SampleGenericInquiry'' generic inquiry to be published.
#Select the '''Make Visible on the UI''' check box in the Summary area of the form.
#:The system automatically assigns the default workspace (''Data Views'') and category (''Inquiries'') to the inquiry, which you can override any time. 
#In the '''Site Map Title''' box, modify the inquiry title, if it is needed.
#On the form toolbar, click '''Save'''.
#:Note that the '''Screen ID''' box is populated with the identifier of the generic inquiry. The system assigns the inquiry form an automatically generated identifier in a format similar to that of the screen identifiers of other forms, with ''GI'' as the two-letter module code: ''GI0000mn''. When the identifier is assigned, the system adds the inquiry to the site map and it can be accessed from the workspace.
#In the main menu, select the '''Data Views''' menu item, and under the '''Inquiries''' category, make sure the created inquiry is listed.
]]></column>
			<column name="PlainText"><![CDATA[Creating a Generic Inquiry: To Create an Inquiry Based on One DAC In this activity, you will learn how to create a simple generic inquiry that collects                 data from one data access class (DAC). The activity describes the steps of designing                 a sample generic inquiry for testing purposes, so that you can develop a better                 understanding of the process. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including the creation and modification of generic inquiry forms. An                 accountant of your company has requested an inquiry form that collects data about                 invoices and memos. You have offered the predefined Invoices and Memos (AR3010PL)                 generic inquiry form, which has the  AR-Invoices and Memos  inquiry title and                 the  Invoices and Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, but the accountant                 instead wants a simpler inquiry that displays columns with the document type,                 reference number, and the balance of the invoice with that number. The accountant                 has asked you to leave the default access rights to the inquiry. Process Overview The generic inquiry that you are going to create will have three columns to display                 the invoice reference number, the balance, and the document type. Thus, you will                 start by inspecting the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form                 to explore which data access classes you can use to access the needed data. Once you obtain these details, you will create a generic inquiry on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form and                 configure its results grid (that is, the columns and rows with data to be                 displayed). When the inquiry has been created and all the necessary settings have been specified,                 you preview and then publish the inquiry. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Discovering DACs and Data Fields To inspect user interface elements, do the following: Open the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos                     (AR301000) form. Point to the  Reference Nbr.  element, press Ctrl+Alt, and                     then click. The  Element Properties  dialog box opens. You                     are interested in two elements,  Data Class  and                          Data Field ; these elements correspond to the data                     access class and data field you need, which are, respectively,  ARInvoice                      and  RefNbr .  As an alternative, you can click  Customization Inspect Element  on the form title bar and then click the  Reference                             Nbr.  element. While you are pointing at the  Balance  element, press                     Ctrl+Alt and click to quickly open the  Element Properties                      dialog box. Notice that the  Data Class  is again                          ARInvoice , while the  Data Field  is                          CuryDocBal .  Inspect the  Type  element, and notice that its                          Data Field  is  DocType  and that the                          Data Class  is again  ARInvoice . You have                         discovered that the data access class you need is  ARInvoice  and the                         data fields you need are  DocType ,  RefNbr , and                              CuryDocBal . Step 2: Creating the Generic Inquiry To begin the process of creating the generic inquiry, do the following:  Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the Summary area, in the  Inquiry Title  box, type the                     name for the inquiry:  DB-SampleGenericInquiry . Leave the  Select Top x Records  box blank, so that you can                     display all the inquiry results. On the  Tables  tab, do the following: On the table toolbar, click  Add Row . In the  Table Name  column of the added row, select                                  PX.Objects.AR.ARInvoice . (In this example, you need to add a                             row for only this DAC, because the fields that are going to be used are                             in this DAC.)  The list has about 600 DACs, so in the                                 lookup table, you should use the Search box (upper right) to find                                 the DAC. In the  Alias  column, type                                  ARInvoice . On the form toolbar, click  Save . Step 3: Configuring the Results Grid  To configure the results grid (that is, the columns showing the data in the generic                 inquiry form), do the following:  On the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form with                          DB-SampleGenericInquiry  selected, on the form toolbar, click                          Add Row  to add a new row, and do the following: To speed up the selection of items from the list, start typing                         the names of the values. The system will filter the list based on your                         input. In the  Object  column of the added row, select                                  ARInvoice . In the  Data Field  column, select                              DocType . Again click  Add Row  to add a new row, and do the                         following: In the  Object  column of the added row, select                                  ARInvoice . In the  Data Field  column, select                              RefNbr . Again click  Add Row  to add a new row, and do the                         following: In the  Object  column of the added row, select                                  ARInvoice . In the  Data Field  column, select                                  CuryDocBal . Notice that the  Visible  and  Default                             Navigation  check boxes are selected by default for all rows.                         That is, the system will display the added columns in the inquiry.  On the form toolbar, click  Save . Step 4: Previewing the Generic Inquiry Form To preview the generic inquiry form you have created, click the eye icon on the side                 panel of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form while you                 are viewing the generic inquiry. Step 5: Making the New Inquiry Visible to Other Users To add the inquiry you have created to the site map, do the following: On the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)                     form, open the  DB-SampleGenericInquiry  generic inquiry to be                     published. Select the  Make Visible on the UI  check box in the                     Summary area of the form. The system automatically assigns the default                         workspace ( Data Views ) and category ( Inquiries ) to the                         inquiry, which you can override any time.  In the  Site Map Title  box, modify the inquiry                     title ,                     if it is needed . On the form toolbar, click  Save . Note that the                              Screen ID  box is populated with the identifier of                         the generic inquiry. The system assigns the inquiry form an automatically                         generated identifier in a format similar to that of the screen identifiers                         of other forms, with  GI  as the two-letter module code:                              GI0000mn . When the identifier is assigned, the system adds the                         inquiry to the site map and it can be accessed from the workspace. In the main menu, select the  Data Views  menu item, and                     under the  Inquiries  category, make sure the created                     inquiry is listed. ]]></column>
		</row>
		<row PageID="ede6eaa7-9e60-41dc-9c30-2bb6e18ea2c6" Language="en-US" PageRevisionID="1" Content="&#xA;In most cases, a generic inquiry you are creating needs to display the data of some entity combined with the data of other related entities, so that the users of the inquiry form can explore the relationships between different types of entities. Thus, you need to combine data from multiple data access classes (DACs), which are referred to as ''tables'' on the user interface of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. {br}&#xA;&#xA;In the topics of this chapter, you will learn how to create a generic inquiry that uses data from two tables." PlainText="Getting Data from Multiple DACs In most cases, a generic inquiry you are creating needs to display the data of some entity     combined with the data of other related entities, so that the users of the inquiry form can     explore the relationships between different types of entities. Thus, you need to combine data     from multiple data access classes (DACs), which are referred to as  tables  on the user     interface of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form.  In the topics of this chapter, you will learn how to create a generic inquiry that uses data     from two tables. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a848a034-7e11-26d8-33ec-75947efaa329" RecordSourceID="22377" />
		<row PageID="6b3546f4-43f3-4adc-b63a-292384571415" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3749543d-f41a-a02b-1ccc-cb4dc02ea3c7" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In most cases, generic inquiry forms need to give users the ability to review the data of some entity along with the data from other related entities. For example, suppose that you are creating a generic inquiry that lists open sales orders by customer. To build such an inquiry, you need to combine data from two data access classes (DACs): one that holds information about sales orders, and another that holds information about customers. For details on data access classes, which are referred to as ''tables'' on the user interface of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, see [HelpRoot_ReportingTools\GI_Discovering_DACs_General_Info|Discovering DACs: General Information].((({S:Hint}We recommend that before you work with table relations, you obtain basic knowledge of SQL (which is used for storing, manipulating, and retrieving data in databases), so that you can understand how inquiries retrieve data.
))){br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to retrieve data from multiple related data access classes.
==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, including developing and modifying generic inquiries to give users information they need to do their jobs. You need to deliver different inquiries that your colleagues may need to perform their jobs effectively. Many of these inquiries require the retrieval of data from multiple related data access classes.
==Construction of a Data Request from Multiple Tables==
You perform the following general steps to build a data request from multiple tables:[anchor|#_0384aa06-698f-4147-82f6-5cb7d85770c2]
#Inspect the related forms (that is, the data entry forms of the data you will use) to determine the list of data access classes and fields you need to have in the results grid and use in formulas.
#Select a parent and child table.
#Specify the parent and child table in the system.
#Specify a join type between the parent and child table. 
#Discover the key fields of the data access classes you have determined for your inquiry.
#Specify links between the key fields of the parent and child table.

If you want to use more than two tables in your inquiry, you repeat Steps 2–6 for each pair of tables that you are going to use in your generic inquiry.{br}

You can perform Steps 5–6 automatically, by means of the '''Related Tables''' dialog box, or manually. You can also change automatically configured settings by using the instructions for the manual procedure. For more information, see [HelpRoot_ReportingTools\GI_Manual_Configuration_of_Relations_Concept|Getting Data from Multiple DACs: Manual Configuration of Relations Between Tables].
==Selection of a Parent and Child Table==
After you have determined all tables you need for your inquiry, you need to decide which table is considered the parent table and which is the child one. Usually, the parent table is the one that provides the primary data and the child table provides additional information. For example, for an inquiry that lists sales orders by customers, you specify {{SOOrder}} as the parent table, because the primary data that the inquiry is displaying is provided by the {{SOOrder}} class. The {{Customer}} class provides additional information, so you select it as the child table.
==Specification of the Parent and Child Table==
You can specify the parent and child tables on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form in the following ways:[anchor|#_3bd70083-d965-4005-9be3-94a3839c5141]
*On the '''Relations''' tab, by selecting a parent table in the '''Parent Table''' column and a child table in the '''Child Table''' column. The drop-down lists in these columns include the tables that you have added on the '''Tables''' tab.
*In the '''Related Tables''' dialog box, which opens when you click '''Add Related Table''' on the table toolbar of the '''Tables''' or '''Relations''' tab.

We recommend that you use the '''Related Tables''' dialog box to specify the parent and child tables, because only in this case will the system automatically configure relations between these tables.{br}

In the '''Related Tables''' dialog box, you do the following:[anchor|#_3cd08316-d7a3-4e33-b723-c04b14d0fba7]
#Specify the parent table: You select the parent table in the list of tables and then click '''Select Parent Table''' on the table toolbar. To find the necessary parent table in the list, you can use the search box below the list. As a result, the name of the selected table is displayed in the '''Parent Table''' box (at the top of the dialog box).
#:((({S:Hint} If you opened the '''Related Tables''' dialog box (by clicking '''Add Related Table''' on the table toolbar on the '''Tables''' tab) when a table was first selected on the '''Tables''' tab, then the name of this table is already selected as a value in the '''Parent Table''' box.
)))
#Specify a child table. (You can select a child table only after selecting a parent table.) You select a child table in the list of tables (which includes only the tables that can be linked to the selected parent table) and then click '''Select Child Table''' on the table toolbar. As a result, the name of the selected table is displayed in the '''Child Table''' box (at the top of the dialog box).
#:Tables in the system are linked by means of key fields. A key field is a field in a record that holds unique data that identifies that record from all the other records in the database. The information about the key fields of the data access classes you need is stored in the source code.
#:As with a parent table, to find the necessary child table in the list, you can use the search box below the list.

You can manage the column set to be displayed in the list of tables by using the '''Column Configuration''' dialog box. You click the Column Configuration button, which is located in the header row of the leftmost table column, to open this dialog box. For example, you can add the '''Description''' column, which contains the data access class description and can be useful when you select tables.{br}

In the '''Related Tables''' dialog box, you can select the '''Include Hidden Tables''' check box to include hidden tables in the list of tables for selecting a parent or child table.
==Automatic Configuration of a Relation Between a Pair of Tables==
When you have specified the parent table and the child table in the '''Related Tables''' dialog box, the system does the following:[anchor|#_6c86dda7-fec9-413b-8a61-ba52ffff9b91]
*Automatically assigns and displays aliases for the tables in the '''Alias''' box next to the '''Parent Table''' box and the '''Child Table''' box.
*Displays the relation between the parent table and the child table in the '''Relation''' box. The relation is described as a part of the SQL statement and includes a type of join and data field links. By default, the ''Inner'' join type is used.

To approve the specified configuration and close the '''Related Tables''' dialog box, you click the '''Add''' button in the bottom right. As a result, the system does the following:[anchor|#_e68c76c4-b4c4-4792-8427-ae4611abfc62]
*Adds the parent and child tables on the '''Table''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form
*Adds the relation on the '''Relations''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form

After the relation between the pair of tables has been configured, you can change the following setting that have been inserted by the system:[anchor|#_2bed9dc6-6006-4855-b886-3c96a47250fe]
*Join type: On the '''Relations''' tab, in the '''Join Type''' column of the '''Table Relations''' table.
*Data field links: On the '''Relations''' tab, in the '''Data Field Links for Active Relation''' table.

At any time after the relation between the parent and child tables has been configured, you can view the relation by clicking '''Browse for Relations''' on the table toolbar of the '''Data Field Links for Active Relation''' table on the '''Relations''' tab. In this case, the system displays the '''Related Tables''' dialog box with the boxes filled in with values. Even though the boxes in the '''Related Tables''' dialog box are filled with values, in this dialog box, you can configure the relation between a new pair of tables.]]></column>
			<column name="PlainText"><![CDATA[Getting Data from Multiple DACs: General Information In most cases, generic inquiry forms need to give users the ability to review the data of         some entity along with the data from other related entities. For example, suppose that you         are creating a generic inquiry that lists open sales orders by customer. To build such an         inquiry, you need to combine data from two data access classes (DACs): one that holds         information about sales orders, and another that holds information about customers. For         details on data access classes, which are referred to as  tables  on the user interface         of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, see  Discovering DACs: General Information. We recommend that before you work with table relations, you obtain basic         knowledge of SQL (which is used for storing, manipulating, and retrieving data in         databases), so that you can understand how inquiries retrieve data. Learning Objectives In this chapter, you will learn how to retrieve data from multiple related data access         classes. Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company, including developing and modifying generic inquiries to give users         information they need to do their jobs. You need to deliver different inquiries that your         colleagues may need to perform their jobs effectively. Many of these inquiries require the         retrieval of data from multiple related data access classes. Construction of a Data Request from Multiple Tables You perform the following general steps to build a data request from multiple tables: Inspect the related forms (that is, the data entry forms of the data you will use) to           determine the list of data access classes and fields you need to have in the results grid           and use in formulas. Select a parent and child table. Specify the parent and child table in the system. Specify a join type between the parent and child table.  Discover the key fields of the data access classes you have determined for your           inquiry. Specify links between the key fields of the parent and child table. If you want to use more than two tables in your inquiry, you repeat Steps 2–6 for         each pair of tables that you are going to use in your generic inquiry. You can perform Steps 5–6 automatically, by means of the  Related           Tables  dialog box, or manually. You can also change automatically configured         settings by using the instructions for the manual procedure. For more information, see  Getting Data from Multiple DACs: Manual Configuration of Relations Between Tables. Selection of a Parent and Child Table After you have determined all tables you need for your inquiry, you need to decide which         table is considered the parent table and which is the child one. Usually, the parent table         is the one that provides the primary data and the child table provides additional         information. For example, for an inquiry that lists sales orders by customers, you specify            SOOrder  as the parent table, because the primary data that the inquiry is         displaying is provided by the  SOOrder  class. The  Customer          class provides additional information, so you select it as the child table. Specification of the Parent and Child Table You can specify the parent and child tables on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form in the following ways: On the  Relations  tab, by selecting a parent table in the              Parent Table  column and a child table in the  Child             Table  column. The drop-down lists in these columns include the tables that           you have added on the  Tables  tab. In the  Related Tables  dialog box, which opens when you            click              Add Related Table  on the table toolbar of the              Tables  or  Relations  tab. We recommend that you use the  Related Tables  dialog box to specify         the parent and child tables, because only in this case will the system automatically         configure relations between these tables. In the  Related Tables  dialog box, you do the following: Specify the parent table: You select the parent table in the list of tables and then           click  Select Parent Table  on the table toolbar. To find the           necessary parent table in the list, you can use the search box below the list. As a           result, the name of the selected table is displayed in the  Parent             Table  box (at the top of the dialog box).  If you opened the                Related Tables  dialog box (by clicking  Add Related               Table  on the table toolbar on the  Tables  tab) when             a table was first selected on the  Tables  tab, then the name of             this table is already selected as a value in the  Parent Table              box. Specify a child table. (You can select a child table only after selecting a parent           table.) You select a child table in the list of tables (which includes only the tables           that can be linked to the selected parent table) and then click  Select Child             Table  on the table toolbar. As a result, the name of the selected table is           displayed in the  Child Table  box (at the top of the dialog             box). Tables in the system are linked by means of key fields. A key field is a field             in a record that holds unique data that identifies that record from all the other             records in the database. The information about the key fields of the data access classes             you need is stored in the source code. As with a parent table, to find the             necessary child table in the list, you can use the search box below the list. You can manage the column set to be displayed in the list of tables by using the            Column Configuration  dialog box. You         click          the Column Configuration button , which is located in the header row of         the leftmost table column, to open this dialog box.          For         example, you can add the  Description  column, which contains the data         access class description and can be useful when you select         tables. In the  Related Tables  dialog box, you can select the            Include Hidden Tables  check box to include hidden tables in the         list of tables for selecting a parent or child table. Automatic Configuration of a Relation Between a Pair of Tables When you have specified the parent table and the child table in the  Related           Tables  dialog box, the system does the following: Automatically assigns and displays aliases for the           tables  in the              Alias  box next to the  Parent Table  box and           the  Child Table  box. Displays the relation between the parent table and the child table in the              Relation  box. The relation is described as a part of the SQL           statement and includes a type of join and data field links. By default, the  Inner            join type is used. To approve the specified configuration and close the  Related Tables          dialog box, you click the  Add  button in the bottom right. As a         result, the system does the following: Adds the parent and child tables on the  Table  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form Adds the relation on the  Relations  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form After the relation between the pair of tables has been configured, you can change the         following setting that have been inserted by the system: Join type: On the  Relations  tab, in the  Join             Type  column of the  Table Relations  table. Data field links: On the  Relations  tab, in the  Data             Field Links for Active Relation  table. At any time after the relation between the parent and child tables has been configured, you         can view the relation by clicking  Browse for Relations  on the table         toolbar of the  Data Field Links for Active Relation  table on the            Relations  tab. In this case, the system displays the            Related Tables  dialog box with the boxes filled in with values.         Even though the boxes in the  Related Tables  dialog box are filled         with values, in this dialog box, you can configure the relation between a new pair of         tables. ]]></column>
		</row>
		<row PageID="2e4a1992-7372-4eac-a3b2-ef301b16c006" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="2e2b0e6f-12a9-401a-7da0-8162b8470f93" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can manually configure the relation between each pair of tables that you are going to use in your inquiry form. In this case, you should perform the following additional actions: to decide what type of join to use, to discover the key fields of the tables, and to define what conditions to specify for links between key fields.{br}{TOC}
==Selection of a Join Type==
After you have selected a parent and child table, you can specify a type of join for these tables. Even if a type of join has been specified automatically by means of the '''Related Tables''' dialog box, you can override the join type for each pair of tables.((({S:Hint}The system automatically inserts the ''Inner'' join type when you specify a relation between a pair of tables in the '''Related Tables''' dialog box.
)))
On the '''Relations''' tab, in the '''Table Relations''' table, you select a join type in the '''Join Type''' column. You can select one of the following options:[anchor|#_7188b8da-69e5-4e35-8edc-8483cbf02668]
*''Inner'': An ''Inner'' join creates a result by combining the records of the parent and child tables when there is at least one match in both tables (see the figure below). For example, suppose that for an inquiry that lists open sales orders by customers, you join {{SOOrder}} and {{Customer}} with an ''Inner'' join. The system will return only those open sales orders (from {{SOOrder}}) for which there are customer records in the {{Customer}} table. The system will not display customers who do not have open sales orders.
*''Left'': A ''Left'' join returns all the records from the parent table combined with any matching records of the child table (see the figure below). For example, suppose that for the inquiry that lists open sales orders by customers, you join {{SOOrder}} (the parent table) and {{Customer}} (the child table) with the ''Left'' join. The system returns all open sales orders. For an open sales order for which the customer record was not found, the system returns an empty value in the customer column.
*''Right'': A ''Right'' join returns all the records from the child table combined with any matching records from the parent table (see the figure below). For example, suppose that for the inquiry that lists open sales orders by customers, you join {{SOOrder}} (parent table) and {{Customer}} (child table) with the ''Right'' join. The system will return all customers. For a customer for which a sales order record was not found, the system returns an empty value in the sales order column.
*''Full'': A ''Full'' join returns all the records from both the parent table and the child table when there is a match in a parent or child table record (see the figure below). For example, suppose that for the inquiry that lists open sales orders by customers, you join {{SOOrder}} and {{Customer}} with a ''Full'' join. The system will return all open sales orders (from {{SOOrder}}) and all customers (from the {{Customer}} table). A ''Full'' join can return a huge number of records.
*''Cross'': A ''Cross'' join returns each record from the parent table combined with each record from the child table. Thus, the number of records in the result set is the number of records in the parent table multiplied by the number of records in the child table (see the figure below). Unlike the ''Inner'', ''Left'', ''Right'', and ''Full'' join, the ''Cross'' join does not require a joining condition.
[anchor|#_73bd0b3b-776b-4679-aebc-9bc15efc4bd8][anchor|#_54a68e07-f0ba-4216-9185-84313f2a7d7e][image:UserGuide/Images/GI_Getting_Data_from_Mult_DACs_Join_Types.png|popup|Join types|450px]((({S:Hint}The inquiry result can be empty due to your access rights to Acumatica ERP forms, or due to the deletion of some data in the database. For example, with the ''Inner'' join, the system will not display the open sales orders of the customers to whose accounts your access is restricted or whose accounts were deleted for some reason.
)))((({S:Hint}The join types selected in the '''Join Type''' column work exactly the same as the corresponding SQL JOIN statements. 
)))
==Discovery of Key Fields==
The information about each key field—the field in the applicable record that holds unique data identifying that record from all the other records in the database—of the data access class you need is stored in the source code. You can get more information about the data access class you need on the [HelpRoot_FormReference\SM_20_45_70|Source Code] ([~/?ScreenId=SM204570|SM204570]) form, which you can access in the following ways:[anchor|#_0703aa39-472c-4b22-965b-5c196fcbb6ff]
*From the '''Element Properties''' dialog box, as you are using it to explore a UI element on a particular form, by clicking '''Actions''' > '''View Data Class Source'''. The form opens in a pop-up window. The specified data access class is shown on the '''Data Access''' tab (Item 1 in the screenshot below).
*By directly navigating to the form. Then in the '''Table Name''' box on the '''Data Access''' tab, you select the data access class you need.

All fields of a data access class are listed on the '''Data Access''' tab, as shown in the following screenshot. You can explore any field further as you look for the key field; you generally focus on fields whose names seem to allude to numbers or identifiers. In the example shown in the screenshot, you would click {{#region OrderNbr}} to expand its attributes (Item 2 in the screenshot). Here you can find the string {{IsKey = true}}, which means that ''OrderNbr'' is included in the key of this class (Item 3).[anchor|#_fe0bb22a-725f-499e-8e02-e4a07c30d863][anchor|#_792823e1-ee77-441b-b278-7ff895b9655a][image:UserGuide/Images/GI_Getting_Data_from_Multiple_Tables_InspectElement2.png|popup|Exploration of a data access class on the Source Code form|450px]
Particular types of key fields are distinguished as follows:[anchor|#_6ce5e0dd-1eb6-4ed5-905c-a79fe3f04032]
*On the application level, key fields are the fields that marked with {{IsKey = true}}.
*On the database level, key fields are the fields that are marked with the {{PXDBIdentity}} attribute and with {{IsKey = true}}. Key fields of this type are used to join data access classes. The key field with the {{PXDBIdentity}} attribute is a part of the database index, so the queries with the fields with the {{PXDBIdentity}} attribute execute faster than the queries with fields with only the {{IsKey}} attribute do.

 Acumatica ERP master classes (which are categorized as '''Profiles''' in the UI in workspaces and search results), such as {{Customer}} and {{InventoryItem}}, usually have two key fields—that is, one with the {{IsKey}} attribute, and another with the {{PXDBIdentity}} attribute. The key fields of the ''InventoryItem'' class are ''InventoryID'', which is marked with the {{PXDBIdentity}} attribute, and ''InventoryCD'', which is marked with the {{IsKey}} attribute. For these classes, you use the field with the {{PXDBIdentity}} attribute to join classes in queries and the field with the {{IsKey}} attribute in other cases, such as for inquiry or report parameters. {br}

 Acumatica ERP document and transaction classes (which are mentioned as '''Transactions''' in the UI in workspaces and search results)—such as {{SOOrder}}, {{ARInvoices}}, and {{ARPayment}}—usually have two or more key fields, which are marked with the {{IsKey}} attribute. For example, the key fields of the {{ARInvoices}} class are {{RefNbr}} and {{DocType}}. You can use both of these fields to join data access classes in queries.{br}

It is a bit more complicated to find the key fields of the {{Customer}} class than to find the key fields of the {{SOOrder}} class (Item 1 in the following screenshot). {{BAccountID}} is the key field of the {{Customer}} class, but you cannot find the string {{IsKey = true}} if you expand the {{#region BAccountID}} data field (Item 2).[anchor|#_9f0eae66-3eb7-4a58-9cd8-117d39feb466][anchor|#_a70e298f-5b2f-41f2-9aef-fb8c2cc3bb35][image:UserGuide/Images/GI_Getting_Data_from_Multiple_Tables_InspectElement3.png|popup|Exploration of the Customer class on the Source Code form|450px]
Note that the {{Customer}} data access class inherits the {{BAccount}} data access class (Item 3 in the screenshot above). You can further examine the {{Customer}} data access class, scrolling down on the form, and find its parent {{BAccount}} data access class (Item 1 in the following screenshot). If you expand the {{#region BAccountID}} data field (Item 2) of the {{BAccount}} class, you can find the string {{[PXDBIdentity()]}} (Item 3), which means that {{BAccountID}} is the key field of the {{BAccount}} data access class and all data access classes that inherit the {{BAccount}} data access class. Thus, {{BAccountID}} is the key field of the {{Customer}} data access class.[anchor|#_40b95dea-5d4f-4f41-b4e6-4f938bd7d7fe][anchor|#_8d09b13b-33b1-4959-b3ea-ffe9c32c1161][image:UserGuide/Images/GI_Getting_Data_from_Multiple_Tables_InspectElement4.png|popup|Further exploration of the Customer class on the Source Code form|450px]
You can perform similar actions to explore any element you need for your inquiry. For the key fields of the data access class, you have to observe the data access class and the database table. To reveal the relationships between the data access classes, you inspect the fields of the main data access class and the related data access classes and review the structure of the corresponding database tables.((({S:Hint}Some data access classes have virtual data fields, whose values are not stored in the database as values of ordinary data fields. Similarly, an entire class can be virtual—that is, all the data fields of this class are virtual. For example, the [HelpRoot_FormReference\IN_40_40_00|Inventory Transaction Details] ([~/?ScreenId=IN404000|IN404000]) form uses the ''InventoryTranDetEnqResult'' data access class, which is virtual, to show summary information about inventory transactions posted within a selected financial period. If you use a virtual data field in your inquiry or report, this data field returns no data.
)))
==Links Between Data Fields==
After you have specified how the system should combine the data, you need to specify what data needs to be combined. To link the parent and child tables, you should specify the key fields and conditions to link them. You specify these options in the '''Data Field Links for Active Relation''' table of the '''Relations''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.{br}

For example, suppose that for the inquiry that lists open sales orders by customers, you joined {{SOOrder}} as parent table and {{Customer}} as child table (the type of join does not matter for linking fields). This means that the system should combine the records of these two tables by adding data from the child table to the parent one. The child table provides customer details, so you should indicate to the system that the data of the particular customer needs to be joined with the data of particular open sales order of this customer. To do this, you add the link that indicates to the system that the {{customerID}} field from the {{SOOrder}} table equals the <tt>BAccountID</tt> field from the {{Customer}} table. The {{BAccountID}} field is a key field in the {{Customer}} table. The system finds an open sales order, identifies the value of the {{customerID}} field, and searches for the same value in the {{BAccountID}} column of the {{Customer}} table. When the customer record is found, the system combines these two records into one and proceeds to the next open sales order. The following screenshot shows the {{SOOrder}} and {{Customer}} tables and the result of their combination.[anchor|#_585f3b4c-2405-4be3-9980-5adc95263d94][anchor|#_e8a6c17f-ea58-4315-a9ec-f2cf1b630d83][image:UserGuide/Images/GI_Getting_Data_from_Multiple_Tables_GI_Creation_MultipleTablesCombined.png|popup|Data combined from two tables|450px]]]></column>
			<column name="PlainText"><![CDATA[Getting Data from Multiple DACs: Manual Configuration of Relations Between Tables You can manually configure the relation between each pair of tables that you are going to         use in your inquiry form. In this case, you should perform the following additional actions:         to decide what type of join to use, to discover the key fields of the tables, and to define         what conditions to specify for links between key fields. Selection of a Join Type After you have selected a parent and child table, you can specify a type of join for these         tables. Even if a type of join has been specified automatically by means of the            Related Tables  dialog box, you can override the join type for each         pair of tables. The system automatically inserts the  Inner  join type when you specify         a relation between a pair of tables in the  Related Tables  dialog         box. On the  Relations  tab, in the  Table Relations          table, you select a join type in the  Join Type  column. You can select         one of the following options: Inner : An  Inner  join creates a result by combining the records of the           parent and child tables when there is at least one match in both tables (see the figure           below). For example, suppose that for an inquiry that lists open sales orders by           customers, you join  SOOrder  and  Customer  with an              Inner  join. The system will return only those open sales orders (from              SOOrder ) for which there are customer records in the              Customer  table. The system will not display customers who do not have           open sales orders. Left : A  Left  join returns all the records from the parent table combined           with any matching records of the child table (see the figure below). For example, suppose           that for the inquiry that lists open sales orders by customers, you join              SOOrder  (the parent table) and  Customer  (the child           table) with the  Left  join. The system returns all open sales orders. For an open           sales order for which the customer record was not found, the system returns an empty value           in the customer column. Right : A  Right  join returns all the records from the child table combined           with any matching records from the parent table (see the figure below). For example,           suppose that for the inquiry that lists open sales orders by customers, you join              SOOrder  (parent table) and  Customer  (child table) with           the  Right  join. The system will return all customers. For a customer for which a           sales order record was not found, the system returns an empty value in the sales order           column. Full : A  Full  join returns all the records from both the parent table and           the child table when there is a match in a parent or child table record (see the figure           below). For example, suppose that for the inquiry that lists open sales orders by           customers, you join  SOOrder  and  Customer  with a              Full  join. The system will return all open sales orders (from              SOOrder ) and all customers (from the  Customer  table).           A  Full  join can return a huge number of records. Cross : A  Cross  join returns each record from the parent table combined           with each record from the child table. Thus, the number of records in the result set is           the number of records in the parent table multiplied by the number of records in the child           table (see the figure below). Unlike the  Inner ,  Left ,  Right , and              Full  join, the  Cross  join does not require a joining condition. Join types The inquiry result can be empty due to your access rights to  Acumatica ERP forms, or due to the deletion of some data in the database. For example, with the            Inner  join, the system will not display the open sales orders of the customers to         whose accounts your access is restricted or whose accounts were deleted for some         reason. The join types selected in the  Join Type  column work         exactly the same as the corresponding SQL JOIN statements.  Discovery of Key Fields The information about each key field—the field in the applicable record that holds         unique data identifying that record from all the other records in the database—of the         data access class you need is stored in the source code. You can get more information about         the data access class you need on the   ([~/?ScreenId=SM204570|SM204570]) Source Code         (SM204570) form, which you can access in the following ways: From the  Element Properties  dialog box, as you are using it to           explore a UI element on a particular form, by clicking  Actions View Data Class Source . The form opens in a pop-up window. The specified data access class is           shown on the  Data Access  tab (Item 1 in the screenshot below). By directly navigating to the form. Then in the  Table Name  box on           the  Data Access  tab, you select the data access class you           need. All fields of a data access class are listed on the  Data Access  tab,         as shown in the following screenshot. You can explore any field further as you look for the         key field; you generally focus on fields whose names seem to allude to numbers or         identifiers. In the example shown in the screenshot, you would click  #region           OrderNbr  to expand its attributes (Item 2 in the screenshot). Here you can find         the string  IsKey = true , which means that  OrderNbr  is included in         the key of this class (Item 3). Exploration of a data access class on the Source Code form Particular types of key fields are distinguished as follows: On the application level, key fields are the fields that marked with  IsKey =             true . On the database level, key fields are the fields that are marked with the              PXDBIdentity  attribute and with  IsKey = true . Key           fields of this type are used to join data access classes. The key field with the              PXDBIdentity  attribute is a part of the database index, so the queries           with the fields with the  PXDBIdentity  attribute execute faster than the           queries with fields with only the  IsKey  attribute do.  Acumatica ERP master classes (which are categorized as          Profiles          in the UI in workspaces and search results ), such as            Customer  and  InventoryItem , usually have two key         fields—that is, one with the  IsKey  attribute, and another with the            PXDBIdentity  attribute. The key fields of the  InventoryItem  class         are  InventoryID , which is marked with the  PXDBIdentity  attribute,         and  InventoryCD , which is marked with the  IsKey  attribute. For these         classes, you use the field with the  PXDBIdentity  attribute to join classes         in queries and the field with the  IsKey  attribute in other cases, such as         for inquiry or report parameters.   Acumatica ERP document and transaction classes (which are mentioned as            Transactions  in the UI in workspaces and search results)—such         as  SOOrder ,  ARInvoices , and          ARPayment —usually have two or more key fields, which are marked with         the  IsKey  attribute. For example, the key fields of the            ARInvoices  class are  RefNbr  and          DocType . You can use both of these fields to join data access classes in         queries. It is a bit more complicated to find the key fields of the  Customer  class         than to find the key fields of the  SOOrder  class (Item 1 in the following         screenshot).  BAccountID  is the key field of the  Customer          class, but you cannot find the string  IsKey = true  if you expand the            #region BAccountID  data field (Item 2). Exploration of the Customer class on the Source Code form Note that the  Customer  data access class inherits the            BAccount  data access class (Item 3 in the screenshot above). You can         further examine the  Customer  data access         class ,          scrolling down on the         form ,          and find its parent  BAccount  data access class (Item 1 in the following         screenshot). If you expand the  #region BAccountID  data field (Item 2) of         the  BAccount  class, you can find the string            [PXDBIdentity()]  (Item 3), which means that  BAccountID          is the key field of the  BAccount  data access class and all data access         classes that inherit the  BAccount  data access class. Thus,            BAccountID  is the key field of the  Customer  data access         class. Further exploration of the Customer class on the Source Code form You can perform similar actions to explore any element you need for your inquiry. For the         key fields of the data access class, you have to observe          the         data access class and the database table . To reveal the relationships         between the data access classes, you inspect the fields of the main data access class and         the related data access classes and review the structure of the corresponding database         tables. Some data access classes have virtual data fields, whose values are not         stored in the database as values of ordinary data fields. Similarly, an entire class can be         virtual—that is, all the data fields of this class are virtual. For example, the   ([~/?ScreenId=IN404000|IN404000]) Inventory Transaction Details (IN404000) form uses the            InventoryTranDetEnqResult  data access class, which is virtual, to show summary         information about inventory transactions posted within a selected financial period. If you         use a virtual data field in your inquiry or report, this data field returns no data. Links Between Data Fields After you have specified how the system should combine the data, you need to specify what         data needs to be combined. To link the parent and child         tables ,          you should specify the key fields and conditions to link them. You specify these options in         the  Data Field Links for Active Relation  table of the            Relations  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry         (SM208000) form. For example, suppose that for the inquiry that lists open sales orders by customers, you         joined  SOOrder  as parent table and  Customer  as child table         (the type of join does not matter for linking fields). This means that the system should         combine the records of these two tables by adding data from the child table to the parent         one. The child table provides customer details, so you should indicate to the system that         the data of the particular customer needs to be joined with the data of particular open         sales order of this customer. To do this, you add the link that indicates to the system that         the  customerID  field from the  SOOrder  table equals the            BAccountID  field from the  Customer  table. The            BAccountID  field is a key field in the  Customer  table.         The system finds an open sales order, identifies the value of the            customerID  field, and searches for the same value in the            BAccountID  column of the  Customer  table. When the         customer record is found, the system combines these two records into one and proceeds to the         next open sales order. The following screenshot shows the  SOOrder  and            Customer  tables and the result of their combination. Data combined from two tables ]]></column>
		</row>
		<row PageID="78c973d5-8f06-4d46-8b64-10ff1fcae7d5" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="142b07db-c54e-d836-20b5-f2714275cd4e" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create a generic inquiry that collects and displays data from two data access classes (DACs), which are referred to as ''tables'' on the user interface of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. The activity walks you through the steps of designing a sample generic inquiry for testing purposes, so that you can develop a better understanding of the process.{br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including the creation and modification of generic inquiry forms. A salesperson of your company has requested an inquiry form that displays sales orders for the customer selected by the user. The salesperson would like the inquiry form to list the orders of customers defined in the system. {br}

 The inquiry form should have a Selection area with the following elements:[anchor|#_2228a00b-5eaf-4931-ad93-c6edd3856682]
*'''Date From '''
* '''Date To'''
* '''Customer'''
* '''Order Status'''

By default, these boxes should be empty, so that the inquiry results initially include sales orders with any status for all customers and for all the dates that are in the database. If users select values in the boxes, the results are narrowed.{br}

The results grid of the inquiry form will consist of columns that display the following information about each sales order: sales order number, type, status, date, and customer name.
==Process Overview==
The generic inquiry that you are going to create will display data about sales orders and the customers specified in the sales orders. You will start by inspecting the elements on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) and [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) forms that correspond to the data to be shown in the columns of the results, to explore which data access classes (DACs) you can use to access the needed data.{br}

With the knowledge you have obtained, you will create a generic inquiry on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form and configure the results grid, the requested parameters (that is, the elements in the Selection area), and the conditions that correspond to the parameters.{br}

When an inquiry has been created and all the necessary settings have been specified, you preview and then publish the inquiry.[anchor|#_7da41b86-b8bc-47e1-94dc-5fa3e1748c41]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_a7f0b5d3-d8f9-4455-9027-477bfe168159]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Discovering the DACs and Data Fields==
To inspect the needed user interface elements to find the needed DACs and data fields, do the following:[anchor|#_8c8d4b6d-f5c6-4567-b0a2-5fe2e7993f6a]
#Open the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] ([~/?ScreenId=SO301000|SO301000]) form.
#Point to the '''Order Type''' box, press Ctrl+Alt, and then click. The '''Element Properties''' dialog box opens.
#Make a note of the values of the '''Data Class''' and '''Data Field''' elements (''SOOrder'' and ''OrderType'', respectively), which are the data access class and data field you need. Close the dialog box.
#:((({S:Hint}Although in this activity, the tasks of element inspection and generic inquiry development are kept separate for simplicity, in production development, you will generally be inspecting elements on the UI and creating the generic inquiry at the same time. In this case, you may find it convenient to have the form or forms containing the UI elements open in a separate tab, so that you can quickly switch between the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form and the form you are using to inspect the elements.
)))
#Repeat Instructions 2–3 for the following UI elements on the [HelpRoot_FormReference\SO_30_10_00|Sales Orders] form:
#*'''Order Nbr'''
#* '''Status'''
#* '''Date'''
#* '''Customer'''
#:You need to inspect the '''Customer''' element, because it will be used for joining the tables to get the data about customers.
#:In exploring these elements, you have discovered that the data access class you need is ''SOOrder'' and the data fields are ''OrderType'', ''OrderNbr'', ''Status'', ''OrderDate'', and ''CustomerID''.
#Open the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form.
#Point to the '''Customer ID''' box, press Ctrl+Alt, and then click. The '''Element Properties''' dialog box opens.
#Make a note of the values of the '''Data Class''' and '''Data Field''' elements (''Customer'' and ''AcctCD'', respectively), which are the data access class and data field you need. 

==Step 2: Creating the New Inquiry==
To begin the process of creating the generic inquiry, you do the following: [anchor|#ol_uw1_g5f_ms]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the Summary area, in the '''Inquiry Title''' box, type the name you will use for the inquiry: <tt>DB-SOOpenByCustomer</tt>.
#Leave the '''Select Top x Records''' box blank, so that you can display all the results.
#In the '''Arrange Parameters in x Columns''' box, leave the default value; you can adjust it after adding the requested parameters to the Selection area.
#On the table toolbar of the '''Tables''' tab, click '''Add Related Table''' to add the tables for your generic inquiry.
#In the '''Related Tables''' dialog box, which opens, select ''PX.Objects.SO.SOOrder'' in the list of tables.
#:((({S:Hint}You can use the search box below the list of tables to find the necessary table by its name.
)))
#On the table toolbar, click '''Select Parent Table'''.
#:The system inserts the name of the selected table in the '''Parent Table''' box. Notice that next to the '''Parent Table''' box, in the '''Alias''' box, the ''SOOrder'' value has been inserted.
#In the list of tables, select ''PX.Objects.AR.Customer'', and on the table toolbar, click '''Select Child Table'''.
#:The system inserts the name of the selected table in the '''Child Table''' box. Notice that next to the '''Child Table''' box, in the '''Alias''' box, the ''Customer'' value is displayed.
#:In the '''Relation''' box, the relation between the pair of tables has been inserted.
#In the bottom of the dialog box, click the '''Add''' button.
#:The system closes the '''Related Tables''' dialog box, adds the tables to the list on the '''Tables''' tab, and adds the relation between the tables on the '''Relations''' tab. Notice that the ''Inner'' join type is used for the relation.
#On the form toolbar, click '''Save'''.

==Step 3: Configuring the Output Columns==
To configure the columns in the generic inquiry form, on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form with the ''DB-SOOpenByCustomer'' inquiry selected, do the following:[anchor|#ol_ovb_g5f_ms]
#Click '''Add Row''' on the table toolbar, and do the following:
#:((({S:Hint}The lists of values available for selection can be quite long. To speed up the process of selecting the needed values, start typing the needed value in the column; the system will filter the list based on the text you have typed.
)))
##In the '''Object''' column, select ''SOOrder''.
##In the '''Data Field''' column, select ''OrderNbr''.
#By using the actions you performed in the previous instruction, add rows with the following settings:
#:{| class="checklist" | width="100%" 
|- 
!width="50%" ! '''Object'''
!width="50%" !  '''Data Field'''
|- 
|  ''SOOrder''
|  ''OrderType''
|- 
|  ''SOOrder''
|  ''Status''
|- 
|  ''SOOrder''
|  ''OrderDate''
|- 
|  ''Customer''
|  ''AcctName''
|}
#:Notice that the '''Visible''' and '''Default Navigation''' check boxes are selected by default for all rows. With these settings, the system will display the added columns in the inquiry results, and for data fields that have a default data entry form specified in the source code, the system will display the values in the corresponding columns of the generic inquiry form as links. When a user clicks a link in this column on the generic inquiry form, the system opens the specified form in a pop-up window with the record selected.
#On the form toolbar, click '''Save'''.
#On the side panel of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, click the eye icon to preview the generic inquiry form you have created.

==Step 4: Configuring the Selection Area (Self-Test)==
You have learned how to add parameters to the Selection area while completing the following activities: [anchor|#_5e57eebe-04e4-4e2b-ba19-fe912093b03d]
*[HelpRoot_ReportingTools\GI_Conditions_and_Parameters_Adding_Range_Parameters_Activity|Using Conditions and Parameters: To Add Period-Range Parameters to the Selection Area]
*[HelpRoot_ReportingTools\GI_Conditions_and_Parameters_Adding_Field_parameters_Activity|Using Conditions and Parameters: To Add a Field Parameter to the Selection Area]

A salesperson has requested that you add parameters to the ''DB-SOOpenByCustomer'' generic inquiry, which you have developed in this activity, so that the results can be narrowed to meet each salesperson’s current needs for information. Use the knowledge you have gained to add the requested parameters to the generic inquiry. After you have added the needed parameters, the Selection area of the inquiry form should have the elements shown in the following screenshot.[anchor|#_5d1b4be8-f0de-4260-a666-f3badff8bc69][anchor|#_be9b0da3-9f83-4fb2-a1d3-89e5c9b4e053][image:UserGuide/Images/GI_Getting_Data_from_Multiple_Tables_GI_Creation_SampleInquirySelectionArea.png|popup|Selection area with the parameters requested by the salesperson|450px]
For details on parameters and conditions, see [HelpRoot_ReportingTools\GI_Conditions_and_Parameters_General_Info|Using Conditions and Parameters: General Information].
==Step 5: Making the Generic Inquiry Form Visible to Other Users==
To add the generic inquiry form you have created to the site map, on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, do the following:[anchor|#_8858dc4f-e64e-4328-9d38-d3b1d56b161c]
#Open the ''DB-SOOpenByCustomer'' generic inquiry.
#In the Summary area of the form, select the '''Make Visible on the UI''' check box.
#:The system automatically assigns the default workspace (''Data Views'') and category (''Inquiries'') to the inquiry; you can override these settings at any time.
#In the '''Site Map Title''' box, type {{Sales Orders of the Selected Customer}}.
#On the form toolbar, click '''Save'''.
#:Notice that the '''Screen ID''' box is populated with the identifier the system has assigned to the generic inquiry. The system assigns the inquiry form this automatically generated identifier in a format similar to that of the screen identifiers of other forms, with ''GI'' as the two-letter module code: ''GI0000mn''. When the identifier is assigned, the system adds the inquiry to the site map and it can be accessed from the workspace.
#In the main menu, select the '''Data Views''' workspace and under the '''Inquiries''' category, make sure the inquiry you have created is listed.
]]></column>
			<column name="PlainText"><![CDATA[Getting Data from Multiple DACs: To Create an Inquiry with Two Tables In this activity, you will learn how to create a generic inquiry that collects and                 displays data from two data access classes (DACs), which are referred to as                      tables  on the user interface of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. The activity walks you                 through the steps of designing a sample generic inquiry for testing purposes, so                 that you can develop a better understanding of the process. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including the creation and modification of generic inquiry forms. A                 salesperson of your company has requested                  an                 inquiry form that displays sales orders for the customer selected by the user. The                 salesperson would like the inquiry form to list the orders of customers defined in                 the system.   The inquiry form should have a Selection area with the following elements: Date From  Date To Customer Order Status By default,                  these                 boxes should be empty , so that the inquiry results initially                 include sales orders with any status for all customers and for all the dates that                 are in the database. If users select values in the boxes, the results are                 narrowed. The results grid of the inquiry form will consist of columns that display the                 following information about each sales order: sales order number, type, status,                 date, and customer name. Process Overview The                 generic inquiry that you are going to create will display data about sales orders                 and the customers specified in the sales orders.  You will start                 by inspecting the elements on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders                 (SO301000) and   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) forms that                 correspond to the data to be shown in the columns of the results, to explore which                 data access classes (DACs) you can use to access the needed data. With the knowledge you have obtained, you will create a generic inquiry on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form and configure the results                 grid, the requested parameters (that is, the elements in the Selection area), and                 the conditions that correspond to the parameters. When an inquiry has been created and all the necessary settings have been specified,                 you preview and then publish the inquiry. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Discovering the DACs and Data Fields To inspect the needed user interface elements to find the needed DACs and data                 fields, do the following: Open the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders                     (SO301000) form. Point to the  Order Type  box, press Ctrl+Alt, and then                     click. The  Element Properties  dialog box opens. Make a note of the values of the  Data Class  and                          Data Field  elements ( SOOrder  and                          OrderType , respectively), which are the data access class and data                     field you need. Close the dialog box. Although in this activity,                         the tasks of element inspection and generic inquiry development are kept                         separate for simplicity, in production development, you will generally be                         inspecting elements on the UI and creating the generic inquiry at the same                         time. In this case, you may find it convenient to have the form or forms                         containing the UI elements open in a separate tab, so that you can quickly                         switch between the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form and the                         form you are using to inspect the elements. Repeat Instructions 2–3 for the following UI elements on the   ([~/?ScreenId=SO301000|SO301000]) Sales Orders form: Order Nbr Status Date Customer You need to inspect the  Customer  element, because                         it will be used for joining the tables to get the data about                         customers. In exploring these elements, you have discovered that the                         data access class you need is  SOOrder  and the data fields are                              OrderType ,  OrderNbr ,  Status ,  OrderDate , and                              CustomerID . Open the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form. Point to the  Customer ID  box, press Ctrl+Alt, and then                     click. The  Element Properties  dialog box opens. Make a note of the values of the  Data Class  and                          Data Field  elements ( Customer  and                          AcctCD , respectively), which are the data access class and data field                     you need.  Step 2: Creating the New Inquiry To begin the process of creating the generic inquiry, you do the following:  Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the Summary area, in the  Inquiry Title  box, type the                     name you will use for the inquiry:                          DB-SOOpenByCustomer . Leave the  Select Top x Records  box blank, so that you can                     display all the results. In the  Arrange Parameters in x Columns  box, leave the                     default value; you can adjust it after adding the requested parameters to the                     Selection area. On the table toolbar of the  Tables  tab, click                          Add Related Table  to add the tables for your generic                     inquiry. In the  Related Tables  dialog box, which opens, select                          PX.Objects.SO.SOOrder  in the list of tables. You can                         use the search box below the list of tables to find the necessary table by                         its name. On the table toolbar, click  Select Parent Table . The                         system inserts the name of the selected table in the  Parent                             Table  box. Notice that next to the  Parent                             Table  box, in the  Alias  box, the                              SOOrder  value has been inserted. In the list of tables, select  PX.Objects.AR.Customer , and on the table                     toolbar, click  Select Child Table . The system inserts                         the name of the selected table in the  Child Table                          box. Notice that next to the  Child Table  box, in the                              Alias  box, the  Customer  value is                         displayed. In the  Relation  box, the relation                         between the pair of tables has been inserted. In the bottom of the dialog box, click the  Add                          button. The system closes the  Related Tables  dialog                         box, adds the tables to the list on the  Tables  tab,                         and adds the relation between the tables on the                              Relations  tab. Notice that the  Inner  join                         type is used for the relation. On the form toolbar, click  Save . Step 3: Configuring the Output Columns To configure the columns in the generic inquiry form, on the  Results                     Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry                 (SM208000) form with the  DB-SOOpenByCustomer  inquiry selected, do the                 following: Click  Add Row  on the table toolbar, and do the                         following: The lists of values available for selection can                         be quite long. To speed up the process of selecting the needed values, start                         typing the needed value in the column; the system will filter the list based                         on the text you have typed. In the  Object  column, select  SOOrder . In the  Data Field  column, select                              OrderNbr . By using the actions you performed in the previous instruction, add rows with                     the following settings: Object Data Field SOOrder OrderType SOOrder Status SOOrder OrderDate Customer AcctName Notice that the  Visible  and  Default                             Navigation  check boxes are selected by default for all rows.                         With these settings, the system will display the added columns in the                         inquiry results, and for data fields that have a default data entry form                         specified in the source code, the system will display the values in the                         corresponding columns of the generic inquiry form as links. When a user                         clicks a link in this column on the generic inquiry form, the system opens                         the specified form in a pop-up window with the record selected. On the form toolbar, click  Save . On the side panel of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)                     form, click the eye icon to preview the generic inquiry form you have                     created. Step 4: Configuring the Selection Area (Self-Test) You have learned how to add parameters to the Selection area while completing the                 following activities:  Using Conditions and Parameters: To Add Period-Range Parameters to the Selection AreaUsing Conditions and Parameters: To Add a Field Parameter to the Selection AreaA salesperson has requested that you add parameters to the  DB-SOOpenByCustomer                  generic inquiry, which you have developed in this activity, so that the results can                 be narrowed to meet each salesperson’s current needs for information. Use the                 knowledge you have gained to add the requested parameters to the generic inquiry.                 After you have added the needed parameters, the Selection area of the inquiry form                 should have the elements shown in the following screenshot. Selection area with the parameters requested by the salesperson For details on parameters and conditions, see  Using Conditions and Parameters: General Information. Step 5: Making the Generic Inquiry Form Visible to Other Users To add the generic inquiry form you have created to the site map, on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, do the following: Open the  DB-SOOpenByCustomer  generic inquiry. In the Summary area of the form, select the  Make Visible on the                         UI  check box. The system automatically assigns the default                         workspace ( Data Views ) and category ( Inquiries ) to the                         inquiry; you can override these settings at any time. In the  Site Map Title  box, type  Sales Orders of                         the Selected Customer . On the form toolbar, click  Save . Notice that the                              Screen ID  box is populated with the identifier                         the system has assigned to the generic inquiry. The system assigns the                         inquiry form this automatically generated identifier in a format similar to                         that of the screen identifiers of other forms, with  GI  as the                         two-letter module code:  GI0000mn . When the identifier is assigned,                         the system adds the inquiry to the site map and it can be accessed from the                         workspace. In the main menu, select the  Data Views  workspace and                     under the  Inquiries  category, make sure the inquiry you                     have created is listed. ]]></column>
		</row>
		<row PageID="46d3beed-0faf-4908-b5f4-1c282a110c4d" Language="en-US" PageRevisionID="1" Content="&#xA;You can use generic inquiry forms in Acumatica ERP to expose data in Acumatica ERP by using the Open Data Protocol (OData).{br}&#xA;&#xA;In the topics of this chapter, you will learn how to expose a generic inquiry form through OData." PlainText="Exposing    an   Inquiry  by Using OData You can use generic inquiry forms in  Acumatica ERP     to expose data in  Acumatica ERP     by using the Open Data Protocol (OData). In the topics of this chapter, you will learn how to expose a generic inquiry form through     OData. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="94a86856-fc91-b491-3bac-caaff3d58eed" RecordSourceID="22377" />
		<row PageID="36beb9aa-f04d-4f63-a93b-a00b1c315be0" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="6ec6dc5e-fc6c-4798-a90a-c092ff1c412d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can use your Acumatica ERP instance (and specifically the generic inquiry results) as the data source, and then use third-party applications that support OData to track and analyze the data. {br}

 Acumatica ERP supports OData Version 3.0 with particular exceptions.((({S:Hint}We strongly recommend that you deploy your Acumatica ERP instance (or instances) by using HTTPS, to pass the user credentials safely. 
))){br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to expose a generic inquiry form by using OData.
==Applicable Scenarios==
You are a technical specialist with your company, and you are responsible for the management of different reports and inquiries. Your company has decided to use a third-party reporting tool in addition to Acumatica ERP reporting. The selected tool supports OData protocol. You need to expose the requested generic inquiries and verify access to the exposed data by using MS Excel.
==Benefits from Exposing Data Through OData==
Some Acumatica ERPSome technology partners have built reporting solutions by using the ability of Acumatica ERP to expose data through OData.{br}

 Multiple applications can use data exposed through the OData protocol. The most popular are Microsoft Power BI and Microsoft Excel.{br}

Microsoft Power BI offers advanced capabilities for creating charts. You can expose a generic inquiry through OData and access its data from Power BI. By using Power BI, you can create advanced charts based on data imported from Acumatica ERP. Furthermore, an advanced Power BI chart can be then imported back to Acumatica ERP and added to a dashboard as a widget. For example, you can create a visual display of your sales across United States (as shown in the following screenshot). Due to the exposure of the inquiry with OData, the Power BI chart displays real-time data when you view it either in Power BI or on your dashboard in Acumatica ERP.[anchor|#_445c5f79-2b3c-4cd5-9e8c-2386ad4f9a2d][anchor|#_2dcba466-cecd-40c1-b866-6f96f8411ce6][image:UserGuide/Images/GI_Exposing_Inquiry__by_Using_OData_GI_OData_PowerBI_Example.png|popup|Example of an advanced chart built with PowerBI|450px]
Microsoft Excel offers the following capabilities to process data:{br}

[anchor|#_a9a7bf44-32bf-4787-90f3-db796cf3907d]
*To make calculations from basic math, such as summing, multiplying, and finding the average, as well as advanced calculations, such as regression analysis and conversions
*To create professional reports and dashboards with charts and visualizations
]]></column>
			<column name="PlainText"><![CDATA[Exposing an Inquiry by Using OData: General Information You can use your  Acumatica ERP     instance (and specifically the generic inquiry results) as the data source, and then use     third-party applications that support OData to track and analyze the data.   Acumatica ERP     supports OData Version 3.0 with particular exceptions. We strongly recommend that you deploy your  Acumatica ERP     instance (or instances) by using HTTPS, to pass the user credentials safely.  Learning Objectives In this chapter, you will learn how to expose a generic inquiry form by using OData. Applicable Scenarios You are a technical specialist with your company, and you are responsible for the management     of different reports and inquiries. Your company has decided to use a third-party reporting tool     in addition to  Acumatica ERP     reporting. The selected tool supports OData protocol. You need to expose the requested generic     inquiries and verify access to the exposed data by using MS Excel. Benefits from Exposing Data Through OData Some  Acumatica ERPSome  technology partners have built reporting solutions by using the ability of  Acumatica ERP     to expose data through OData.  Multiple applications can use data exposed through the OData protocol. The most popular are     Microsoft Power BI and Microsoft Excel. Microsoft Power BI offers advanced capabilities for creating charts. You can expose a generic     inquiry through OData and access its data from Power BI. By using Power BI, you can create     advanced charts based on data imported from  Acumatica ERP.     Furthermore, an advanced Power BI chart can be then imported back to  Acumatica ERP     and added to a dashboard as a widget. For example, you can create a visual display of your sales     across United States (as shown in the following screenshot). Due to the exposure of the inquiry     with OData, the Power BI chart displays real-time data when you view it either in Power BI or on     your dashboard in  Acumatica ERP. Example of an advanced chart built with PowerBI Microsoft Excel offers the following capabilities to process data: To make calculations from basic math, such as summing, multiplying, and finding the       average, as well as advanced calculations, such as regression analysis and conversions To create professional reports and dashboards with charts and visualizations ]]></column>
		</row>
		<row PageID="b3b6df43-2545-4562-a219-b53325bfd1cd" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e3d8b828-2be0-1d1d-cdb9-791f91b36edd" RecordSourceID="22377">
			<column name="Content"><![CDATA[
To expose a generic inquiry, you should perform the necessary steps to prepare the inquiry and ensure that it complies with requirements to inquiry fields.{br}{TOC}
==Preparing a Generic Inquiry for Exposure==
Before exposing a generic inquiry through OData, you need to make sure that the inquiry complies with the requirements for this exposure. You can expose only published inquiries (that is, those that have been made visible on the UI and assigned a screen ID), because the appropriate access rights must be granted to an inquiry form to be exposed, but you can grant access rights to an inquiry only if the resulting inquiry form has been published. Thus, for any inquiry that you are going to expose, you should select the '''Make Visible on the UI''' check box and specify the site map title; when you save your changes, verify that the system has assigned a screen ID to the inquiry. {br}

Then you can specify the appropriate access rights to the exposed inquiries. User accounts that will access the exposed inquiries through an OData client need to have access rights to the inquiry forms set to the ''Delete'' level of access. For more information on access rights to inquiries, see [HelpRoot_ReportingTools\GI_Access_Rights_Mapref|Managing Access Rights To Generic Inquiries].{br}

If the inquiry you want to expose has parameters, you cannot use them. Instead of using parameters, you need to specify conditions in the inquiry.[anchor|#_0cbb4d56-39ec-46fa-90e5-174b1505048d]
==Supporting the OData Specifications==
 Acumatica ERP generates the names of the fields for OData entities based on the display names of the Acumatica ERP fields in an English locale. To adhere to the OData specifications, Acumatica ERP uses the following rules in generating these names:[anchor|#ul_tm5_tp5_rr]
*If the display name does not contain any invalid symbols, the name is left unchanged.
*If the display name starts with a digit, an underscore is added before the name. For example, ''2Update'' is converted to ''&#95;2Update''.
*If the display name contains invalid symbols, such as spaces, these symbols are removed from the name. For example, ''Account Name'' is converted to ''AccountName''.

The OData interface provided by Acumatica ERP does not support the following items in the OData specification:[anchor|#_bff783ee-d083-400d-965c-28f9bf9a303a]
*The ''$expand'', ''$links'', ''$inlinecount'', and ''$count'' query options
*All query functions, such as ''startswith'' and ''substringof''

==Exposing a Generic Inquiry==
You can expose a generic inquiry at any time, either when creating a new inquiry or by modifying an existing one. To expose the inquiry, you select the '''Expose via OData''' check box for the inquiry in the Summary area of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. {br}

You can view the list of generic inquiries exposed through OData by opening the lookup table for the '''Inquiry Title''' box on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form. In the table, you can filter the inquiries by the selection of the check box in the '''Expose via OData''' column, as the following screenshot shows.[anchor|#_b852fb10-f598-44bf-87b6-e11eba66af33][anchor|#_d4d26678-522b-451f-8956-405a1aec5eb4][image:UserGuide/Images/GI_Exposing_Inquiry_by_Using_OData_GI_OData_ViewListInACU.png|popup|Inquiries that are exposed via OData|450px]{br}

 Acumatica ERP includes multiple predefined generic inquiries that can be exposed through OData; the titles of these inquiries start with ''BI''. Additionally, the ''BI'' role has been added to Acumatica ERP; a user with the role assigned can access the data of the predefined inquiries.((({S:Hint}To give the users with the ''BI'' role access to other generic inquiries, you should grant access to these inquiries.
)))]]></column>
			<column name="PlainText"><![CDATA[Exposing an Inquiry by Using OData:      Preparation     of an Inquiry for Exposure To expose a generic  inquiry, you should perform the necessary steps to prepare the inquiry         and ensure that it complies         with          requirements to inquiry fields . Preparing a Generic Inquiry for Exposure Before exposing a generic inquiry through OData, you need to make sure that the inquiry         complies with the requirements for this exposure. You can expose only published inquiries         (that is, those that have been made visible on the UI and assigned a screen ID), because the         appropriate access rights must be granted to an inquiry form to be exposed, but you can         grant access rights to an inquiry only if the resulting inquiry form has been published.         Thus, for any inquiry that you are going to expose, you should select the  Make           Visible on the UI  check box and specify the site map title; when you save your         changes, verify that the system has assigned a screen ID to the inquiry.  Then you can specify the appropriate access rights to the exposed inquiries. User accounts         that will access the exposed inquiries through an OData client need to have access rights to         the inquiry forms set to the  Delete  level of access. For more information on access         rights to inquiries, see  Managing Access Rights To Generic Inquiries. If the inquiry you want to expose has parameters, you cannot use them. Instead of using         parameters, you need to specify conditions in the inquiry. Supporting the OData Specifications  Acumatica ERP generates the names of the fields for OData entities based on the display names of the            Acumatica ERP fields in an English locale. To adhere to the OData specifications,  Acumatica ERP uses the following rules in generating these names: If the display name does not contain any invalid symbols, the name is left           unchanged. If the display name starts with a digit, an underscore is added before the name. For           example,              2Update            is converted to  _2Update . If the display name contains invalid symbols, such as spaces, these symbols are removed           from the name. For example,  Account Name  is converted to  AccountName . The OData interface provided by  Acumatica ERP does not support the following items in the OData specification: The  $expand ,  $links ,  $inlinecount , and  $count  query           options All query functions, such as  startswith  and  substringof Exposing a Generic Inquiry You can expose a generic inquiry at any time, either when creating a new inquiry or by         modifying an existing one. To expose the inquiry, you select the  Expose via           OData  check box for the inquiry in the Summary area of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form.  You can view the list of generic inquiries exposed through OData by opening the lookup         table for the  Inquiry Title  box on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form. In the table, you can filter the inquiries by         the selection of the check box in the  Expose via OData  column, as the         following screenshot shows. Inquiries that are exposed via OData  Acumatica ERP includes multiple predefined generic inquiries that can be exposed through OData; the         titles of these inquiries start with  BI . Additionally, the  BI  role has been         added to  Acumatica ERP; a user with the role assigned can access the data of the predefined inquiries. To give the users with the  BI  role access to other generic inquiries,         you should grant access to these inquiries. ]]></column>
		</row>
		<row PageID="265a8850-3071-47c4-a4fe-a589d5895ce9" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="80dabdff-71a3-12e2-69e6-8823dda7c83e" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an existing generic inquiry to expose its results through OData.{br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including the creation and modification of generic inquiry forms. An accountant of your company has asked you to provide access to the predefined Invoices and Memos (AR3010PL) inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, through Microsoft Excel. The accountant uses Excel for building reports based on the data of this inquiry and would like for the data to always be up to date. Suppose that the access role of the accountant is ''Accountant''.
==Process Overview==
On the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, you will verify that the ''AR-Invoices and Memos'' inquiry complies with the requirements for a generic inquiry to be exposed through OData—that is, it is published, and it has no parameters. You will select the '''Expose via OData''' check box for the generic inquiry and save your changes.{br}

After the inquiry is exposed, you will make sure that the accountant (whose user account is assigned the ''Accountant'' role) has sufficient access rights for the inquiry form by using the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form. [anchor|#_713dce9e-eb48-4a27-b076-4e22299e1135]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_6ad23969-4aec-46ed-8091-6a4aaeebae87]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Exposing the Inquiry==
To expose the needed generic inquiry by using OData, do the following:[anchor|#ul_fz3_2rw_2gb]
#Open the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.
#In the '''Inquiry Title''' box of the Summary area, select ''AR-Invoices and Memos''. 
#Verify that the '''Make Visible on the UI''' check box is selected, a title is present in the '''Site Map Title''' box, and a screen identifier is assigned in the '''Screen ID''' box. Notice that the '''Workspace''' and '''Category''' boxes for the inquiry are cleared. When this is the case, the system puts the inquiry in the '''Hidden''' node of the site map tree. 
#:((({S:Hint}An inquiry form is still considered published, even if it is located in the '''Hidden''' node of the site map tree, as long as the '''Make Visible on the UI''' check box is selected and the '''Screen ID''' is filled in on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form.
)))
#On the '''Parameters''' tab, verify that there are no parameters added for the inquiry. 
#:((({S:Hint}For an inquiry to be exposed, either no parameters should be defined, as is the case here, or the inquiry parameters should be deactivated (that is, the check box in the '''Active''' column is cleared for each of them on this tab) and the related conditions are also deactivated.
)))
#In the Summary area of the form, select the '''Expose via OData''' check box. [anchor|#_6e073c4b-5e60-45bb-9d58-0dfc07d99e73]
#On the form toolbar, click '''Save'''.

==Step 2: Specifying the Access Rights to the Exposed Inquiry==
To specify the access rights of the ''Accountant'' role to the exposed inquiry, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form.
#In the left pane, locate and click ''Invoices and Memos (AR3010PL)'' in the '''Hidden''' node. 
#:((({S:Hint}The system displays a tooltip with the screen identifier when you point to a node.
)))
#In the right pane, locate the ''Accountant'' role, and in the '''Access Rights''' column, select the ''Deleted'' level (as shown in the following screenshot below).[anchor|#_5361cd2f-f5fb-4609-b04b-3dede44612c4]
#On the form toolbar, click '''Save'''.
[anchor|#_0f61fef8-d52d-4568-8b51-5813a53117fe][anchor|#_3422b465-6941-4461-8b34-af253bd30c06][image:UserGuide/Images/GI_Exposing_Inquiry_by_Using_OData_GI_OData_AccessRights.png|popup|The level of access rights of the Accountant role for the exposed inquiry|450px]]]></column>
			<column name="PlainText"><![CDATA[Exposing an Inquiry by Using OData: To Expose Inquiry Results Through OData In this activity, you will learn how to modify an existing generic inquiry to expose                 its results through OData. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including the creation and modification of generic inquiry forms. An                 accountant of your company has asked you to provide access to the predefined                 Invoices and Memos (AR3010PL) inquiry form, which has the  AR-Invoices and                     Memos  inquiry title and the  Invoices and Memos  site map title                 specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form,                 through Microsoft Excel. The accountant uses Excel for building reports based on the                 data of this inquiry and would like for the data to always be up to date. Suppose                 that the access role of the accountant is  Accountant . Process Overview On the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, you will verify                 that the  AR-Invoices and Memos  inquiry complies with the requirements for a                 generic inquiry to be exposed through OData—that is, it is published, and it                 has no parameters. You will select the  Expose via OData  check                 box for the generic inquiry and save your changes. After the inquiry is exposed, you will make sure that the accountant (whose user                 account is assigned the  Accountant  role) has sufficient access rights for the                 inquiry form by using the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020)                 form.  System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Exposing the Inquiry To expose the needed generic inquiry by using OData, do the following: Open the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. In the  Inquiry Title  box of the Summary area, select                          AR-Invoices and Memos .  Verify that the  Make Visible on the UI  check box is                     selected, a title is present in the  Site Map Title  box,                     and a screen identifier is assigned in the  Screen ID  box.                     Notice that the  Workspace  and                          Category  boxes for the inquiry are cleared. When this                     is the case, the system puts the inquiry in the  Hidden                      node of the site map tree.  An inquiry form is still considered                         published, even if it is located in the  Hidden  node                         of the site map tree, as long as the  Make Visible on the                             UI  check box is selected and the  Screen                             ID  is filled in on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form. On the  Parameters  tab, verify that there are no                     parameters added for the inquiry.  For an inquiry to be exposed,                         either no parameters should be defined, as is the case here, or the inquiry                         parameters should be deactivated (that is, the check box in the                              Active  column is cleared for each of them on this                         tab) and the related conditions are also deactivated. In the Summary area of the form, select the  Expose via                         OData  check box.  On the form toolbar, click  Save . Step 2: Specifying the Access Rights to the Exposed Inquiry To specify the access rights of the  Accountant  role to the exposed inquiry, do                 the following: Open the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020) form. In the left pane, locate and click  Invoices and Memos (AR3010PL)  in the                          Hidden  node.  The system displays a                         tooltip with the screen identifier when you point to a node. In the right pane, locate the  Accountant  role, and in the                          Access Rights  column, select the  Deleted  level                     (as shown in the following screenshot below). On the form toolbar, click  Save . The  level of access rights of the Accountant role for the exposed                     inquiry ]]></column>
		</row>
		<row PageID="dac328c5-5dae-43af-b18a-d7a52374633d" Language="en-US" PageRevisionID="1" Content="&#xA;After you have exposed a generic inquiry developed on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form through OData, you can view the inquiry results in a browser. To access the inquiry results, you need to know the URL of the OData endpoint of your Acumatica ERP instance.{br}&#xA;&#xA;In the topics of this chapter, you will learn how to access an exposed inquiry." PlainText="Accessing the Exposed Inquiry Through OData After you have exposed a generic inquiry developed on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form through OData, you can view the inquiry     results in a browser. To access the inquiry results, you need to know the URL of the OData     endpoint of your  Acumatica ERP     instance. In the topics of this chapter, you will learn how to access an exposed inquiry. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="63cfccae-9021-5661-fa65-15b58318d196" RecordSourceID="22377" />
		<row PageID="5d97a93d-45e0-466e-ba5e-77e1ccf96643" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b47f8fb0-310b-c100-9423-30c99cfd1474" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can view the generic inquiries exposed through OData in your browser. To view the data, you enter the URL of the OData endpoint of your Acumatica ERP instance in the address bar of your browser.{br}

When the system asks you to authenticate yourself, provide your sign-in credentials to Acumatica ERP: your user name and your password. When your identity has been confirmed, the system displays the list of available inquiries.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to access an exposed generic inquiry through Microsoft Excel and how to configure cross-origin resource sharing (CORS) to access an exposed inquiry through client-side web applications.
==Applicable Scenarios==
You are a technical specialist with your company, and your responsibilities include the management of different reports and inquiries. An accountant has requested access to an Acumatica ERP generic inquiry through a third-party OData client, such as Microsoft Excel, Microsoft Power BI, or a Java-based application.
==Access to an Exposed Generic Inquiry Through an OData Client==
By exposing data from Acumatica ERP—in this case, data from a generic inquiry created on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form—through the OData interface, you can give users the ability to view your company’s data and perform detailed financial analysis by using third-party OData clients, such as Microsoft Excel and Microsoft Power BI.((({S:Hint}Microsoft Excel 2007 does not support connection to OData endpoints.
)))
To connect to your data, you specify the URL of the OData endpoint of your Acumatica ERP instance to the OData client and authenticate yourself by entering your Acumatica ERP credentials. The OData client can use the OAuth 2.0 authorization instead of direct authentication with a user name and password. {br}

The OData client then connects to your Acumatica ERP instance and obtains the data for you.((({S:Hint}Even though you can view all exposed inquiries, you can obtain only the data to which you have sufficient access rights.
)))[anchor|#_93d81216-ee72-44e8-88bc-559a29e06c94]
==The URL of OData Endpoint==
Generally, the URL of the Acumatica ERP OData endpoint is the URL of your instance concatenated with ''/OData''. For example, suppose that the URL of your instance is ''https://sweetlife.com/erp''; to view the list of exposed inquiries, you use the following URL: ''https://sweetlife.com/erp/OData''.{br}

The following screenshot demonstrates a list of exposed inquiries accessed through the browser.[anchor|#_e2670e65-044e-459f-baee-b951dd51c630][anchor|#_13be3e98-5d18-4a34-a6a0-5f90f9fb5969][image:UserGuide/Images/GI_Access_to_Exposed_Inquiry_Through_Excel_GI_OData_ExposedGI_Browser.png|popup|The list of exposed inquiries accessed through the browser|450px]
If your instance has a multitenant configuration, you add ''/OData/&lt;TenantName&gt;'' to the end of the URL of your instance, where ''&lt;TenantName&gt;'' is the login name of the tenant in the Acumatica ERP instance. You can find the login names of tenants on the [HelpRoot_FormReference\SM_20_35_30|Tenant List] ([~/?ScreenId=SM203530|SM203530]) form (as shown in the following screenshot). For more information on tenant and multitenant configuration, see [HelpRoot_Administration\SM__mng_MultiCompany|Managing Tenants].[anchor|#_a9e82d11-4ed2-4a30-a976-f5729bf4d11c][anchor|#_b01e495f-92f4-4352-9aaa-e009afc37cf5][image:UserGuide/Images/GI_Access_to_Exposed_Inquiry_Through_Excel_GI_OData_TenantLoginName.png|popup|The login names of tenants|450px]
For example, if the URL of your Acumatica ERP instance is ''https://sweetlife.com/erp'' and you want to view generic inquiries exposed in the ''Calipso LLC'' tenant, you use the ''https://sweetlife.com/erp/OData/Calipso LLC'' URL in your browser or in an OData client. (If you type this into a browser, you will notice that the browser automatically replaces each space with ''%20'' in the URL.) {br}

Also, you can view the login name of the tenant to which you are currently signed in by viewing the User menu (as shown in the following screenshot), which you access by clicking the User menu button on the top pane of the Acumatica ERP screen.[anchor|#_7708af10-b036-4fbb-a658-7de8ac387555][anchor|#_8a024a71-aa47-496a-b016-e3cf6a4d131f][image:UserGuide/Images/GI_Access_to_Exposed_Inquiry_Through_Excel_GI_OData_TenantLoginName_InfoArea.png|popup|User menu with the tenant login name|450px][anchor|#_58c5cefb-9ce4-4945-83cb-ab4cee21a9dd]
==Obtaining of the List of Fields of Generic Inquiries Through OData==
Through OData, you can view the list of fields in exposed generic inquiries. The field names in the list are changed according to the OData specifications; for more information, see [HelpRoot_ReportingTools\GI_Exposing_Inquiry_by_Using_OData_Preparation_of_Inquiry_for_Exposure_GeneralInfo|Exposing an Inquiry by Using OData: Preparation of an Inquiry for Exposure]. The list of fields includes the key fields of the tables used in the generic inquiry, even if these key fields have not been added to the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form for the generic inquiry.{br}

You compose the URL to obtain the list of fields by doing one of the following:[anchor|#ul_yrx_zwj_js]
*If your Acumatica ERP instance contains a single tenant, append ''/OData/$metadata'' to the URL of your instance.
*If your Acumatica ERP instance contains multiple tenants or a single tenant, append ''/OData/&lt;TenantName&gt;/$metadata'' to the URL of your instance.
*:((({S:Hint}We recommend that you use the approach with the login name of the tenant specified in the URL for an instance with a single tenant if you are going to add more tenants to the instance in the future.
)))
[anchor|#_dda14cc7-f8e0-49aa-979d-5ab390e8ebba]
==Obtaining of the Contents of a Generic Inquiry Through OData==
Through OData, you can view the contents of any exposed inquiry. You compose the data by doing one of the following:[anchor|#ul_izp_ycy_nr]
*If your Acumatica ERP instance contains a single tenant, append ''/OData/&lt;GI&#95;Name&gt;'' to the URL of your instance.
*If your Acumatica ERP instance contains multiple tenants or a single tenant, append ''/OData/&lt;TenantName&gt;/&lt;GI&#95;Name&gt;'' to the URL of your instance.
*:((({S:Hint}We recommend that you use the approach with the login name of the tenant specified in the URL for an instance with a single tenant if you are going to add more tenants to the instance in the future.
)))

In the examples above, ''&lt;TenantName&gt;'' is the login nairies. ''&lt;GI&#95;Name&gt;'' is the case-sensitive title of the exposed generic inquiry.{br}

The data is displayed on the screen in ATOM notation, which is used by default. {br}

 Acumatica ERP supports JSON and ATOM notations; by default, the data is displayed on the screen in ATOM notation. You can directly select a notation by appending the ''$format'' parameter to the URL of an inquiry. The parameter can have one of the following values:[anchor|#ul_kqr_gty_nr]
*''json'': The data is displayed in JSON notation.
*''atom'': The data is displayed in ATOM notation.
*''jsonverbose'': The data is displayed in JSON Verbose notation.

For example, if the URL of your Acumatica ERP instance is ''http://sweetlife.com/erp'', the instance contains one tenant, and you want to obtain the contents of the ''BI-Customer'' generic inquiry in JSON format, type you use the ''http://sweetlife.com/erp/OData/BI-Customer?$format=json '' URL (either in your browser or in an OData client).
==Configuration of CORS==
 Acumatica ERP supports cross-origin resource sharing (CORS), meaning that requests for resources can come from a different domain than that of the resource making the request. With CORS enabled, you can allow access to the OData endpoints of your Acumatica ERP instance for the client-side web applications, including Java-based applications. For more information about CORS, see [http://www.w3.org/TR/cors/|Cross-Origin Resource Sharing] on the World Wide Web Consortium portal.{br}

The CORS settings of the web server of your instance are defined by the {{cors}} section of the <tt>web.config</tt> file; an example of this section is shown below.{{{{&lt;cors enabled="true" origins="*" methods="*" headers="*" 
exposedHeaders="DataServiceVersion,MaxDataServiceVersion,OData-Version,
OData-MaxVersion" /&gt;
}}}}
The web server of the application supports the following headers, in addition to simple headers: {{DataServiceVersion}}, {{MaxDataServiceVersion}}, {{OData-Version}}, and {{OData-MaxVersion}}. You need to use these headers to access OData endpoints. You can add your own headers as well.{br}

By default, CORS is enabled, all origins are allowed access to the server, and all supported headers are exposed and can be used. You can enforce limitations on cross-origin requests by changing the settings. For details, see [HelpRoot_ReportingTools\CU__how_Odata_CORS|Accessing the Exposed Inquiry Through OData: To Configure CORS].]]></column>
			<column name="PlainText"><![CDATA[Accessing the Exposed Inquiry Through OData: General Information You can view the generic inquiries exposed through OData in your browser. To view the data,         you enter the URL of the OData endpoint of your  Acumatica ERP instance in the address bar of your browser. When the system asks you to authenticate yourself, provide your sign-in         credential s          to  Acumatica ERP:          your user name and your password. When your identity has been confirmed, the system displays         the list of available inquiries. Learning Objectives In this chapter, you will learn how to access an exposed generic inquiry through Microsoft         Excel and how to configure cross-origin resource sharing (CORS) to access an exposed inquiry         through client-side web applications. Applicable Scenarios You are a technical specialist with your company, and your responsibilities include the         management of different reports and inquiries. An accountant has requested access to an  Acumatica ERP generic inquiry through a third-party OData client, such as Microsoft Excel, Microsoft         Power BI, or a Java-based application. Access to an Exposed Generic Inquiry Through an OData Client By exposing data from  Acumatica ERP—in this case, data from a generic inquiry created on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form—through the OData interface,         you can give users the ability to view your company’s data and perform detailed financial         analysis by using third-party OData clients, such as Microsoft Excel and Microsoft Power         BI. Microsoft Excel 2007 does not support connection to OData endpoints. To connect to your data, you specify the URL of the OData endpoint of your  Acumatica ERP instance to the OData client and authenticate yourself by entering your  Acumatica ERP credentials. The OData client can use the OAuth 2.0 authorization instead of direct         authentication with a user name and password.  The OData client then connects to your  Acumatica ERP instance and obtains the data for you. Even though you can view all exposed inquiries, you can obtain only the data         to which you have sufficient access rights. The URL of OData Endpoint Generally, the URL of the  Acumatica ERP OData endpoint is the URL of your instance concatenated with  /OData . For example,         suppose that the URL of your instance is  https://sweetlife.com/erp ; to view the list         of exposed inquiries, you use the following URL:  https://sweetlife.com/erp/OData . The following screenshot demonstrates a list of exposed inquiries accessed through the         browser. The list of exposed inquiries accessed through the browser If your instance has a multitenant configuration, you add  /OData/<TenantName>  to         the end of the URL of your instance, where  <TenantName>  is the login name of the         tenant in the  Acumatica ERP instance. You can find the login names of tenants on the   ([~/?ScreenId=SM203530|SM203530]) Tenant List (SM203530) form (as shown in the following         screenshot). For more information on tenant and multitenant configuration, see  Managing Tenants. The login names of tenants For example, if the URL of your  Acumatica ERP instance is  https://sweetlife.com/erp  and you want to view generic inquiries         exposed in the  Calipso LLC  tenant, you use the            https://sweetlife.com/erp/OData/Calipso LLC  URL in your browser or in an OData         client. (If you type this into a browser, you will notice that the browser automatically         replaces each space with  %20  in the URL.)  Also, you can view the login name of the tenant to which you are currently signed in by         viewing the User menu (as shown in the following screenshot), which you access by clicking         the User menu button on the top pane of the  Acumatica ERP screen. User menu with the tenant login name Obtaining of the List of Fields of Generic Inquiries Through OData Through OData, you can view the list of fields in exposed generic inquiries. The field         names in the list are changed according to the OData specifications; for more information,         see  Exposing an Inquiry by Using OData: Preparation of an Inquiry for Exposure. The list of fields includes the key fields of the tables used in the generic inquiry,         even if these key fields have not been added to the  Results Grid  tab         of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form for the generic inquiry. You compose the URL to obtain the list of fields by doing one of the following: If your  Acumatica ERP instance contains a single tenant, append  /OData/$metadata  to the URL of your           instance. If your  Acumatica ERP instance contains multiple tenants or a single tenant, append              /OData/<TenantName>/$metadata  to the URL of your instance. We recommend that you use the approach             with the login name of the tenant specified in the URL for an instance with a single             tenant if you are going to add more tenants to the instance in the future. Obtaining of the Contents of a Generic Inquiry Through OData Through OData, you can view the contents of any exposed inquiry. You compose the data by         doing one of the following: If your  Acumatica ERP instance contains a single tenant, append  /OData/<GI_Name>  to the URL of your           instance. If your  Acumatica ERP instance contains multiple tenants or a single tenant, append              /OData/<TenantName>/<GI_Name>  to the URL of your instance. We recommend that you use the approach             with the login name of the tenant specified in the URL for an instance with a single             tenant if you are going to add more tenants to the instance in the future. In the examples above,  <TenantName>  is the login          nairies .            <GI_Name>  is the case-sensitive title of the exposed generic inquiry. The data is displayed on the screen in ATOM notation, which is used by default.   Acumatica ERP supports JSON and ATOM notations; by         default ,          the data is displayed on the screen in ATOM notation. You can directly select a notation by         appending the  $format  parameter to the URL of an inquiry. The parameter can have one         of the following values: json : The data is displayed in JSON notation. atom : The data is displayed in ATOM notation. jsonverbose : The data is displayed in JSON Verbose notation. For example, if the URL of your  Acumatica ERP instance is  http://sweetlife.com/erp , the instance contains one tenant, and you         want to obtain the contents of the  BI-Customer  generic inquiry in JSON format, type         you use the  http://sweetlife.com/erp/OData/BI-Customer?$format=json   URL (either in         your browser or in an OData client). Configuration of CORS  Acumatica ERP supports cross-origin resource sharing (CORS), meaning that requests for resources can         come from a different domain than that of the resource making the request. With CORS         enabled, you can allow access to the OData endpoints of your  Acumatica ERP instance for the client-side web applications, including Java-based applications. For         more information about CORS, see  Cross-Origin Resource Sharing Cross-Origin Resource Sharing on the World Wide Web Consortium         portal. The CORS settings of the web server of your instance are defined by the            cors  section of the  web.config  file; an example of         this section is shown below. <cors enabled="true" origins="*" methods="*" headers="*" 
exposedHeaders="DataServiceVersion,MaxDataServiceVersion,OData-Version,
OData-MaxVersion" /> The web server of the application supports the following headers, in addition to simple         headers:  DataServiceVersion ,  MaxDataServiceVersion ,            OData-Version , and  OData-MaxVersion . You need to use         these headers to access OData endpoints. You can add your own headers as well. By default, CORS is enabled, all origins are allowed access to the server, and all         supported headers are exposed and can be used. You can enforce limitations on cross-origin         requests by changing the settings. For details, see  Accessing the Exposed Inquiry Through OData: To Configure CORS. ]]></column>
		</row>
		<row PageID="f0fdb548-69ff-4836-8783-37119a0fa771" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="49a8b179-82d6-d135-5738-a4b6205201df" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Microsoft Power BI is a collection of online services and features that you use to find and visualize data, share analysis, and collaborate intuitively. This collection includes the Power BI Acumatica template app, which you can use to quickly connect to your live business data and immediately glean insights from it. The template app, which has been provided by Acumatica, consists of a set of Acumatica ERP generic inquiries that are exposed through the OData protocol and the data model that enables Power BI requests to the data retrieved through the inquiries. You can also create custom views for Power BI.
==Custom Power BI Views==
You can create custom Power BI views for your instance of Acumatica ERP. The process of creating your own view of Acumatica ERP data in Microsoft Power BI includes the following general steps:[anchor|#ol_lw2_nnt_rs]
#You create a generic inquiry exposed via OData. For more information, see [HelpRoot_ReportingTools\GI_Exposing_Inquiry_by_Using_OData_Exposing_Inquiry_Through_OData_Activity|Exposing an Inquiry by Using OData: To Expose Inquiry Results Through OData].
#In Microsoft Excel, you prepare the data model for Power BI. By using the Power Pivot add-in to Microsoft Excel, you create, arrange, and normalize the data model of the raw data obtained from the generic inquiry. For more information, see [HelpRoot_ReportingTools\GI_Access_to_Exposed_Inquiry_Through_OData_Accessing_Inquiry_Through_Excel_Activity|Accessing the Exposed Inquiry Through OData: To Access an Exposed Inquiry in Microsoft Excel].
#You upload the Excel file with the data model to Microsoft Power BI. For more information, see [https://docs.microsoft.com/en-us/power-bi/service-excel-workbook-files|Getting data from Excel to Power BI] in the Microsoft documentation.

==Requirements for the User Account Role==
The access to Power BI views from the Acumatica template app is configured for user roles in Acumatica ERP as the access to the corresponding generic inquiries in the application&rsquo;s site. An out-of-the-box Acumatica ERP instance includes the predefined ''BI'' access role, which has access to the generic inquiry forms included in the Acumatica template app for Power BI. Account is assigned the ''BI'' role. A user with the ''Administrator'' role, which provides full access rights in the system, can assign the ''BI'' role to the needed users by using the [HelpRoot_FormReference\SM_20_10_10|Users] ([~/?ScreenId=SM201010|SM201010]) form.{br}

To restrict user access to certain views in Power BI, you can use existing user roles or create additional user roles in Acumatica ERP. You should specify the needed access rights to the appropriate generic inquiry forms by using the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form. For more information on granting user access to Acumatica ERP forms, see [HelpRoot_ReportingTools\GI_Access_Rights_GeneralInfo|Managing Access Rights to Generic Inquiries: General Information].]]></column>
			<column name="PlainText"><![CDATA[Accessing the Exposed Inquiry Through OData: Connecting to  Acumatica ERP from     Power BI Microsoft Power BI is a collection of online services and features that you use to find and         visualize data, share analysis, and collaborate intuitively. This collection includes the         Power BI  Acumatica template app, which you can use to quickly connect to your live business data and         immediately glean insights from it. The template app, which has been provided by  Acumatica, consists of a set of  Acumatica ERP generic inquiries that are exposed through the OData protocol and the data model that         enables Power BI requests to the data retrieved through the inquiries. You can also create         custom views for Power BI. Custom Power BI Views You can create custom Power BI views for your instance of  Acumatica ERP. The process of creating your own view of  Acumatica ERP data in Microsoft Power BI includes the following general steps: You create a generic inquiry exposed via OData. For more information, see  Exposing an Inquiry by Using OData: To Expose Inquiry Results Through OData. In Microsoft Excel, you prepare the data model for Power BI. By using the Power Pivot           add-in to Microsoft Excel, you create, arrange, and normalize the data model of the raw           data obtained from the generic inquiry. For more information, see  Accessing the Exposed Inquiry Through OData: To Access an Exposed Inquiry in Microsoft Excel. You upload the Excel file with the data model to Microsoft Power BI. For more           information, see  Getting data from Excel to Power BI Getting data from Excel to Power BI in the           Microsoft documentation. Requirements for the User Account Role The access to Power BI views from the  Acumatica template app is configured for user roles in  Acumatica ERP as the access to the corresponding generic inquiries in the application's site. An         out-of-the-box  Acumatica ERP instance includes the predefined  BI  access role, which has access to the generic         inquiry forms included in the  Acumatica template app for Power BI. Account is assigned the  BI  role. A user with the            Administrator  role, which provides full access rights in the system, can assign the            BI  role to the needed users by using the   ([~/?ScreenId=SM201010|SM201010]) Users (SM201010)         form. To restrict user access to certain views in Power BI, you can use existing user roles or         create additional user roles in  Acumatica ERP. You should specify the needed access rights to the appropriate generic inquiry forms by         using the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020) form. For more information on granting         user access to  Acumatica ERP forms, see  Managing Access Rights to Generic Inquiries: General Information. ]]></column>
		</row>
		<row PageID="9145f675-c897-42bf-9683-dcaee14f877c" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="cf5b77fb-b989-47c2-4924-318f1c6e837a" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to access a generic inquiry that was exposed through OData in Microsoft Excel.{br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including those involving the creation, modification, and use of generic inquiries. An accountant of your company has asked to have access in Excel to the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. The accountant uses Excel for building reports based on the data of this generic inquiry and would like for the data to always be up to date.{br}

You have exposed the requested generic inquiry, and now you need to verify that it can be accessed through Excel.
==Process Overview==
On [HelpRoot_FormReference\SM_20_10_55|Access Rights by User] ([~/?ScreenId=SM201055|SM201055]) form, you will verify that your user account has sufficient access rights (the ''Delete'' level) to the predefined Invoices and Memos (AR3010PL) generic inquiry.{br}

You will then open Microsoft Excel and import data from the exposed inquiry to a spreadsheet.[anchor|#_c46f8b3f-037d-4400-8df1-3914850f0448]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_996000c2-c2ba-4ba9-851d-5a73ac509bf0]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Verifying the Access Rights and Tenant Login Name==
To verify that your user account has the appropriate level of access rights to the exposed inquiry, do the following:[anchor|#_584c94b5-01f3-464c-98e4-483732b7d85a]
#Open the [HelpRoot_FormReference\SM_20_10_55|Access Rights by User] ([~/?ScreenId=SM201055|SM201055]) form.
#In the '''Login''' box, select your login (username), which is ''gibbs''.
#In the left pane, scroll down to the bottom, and click the '''Hidden''' node. 
#In the right pane, where the list of hidden forms appears, find the row with ''Invoices and Memos'' in the '''Description''' column, and verify that the '''Access Rights''' column has the ''Deleted'' level of access rights.
#:((({S:Hint}If a user account has multiple roles assigned to it, the user account’s level of access rights to a particular form is the most permissive level among the active roles.
)))

==Step 2: Viewing a Generic Inquiry in Excel==
To access the exposed inquiry through Microsoft Excel, do the following:((({S:Hint}The instructions below apply to Excel 2019. The details may differ for other versions of Microsoft Excel. The version you use must be higher than 2007; Microsoft Excel 2007 does not support connecting to OData endpoints.
)))[anchor|#ol_s3h_lxy_nr]
#Open an Excel workbook.
#In the '''Data''' ribbon tab, click '''Get Data''' > '''From Other Sources''' > '''From OData Feed'''.
#In the '''OData Feed''' wizard, do the following:
##Select the '''Basic''' option button.
##Enter the URL to the OData endpoint.
##Click '''OK'''.
##On the next step of the wizard, switch to the '''Basic''' tab, and enter your sign-in credentials, which are your Acumatica ERP username and password.
##:((({S:Hint}Do not add the tenant name after your username.
)))
##Click '''Connect'''.
##:Excel connects to the Acumatica ERP instance and obtains the list of exposed generic inquiries that are available for your Acumatica ERP user account.
#In the left pane of the '''Navigator''' dialog box, which opens, select the ''Invoices and Memos'' generic inquiry. You can preview the data in the right pane of the dialog box.
#Click '''Load'''.
#:The system connects to the server, downloads the data from your Acumatica ERP instance, and presents the data in the way you selected. 
#:((({S:Hint}The sorting order in the resulting Excel file may differ from the sorting order in Acumatica ERP, because Excel applies sorting after the data is downloaded. 
)))
#To update the data, click '''Refresh All''' in the '''Data''' ribbon tab.
]]></column>
			<column name="PlainText"><![CDATA[Accessing the Exposed Inquiry Through OData: To Access an Exposed Inquiry in Microsoft         Excel In this activity, you will learn how to access a generic inquiry that was exposed                 through OData in Microsoft Excel. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including those involving the creation, modification, and use of                 generic inquiries. An accountant of your company has asked to have access in Excel                 to the predefined Invoices and Memos (AR3010PL) generic inquiry form, which has the                      AR-Invoices and Memos  inquiry title and the  Invoices and Memos                  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry                 (SM208000) form. The accountant uses Excel for building reports based on the data of                 this generic inquiry and would like for the data to always be up to date. You have exposed the requested generic inquiry, and now you need to verify that it                 can be accessed through Excel. Process Overview On   ([~/?ScreenId=SM201055|SM201055]) Access Rights by User (SM201050) form, you will verify that                 your user account has sufficient access rights (the  Delete  level) to the                 predefined Invoices and Memos (AR3010PL) generic inquiry. You will then open Microsoft Excel and import data from the exposed inquiry to a                 spreadsheet. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Verifying the Access Rights and Tenant Login Name To verify that your user account has the appropriate level of access rights to the                 exposed inquiry, do the following: Open the   ([~/?ScreenId=SM201055|SM201055]) Access Rights by User (SM201055) form. In the  Login  box, select your login (username), which is                          gibbs . In the left pane, scroll down to the bottom, and click the                          Hidden  node.  In the right pane, where the list of hidden forms appears, find the row with                          Invoices and Memos  in the  Description  column,                     and verify that the  Access Rights  column has the                          Deleted  level of access rights. If a user account has                         multiple roles assigned to it, the user account’s level of access rights to                         a particular form is the most permissive level among the active                         roles. Step 2: Viewing a Generic Inquiry in Excel To access the exposed inquiry through Microsoft Excel, do the following: The instructions below apply to Excel 2019. The details may differ for                 other versions of Microsoft Excel. The version you use must be higher than 2007;                 Microsoft Excel 2007 does not support connecting to OData endpoints. Open an Excel workbook. In the  Data  ribbon tab, click  Get Data From Other Sources From OData Feed . In the  OData Feed  wizard, do the following: Select the  Basic  option button. Enter the URL to the OData endpoint. Click  OK . On the next step of the wizard, switch to the                                  Basic  tab, and enter your sign-in                             credentials, which are your  Acumatica ERP username and password. Do not add the tenant name                                 after your username. Click  Connect . Excel connects to the  Acumatica ERP instance and obtains the list of exposed generic inquiries that                                 are available for your  Acumatica ERP user account. In the left pane of the  Navigator  dialog box, which                     opens, select the  Invoices and Memos  generic inquiry. You can preview the                     data in the right pane of the dialog box. Click  Load . The system connects to the server,                         downloads the data from your  Acumatica ERP instance, and presents the data in the way you selected.  The sorting order in the resulting Excel file may differ from the                         sorting order in  Acumatica ERP, because Excel applies sorting after the data is downloaded.  To update the data, click  Refresh All  in the                          Data  ribbon tab. ]]></column>
		</row>
		<row PageID="6b96531f-f0b7-4532-accb-f625f4e5a388" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="819c13d7-ef59-96f2-ee1b-6f14f7ce919d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, cross-origin resource sharing (CORS) is used to allow access to OData endpoints for client-side applications. To enforce limitations on CORS requests, you change the CORS settings for the web server of your Acumatica ERP instance. ((({S:Hint}Because saving changes in <tt>web.config</tt> restarts the site of the application, make sure that all users of your website are warned about the site restart so that they can save all documents.
)))
==To Configure CORS==[anchor|#ol_uq3_v1g_5j]
#Open the <tt>web.config</tt> file, which is located in the folder that contains the application instance website.
#In the file, find the {{cors}} section, shown below, within the {{odata}} section.{{{{
&lt;odata enableCompression="true" compressionThreshold="860"&gt;
    &lt;cors enabled="true" origins="*" methods="*" headers="*" 
    exposedHeaders="DataServiceVersion,MaxDataServiceVersion,OData-Version,
    OData-MaxVersion" /&gt;
&lt;/odata&gt;
}}}}
#Specify the CORS settings in the {{cors}} section as follows:
#*To enable CORS, set {{enabled="true"}}.
#*To disable CORS, set {{enabled="false"}}.
#*To limit the origins that are allowed access to the application web server, for the {{origins}} parameter, list the allowed origins separated by commas.
#*To allow all origins, set {{origin="*"}}.
#*To limit the methods supported by the resource, for the {{methods}} parameter, list the allowed methods, separated by commas.
#*To allow all methods, set {{methods="*"}}.
#*To limit simple headers supported by the resource, for the {{headers}} parameter, list the allowed simple headers separated by commas.
#*To allow all simple headers, set {{headers="*"}}.
#*To add your own headers, for the {{exposedHeaders}} parameter after the default headers, list the allowed headers separated by commas.
#Save the <tt>web.config file</tt>, which automatically restarts the website.
]]></column>
			<column name="PlainText"><![CDATA[Accessing the Exposed Inquiry Through OData: To Configure          CORS In  Acumatica ERP, cross-origin resource sharing (CORS) is used to allow access to OData endpoints                 for client-side applications. To enforce limitations on CORS requests, you change                 the CORS settings for the web server of your  Acumatica ERP instance.  Because saving changes in  web.config  restarts                 the site of the application, make sure that all users of your website are warned                 about the site restart so that they can save all documents. To Configure CORS Open the  web.config  file, which is located in the folder                     that contains the application instance website. In the file, find the  cors  section, shown below, within the                          odata                      section. 
<odata enableCompression="true" compressionThreshold="860">
    <cors enabled="true" origins="*" methods="*" headers="*" 
    exposedHeaders="DataServiceVersion,MaxDataServiceVersion,OData-Version,
    OData-MaxVersion" />
</odata> Specify the CORS settings in the  cors  section as follows: To enable CORS, set  enabled="true" . To disable CORS, set  enabled="false" . To limit the origins that are allowed access to the application web                             server, for the  origins  parameter, list the allowed                             origins separated by commas. To allow all origins, set  origin="*" . To limit the methods supported by the resource, for the                                  methods  parameter, list the allowed methods,                             separated by commas. To allow all methods, set  methods="*" . To limit simple headers supported by the resource, for the                                  headers  parameter, list the allowed simple headers                             separated by commas. To allow all simple headers, set  headers="*" . To add your own headers, for the  exposedHeaders                              parameter after the default headers, list the allowed headers separated                             by commas. Save the  web.config file , which automatically restarts the                     website. ]]></column>
		</row>
		<row PageID="80ac7180-bdca-4401-9a50-9f25d2569383" Language="en-US" PageRevisionID="1" Content="&#xA; Acumatica ERP is designed with particular attention to the collection, storage, and processing of sensitive corporate data that must be protected against unauthorized access, use, modification, and disclosure. As such, Acumatica ERP uses reasonable security measures, including access control to system resources.{br}&#xA;&#xA;In the topics of this chapter, you will learn how to specify access rights to generic inquiries that have been developed on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form." PlainText="Managing Access Rights To Generic Inquiries  Acumatica ERP     is designed with particular attention to the collection, storage, and processing of sensitive     corporate data that must be protected against unauthorized access, use, modification, and     disclosure. As such,  Acumatica ERP     uses reasonable security measures, including access control to system resources. In the topics of this chapter, you will learn how to specify access rights to generic     inquiries that have been developed on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry     (SM208000) form. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="0d8ed737-b1fe-3d2e-f4f4-4038c152e146" RecordSourceID="22377" />
		<row PageID="f91fd245-9627-430d-bcc1-b684573567dc" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e438faeb-b51b-bfb7-98fb-4c95b1b01ef1" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, you create user accounts to allow people access the system. Based on users&rsquo; job responsibilities, you can control their access to forms, entities created through these forms, and operations on these entities. Rather than assigning each individual user access rights to each object that the user must access, you define roles, which are sets of access rights that fit the job responsibilities in your company; you then assign these roles to individual users. Roles help you easily manage access rights for groups of users in the system. Changing one role alters the access rights for all users to whom this role is assigned. {br}

Users are assigned one role or multiple roles, and based on these assignments, the users are then granted the appropriate levels of access to system objects. To be able to create, delete, or modify generic inquiries, you need a role that provides sufficient access rights (the ''Delete'' level) to the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. By default, the built-in ''Administrator'' role provides the needed access rights for working with generic inquiries by using this form.
==Learning Objectives==
In this chapter, you will learn how to set up access rights to generic inquiries.
==Applicable Scenarios==
You are responsible for administering user access to Acumatica ERP in your company. You need to manage access rights to different generic inquiries that your colleagues may need to do their jobs as efficiently as possible.
==Access Rights to Inquiry Forms==
 After an inquiry form has been created and published—that is, the '''Make Visible on the UI''' check box is selected on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form—the system assigns the ''Not Set'' access level to the inquiry form for all user roles. The ''Not Set'' access level indicates that all roles have access to the forms until at least one role is assigned the ''Revoked'' or ''Granted'' access rights. All roles with the ''Not Set'' level are then denied access to the form. For each user role, you can specify one of the defined levels of access rights. For more information, see [https://help-2020r1.acumatica.com/(W(38))/Help?ScreenId=ShowWiki&pageid=488983bb-4b1c-4ddb-8341-61e58f000fda|Levels of Access Rights].{br}

You specify the levels of access to any form in the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form.
==Access Rights to Inquiries as Substitute Forms==
If a particular generic inquiry form replaces an entry form (that is, if it functions as a ''substitute form''), access rights to the generic inquiry are inherited from this entry form. Thus, to change the level of access users have to the substitute form, you change the level of access to the entry form. You can manage access rights to substitute forms the same manner as you manage access rights to other generic inquiry forms.{br}

Before you set up the access rights to a generic inquiry form, you should check whether the inquiry form is replacing an entry form. That is, on the '''Entry Point''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, if the '''Entry Screen''' box is filled in and the '''Replace Entry Screen with this Inquiry in Menu''' check box is selected, you need to control the level of access to the entry form, rather than to the inquiry form functioning as a substitute form.{br}

If a generic inquiry defined as a substitute form is no longer defined as one—that is, if on the '''Entry Point''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] form, the '''Replace Entry Screen with this Inquiry in Menu''' check box is cleared—the access rights to the inquiry form revert to the initial state (that is, the access rights the inquiry had before you used it to replace a data entry form).]]></column>
			<column name="PlainText"><![CDATA[Managing Access Rights to Generic Inquiries: General Information In  Acumatica ERP, you create user accounts to allow people access the system. Based on users' job       responsibilities, you can control their access to forms, entities created through these forms,       and operations on these entities. Rather than assigning each individual user access rights to       each object that the user must access, you define roles, which are sets of access rights that       fit the job responsibilities in your company; you then assign these roles to individual users.       Roles help you easily manage access rights for groups of users in the system. Changing one       role alters the access rights for all users to whom this role is assigned.  Users are assigned one role or multiple roles, and based on these assignments, the users are       then granted the appropriate levels of access to system objects. To be able to create, delete,       or modify generic inquiries, you need a role that provides sufficient access rights (the          Delete  level) to the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. By       default, the built-in  Administrator  role provides the needed access rights for working       with generic inquiries by using this form. Learning Objectives In this chapter, you will learn how to set up access rights to generic inquiries. Applicable Scenarios You are responsible for administering user access to  Acumatica ERP in your company. You need to manage access rights to different generic inquiries that         your colleagues may need to do their jobs as efficiently as possible. Access Rights to Inquiry Forms  After an inquiry form has been created and published—that is, the  Make           Visible on the UI  check box is selected on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form—the system assigns the  Not           Set  access level to the inquiry form for all user roles. The  Not Set  access         level indicates that all roles have access to the forms until at least one role is assigned         the  Revoked  or  Granted  access rights. All roles with the  Not Set  level         are then denied access to the form. For each user role, you can specify one of the defined         levels of access rights. For more information, see  Levels of Access Rights Levels of Access Rights. You specify the levels of access to any form in the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen         (SM201020) form. Access Rights to Inquiries as Substitute Forms If a particular generic inquiry form replaces an entry form (that is, if it functions as a            substitute form ), access rights to the generic inquiry are inherited from this         entry form. Thus, to change the level of access users have to the substitute form, you         change the level of access to the entry form. You can manage access rights to substitute         forms the same manner as you manage access rights to other generic inquiry forms. Before you set up the access rights to a generic inquiry form, you should check whether the         inquiry form is replacing an entry form. That is, on the  Entry Point          tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, if the            Entry Screen  box is filled in and the  Replace Entry           Screen with this Inquiry in Menu  check box is selected, you need to control         the level of access to the entry form, rather than to the inquiry form functioning as a         substitute form. If a generic inquiry defined as a substitute form is no longer defined as one—that         is, if on the  Entry Point  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry form, the  Replace Entry Screen with this           Inquiry in Menu  check box is cleared—the access rights to the inquiry         form revert to the initial state (that is, the access rights the inquiry had before you used         it to replace a data entry form). ]]></column>
		</row>
		<row PageID="ad31dad5-a1c1-4cc8-aa5d-cc7f6fb3eb0d" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3b9cb25c-a22d-81fc-94f6-4427383f2e71" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to specify access rights to a generic inquiry that has been created on the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form.
==Story==
Suppose that you are a system administrator who manages user access to Acumatica ERP in your company. A financial supervisor of your company has requested that you allow users who are working with the ''SweetLife Store'' branch to view information on the Expected Receipts (GI000081) inquiry form, which is the predefined generic inquiry form with the ''DB-ARexpectedReceipts'' inquiry title and the ''Expected Receipts'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. {br}

For the ''DB-ARexpectedReceipts'' generic inquiry, you have reviewed the inquiry settings on the '''Entry Point''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form and made sure that the inquiry is not configured as a substitute form for an entry form. This means that you need to specify the level of access rights directly for the form because the inquiry form does not inherit access rights from an entry form. {br}

You have reviewed the roles that are assigned to the employees of the branch and determined that to give these employees the ability to view information on the form, you need to assign the ''View Only'' level of access rights to the ''Branch Retail'' role.
==Process Overview==
You will use the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form to select the ''DB-ARexpectedReceipts'' inquiry form and then assign the ''View Only'' level of access rights to for the ''Branch Retail'' role. Then you will sign in to Acumatica ERP with credentials of a user with the ''Branch Retail'' role (user name: ''chubb''), open the Expected Receipts (GI000081) inquiry form, and make sure that you can view information on the form, to verify the level of access rights. [anchor|#_832aa5bb-af67-4f07-b3d9-4cf97a2fad2b]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_bd8894cc-1ae6-4d0b-909e-e1762b85b567]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Defining Access Rights==
To set up the ''View Only'' level of access rights to the ''Expected Receipts'' inquiry form, do the following:[anchor|#_fa2a7845-0fc4-4df3-a885-e9d3a474f2d7]
#Open the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form.
#In the left pane, open the '''Data Views''' node, and click ''Expected Receipts'' to specify access rights to this form. 
#:((({S:Hint}The node in which you find the inquiry is the setting in the '''Workspace''' box in the Summary area of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form for the generic inquiry. The system will display a tooltip with the screen identifier (in this case, ''GI000081'') when you point to a node.
)))
#In the right pane, in the row with the ''Branch Retail'' role, select ''View Only'' in the '''Access Rights''' column.
#Save your changes.

==Step 2: Verifying Access to the Form for a User Assigned to the Role==
To verify that a user with the ''Branch Retail'' role has the ''View Only'' level of access rights to the Expected Receipts (GI000081) inquiry form, do the following:[anchor|#_5104b7a9-fad3-4b13-a057-4adf60ab3387]
#In the right corner of the top pane on the Acumatica ERP screen, click the User menu button, and in the menu that opens, select '''Sign Out'''.
#Sign in to Acumatica ERP with the following credentials: 
#*Username: ''chubb''
#*Password: ''123''
#On the main menu, click the '''Data Views''' menu item. In the corresponding workspace, which opens, click ''Expected Receipts'' in the '''Inquiries''' category. Make sure the form is displayed.
#Make sure that in the top right of the form title bar, the '''Customization''' menu is not displayed.
]]></column>
			<column name="PlainText"><![CDATA[Managing Access Rights to Generic Inquiries: To Define Access Rights to a Generic Inquiry  In this activity, you will learn how to specify access rights to a generic inquiry                 that has been created on the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020)                 form. Story Suppose that you are a system administrator who manages user access to  Acumatica ERP in your company. A financial supervisor of your company has requested that you                 allow users who are working with the  SweetLife Store  branch to view                 information on the Expected Receipts (GI000081) inquiry form, which is the                 predefined generic inquiry form with the  DB-ARexpectedReceipts  inquiry title                 and the  Expected Receipts  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form.  For the  DB-ARexpectedReceipts  generic inquiry, you have reviewed the inquiry                 settings on the  Entry Point  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form and made sure that the                 inquiry is not configured as a substitute form for an entry form. This means that                 you need to specify the level of access rights directly for the form because the                 inquiry form does not inherit access rights from an entry form.  You have reviewed the roles that are assigned to the employees of the branch and                 determined that to give these employees the ability to view information on the form,                 you need to assign the  View Only  level of access rights to the  Branch                     Retail  role. Process Overview You will use the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020) form to                 select the  DB-ARexpectedReceipts  inquiry form and then assign the  View                     Only  level of access rights to for the  Branch Retail  role. Then you                 will sign in to  Acumatica ERP with credentials of a user with the  Branch Retail  role (user name:                      chubb ), open the Expected Receipts (GI000081) inquiry form, and make sure                 that you can view information on the form, to verify the level of access rights.  System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Defining Access Rights To set up the  View Only  level of access rights to the  Expected Receipts                  inquiry form, do the following: Open the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020) form. In the left pane, open the  Data Views  node, and click                          Expected Receipts  to specify access rights to this form.  The node in which you find the inquiry is the setting in the                              Workspace  box in the Summary area of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form for the generic                         inquiry. The system will display a tooltip with the screen identifier (in                         this case,  GI000081 ) when you point to a node. In the right pane, in the row with the  Branch Retail  role, select  View                         Only  in the  Access Rights  column. Save your changes. Step 2: Verifying Access to the Form for a User Assigned to the Role To verify that a user with the  Branch Retail  role has the  View Only                  level of access rights to the Expected Receipts (GI000081) inquiry form, do the                 following: In the right corner of the top pane on the  Acumatica ERP screen, click the User menu button, and in the menu that opens, select                          Sign Out . Sign in to  Acumatica ERP with the following credentials:  Username:  chubb Password:  123 On the main menu, click the  Data Views  menu item. In the                     corresponding workspace, which opens, click  Expected Receipts  in the                          Inquiries  category. Make sure the form is                     displayed. Make sure that in the top right of the form title bar, the                          Customization  menu is not displayed. ]]></column>
		</row>
		<row PageID="2d3e577f-1c1f-45ad-af2f-c4e670d4c8f1" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b51d2fd2-2741-d5b8-4734-a2d0e43dac91" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can configure access rights to the '''Export to Excel''' action of only those generic inquiries that replace entry form or for which a workspace and category have been specified on the [https://help-2020r1.acumatica.com/(W(29))/Wiki/ShowWiki|Generic Inquiry] (SM208000) form. Do the following:[anchor|#_021147aa-a400-4d9d-bad2-fc6bada1cc06]
#If the generic inquiry has been added to a workspace as a separate form, do the following:
##Open the [https://help-2020r1.acumatica.com/(W(29))/Wiki/ShowWiki|Access Rights by Screen] ([https://help-2020r1.acumatica.com//?ScreenId=SM201020|SM201020]) form.
##In the left pane, expand the nodes to the necessary level to find the generic inquiry to which you want to set up access rights.
##Expand the generic inquiry.
##Expand the ''Generic Inquiry Result''container.
##Click the ''Export'' action.
##In the right pane, select the required access rights level for all necessary user roles. For details, see [https://help-2020r1.acumatica.com/(W(29))/Wiki/ShowWiki|Levels of Access Rights].
##On the form toolbar, click '''Save'''.
#If the generic inquiry is configured to replace an entry form, do the following:
##Open the [https://help-2020r1.acumatica.com/(W(29))/Wiki/ShowWiki|Access Rights by Screen] ([https://help-2020r1.acumatica.com//?ScreenId=SM201020|SM201020]) form.
##In the left pane, expand the nodes to the necessary level to find the entry form that has been replaced with the generic inquiry to which you want to set up access rights.
##Expand the entry form.
##Expand the container of the entry form.
##Click the ''Export'' action.
##In the right pane, select the required access rights level for all necessary user roles. For details, see [https://help-2020r1.acumatica.com/(W(29))/Wiki/ShowWiki|Levels of Access Rights].
##On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Managing Access Rights to Generic Inquiries: To Configure Access Rights to the Export to         Excel Action of a Generic Inquiry You can configure access rights to the  Export to Excel  action                 of only those generic inquiries that replace entry form or for which a workspace and                 category have been specified on the  Generic Inquiry Generic Inquiry (SM208000) form. Do the                 following: If the generic inquiry has been added to a workspace as a separate form, do the                         following: Open the  Access Rights by Screen Access Rights by Screen ( SM201020 SM201020) form. In the left pane, expand the nodes to the necessary level to find the                             generic inquiry to which you want to set up access rights. Expand the generic inquiry. Expand the  Generic Inquiry Result container. Click the  Export  action. In the right pane, select the required access rights level for all                             necessary user roles. For details, see  Levels of Access Rights Levels of Access Rights. On the form toolbar, click  Save . If the generic inquiry is configured to replace an entry form, do the                         following: Open the  Access Rights by Screen Access Rights by Screen ( SM201020 SM201020) form. In the left pane, expand the nodes to the necessary level to find the                             entry form that has been replaced with the generic inquiry to which you                             want to set up access rights. Expand the entry form. Expand the container of the entry form. Click the  Export  action. In the right pane, select the required access rights level for all                             necessary user roles. For details, see  Levels of Access Rights Levels of Access Rights. On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="642945d9-df36-429b-8784-0f1bcf0e5495" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3bca2603-d28c-eb04-3d2a-24fa2daa21c9" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In the OData Version 3.0 interface, you can request data from generic inquiries that are configured in Acumatica ERP. In the OData interface based on the [https://www.odata.org/documentation/|OData Version 4.0] protocol, you can request data from Acumatica ERP by directly accessing DACs without configuring any generic inquiry.((({S:Hint}Password fields are retrieved encrypted.
))){br}{TOC}
==Retrieval of the Full Set of Metadata of the Instance==
You can use the following URL to get the full list of DACs, their fields, the fields&rsquo; types, and the navigation properties of DACs, which represent relationships between the DACs.{{{{https://&lt;Acumatica ERP instance URL&gt;/odata4/&lt;tenant&gt;/$metadata
}}}}((({S:Hint}In this URL and other URLs presented in this topic, the tenant can be omitted if the Acumatica ERP instance has only one tenant.
)))
The navigation properties contain detail entities in the {{<detail_entity_type>Collection}} format and related entities in the {{<related_entity_type>By<master_entity_field>}} format. For example, the definition of the {{PX.Objects.SO.SOOrder}} DAC has the {{SOLineCollection}} navigation property, which states that the {{PX.Objects.SO.SOLine}} DAC is a detail entity. It also has the {{BAccountByCustomerID}} navigation property, which links the {{CustomerID}} field of the {{PX.Objects.SO.SOOrder}} DAC with the {{BAccountID}} field of the {{PX.Objects.CR.BAccount}} DAC.
==Retrieval of All Records of a DAC==
You can use the following URL to get all records of a DAC.{{{{https://&lt;Acumatica ERP instance URL&gt;/odata4/&lt;tenant&gt;/&lt;DAC&gt;
}}}}In this URL, the DAC is specified by its fully qualified name, by its display name, or by its short name (which does not include the namespace). For example, the use of either of the following URLs leads to the same result of receiving the contents of the <tt>SOOrder</tt> entity:[anchor|#_c68159a6-4928-4a60-88fc-8db23a6bb7f5]
*''https://localhost/AcumaticaERP/odata4/SOOrder''
* ''https://localhost/AcumaticaERP/odata4/PX&#95;Objects&#95;SO&#95;SOOrder''

==Retrieval of a Record by the Key Fields==
You can retrieve a record with certain values of key fields by specifying these fields and their values in the URL.{br}

The following sample URL retrieves the sales order whose {{OrderType}} field value is ''SO'' and whose {{OrderNbr}} field value is ''000058'': ''https://localhost/AcumaticaERP/odata4/SOOrder(OrderType=&rsquo;SO&rsquo;,OrderNbr=&rsquo;000058&rsquo;)''.
==Specification of a Filter==
You can obtain records that meet a certain filter by specifying this filter in the URL.{br}

The following sample URL retrieves the sales orders whose {{OrderType}} field value is ''IN'': ''https://localhost/AcumaticaERP/odata4/SOOrder?$filter=(OrderType eq &rsquo;IN&rsquo;)''.
==Retrieval of Related Data==
If an entity has a detail entity, you can obtain the records of a master entity, along with their details, in a single query by using the <tt>$expand</tt> parameter.{br}

The following sample URL retrieves sales orders along with their detail information: ''https://localhost/AcumaticaERP/odata4/SOOrder?$filter=(OrderType eq &rsquo;IN&rsquo;)&$expand=SOLineCollection''.{br}

The following sample URL retrieves sales orders along with their customers’ information: ''https://localhost/AcumaticaERP/odata4/SOOrder?$filter=(OrderType eq &rsquo;IN&rsquo;)&$expand=BAccountByCustomerID''.
==Restriction of Data Access to the ODatav4 User Role==
In Acumatica ERP, the ''ODatav4 User'' role, with the description ''Access to data exposed via OData v4'', has been predefined. You can retrieve data by using the OData Version 4 interface only if you have the ''ODatav4 User'' role.
==Other Rules that Restrict Data Access==
 Acumatica ERP applies the following rules for restricting access to objects by using the OData Version 4 interface:[anchor|#_017c40ae-6b2f-41f5-8676-7e1f5dcdf8ae]
*Existing row-level security rules
*Rules that are set by the <tt>GITables.xml</tt> file, in which visible and hidden groups of DACs are specified
]]></column>
			<column name="PlainText"><![CDATA[Retrieving Acumatica ERP Data in the OData Version 4 Interface In the OData Version 3.0 interface, you can request data from generic inquiries that                 are configured in  Acumatica ERP. In the OData interface based on the  OData                     Version 4.0 OData Version 4.0 protocol, you can request data from  Acumatica ERP by directly accessing DACs without configuring any generic inquiry. Password fields are retrieved encrypted. Retrieval of the Full Set of Metadata of the Instance You can use the following URL to get the full list of DACs, their fields, the fields'                 types, and the navigation properties of DACs, which represent relationships between                 the                 DACs. https://<Acumatica ERP instance URL>/odata4/<tenant>/$metadata In this URL and other URLs presented in this topic, the tenant can be                 omitted if the  Acumatica ERP instance has only one tenant. The navigation properties contain detail entities in the                      <detail_entity_type>Collection  format and related entities                 in the  <related_entity_type>By<master_entity_field>  format.                 For example, the definition of the  PX.Objects.SO.SOOrder  DAC has                 the  SOLineCollection  navigation property, which states that the                      PX.Objects.SO.SOLine  DAC is a detail entity. It also has the                      BAccountByCustomerID  navigation property, which links the                      CustomerID  field of the  PX.Objects.SO.SOOrder                  DAC with the  BAccountID  field of the                      PX.Objects.CR.BAccount  DAC. Retrieval of All Records of a DAC You can use the following URL to get all records of a                 DAC. https://<Acumatica ERP instance URL>/odata4/<tenant>/<DAC> In                 this URL, the DAC is specified by its fully qualified name, by its display name, or                 by its short name (which does not include the namespace). For example, the use of                 either of the following URLs leads to the same result of receiving the contents of                 the  SOOrder  entity: https://localhost/AcumaticaERP/odata4/SOOrder https://localhost/AcumaticaERP/odata4/PX_Objects_SO_SOOrder Retrieval of a Record by the Key Fields You can retrieve a record with certain values of key fields by specifying these                 fields and their values in the URL. The following sample URL retrieves the sales order whose  OrderType                  field value is  SO  and whose  OrderNbr  field value is                      000058 :                      https://localhost/AcumaticaERP/odata4/SOOrder(OrderType='SO',OrderNbr='000058') . Specification of a Filter You can obtain records that meet a certain filter by specifying this filter in the                 URL. The following sample URL retrieves the sales orders whose  OrderType                  field value is  IN :                      https://localhost/AcumaticaERP/odata4/SOOrder?$filter=(OrderType eq                 'IN') . Retrieval of Related Data If an entity has a detail entity, you can obtain the records of a master entity,                 along with their details, in a single query by using the  $expand                  parameter. The following sample URL retrieves sales orders along with their detail information:                      https://localhost/AcumaticaERP/odata4/SOOrder?$filter=(OrderType eq                     'IN')&$expand=SOLineCollection . The following sample URL retrieves sales orders along with their customers’                 information:  https://localhost/AcumaticaERP/odata4/SOOrder?$filter=(OrderType eq                     'IN')&$expand=BAccountByCustomerID . Restriction of Data Access to the ODatav4 User Role In  Acumatica ERP, the  ODatav4 User  role, with the description  Access to data exposed via                     OData v4 , has been predefined. You can retrieve data by using the OData                 Version 4 interface only if you have the  ODatav4 User  role. Other Rules that Restrict Data Access  Acumatica ERP applies the following rules for restricting access to objects by using the OData                 Version 4 interface: Existing row-level security rules Rules that are set by the  GITables.xml  file, in which                         visible and hidden groups of DACs are specified ]]></column>
		</row>
		<row PageID="c621d79a-274d-4b72-a699-0e92d78a7b23" Language="en-US" PageRevisionID="1" Content="&#xA;In Acumatica ERP, you can create advanced filters for mass processing, inquiry, and generic inquiry forms to filter the data in the table showing inquiry results. Once you create an advanced filter for a particular form, it is shown as a tab on the form, both in the current user session and during future user sessions. You can create advanced filters for your personal use; if you have the appropriate access rights, you can share them with other users.{br}&#xA;&#xA;In this part of the guide, you will learn how to create and manage advanced filters." PlainText="Managing Advanced Filters In  Acumatica ERP,     you can create advanced filters for mass processing, inquiry, and generic inquiry forms to     filter the data in the table showing inquiry results. Once you create an advanced filter for a     particular form, it is shown as a tab on the form, both in the current user session and during     future user sessions. You can create advanced filters for your personal use; if you have the     appropriate access rights, you can share them with other users. In this part of the guide, you will learn how to create and manage advanced filters. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="6018edfb-d243-a34e-00ae-74a43a4b1f0c" RecordSourceID="22377" />
		<row PageID="f6bd0804-543a-4e52-9fe9-4cd8305c575b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="11c2b6b6-6213-9321-c80f-aa8de8523679" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, you can use simple and quick filters to quickly filter the data in the table columns of forms. In addition, you can create advanced filters for any mass processing, inquiry, and generic inquiry forms to filter the data in the table shown on the form. (For more information about types of forms, see [HelpRoot_GettingStarted\GS_Working_With_Data_Entry_Forms_GeneralInfo|Working with Data Entry Forms: General Information].) Advanced filters are shown as tabs on the form. Once you create an advanced filter for a particular form and save the filter, you can reuse it anytime you open that form in the future. You can create advanced filters for your personal use or share them with other users.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to do the following:[anchor|#_0273fc84-0b85-4fe9-9d34-b03af642faf6]
*Create advanced filters 
*Share advanced filters
*Modify advanced filters 
*Delete advanced filters
*Create personal filters based on shared filters

==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, including defining advanced filters. You need to create different advanced filters to filter specific types of data in forms and make them available to all users of the system. With these filters, every user of the form will have a consistent basis for analysis without needing to spend time on configuring personal filters.
==Personal and Shared Filters==
When you work with a form, you can create advanced filters, which save time spent on filtering data. When you save an advanced filter, the system adds a tab with the filtered data to the form. You can create as many filters as you need for a particular form. All the filters that you create are your personal filters; they are not available to other users in the system. You can modify the conditions of these filters or delete the filters if you do not need them anymore.{br}

If you would like to share your advanced filters with other users, you need to have sufficient access rights to the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form. If you do, you can modify filter clauses or delete shared advanced filters, either by selecting the filter on this form or directly on the related form. If you need to change the name for an advanced filter, you can do this only on the [HelpRoot_FormReference\CS_20_90_10|Filters] form.{br}

By default, users with the built-in ''Administrator'' role have access to this form. These users, generally system administrators or technical specialists that perform customizations, can create advanced filters and share them with other users. If an advanced filter is shared, it cannot be modified or deleted by users that do not have sufficient access rights to the [HelpRoot_FormReference\CS_20_90_10|Filters] form. ((({S:Hint}By default, every filter created on the [HelpRoot_FormReference\CS_20_90_10|Filters] form is shared.
)))
If you do not have access rights to modify advanced shared filters but would like to use an advanced shared filter as a basis for your filtering conditions, you can copy this filter and modify its copy as your advanced personal filter.
==Creation of Advanced Filters==
If you have sufficient access rights to the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form, you can use this form to create advanced shared filters for processing, inquiry and generic inquiry forms.{br}

We recommend, however, that you instead create an advanced filter directly on the form by using the '''Filter Settings''' dialog box (for details, see [HelpRoot_GettingStarted\GS__ref_Reusable_Filter_Settings_dialog|Filter Settings Dialog Box]), in which you can view the results immediately after applying the filter and modify the filter conditions, if needed. If you have access rights to the [HelpRoot_FormReference\CS_20_90_10|Filters] form, you can also share the filter by using the '''Filter Settings''' dialog box.{br}

To access the dialog box, you click '''Filter Settings''' on the table toolbar, as shown in the following screenshot.[anchor|#_408da417-4bf4-4492-b045-c315cb5415a0][anchor|#_69b962dd-6200-4e49-8d34-72fd6c097a0d][image:UserGuide/Images/GI_Reusable_Filters_FPD_Invoke_FilterSettings.png|popup|Button to access the Filter Settings dialog box|450px]
By using the dialog box, you can manage your advanced personal filters created for this form, and if you have sufficient access rights, you can also manage advanced shared filters that have been created for this form by other users.
==Filter Clauses==
A filter clause is a part of a filter represented by a table row in the table in the '''Filter Settings''' dialog box. Any advanced filter consists of either one filter clause or multiple filter clauses. For each clause, you specify the following settings in the table row:[anchor|#ul_fh4_thf_1s]
*'''Property''': The data field of the form that the filter will be applied to. You select a property from the list of available data fields. 
*'''Condition''': The logical operation that applies to the value of the selected property. You select a condition from the list of available conditions.
*'''Value''': A value for the logical condition used to filter the data. Depending on the selected property and condition, you enter a value (and sometimes a second value as well, depending on the condition). Each value must conform with the data type of the selected property. Generally, there are a series of fixed values for the property—for example, the ''Completed'' value for the ''Status'' property. For user-relative and date-relative clauses, you can specify parameters, such as ''@Me'' and ''@Today'', as values. The filtering process is not case-sensitive; that is, the system doesn&rsquo;t differentiate between uppercase and lowercase letters in values.
*:A value is not used for the ''Is Empty'' and ''Is Not Empty'' conditions.

To define a clause, you specify the property, the condition, and the applicable values in the table row. You can use ''And'' and ''Or'' operators and parentheses to group clauses into logical expressions. You use the ''And'' operator to find the records that meet the criteria in both the selected clause and the next clause, and the ''Or'' operator to find the records that meet the criteria in either the selected clause or the next clause. Parentheses can be used in logical statements to define the order of operations. The ''And'' and ''Or'' operators work on a unit in parentheses as if the unit was a single clause.{br}

 For example, on the Invoices and Memos (AR3010PL) generic inquiry form, you can search for invoices with the open status by specifying a filter that has two conditions combined with the ''And'' operator. The first condition has ''Type'' specified as the property, ''Equals'' specified as the condition, and ''Invoice'' specified as the value. The second condition has ''Status'' specified as the property, ''Equals'' specified as the condition, and ''Open''specified as the value (as shown in the following screenshot).[anchor|#_d76cb1e4-4304-4fab-8fc6-2e685cfade93][anchor|#_2335ba53-3c84-4efe-9658-9d042003f90d][image:UserGuide/Images/GI_Reusable_Filters_FPD_Filter_Clause_Example.png|popup|The clauses of the Open Invoices filter|450px]
==Wildcards in Filter Clauses==
When you filter data by using the '''Filter Settings''' dialog box or on the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form, you can use a pattern for the string value in the ''Value'' column. In the pattern, you can substitute one or more symbols with wildcard characters. You can use the following wildcard characters:[anchor|#_8faced2a-c29c-4fea-b6ed-a0185cec8450]
*Underscore (''&#95;''): You can use this character if you want to filter the data according to a pattern in which only one symbol is substituted. For example, if you try to filter the data by a customer name that contains the ''Customer&#95;Name'' string, the system will return all the customers whose name contains any of the following strings: ''Customer&#95;Name'', ''Customer-Name'', and ''Customer Name''.
*Percentage (''%''): You can use this character if you want to filter the data according a pattern in which multiple symbols are substituted. For example, if you try to filter the data by a customer name that contains the ''Da%n'' string, the system will return all the customers whose name starts with ''Da'' and ends with ''n'', such as ''Dalton'' as ''Damian''.

[anchor|#_2a79b8bb-e461-43cf-b440-2d0388974211]
==User-Relative Filter Clauses==
To simplify the process of filtering data by owner or by workgroup in the '''Filter Settings''' dialog box or on the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form, you can use three predefined user-relative parameters in the '''Value''' column. By using these parameters, you can configure ''user-relative clauses''. When you use these parameters, you do not need to create multiple rows with specific values—for example, to specify each workgroup in which you are a member for the ''Workgroup'' property. Instead, you can use only one parameter, such as ''@MyGroups'', to filter all the records of the workgroups you are a member of. {br}

The following predefined user-relative parameters are available:[anchor|#_a6e50112-57ec-492a-8505-d0da35766900]
*{{@Me}}: The current user. This parameter can be used only for the user-related properties (such as ''Owner'' or ''Custodian'') that have ''Equal'' and ''Does Not Equal'' conditions.
*{{@MyGroups}}: The workgroups in which the current user is a member, excluding the workgroups that are the subordinates of these workgroups. You can use this parameter for the ''Workgroup'' property, which has the ''Is In'' and ''Is Not In'' conditions.
*{{@MyWorktree}}: The workgroups in which the current user is a member, including the groups that are subordinates of these groups according to the company tree structure. You can use this parameter for the ''Workgroup'' property, which has the ''Is In'' and ''Is Not In'' conditions.
[anchor|#_12755b03-7718-4fe5-af41-1a2981b7c175]
==Date-Relative Filter Clauses==
To make date clauses in advanced filters more flexible, you can use date-relative parameters—parameters that are relative to the current date in the '''Filter Settings''' dialog box or on the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form.((({S:Hint}For the date-relative parameters, as the current date, the system uses the date (in coordinated universal time, or ''UTC'') of the server used to run the Acumatica ERP instance. Changing the business date (in the upper-right corner of the screen) does not affect the filter results.
)))
You can use the following date-relative parameters:[anchor|#_9c7db14c-bc80-4c0a-b6fe-f92953b92a55]
*{{@Today}}: The current date. You can modify this parameter by adding or subtracting days.
*{{@WeekStart}}: The start of the current week. You can modify this parameter by adding or subtracting weeks. 
*:((({S:Hint}The start and end of the week are determined according to the default system locale or the locale you selected when you signed in to Acumatica ERP. The system locales are specified and configured on the [HelpRoot_FormReference\SM_20_05_50|System Locales] ([~/?ScreenId=SM200550|SM200550]) form.
)))
*{{@WeekEnd}}: The end of the current week. You can modify this parameter by adding or subtracting weeks.
*:((({S:Hint}The start and end of the week are determined according to the default system locale or the locale you selected when you signed in to Acumatica ERP. The system locales are specified and configured on the [HelpRoot_FormReference\SM_20_05_50|System Locales] ([~/?ScreenId=SM200550|SM200550]) form.
)))
*{{@MonthStart}}: The start of the current month.
*{{@MonthEnd}}: The end of the current month.
*{{@QuarterStart}}: The start of the current quarter.
*{{@QuarterEnd}}: The end of the current quarter.
*{{@PeriodStart}}: The start of the current financial period. (GL101000) form.
*{{@PeriodEnd}}: The end of the current financial period; the financial periods in your system are defined on the [HelpRoot_FormReference\GL_10_10_00|Financial Year] form.
*{{@YearStart}}: The start of the current calendar year.
*{{@YearEnd}}: The end of the current calendar year.

To add a filter clause with a date-relative parameter, you select the parameter from the list.{br}

You can modify the parameters by adding or subtracting integers. The date is calculated according to the unit of measure of the parameter. For example, to view all tasks that are due next week, on the [HelpRoot_FormReference\EP_40_40_00|Tasks] ([~/?ScreenId=EP404000|EP404000]) form, you add a filter clause as follows: You specify ''Due Date'' as the property, ''Is Between'' as the condition, ''@WeekStart + 1'' as the first value, and ''WeekEnd + 1'' as the second value. The integer (''1'') in these values represents a week because it is the unit of measure of the parameter.((({S:Hint}If the modified date is out of range, the system won&rsquo;t be able to find any records and will return an error.
)))]]></column>
			<column name="PlainText"><![CDATA[Advanced Filters: General Information In  Acumatica ERP,     you can use simple and quick filters to quickly filter the data in the table columns of forms.     In addition, you can create advanced filters for any mass processing, inquiry, and generic     inquiry forms to filter the data in the table shown on the form. (For more information about     types of forms, see  Working with Data Entry Forms: General Information.) Advanced     filters are shown as tabs on the form. Once you create an advanced filter for a particular form     and save the filter, you can reuse it anytime you open that form in the future. You can create     advanced filters for your personal use or share them with other users. Learning Objectives In this chapter, you will learn how to do the following: Create advanced filters  Share advanced filters Modify advanced filters  Delete advanced filters Create personal filters based on shared filters Applicable Scenarios You are responsible for the customization of  Acumatica ERP     in your company, including defining advanced filters. You need to create different advanced     filters to filter specific types of data in forms and make them available to all users of the     system. With these filters, every user of the form will have a consistent basis for analysis     without needing to spend time on configuring personal filters. Personal and Shared Filters When you work with a form, you can create advanced filters, which save time spent on filtering     data. When you save an advanced filter, the system adds a tab with the filtered data to the     form. You can create as many filters as you need for a particular form. All the filters that you     create are your personal filters; they are not available to other users in the system. You can     modify the conditions of these filters or delete the filters if you do not need them     anymore. If you would like to share your advanced filters with other users, you need to have sufficient     access rights to the   ([~/?ScreenId=CS209010|CS209010]) Filters (CS209010) form. If you do,     you can modify filter clauses or delete shared advanced filters, either by selecting the filter     on this form or directly on the related form. If you need to change the name for an advanced     filter, you can do this only on the   ([~/?ScreenId=CS209010|CS209010]) Filters form. By default, users with the built-in  Administrator  role have access to this form. These     users, generally system administrators or technical specialists that perform customizations, can     create advanced filters and share them with other users. If an advanced filter is shared, it     cannot be modified or deleted by users that do not have sufficient access rights to the   ([~/?ScreenId=CS209010|CS209010]) Filters form.  By default, every filter created on the   ([~/?ScreenId=CS209010|CS209010]) Filters form is shared. If you do not have access rights to modify advanced shared filters but would like to use an     advanced shared filter as a basis for your filtering conditions, you can copy this filter and     modify its copy as your advanced personal filter. Creation of Advanced Filters If you have sufficient access rights to the   ([~/?ScreenId=CS209010|CS209010]) Filters     (CS209010) form, you can use this form to create advanced shared filters for processing, inquiry     and generic inquiry forms. We recommend, however, that you instead create an advanced filter directly on the form by     using the  Filter Settings  dialog box (for details, see  Filter Settings Dialog Box), in which you can view the     results immediately after applying the filter and modify the filter conditions, if needed. If     you have access rights to the   ([~/?ScreenId=CS209010|CS209010]) Filters form, you can also     share the filter by using the  Filter Settings  dialog box. To access the dialog box, you click  Filter Settings  on the table     toolbar, as shown in the following screenshot. Button to access the Filter Settings dialog box By using the dialog box, you can manage your advanced personal filters created for this form,     and if you have sufficient access rights, you can also manage advanced shared filters that have     been created for this form by other users. Filter Clauses A filter clause is a part of a filter represented by a table row in the table in the       Filter Settings  dialog box. Any advanced filter consists of either one     filter clause or multiple filter clauses. For each clause, you specify the following settings in     the table row: Property : The data field of the form that the filter will be applied      to. You select a property from the list of available data fields.  Condition : The logical operation that applies to the value of the      selected property. You select a condition from the list of available conditions. Value : A value for the logical condition used to filter the data.      Depending on the selected property and condition, you enter a value (and sometimes a second      value as well, depending on the condition). Each value must conform with the data type of the      selected property. Generally, there are a series of fixed values for the property—for      example, the  Completed  value for the  Status  property. For user-relative and      date-relative clauses, you can specify parameters, such as  @Me  and  @Today , as      values. The filtering process is not case-sensitive; that is, the system doesn't differentiate      between uppercase and lowercase letters in values. A value is not used for the  Is        Empty  and  Is Not Empty  conditions. To define a clause, you specify the property, the condition, and the applicable values in the     table row. You can use  And  and  Or  operators and parentheses to group clauses into     logical expressions. You use the  And  operator to find the records that meet the criteria     in both the selected clause and the next clause, and the  Or  operator to find the records     that meet the criteria in either the selected clause or the next clause. Parentheses can be used     in logical statements to define the order of operations. The  And  and  Or  operators     work on a unit in parentheses as if the unit was a single clause.  For example, on the Invoices and Memos (AR3010PL) generic inquiry form, you can search for     invoices with the open status by specifying a filter that has two conditions combined with the       And  operator. The first condition has  Type  specified as the property,       Equals  specified as the condition, and  Invoice  specified as the value. The second     condition has  Status  specified as the property,  Equals  specified as the condition,     and  Open specified as the value (as shown in the following screenshot). The clauses of the Open Invoices filter Wildcards in Filter Clauses When you filter data by using the  Filter Settings  dialog     box  or on the   ([~/?ScreenId=CS209010|CS209010]) Filters (CS209010) form, you can use a pattern for the string     value in the  Value  column. In the pattern, you can substitute one or more symbols with     wildcard characters. You can use the following wildcard characters: Underscore ( _ ): You can use this character if you want to filter the data according      to a pattern in which only one symbol is substituted. For example, if you try to filter the      data by a customer name that contains the  Customer_Name  string, the system will return      all the customers whose name contains any of the following strings:  Customer_Name ,        Customer-Name , and  Customer Name . Percentage ( % ): You can use this character if you want to filter the data according a      pattern in which multiple symbols are substituted. For example, if you try to filter the data      by a customer name that contains the  Da%n  string, the system will return all the      customers whose name starts with  Da  and ends with  n , such as  Dalton  as        Damian . User-Relative Filter Clauses To simplify the process of filtering data by owner or by workgroup     in      the  Filter Settings  dialog box  or on the   ([~/?ScreenId=CS209010|CS209010]) Filters (CS209010)     form,      you can use three predefined user-relative parameters in the  Value      column.  By using these parameters, you can configure  user-relative      clauses . When you use these parameters, you do not need to create multiple rows with     specific values—for example, to specify each workgroup in which you are a member for the       Workgroup  property. Instead, you can use only one parameter, such as  @MyGroups ,     to filter all the records of the workgroups you are a member of.  The following predefined user-relative parameters are available: @Me : The current user. This parameter can be used only for the user-related      properties (such as  Owner  or  Custodian ) that have  Equal  and  Does Not       Equal  conditions. @MyGroups : The workgroups in which the current user is a member, excluding      the workgroups that are the subordinates of these workgroups. You can use this parameter for      the  Workgroup  property, which has the  Is In  and  Is Not In  conditions. @MyWorktree : The workgroups in which the current user is a member,      including the groups that are subordinates of these groups according to the company tree      structure. You can use this parameter for the  Workgroup  property, which has the  Is       In  and  Is Not In  conditions. Date-Relative Filter Clauses To make date clauses in advanced filters more flexible, you can use date-relative     parameters—parameters that are relative to the current date in the  Filter      Settings  dialog     box  or on the   ([~/?ScreenId=CS209010|CS209010]) Filters (CS209010) form. For the date-relative parameters, as the current date, the system uses the date     (in coordinated universal time, or  UTC ) of the server used to run the  Acumatica ERP     instance. Changing the business date (in the upper-right corner of the screen) does not affect     the filter results. You can use the following date-relative parameters: @Today : The current date. You can modify this parameter by adding or      subtracting days. @WeekStart : The start of the current week. You can modify this parameter by      adding or subtracting weeks.  The start and end of the week are             determined according to the default system locale or the locale you selected when you             signed in to  Acumatica ERP.             The system locales are specified and configured on the   ([~/?ScreenId=SM200550|SM200550]) System Locales (SM200550) form. @WeekEnd : The end of the current week. You can modify this parameter by      adding or subtracting weeks. The start and end of the week are             determined according to the default system locale or the locale you selected when you             signed in to  Acumatica ERP.             The system locales are specified and configured on the   ([~/?ScreenId=SM200550|SM200550]) System Locales (SM200550) form. @MonthStart : The start of the current month. @MonthEnd : The end of the current month. @QuarterStart : The start of the current quarter. @QuarterEnd : The end of the current quarter. @PeriodStart : The start of the current financial period. (GL101000)      form. @PeriodEnd : The end of the current financial period; the financial periods      in your system are defined on the   ([~/?ScreenId=GL101000|GL101000]) Financial Year form. @YearStart : The start of the current calendar year. @YearEnd : The end of the current calendar year. To add a filter clause with a date-relative parameter, you select the parameter from the     list. You can modify the parameters by adding or subtracting integers. The date is calculated     according to the unit of measure of the parameter. For example, to view all tasks that are due     next week, on the   ([~/?ScreenId=EP404000|EP404000]) Tasks (EP404000) form, you add a filter     clause as follows: You specify  Due Date  as the property,  Is Between  as the     condition,  @WeekStart + 1  as the first value, and  WeekEnd + 1  as the second value.     The integer ( 1 ) in these values represents a week because it is the unit of measure of     the parameter. If the modified date is out of range, the system won't be able to find any     records and will return an error. ]]></column>
		</row>
		<row PageID="242682e5-59cf-449c-90df-bc70f4c4dd6b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="f1f8cf6a-8139-5006-f9df-c1887df96f60" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create advanced filters and make these filters available to other users.{br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations. An accountant of your company has asked you to add multiple filters (that is, filter tabs) for the Invoices and Memos (AR3010PL) generic inquiry form, which is the predefined generic inquiry with the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. These filters should be available to all users that have access to the inquiry. The following filter tabs need to be added with the noted content:[anchor|#_67ae074a-78e6-4d4e-a0be-c3e02781b72d]
*'''My Documents''': The documents owned by the user who is currently signed in to the system. When a user accesses the inquiry form, the system should open this tab by default instead of the '''All Records''' tab.
*'''Open Invoices''': Only invoices that have the ''Open'' status.
*'''Current Quarter''': Documents for the current quarter.
*'''Previous Quarter''': Documents for the previous quarter.
((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
On the Invoices and Memos (AR3010PL) generic inquiry form, you will create the requested filters by using the '''Filter Settings''' dialog box. [anchor|#_0977d730-4afb-4fdc-a8de-f6e759bb2a9e]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_ac36453a-deae-4d6d-a861-b7942aa3c939]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Creating an Advanced Filter with a User-Relative Clause==
To create an advanced filter with a user-relative clause, do the following:[anchor|#_b389546f-c713-4bd0-a3f7-f53e00946d30]
#Open the Invoices and Memos (AR3010PL) inquiry form.
#On the table toolbar, click '''Filter Settings'''.
#In the bottom left of the '''Filter Settings''' dialog box, which opens, click '''New'''.
#Add a row to the table with the following settings:
#*'''Property''': ''Owner''
#* '''Condition''': ''Equals''
#* '''Value''': ''@Me''
#In the bottom left of the dialog box, click '''Save'''. In the dialog box that opens, type <tt>My Documents</tt>, and click '''OK'''. 
#In the upper part of the '''Filter Settings''' dialog box, select the '''Default''' and '''Shared''' check boxes.
#:The following screenshot shows the settings of the ''My Documents'' filter.[anchor|#_cdca3a38-8bf8-47d1-9e66-206556c78b4a][image:UserGuide/Images/GI_Reusable_Filters_FPD_Filter_Clause_MyDocuments.png|popup|The settings of the My Documents filter|450px]
#In the bottom left of the dialog box, click '''Save'''.
#Close the '''Filter Settings''' dialog box.
#:On the inquiry form, notice that the '''My Documents''' tab has been added.

==Step 2: Creating an Advanced Filter with Multiple Filter Clauses==
To create an advanced filter with multiple filter clauses, do the following:[anchor|#_a515e9a7-8c61-4c22-9cab-bbd36e147ca7]
#On the table toolbar of the Invoices and Memos (AR3010PL) inquiry form, click '''Filter Settings'''.
#In the bottom left of the '''Filter Settings''' dialog box, which opens, click '''New'''.
#Add a row to the table with the following settings:
#*'''Property''': ''Type''
#* '''Condition''': ''Equals''
#* '''Value''': ''Invoice''
#* '''Operator''': ''And''
#Add another row to the table with the following settings:
#*'''Property''': ''Status''
#* '''Condition''': ''Equals''
#* '''Value''': ''Open''
#In the bottom left of the dialog box, click '''Save'''. In the dialog box that opens, type <tt>Open Invoices</tt>, and click '''OK'''. 
#In the upper part of the dialog box, select the '''Shared''' check box.
#:The following screenshot shows the settings of the ''Open Invoices'' filter.[anchor|#_c3bc8f3f-15fd-41d5-be28-5a455d972569][image:UserGuide/Images/GI_Reusable_Filters_FPD_Filter_Clause_OpenInvoices.png|popup|The settings of the Open Invoices filter|450px]
#At the bottom of the dialog box, click '''Save'''.
#Close the '''Filter Settings''' dialog box.
#On the inquiry form, notice that the '''Open Invoices''' tab has been added.

==Step 3: Creating Advanced Shared Filters with a Date-Relative Clause==
To create advanced filters with a date-relative clause, do the following:[anchor|#_4aef0596-93a6-405f-9e9d-fd6776a97bb7]
#On the table toolbar of the Invoices and Memos (AR3010PL) inquiry form, click '''Filter Settings'''.
#In the bottom left of the '''Filter Settings''' dialog box, which opens, click '''New'''.
#Add a row to the table with the following settings:
#*'''Property''': ''Date''
#* '''Condition''': ''Is Between''
#* '''Value''': ''@QuarterStart''
#* '''Value2''': ''@QuarterEnd''
#In the upper part of the dialog box, select the '''Shared''' check box.
#In the bottom left of the dialog box, click '''Save'''. In the dialog box that opens, type <tt>Current Quarter</tt>, and click '''OK'''.
#:The following screenshot shows the settings of the ''Current Quarter'' filter.[anchor|#_af97010d-b144-420b-8fcb-a91e59038a77][image:UserGuide/Images/GI_Reusable_Filters_FPD_Filter_Clause_CurrentQuarter.png|popup|The settings of the Current Quarter filter|450px]
#Click '''Copy''' in the bottom left of the dialog box.
#In the dialog box that opens, type <tt>Previous Quarter</tt>, and click '''OK'''. 
#In the only row, change the values in the columns to the following:
#*'''Value''': ''@QuarterStart-1''
#* '''Value2''': ''@QuarterEnd-1''
#Click '''Save'''.
#In the upper part of the dialog box, select the '''Shared''' check box.
#In the bottom left of the dialog box, click '''Save'''.
#Close the '''Filter Settings''' dialog box.
#:On the form, notice that the '''Current Quarter''' and '''Previous Quarter''' tabs have been added along with the other filter tabs that you have added in the activity, as shown in the following screenshot.
[anchor|#_110934c7-2739-48d0-9790-8716075e2efe][anchor|#_64555fe5-f02d-4b07-987c-6495d033b52d][image:UserGuide/Images/GI_Reusable_Filters_FPD_Filter_AddedFilterTabs.png|popup|The added filter tabs|450px]]]></column>
			<column name="PlainText"><![CDATA[Advanced Filters: To Create Advanced Shared Filters In this activity, you will learn how to create advanced filters and make these                 filters available to other users. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations. An accountant of your company has asked you to add multiple filters                 (that is, filter tabs) for the Invoices and Memos (AR3010PL) generic inquiry form,                 which is the predefined generic inquiry with the  AR-Invoices and Memos                  inquiry title and the  Invoices and Memos  site map title specified on the                       ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. These filters                 should be available to all users that have access to the inquiry. The following                 filter tabs need to be added with the noted content: My Documents : The documents owned by the user who is                     currently signed in to the system. When a user accesses the inquiry form, the                     system should open this tab by default instead of the  All                         Records  tab. Open Invoices : Only invoices that have the  Open                      status. Current Quarter : Documents for the current quarter. Previous Quarter : Documents for the previous                     quarter. The Invoices and Memos (AR3010PL) generic inquiry form, which is the                 list of the invoices and memos that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the substitute form                 that is opened when you click the  Invoices and Memos  link in a workspace or a                 list of search results. Process Overview On the Invoices and Memos (AR3010PL) generic inquiry form, you will create the                 requested filters by using the  Filter Settings  dialog box.              System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Creating an Advanced Filter with a User-Relative Clause To create an advanced filter with a user-relative clause, do the following: Open the Invoices and Memos (AR3010PL) inquiry form. On the table toolbar, click  Filter Settings . In the bottom left of the  Filter Settings  dialog box,                     which opens, click  New . Add a row to the table with the following settings: Property :  Owner Condition :  Equals Value :  @Me In the bottom left of the dialog box, click  Save . In the                     dialog box that opens, type  My Documents , and click                          OK .  In the upper part of the  Filter Settings  dialog box,                     select the  Default  and  Shared                      check boxes. The following screenshot shows the settings of the  My                             Documents  filter. The settings of the My Documents filter In the bottom left of the dialog box, click  Save . Close the  Filter Settings  dialog box. On the inquiry                         form, notice that the  My Documents  tab has been                         added. Step 2: Creating an Advanced Filter with Multiple Filter Clauses To create an advanced filter with multiple filter clauses, do the following: On the table toolbar of the Invoices and Memos (AR3010PL) inquiry form, click                          Filter Settings . In the bottom left of the  Filter Settings  dialog box,                     which opens, click  New . Add a row to the table with the following settings: Property :  Type Condition :  Equals Value :  Invoice Operator :  And Add another row to the table with the following settings: Property :  Status Condition :  Equals Value :  Open In the bottom left of the dialog box, click  Save . In the                     dialog box that opens, type  Open Invoices , and click                          OK .  In the upper part of the dialog box, select the  Shared                      check box. The following screenshot shows the settings of the  Open                             Invoices  filter. The settings of the Open Invoices filter At the bottom of the dialog box, click  Save . Close the  Filter Settings  dialog box. On the inquiry form, notice that the  Open Invoices  tab                     has been added. Step 3: Creating Advanced Shared Filters with a Date-Relative Clause To create advanced filters with a date-relative clause, do the following: On the table toolbar of the Invoices and Memos (AR3010PL) inquiry form, click                          Filter Settings . In the bottom left of the  Filter Settings  dialog box,                     which opens, click  New . Add a row to the table with the following settings: Property :  Date Condition :  Is Between Value :  @QuarterStart Value2 :                                  @QuarterEnd In the upper part of the dialog box, select the  Shared                      check box. In the bottom left of the dialog box, click  Save . In the                     dialog box that opens, type  Current Quarter , and click                          OK . The following screenshot shows the settings of                         the  Current Quarter  filter. The settings of the Current Quarter filter Click  Copy  in the bottom left of the dialog box. In the dialog box that opens, type  Previous Quarter , and                     click  OK .  In the only row, change the values in the columns to the following: Value :  @QuarterStart-1 Value2 :  @QuarterEnd-1 Click  Save . In the upper part of the dialog box, select the  Shared                      check box. In the bottom left of the dialog box, click  Save . Close the  Filter Settings  dialog box. On the form,                         notice that the  Current Quarter  and                              Previous Quarter  tabs have been added along with                         the other filter tabs that you have added in the activity, as shown in the                         following screenshot. The added filter tabs ]]></column>
		</row>
		<row PageID="c4827cff-b65e-4800-91a9-814009ac9c94" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b7648c27-84d7-b259-3b48-96a454e3413d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to remove an advanced filter.{br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations. One year ago, you configured a set of shared filters for the Invoices and Memos (AR3010PL) generic inquiry form, which is the predefined generic inquiry with the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. Further suppose that the accounting department has worked with the set of shared filters for some time and realized that the '''Previous Quarter''' tab is not needed, so you have been asked to remove the filter tab.((({S:Hint}The Invoices and Memos (AR3010PL) inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
For the Invoices and Memos (AR3010PL) inquiry form, you will remove the '''Previous Quarter''' filter tab by using the '''Filter Settings''' dialog box. {br}

Alternatively, you could stop sharing the filter by clearing the '''Shared''' check box for the filter in the '''Filter Settings''' dialog box. In this case, the filter would still exist, so that if the accounting department again requested the filter, you would not need to configure it once again. You have decided against this alternate approach; the filter conditions are simple and you can configure the filter quickly, so you do not want to clutter the list of available filters.[anchor|#_17b0f1b3-71fa-4cfe-af51-1b69251f41e5]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_e1a12650-c14f-439d-932c-cdbc0772cf3f]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step: Removing an Advanced Filter==
To remove an advanced filter, do the following:[anchor|#_b389546f-c713-4bd0-a3f7-f53e00946d30]
#Open the Invoices and Memos (AR3010PL) inquiry form.
#On the table toolbar, click '''Filter Settings''' to open the '''Filter Settings''' dialog box.
#In the drop-down box in the upper-left corner of the dialog box, select ''Previous Quarter''.
#At the bottom of the dialog box, click '''Remove'''.
#In the dialog box that opens, confirm your action by clicking '''OK'''. 
#:The system deletes the filter.
#Close the '''Filter Settings''' dialog box.
#On the form, notice that the '''Previous Quarter''' tab is no longer available.
]]></column>
			<column name="PlainText"><![CDATA[Advanced Filters: To Remove an Advanced Filter In this activity, you will learn how to remove an advanced filter. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations. One year ago, you configured a set of shared filters for the                 Invoices and Memos (AR3010PL) generic inquiry form, which is the predefined generic                 inquiry with the  AR-Invoices and Memos  inquiry title and the  Invoices and                     Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. Further suppose that the                 accounting department has worked with the set of shared filters for some time and                 realized that the  Previous Quarter  tab is not needed, so you                 have been asked to remove the filter tab. The Invoices and Memos                     (AR3010PL) inquiry form, which is the list of the invoices and memos that have                     been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000)                     form, is the substitute form that is opened when you click the  Invoices and                         Memos  link in a workspace or a list of search results. Process Overview For the Invoices and Memos (AR3010PL) inquiry form, you will remove the                      Previous Quarter  filter tab by using the                      Filter                     Settings  dialog box .  Alternatively, you could stop sharing the filter by clearing the                      Shared  check box for the filter in the  Filter                     Settings  dialog box. In this case, the filter would still exist, so                 that if the accounting department again requested the filter, you would not need to                 configure it once again. You have decided against this alternate approach; the                 filter conditions are simple and you can configure the filter quickly, so you do not                 want to clutter the list of available filters. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step: Removing an Advanced Filter To remove an advanced filter, do the following: Open the Invoices and Memos (AR3010PL) inquiry form. On the table toolbar, click  Filter Settings  to open the                          Filter Settings  dialog box. In the drop-down box in the upper-left corner of the dialog box, select                          Previous Quarter . At the bottom of the dialog box, click  Remove . In the dialog box that opens, confirm your action by clicking                          OK .  The system deletes the filter. Close the  Filter Settings  dialog box. On the form, notice that the  Previous Quarter  tab is no                     longer available. ]]></column>
		</row>
		<row PageID="f09b66bd-fb9f-4e79-b7ff-a0526ce4c7dd" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="317afc01-a590-36dd-abf9-e1bf429f0b10" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to modify an advanced shared filter.{br}{TOC}
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations. A year ago, you configured a set of shared filters for the Invoices and Memos (AR3010PL) generic inquiry form, which is the predefined generic inquiry with the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. The accounting department has worked with the set of filters for some time and decided that the '''Open Invoices''' tab needs to list all open documents, regardless of their type; accordingly, its name should be '''Open Documents'''. Also, the '''My Documents''' tab is no longer needed.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
In this activity, on the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form, you will modify the '''Open Invoices''' filter as requested and define the '''My Documents''' filter to not be shared. [anchor|#_1027f5a5-b2ec-4c5b-83df-aa7628ae1f6c]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_06ac7cf4-32cc-4a78-86d8-fe9bc78ddf8b]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Modifying the Advanced Shared Filter==
To modify the advanced shared filter, do the following:[anchor|#_b389546f-c713-4bd0-a3f7-f53e00946d30]
#Open the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form.
#In the '''Filter ID''' box, select ''Open Invoices''.
#:To locate the filter, click the selector button; in the search box of the lookup table, type its name or the screen identifier of the form the filter is applied to, which is ''AR3010PL'' (as shown in the following screenshot).[anchor|#_8a7ea2fe-2c6f-4107-9a12-94134e495a39][image:UserGuide/Images/GI_Reusable_Filters_FPD_Filter_Searching_for_Filter.png|popup|Searching for an existing shared filter|450px]
#In the '''Name''' box, change the name of the filter to ''Open Documents''.
#In the table, delete the row with the condition that filters documents by the type—that is, the third row.
#:((({S:Hint}Instead of deleting the row, you can deactivate the condition by clearing the check box in the '''Active''' column for the row.
)))
#On the form toolbar, click '''Save'''. 
#:Notice that the value in the '''Filter ID''' box has been changed and now is the same as the filter name.

==Step 2: Defining an Advanced Filter as Not Shared==
To change the ''My Documents'' advanced filter so that it is no longer shared, do the following:[anchor|#_3d3da1ae-c07e-4d06-9232-5c13527e25ff]
#In the '''Filter ID''' box of the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form, select ''My Documents''.
#On the form toolbar, click '''Make Filter Not Shared'''. In the warning dialog box that appears, click '''Yes'''. 
#:The filter is no longer shared; also, it is no longer shown on the [HelpRoot_FormReference\CS_20_90_10|Filters] form, because you can manage only shared filters on this form.
#Open the Invoices and Memos (AR3010PL) form.
#On the table toolbar, click '''Filter Settings''' to open the '''Filter Settings''' dialog box.
#In the drop-down box in the upper-left corner of the dialog box, select ''My Documents''.
#Verify that the '''Shared''' check box is cleared for the filter.
]]></column>
			<column name="PlainText"><![CDATA[Advanced Filters: To Modify an Advanced Shared Filter In this activity, you will learn how to modify an advanced shared filter. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations. A year ago, you configured a set of shared filters for the Invoices                 and Memos (AR3010PL) generic inquiry form, which is the predefined generic inquiry                 with the  AR-Invoices and Memos  inquiry title and the  Invoices and                     Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. The accounting                 department has worked with the set of filters for some time and decided that the                      Open Invoices  tab needs to list all open documents,                 regardless of their type; accordingly, its name should be  Open                     Documents . Also, the  My Documents  tab is no                 longer needed. The Invoices and Memos (AR3010PL) generic inquiry                     form, which is the list of the invoices and memos that have been created on the                           ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos (AR301000) form, is the                     substitute form that is opened when you click the  Invoices and Memos  link                     in a workspace or a list of search results. Process Overview In this activity, on the   ([~/?ScreenId=CS209010|CS209010]) Filters (CS209010)                 form, you will modify the  Open Invoices  filter as requested                 and define the  My Documents  filter to not be shared.  System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Modifying the Advanced Shared Filter To modify the advanced shared filter, do the following: Open the   ([~/?ScreenId=CS209010|CS209010]) Filters (CS209010) form. In the  Filter ID  box, select  Open Invoices . To                         locate the filter, click the selector button; in the search box of the                         lookup table, type its name or the screen identifier of the form the filter                         is applied to, which is  AR3010PL  (as shown in the following                         screenshot). Searching for an existing shared filter In the  Name  box, change the name of the filter to  Open                         Documents . In the table, delete the row with the condition that filters documents by the                     type—that is, the third row. Instead of deleting the row, you                         can deactivate the condition by clearing the check box in the                              Active  column for the row. On the form toolbar, click  Save .  Notice that the value                         in the  Filter ID  box has been changed and now is the                         same as the filter name. Step 2: Defining an Advanced Filter as Not Shared To change the  My Documents  advanced filter so that it is no longer shared, do                 the following: In the  Filter ID  box of the   ([~/?ScreenId=CS209010|CS209010]) Filters (CS209010) form, select  My                         Documents . On the form toolbar, click  Make Filter Not Shared . In the                     warning dialog box that appears, click  Yes .  The filter                         is no longer shared; also, it is no longer shown on the   ([~/?ScreenId=CS209010|CS209010]) Filters form, because you can manage only                         shared filters on this form. Open the Invoices and Memos (AR3010PL) form. On the table toolbar, click  Filter Settings  to open the                          Filter Settings  dialog box. In the drop-down box in the upper-left corner of the dialog box, select  My                         Documents . Verify that the  Shared  check box is cleared for the                     filter. ]]></column>
		</row>
		<row PageID="9897f0fc-5fde-4b61-a72f-1d7c041c2cda" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="31406d6a-3c1c-fdaf-47a8-4d684dd79a91" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create a personal filter based on a shared filter.
==Story==
Suppose that you are an accountant in your company. Some time ago, a set of shared filters was configured for the Invoices and Memos (AR3010PL) generic inquiry form, which is the predefined generic inquiry with the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form. {br}

Further suppose that you are responsible for tracking the open credit memos for the current year. The generic inquiry has no filter you can use to quickly view these documents, so you have decided to create a personal filter and define it as your default tab, to streamline your work.((({S:Hint}The Invoices and Memos (AR3010PL) generic inquiry form, which is the list of the invoices and memos that have been created on the [HelpRoot_FormReference\AR_30_10_00|Invoices and Memos] ([~/?ScreenId=AR301000|AR301000]) form, is the substitute form that is opened when you click the ''Invoices and Memos'' link in a workspace or a list of search results.
)))
==Process Overview==
On the Invoices and Memos (AR3010PL) generic inquiry form, you will copy the '''Current Quarter''' filter and modify it to suit your needs by using the '''Filter Settings''' dialog box. [anchor|#_952afdcb-e8d1-4940-8a9d-b1fcdfc15444]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_8b37880e-4d57-40b9-b45f-86f9bfad920b]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step: Creating an Advanced Personal Filter by Copying an Advanced Shared Filter==
To create an advanced personal filter, do the following:[anchor|#_b389546f-c713-4bd0-a3f7-f53e00946d30]
#Open the Invoices and Memos (AR3010PL) form.
#:Notice that the '''My Documents''' tab is opened by default for you. This happened because for this filter, the '''Default''' check box was selected in the '''Filter Settings''' dialog box. 
#On the table toolbar, click '''Filter Settings''' to open the '''Filter Settings''' dialog box.
#In the drop-down box in the upper-left corner of the dialog box, select ''Current Quarter''.
#In the bottom left of the dialog box, click '''Copy'''.
#In the dialog box that opens, type <tt>Open Memos for Current Year</tt>, and click '''OK'''. 
#In the only row, change the values in the columns to the following:
#*'''Value''': ''@YearStart''
#* '''Value 2''': ''@YearEnd''
#Add one more row with the following settings:
#*'''Property''': ''Type''
#* '''Condition''': ''Equals''
#* '''Value''': ''Credit Memo''
#Add one more row with the following settings:
#*'''Property''': ''Status''
#* '''Condition''': ''Equals''
#* '''Value''': ''Open''
#In the bottom left of the dialog box, click '''Save'''.
#In the upper part of the dialog box, select the '''Default''' check box.
#:The settings of the ''My Documents'' filter are shown in the following screenshot.[anchor|#_cdca3a38-8bf8-47d1-9e66-206556c78b4a][image:UserGuide/Images/GI_Reusable_Filters_FPD_Filter_Clause_OpenMemos.png|popup|Reviewing the settings of the My Documents filter|450px]
#In the bottom right of the dialog box, click '''Apply'''.
#:Notice that the '''Open Memos for Current Year''' filter tab has been added to the form.
#Navigate to any other form, and then open the Invoices and Memos (AR3010PL) generic inquiry form again. 
#:Notice that the system has opened the '''Open Memos for Current Year''' tab for you by default. 
]]></column>
			<column name="PlainText"><![CDATA[Advanced Filters: To Create an Advanced Personal Filter Based on an Advanced Shared         Filter In this activity, you will learn how to create a personal filter based on a shared                 filter. Story Suppose that you are an accountant in your company. Some time ago, a set of shared                 filters was configured for the Invoices and Memos (AR3010PL) generic inquiry form,                 which is the predefined generic inquiry with the  AR-Invoices and Memos                  inquiry title and the  Invoices and Memos  site map title specified on the                       ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form.  Further suppose that you are responsible for tracking the open credit memos for the                 current year. The generic inquiry has no filter you can use to quickly view these                 documents, so you have decided to create a personal filter and define it as your                 default tab, to streamline your work. The Invoices and Memos                     (AR3010PL) generic inquiry form, which is the list of the invoices and memos                     that have been created on the   ([~/?ScreenId=AR301000|AR301000]) Invoices and Memos                     (AR301000) form, is the substitute form that is opened when you click the                          Invoices and Memos  link in a workspace or a list of search                     results. Process Overview On the Invoices and Memos (AR3010PL) generic inquiry form, you will copy the                      Current Quarter  filter and modify it to suit your needs                 by using the  Filter Settings  dialog box.  System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step: Creating an Advanced Personal Filter by Copying an Advanced Shared                 Filter To create an advanced personal filter, do the following: Open the Invoices and Memos (AR3010PL) form. Notice that the  My                             Documents  tab is opened by default for you. This happened                         because for this filter, the  Default  check box was                         selected in the  Filter Settings  dialog box.  On the table toolbar, click  Filter Settings  to open the                          Filter Settings  dialog box. In the drop-down box in the upper-left corner of the dialog box, select                          Current Quarter . In the bottom left of the dialog box, click  Copy . In the dialog box that opens, type  Open Memos for Current                         Year , and click  OK .  In the only row, change the values in the columns to the following: Value :  @YearStart Value 2 :  @YearEnd Add one more row with the following settings: Property :  Type Condition :  Equals Value :  Credit Memo Add one more row with the following settings: Property :  Status Condition :  Equals Value :  Open In the bottom left of the dialog box, click  Save . In the upper part of the dialog box, select the  Default                      check box. The settings of the  My Documents  filter are shown in the                         following screenshot. Reviewing the settings of the My Documents filter In the bottom right of the dialog box, click                          Apply . Notice that the  Open Memos for                             Current Year  filter tab has been added to the form. Navigate to any other form, and then open the Invoices and Memos (AR3010PL)                     generic inquiry form again.  Notice that the system has opened the                              Open Memos for Current Year  tab for you by                         default.  ]]></column>
		</row>
		<row PageID="39a5abfe-16d3-4438-8fa7-b5a7d645f49a" Language="en-US" PageRevisionID="1" Content="&#xA;In Acumatica ERP, you can compose pivot tables based on the data of generic inquiry results. Pivot tables are a technique in data processing that you can use to reorganize and summarize data in a generic inquiry, to view this data from different perspectives. A pivot table can automatically sort, count total, or present the average of the data obtained in a generic inquiry, displaying the results in a separate table. You can configure and change the structure of pivot tables by dragging their fields.{br}&#xA;&#xA;In this part of the guide, you will learn how to create and configure pivot tables in Acumatica ERP." PlainText="Managing Pivot Tables In  Acumatica ERP, you can compose pivot tables based on the data of generic inquiry results. Pivot tables         are a technique in data processing that you can use to reorganize and summarize data in a         generic inquiry, to view this data from different perspectives. A pivot table can         automatically sort, count total, or present the average of the data obtained in a generic         inquiry, displaying the results in a separate table. You can configure and change the         structure of pivot tables by dragging their fields. In this part of the guide, you will learn how to create and configure pivot tables in  Acumatica ERP. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="4ccad5d9-264d-812c-82d5-e30e57fba504" RecordSourceID="22377" />
		<row PageID="66649b16-b19b-4ae3-9cfb-9c84d018448d" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="610b4a0c-a801-8c7b-4e4a-0dad0d439638" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, you can use pivot tables to reorganize and summarize data from generic inquiries with the ability to show row and column totals.
==Learning Objectives==
In this chapter, you will learn how to do the following:[anchor|#_e262bf8b-fab5-4b54-af94-57e71c223939]
*Configure a pivot table as a separate form and make it available to other users
*Modify the generic inquiry that is used as the basis for a pivot table while you are configuring the table
*Configure a pivot table as a filter tab on an inquiry form and share it with other users

==Applicable Scenarios==
You are responsible for the customization of Acumatica ERP in your company, including developing and modifying generic inquiries and pivot tables to give users information they need to do their jobs, and you need to deliver different inquiries and reports that your colleagues may need to perform their jobs effectively.
==Pivot Table Basis==
You use the data from a particular generic inquiry to compose a pivot table—that is, a generic inquiry is used as a basis of a pivot table. You can use only one generic inquiry to build each pivot table. If you need to compose a pivot table with information obtained from multiple generic inquiries, you must first create a single generic inquiry that includes all the necessary data and then use this inquiry as a basis for the pivot table.]]></column>
			<column name="PlainText"><![CDATA[Pivot Tables: General Information In  Acumatica ERP, you can use pivot tables to reorganize and summarize data from generic                         inquiries with the ability to show row and column totals. Learning Objectives In this chapter, you will learn how to do the following: Configure a pivot table as a separate form and make it available to other users Modify the generic inquiry that is used as the basis for a pivot table while you are           configuring the table Configure a pivot table as a filter tab on an inquiry form and share it with other           users Applicable Scenarios You are responsible for the customization of  Acumatica ERP in your company, including developing and modifying generic inquiries and                         pivot tables to give users information they need to do their jobs, and you                         need to deliver different inquiries and reports that your colleagues may                         need to perform their jobs effectively. Pivot Table Basis You use the data from a particular generic inquiry to compose a pivot table—that is, a         generic inquiry is used as a basis of a pivot table. You can use only one generic inquiry to         build each pivot table. If you need to compose a pivot table with information obtained from         multiple generic inquiries, you must first create a single generic inquiry that includes all         the necessary data and then use this inquiry as a basis for the pivot table. ]]></column>
		</row>
		<row PageID="1fbaf108-1fd8-495b-8844-b4372d326095" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b6409f13-d178-e1b7-eb3b-db37b0d77704" RecordSourceID="22377">
			<column name="Content"><![CDATA[
As with generic inquiries, which are customizable Acumatica ERP forms that can be shared and accessed as other forms can, you can create pivot tables and share them with other users as forms. You can place any pivot table in a workspace by adding it to the site map and then specifying the needed levels of access rights to the pivot table for the user roles available in the system.
==Access Rights to Modifying Pivot Tables==
 Acumatica ERP uses roles to restrict access to the system. Users are assigned one role or multiple roles, and based on these roles, the users are then granted the appropriate levels of access to system objects. {br}

To be able to create, delete, or modify standalone pivot tables, you need a role that provides sufficient access rights (the ''Delete'' level) to the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form. By default, the built-in ''Administrator'' role provides the access rights for working with pivot tables created as forms.
==Creation of a Pivot Table==
You perform the following general steps to compose a pivot table:[anchor|#_173fa24b-2380-488e-83f3-60ae2ed2b895]
#Preparation: You determine which generic inquiry will be used as a data source for the pivot table.
#Creation: You create a pivot table on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form, specify the generic inquiry to be used as the data source, and configure the table layout. While configuring the table, you can preview the table any time.
#Publication: After you have previewed the finished pivot table and made any needed changes, you publish the table, which makes it available for other users.

==Configuration of Layout==
The configuration of the layout of a pivot table in Acumatica ERP is similar to this process in Microsoft Excel. You use multiple panes to configure a pivot table.{br}

The '''Fields''' pane lists all the fields added to the inquiry on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, regardless of their visibility settings. You move fields between the panes by dragging them. When you click a field in the '''Filters''', '''Rows''', '''Columns''', or '''Values''' pane (see Item 1 in the following screenshot), the system displays its properties in the '''Properties''' pane (Item 2). By using the settings in the '''Properties''' pane, you define how the data of the field is to be presented in the table.[anchor|#_4692c266-acb9-4760-b493-0b855c36f89b][anchor|#_6183b73b-2a6e-4148-8e80-d24230b487f5][image:UserGuide/Images/entity_Pivot_Tables_EditingLayout.png|popup|Configuration of the layout of a pivot table|450px]
==Application of Shared Filters==
A generic inquiry that you select as a data source for your pivot table may have advanced shared filters, which are displayed as tabs on the inquiry form containing filtered data that meets particular specifications. To reduce the amount of data in the pivot table for easier analysis, you can apply any of the advanced shared filters created for the generic inquiry. To do this, while configuring the pivot table, you select the filter in the '''Shared Filter to Apply''' box on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form.{br}

 When the pivot table is displayed, the filter is applied to the generic inquiry, and then the pivot table uses the filtered data.[anchor|#_8d66c9a5-7ed2-4688-8345-f9c658416486]
==Data Filtering in Pivot Tables==
In Acumatica ERP, as described in the previous section, an advanced shared filter can be applied to the generic inquiry to filter the data, and then a user builds a pivot table based on the filtered data. In addition, you can filter the data in a pivot table in any of the following ways:[anchor|#_ae27bd4c-c0cc-4935-ac1a-8531b1ae023f]
*By the values of the fields added to the '''Filters''' pane: When you want to filter the data in a pivot table by fields that are not used in the table, you add these fields to the '''Filters''' pane during the design of the pivot table. The system displays these fields in the pivot table as quick filters, and the users can filter the data in the table to meet their current needs.
*:((({S:Warn}When a field is added to the '''Rows''' pane and the resulting pivot table column has more than 100 unique records to display, for reasons related to system performance, the quick filter pop-up window does not display items for multiple selection.
)))
*By the values of fields added to the '''Columns''' or '''Rows''' pane: For fields that you add to the '''Columns''' or '''Rows''' pane, the system automatically adds simple filters to the pivot table. 
]]></column>
			<column name="PlainText"><![CDATA[Pivot Tables: Creation of a Pivot Table as a Separate Form As with generic inquiries, which are customizable  Acumatica ERP forms that can be shared and accessed as other forms can, you can create pivot tables and         share them with other users as forms. You can place any pivot table in a workspace by adding         it to the site map and then specifying the needed levels of access rights to the pivot table         for the user roles available in the system. Access Rights to Modifying Pivot Tables  Acumatica ERP uses roles to restrict access to the system. Users are assigned one role or multiple         roles, and based on these roles, the users are then granted the appropriate levels of access         to system objects.  To be able to create, delete, or modify standalone pivot tables, you need a role that         provides sufficient access rights (the  Delete  level) to the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form. By default, the built-in  Administrator          role provides the access rights for working with pivot tables created as forms. Creation of a Pivot Table You perform the following general steps to compose a pivot table: Preparation: You determine which generic inquiry will be used as a data source for the           pivot table. Creation: You create a pivot table on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010)           form, specify the generic inquiry to be used as the data source, and configure the table           layout. While configuring the table, you can preview the table any time. Publication: After you have previewed the finished pivot table and made any needed           changes, you publish the table, which makes it available for other users. Configuration of Layout The configuration of the layout of a pivot table in  Acumatica ERP is similar to this process in Microsoft Excel. You use multiple panes to configure a         pivot table. The  Fields  pane lists all the fields added to the inquiry on the            Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)         form, regardless of their visibility settings. You move fields between the panes by dragging         them. When you click a field in the  Filters ,            Rows ,  Columns , or            Values  pane (see Item 1 in the following screenshot), the system         displays its properties in the  Properties  pane (Item 2). By using the         settings in the  Properties  pane, you define how the data of the field         is to be presented in the table. Configuration of the layout of a pivot table Application of Shared Filters A generic inquiry that you select as a data source for your pivot table may have advanced         shared filters, which are displayed as tabs on the inquiry form containing filtered data         that meets particular specifications. To reduce the amount of data in the pivot table for         easier analysis, you can apply any of the advanced shared filters created for the generic         inquiry. To do this, while configuring the pivot table, you select the filter in the            Shared Filter to Apply  box on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables         (SM208010) form.  When the pivot table is displayed, the filter is applied to the generic inquiry, and then         the pivot table uses the filtered data. Data Filtering in Pivot Tables In  Acumatica ERP, as described in the previous section, an advanced shared filter can be applied to the         generic inquiry to filter the data, and then a user builds a pivot table based on the         filtered data. In addition, you can filter the data in a pivot table in any of the following         ways: By the values of the fields added to the  Filters  pane: When you           want to filter the data in a pivot table by fields that are not used in the table, you add           these fields to the  Filters  pane during the design of the pivot           table. The system displays these fields in the pivot table as quick filters, and the users           can filter the data in the table to meet their current needs. When a             field is added to the  Rows  pane and the resulting pivot table             column has more than 100 unique records to display, for reasons related to system             performance, the quick filter pop-up window does not display items for multiple             selection. By the values of fields added to the  Columns  or              Rows  pane: For fields that you add to the              Columns  or  Rows  pane, the system           automatically adds simple filters to the pivot table.  ]]></column>
		</row>
		<row PageID="2144fd22-8257-4afb-9b5a-13f00d76f2cc" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="57063045-16a8-aa5d-83c6-98759dd37a02" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Once an inquiry form has been created, if you have sufficient access rights, you can create multiple pivot tables saved as filter tabs for the inquiry form. Once you have created a pivot table, you can modify its configuration. You can also delete a pivot table as a filter tab if you do not need the tab anymore.
==Creation of the Pivot Table==
If you save a pivot table on a filter tab of a generic inquiry form, this pivot table is not in the list on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form. That is, you cannot view, modify, or delete this pivot table by navigating to this form and selecting it. You can work with this pivot table only by navigating to the inquiry form and opening the filter tab.{br}

When you click '''...''' > '''Save as Pivot''' in the filtering area of an inquiry form (shown in the following screenshot), the system opens the '''Filter Settings''' dialog box, where you specify the name to be used for the filter tab, select or clear the '''Shared Configuration''' check box (see the Pivot Table Tabs on Filter Tabs section of the current topic), and click '''OK'''. Then the system opens the newly created tab in edit mode for the pivot table, which is similar in appearance and functionality to the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form, with various panes that you can use to construct the table based on the generic inquiry. {br}

[anchor|#_0ab78b20-ce57-470c-8e96-7214b4d11b8b][anchor|#_966dc3aa-4da2-4ff8-8c38-9b571c9643c7][image:UserGuide/Images/entity_Pivot_Tables_Filter_SaveAsPivot.png|popup|The Save as Pivot action on an inquiry form|450px]
==Access Rights to Pivot Tables on Filter Tabs==
By default, the ability to save pivot tables on filter tabs is available to all users. For all user roles, the ''Not Set'' access level is specified for the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form.((({S:Hint}In Acumatica ERP, there are two forms for pivot tables—SM208010 and SM208020.
)))
 You can use the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form to verify the levels of access the user roles in the system have to the form. On this form, you look for the ''Pivot Tables'' link, which is located in the ''Hidden'' node of the tree in the left pane. Then in the right pane, you make sure that for all roles in the system, the ''Not Set'' access level is set (as shown in the following screenshot). Notice the form identifier: ''SM.20.80.20''.[anchor|#_42c5561e-5342-4c53-9652-34842be601e5][anchor|#_247db9ac-9f68-40a4-8895-996aea62cb43][image:UserGuide/Images/entity_Pivot_Tables_AccesstoFilterTabs.png|popup|The levels of access rights for pivot tables as filter tabs|300px]((({S:Warn}If you change the access level to at least one role, users with the other roles will not be able to save pivot tables as filter tabs.
)))
==Personal and Shared Filter Tabs with Pivot Tables==
By default, when you save a filter as a pivot table, the '''Shared Configuration''' check box in the '''Filter Settings''' dialog box is cleared (see the following screenshot), and the system treats the filter tab as an advanced filter that is not available to other system users. If you select the '''Shared Configuration''' check box while saving a pivot table as a tab, the tab with the pivot table will instead be available to all users who have access to the inquiry form.[anchor|#_4192c1ed-be48-4752-aa1c-2978ab4966ef][anchor|#_b45c7f92-7084-4e2f-bbc0-386f94204396][image:UserGuide/Images/entity_Pivot_Tables_Filter_SharedConfig_checkbox.png|popup|The Shared Configuration check box in the Filter Settings dialog box|450px]
As is the case with advanced filters, if you would like to share your pivot tables with other users, you need to have sufficient access rights to the [HelpRoot_FormReference\CS_20_90_10|Filters] ([~/?ScreenId=CS209010|CS209010]) form; without the access, the '''Shared Configuration''' check box will be cleared and unavailable for you. By default, users with the built-in ''Administrator'' role (such as system administrators or technical specialists that perform simple customizations) have access to the form and can share pivot tables as filter tabs.
==Edit Mode of the Pivot Table Tab==
When you initially add a pivot table as a filter tab, the tab is opened in edit mode, so that you can configure the pivot table. Once you have configured the pivot table, you can switch between edit mode and view mode by clicking the '''Edit pivot table''' button (see Item 1 in the screenshot below). {br}

The editing layout is similar to the one you may be accustomed to seeing when you are configuring a pivot table in Microsoft Excel. There are multiple panes that you use to configure a pivot table.{br}

The '''Fields''' pane lists all the fields that have been added to the generic inquiry on the '''Results Grid''' tab of the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, regardless of their visibility settings. You move fields between the panes by dragging and dropping them. When you set focus on a field in the '''Rows''', '''Columns''', or '''Values''' (Item 2) pane, the system displays its properties in the '''Properties''' pane (Item 3). By using the settings in the '''Properties''' pane, you define how the data of the field is to be presented in the table. {br}

If you need to add quick filters to the table, you drag the needed fields to the filtering area (Item 4). If some quick filters were added to an inquiry tab that you saved as a pivot table, the system copies all these filters to the filtering area by default. You can remove them if they are not needed. You remove quick filters by selecting '''Remove Quick Filter''' from the drop-down list that opens when you click this quick filter.[anchor|#_5f414b83-5664-47ad-af5b-91f5bbc2d80c][anchor|#_80a9dd82-1ed2-4e03-9ded-7f60f33703a6][image:UserGuide/Images/entity_Pivot_Tables_LayoutFilterTabs.png|popup|Edit mode of a pivot table as a filter tab|450px]]]></column>
			<column name="PlainText"><![CDATA[Pivot Tables: Creation of a Pivot Table on a Filter Tab Once an inquiry form has been created, if you have sufficient access rights, you can create         multiple pivot tables saved as filter tabs for the inquiry form. Once you have created a         pivot table, you can modify its configuration. You can also delete a pivot table as a filter         tab if you do not need the tab anymore. Creation of the Pivot Table If you save a pivot table on a filter tab of a generic inquiry form, this pivot table is         not in the list on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form. That is, you cannot         view, modify, or delete this pivot table by navigating to this form and selecting it. You         can work with this pivot table only by navigating to the inquiry form and opening the filter         tab. When you click  ... Save as Pivot  in the filtering area of an inquiry form (shown in the following screenshot),         the system opens the  Filter Settings  dialog box, where you specify         the name to be used for the filter tab, select or clear the  Shared           Configuration  check box (see the Pivot Table Tabs on Filter Tabs section of         the current topic), and click  OK . Then the system opens the newly         created tab in edit mode for the pivot table, which is similar in appearance and         functionality to the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form, with various panes         that you can use to construct the table based on the generic inquiry.  The Save as Pivot action on an inquiry form Access Rights to Pivot Tables on Filter Tabs By default, the ability to save pivot tables on filter tabs is available to all users. For         all user roles, the  Not Set  access level is specified for the             ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208020)  form. In  Acumatica ERP, there are two forms for pivot tables—SM208010 and SM208020.  You can use the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020) form to verify the levels of         access the user roles in the system have to the form. On this form, you look for the            Pivot Tables  link, which is located in the  Hidden  node of the tree in the         left pane. Then in the right pane, you make sure that for all roles in the system, the            Not Set  access level is set (as shown in the following screenshot). Notice the form         identifier:  SM.20.80.20 . The levels of access rights for pivot tables as filter tabs If you change the access level to at least one role, users with the         other roles will not be able to save pivot tables as filter tabs. Personal and Shared Filter Tabs with Pivot Tables By default, when you save a filter as a pivot table, the  Shared           Configuration  check box in the  Filter Settings  dialog         box is cleared (see the following screenshot), and the system treats the filter tab as an         advanced filter that is not available to other system users. If you select the            Shared Configuration  check box while saving a pivot table as a tab,         the tab with the pivot table will instead be available to all users who have access to the         inquiry form. The Shared Configuration check box in the Filter Settings dialog box As is the case with advanced filters, if you would like to share your pivot tables with         other users, you need to have sufficient access rights to the   ([~/?ScreenId=CS209010|CS209010]) Filters (CS209010) form; without the         access ,          the  Shared Configuration  check box will be cleared and unavailable         for you. By default, users with the built-in  Administrator  role (such as system         administrators or technical specialists that perform simple customizations) have access to         the form and can share pivot tables as filter tabs. Edit Mode of the Pivot Table Tab When you initially add a pivot table as a filter tab, the tab is opened in edit mode, so         that you can configure the pivot table. Once you have configured the pivot table, you can         switch between edit mode and view mode by clicking the  Edit pivot           table  button (see Item 1 in the screenshot below).  The editing layout is similar to the one you may be accustomed to seeing when you are         configuring a pivot table in Microsoft Excel. There are multiple panes that you use to         configure a pivot table. The  Fields  pane lists all the fields that have been added to the         generic inquiry on the  Results Grid  tab of the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form, regardless of their visibility settings. You         move fields between the panes by dragging and dropping them. When you set focus on a field         in the  Rows ,  Columns , or            Values  (Item 2) pane, the system displays its properties in the            Properties  pane (Item 3). By using the settings in the            Properties  pane, you define how the data of the field is to be         presented in the table.  If you need to add quick filters to the table, you drag the needed fields to the filtering         area (Item 4). If some quick filters were added to an inquiry tab that you saved as a pivot         table, the system copies all these filters to the filtering area by default. You can remove         them if they are not needed. You remove quick filters by selecting  Remove Quick           Filter  from the drop-down list that opens when you click this quick         filter. Edit mode of a pivot table as a filter tab ]]></column>
		</row>
		<row PageID="4660247f-1a50-462c-9c94-fd39c7a52276" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="efafc52c-672a-7299-9990-6df33a6c23ef" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Pivot tables can contain a lot of data, and for users who analyze the data in these tables, it is crucial that the data be presented in a convenient way. On the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form of Acumatica ERP, you can flexibly configure the format of the fields to be displayed in a pivot table.{br}{TOC}[anchor|#_b7f4f8c6-a1ee-4e44-9f50-6a7f1fd03726]
==Format of Field Values in Pivot Tables==
If you want to change the format of the fields to be displayed in a pivot table, you can specify the required format in the '''Format''' box of the '''Properties''' pane on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form. (This pane contains the display properties for a field that is selected in the '''Filters''', '''Columns''', '''Rows''', or '''Values''' pane.) In this box, you can type one of the standard formats defined for the format function in .Net. In the following table, you can find examples of format definitions for numbers and the corresponding output.[anchor|#_f1de3f1e-c131-499d-8396-d0fee987f979]
===User-Defined Format for Numbers===
{| class="checklist" | width="100%" 
|- 
!width="50%" ! Format Definition
!width="50%" ! Output Example
|- 
| <tt>0</tt>
| 8972
|- 
| <tt>0.0</tt>
| 8972.2
|- 
| <tt>0.00</tt>
| 8972.23
|- 
| <tt>#,##0.00</tt>
| 8,972.23
|- 
| <tt>$#,##0.00</tt>
| $8,972.23
|}
==Number or Percentage of the Total==
On the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form, you can specify how the system should display numeric values by using the options in the '''Show Value As''' drop-down box of the '''Properties''' pane. The following options are available: [anchor|#_bedd6f56-dfcf-427c-9dac-be2edb30c715]
*''Number''
* ''% of Grand Total''
* ''% of Column Total''
* ''% of Row Total''

The '''Values''' pane of this form contains a list of fields from the selected generic inquiry whose values are displayed in cells of the pivot table. You can add the same field to this pane multiple times and specify different display options for each entry. {br}

For example, suppose that you want to analyze activities that your employees have with customers—that is, review the number of phone calls, sent emails, and completed work items for each customer. Also, you would like to know the percentage of the grand total number of activities for each type. For each activity type shown in a column, you add two values: a value that is the count of the incidents, displayed as a number; and the same value, but displayed as a percentage of the grand total of all activities for all customers.
==Format Options for Date Fields==
For date fields, on the '''Properties''' pane of the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form, you can configure the following extended format settings:[anchor|#_8bc7a45f-843b-49ad-9bee-434e8fd8f64f]
*Rounding data with the specified accuracy: You can select the accuracy of calculating data gathered by date. For example, suppose that for each sales manager, you want to analyze sales amounts aggregated by quarter years. Suppose that sales amounts are collected daily, which means that the date field in the generic inquiry with the required data contains the day, the month, and the year (such as ''04/11/2016''). To aggregate the sales amounts by quarter in the pivot table, in the '''Round To''' box of the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] form, you select ''Quarters'', and the date will contain only the year and the quarter (such as ''2016 Q4'') in the pivot table.
*Aggregating data by a particular date part: You can select the part of a date field by which you want to aggregate data in a pivot table. For example, suppose that you want to analyze the seasonal demand of T-shirts for the past five years. To do this, you can build a pivot table that displays sales amounts aggregated by month. Suppose that the date field in the generic inquiry with sales amounts for T-shirts contains the month and the year (such as ''July 2017''). To make the system aggregate data by month and display only months in the pivot table, in the '''Date Part''' box, you select ''Month''.
*Displaying hierarchical column or row headers: If you want to configure the dates in columns or rows for a pivot table to meet your needs, you can set up a hierarchical structure of the parts of the dates. For example, suppose that you want to analyze the number of shipped laptops by month for the past three years. Suppose that the date in the generic inquiry contains the day, the month, and the year (such as ''04/11/2016''). In the pivot table, you can display a one-level column that will contain the following date values: ''Jan 2015'','' Feb 2015'', and so on through ''Jun 2017''. Alternatively, you can configure the system so that it displays two levels of column headers: In the first level, the system displays the years, and under each year, the system displays the months. To configure the system in this way, you add two copies of the date field to the '''Columns''' pane of the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] form. For the first copy, in the '''Round To''' box, you select ''Years''; for the second copy, in the '''Date Part''' box, you select ''Month''.
((({S:Hint}The value in the '''Format''' field on the '''Properties''' pane is case sensitive. Use lowercase letters for the day and year, and uppercase letters for the month, as follows: dd/MM/yyyy.
)))
==Format Options for Fields with Segmented Keys==
For fields for which segmented keys are configured to have multiple segments, on the '''Properties''' pane of the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form, you can configure the following format settings:[anchor|#_5f18a96a-5baa-453c-97db-84d4bb30829e]
*Aggregating data by the particular segment: You can select the segment by which the system will aggregate data in a pivot table. For example, suppose that your company sells fruit and vegetables to restaurants. Suppose that the item class values consist of the following segments: the item category (''FR'' or ''VEG''), the item type (''APL'', ''ORG'', ''CBR'', or ''PTO''), and the country of origin (such as ''ES'', ''CN'', or ''MA''). If you want to use a pivot table to analyze the numbers of items of each type shipped to each customer, in the '''Segment''' box, for the ''Class ID'' field, you select the segment that corresponds to the item type. With these settings, the system will aggregate sales data by the item type (such as apples, designated by ''APL'').
*Displaying hierarchical column or row headers: If you want to analyze data by using a combination of two segments of a field value, you can set up a hierarchical structure of the segments. Suppose that in the example described in the previous list item, you also want to add to the pivot table the country of origin for each item type. To address this task, you add to the '''Columns''' pane two copies of the ''Class ID'' field. For the first copy, in the '''Segment''' box, you select the segment used for the item category; for the second copy, in the '''Segment''' box, you select the segment used for the country of origin.
]]></column>
			<column name="PlainText"><![CDATA[Pivot Tables: Data Presentation Pivot tables can contain a lot of data, and for users who analyze the data in these tables, it     is crucial that the data be presented in a convenient way. On the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form of  Acumatica ERP,     you can flexibly configure the format of the fields to be displayed in a pivot table. Format of Field Values in Pivot Tables If you want to change the format of the fields to be displayed in a pivot table, you can     specify the required format in the  Format  box of the       Properties  pane on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form.     (This pane contains the display properties for a field that is selected in the       Filters ,  Columns ,  Rows , or       Values  pane.) In this box, you can type one of the standard formats     defined for the format function in .Net. In the following table, you can find examples of format     definitions for numbers and the corresponding output. User-Defined Format for Numbers Format Definition Output Example 0 8972 0.0 8972.2 0.00 8972.23 #,##0.00 8,972.23 $#,##0.00 $8,972.23 Number or Percentage of the Total On the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form, you can specify how the system should     display numeric values by using the options in the  Show Value As      drop-down box of the  Properties  pane. The following options are     available:  Number % of Grand Total % of Column Total % of Row Total The  Values  pane of this form contains a list of fields from the     selected generic inquiry whose values are displayed in cells of the pivot table. You can add the     same field to this pane multiple times and specify different display options for each entry.  For example, suppose that you want to analyze activities that your employees have with     customers—that is, review the number of phone calls, sent emails, and completed work items     for each customer. Also, you would like to     know      the percentage of the grand total number of activities for each     type . For each activity     type shown in a column, you add two values: a value that is      the     count of the incidents , displayed as a number; and     the same value, but displayed as a percentage of the grand total of all activities for all     customers. Format Options for Date Fields For date fields, on the  Properties  pane of the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form, you can configure the following extended format     settings: Rounding data with the specified accuracy: You can select the accuracy of calculating data      gathered by date. For example, suppose that for each sales manager, you want to analyze sales      amounts aggregated by quarter years. Suppose that sales amounts are collected daily, which      means that the date field in the generic inquiry with the required data contains the day, the      month, and the year (such as  04/11/2016 ). To aggregate the sales amounts by quarter in      the pivot table, in the  Round To  box of the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables form, you select  Quarters , and the date will contain only the      year and the quarter (such as  2016 Q4 ) in the pivot table. Aggregating data by a particular date part: You can select the part of a date field by which      you want to aggregate data in a pivot table. For example, suppose that you want to analyze the      seasonal demand of T-shirts for the past five years. To do this, you can build a pivot table      that displays sales amounts aggregated by month. Suppose that the date field in the generic      inquiry with sales amounts for T-shirts contains the month and the year (such as  July       2017 ). To make the system aggregate data by month and display only months in the pivot      table, in the  Date Part  box, you select  Month . Displaying hierarchical column or row headers: If you want to configure the dates in columns      or rows for a pivot table to meet your needs, you can set up a hierarchical structure of the      parts of the dates. For example, suppose that you want to analyze the number of shipped laptops      by month for the past three years. Suppose that the date in the generic inquiry contains the      day, the month, and the year (such as  04/11/2016 ). In the pivot table, you can display a      one-level column that will contain the following date values:  Jan 2015 ,  Feb 2015 ,      and so on through  Jun 2017 . Alternatively, you can configure the system so that it      displays two levels of column headers: In the first level, the system displays the years, and      under each year, the system displays the months. To configure the system in this way, you add      two copies of the date field to the  Columns  pane of the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables form. For the first copy, in the  Round To       box, you select  Years ; for the second copy, in the  Date Part  box,      you select  Month . The value in the  Format  field on the       Properties  pane is case sensitive. Use lowercase letters for the day and     year, and uppercase letters for the month, as follows: dd/MM/yyyy. Format Options for Fields with Segmented Keys For fields for which segmented keys are configured to have multiple segments, on the       Properties  pane of the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form,     you can configure the following format settings: Aggregating data by the particular segment: You can select the segment by which the system      will aggregate data in a pivot table. For example, suppose that your company sells fruit and      vegetables to restaurants. Suppose that the item class values consist of the following      segments: the item category ( FR  or  VEG ), the item type ( APL ,  ORG ,        CBR , or  PTO ), and the country of origin (such as  ES ,  CN , or        MA ). If you want to use a pivot table to analyze the numbers of items of each type      shipped to each customer, in the  Segment  box, for the  Class ID       field, you select the segment that corresponds to the item type. With these settings, the      system will aggregate sales data by the item type (such as apples, designated by       APL ). Displaying hierarchical column or row headers: If you want to analyze data by using a      combination of two segments of a field value, you can set up a hierarchical structure of the      segments. Suppose that in the example described in the previous list item, you also want to add      to the pivot table the country of origin for each item type. To address this task, you add to      the  Columns  pane two copies of the  Class ID  field. For the first      copy, in the  Segment  box, you select the segment used for the item      category; for the second copy, in the  Segment  box, you select the      segment used for the country of origin. ]]></column>
		</row>
		<row PageID="c8fafef3-cc74-46db-9805-66f7e538e648" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="2f6bfee3-d2a9-67bc-0397-ec4d9eedddcd" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create a pivot table and make it available as a standalone form in Acumatica ERP.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including the creation and modification of generic inquiry forms and pivot tables. An accountant of your company has asked you to create a pivot table that aggregates invoice totals by quarter for each customer and displays this customer&rsquo;s percentage of the grand total of all sales to customers in the quarter.
==Process Overview==
In this activity, on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form, you will create the requested pivot table, which is based on the data retrieved by the predefined Invoices and Memos (AR3010PL) inquiry form, which has the ''AR-Invoices and Memos'' inquiry title and the ''Invoices and Memos'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.{br}

While creating the pivot table, you will notice that the inquiry does not include the field that holds the line total of the document. You will add the missing field to the inquiry, refresh the data in the '''Fields''' pane, and proceed with the table configuration.{br}

When the table has been created and all the necessary settings have been specified, you will preview the pivot table and then add it to the site map.[anchor|#_272ecffc-e8c7-44ab-ba88-38a5bd0e38f5]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_a8871057-2f73-44a6-ae87-71db638b608e]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Creating a Pivot Table==
To create the pivot table, do the following:[anchor|#_b389546f-c713-4bd0-a3f7-f53e00946d30]
#Open the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form.
#In the '''Screen ID''' box, select ''Invoices and Memos''.
#:You can look for the generic inquiry by typing its name (<tt>Invoices and Memos</tt>) or screen identifier (<tt>AR3010PL</tt>) in the search box in the lookup table. The lookup table for the box shows a '''Title''' column (with the site map title for each row) and a '''Screen ID''' column (with the screen ID of the row). When you double-click a row to select it, the system inserts the title rather than the screen ID into the '''Screen ID''' box.
#In the '''Name''' box, type <tt>Invoice Totals by Customer</tt>, which describes the type of data that is shown with this pivot table. The value will be used as a default value for the pivot table title in the site map.
#On the form toolbar, click '''Save'''. In the '''Pivot Table ID''' box, notice that the name you have entered is used as the identifier of the pivot table.

==Step 2: Adding a Missing Field to the Inquiry==
Suppose that you have realized that you need the ''Line Total'' field to calculate the percentage. To add the missing field to an inquiry for a pivot table, do the following:[anchor|#_ac1c79f3-b4b3-49a7-98e8-011f43ba13f2]
#On the form toolbar of the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form with the ''Invoices and Memos'' pivot table selected in the '''Screen ID''' box (and with the ''Invoice Totals by Customer'' in the '''Name''' box), click '''Edit Inquiry'''. 
#:The system opens the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form in a separate tab. (Do not close the other browser tab, with the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] form opened with the ''Invoices and Memos'' pivot table selected; you will return to it in the next step.)
#In the '''Results Grid''' tab, add a row with the following settings:
#*'''Object''': ''ARInvoice''
#* '''Data Field''': ''Line Total''
#* '''Visible''': Cleared
#*'''Default Navigation''': Cleared
#*'''Caption''': <tt>Line Total</tt>
#:((({S:Hint}If some columns mentioned in this instruction (or any instruction) of the activity are hidden in the table, make them visible by using the '''Column Configuration''' dialog box of the table.
)))
#On the form toolbar, click '''Save'''.

==Step 3: Configuring the Pivot Table==
To configure the pivot table, do the following:[anchor|#_7b3fc872-31e3-4699-a40b-c3bb0702649d]
#Switch to the browser tab with the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form with the ''Invoices and Memos'' pivot table selected.
#On the toolbar of the '''Fields''' pane, click '''Refresh''' to update the list of available fields. Verify that the ''Line Total'' is available in the list.
#To configure the rows of the pivot table, add fields to the pivot table as follows:
##Drag ''Customer'' from the '''Fields''' pane to the '''Rows''' pane. The names of customers will be displayed as row headers in the pivot table.
##In the '''Rows''' pane, click ''Customer'' to display the properties of this field in the '''Properties''' pane.
##In the '''Properties''' pane, make sure that the '''Show Total''' check box is selected. With this setting, the system will add the '''Total''' row, which will display a total for all customers in each column.
#To configure the columns of the pivot table, add fields to the pivot table as follows:
##Drag ''Date'' from the '''Fields''' pane to the '''Columns''' pane. 
##In the '''Columns''' pane, click ''Date'' to display the properties of this field in the '''Properties''' pane.
##In the '''Properties''' pane, make sure that the '''Show Total '''check box is selected. With this setting, the system will add the '''Total''' column, where a total for all dates in each row will be displayed.
##In the '''Round To''' box, select ''Quarters'' to aggregate invoice totals by quarter. Notice that in the '''Format''' box, the format of the date is displayed automatically.
#To configure the values of the pivot table, add fields to the pivot table as follows:
##Drag ''Line Total'' from the '''Fields''' pane to the '''Values''' pane. The pivot table will display invoice amounts, aggregated by quarter, for each customer.
##In the '''Properties''' pane, type <tt>$#,##0.00</tt> in the '''Format''' box.
##Drag ''Line Total'' from the '''Fields''' pane to the '''Values''' pane one more time.
##In the '''Properties''' pane, type <tt>% of Grand Total</tt> in the '''Caption''' box.
##In the '''Properties''' pane, select ''% of Grand Total'' in the '''Show Value As''' box.
#On the form toolbar, click '''Save'''.

==Step 4: Previewing the Pivot Table==
To preview the pivot table you have created, with the ''Invoices and Memos'' pivot table selected on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form, click '''View Pivot''' on the form toolbar. The system opens the table in a separate browser tab. The pivot table that you have created is shown in the following screenshot.[anchor|#_7da151e2-9bae-458c-a792-85bc48d1a783][anchor|#_6a74d08e-3fae-4350-ae2e-1dfa8a59318e][image:UserGuide/Images/entity_Pivot_Tables_PreviewPivot.png|popup|The Invoice Totals by Customer pivot table|450px]
==Step 5: Making the New Table Visible to Other Users==
To add the pivot table you have created to the site map, do the following while viewing the ''Invoices and Memos'' pivot table on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form:[anchor|#_8858dc4f-e64e-4328-9d38-d3b1d56b161c]
#In the Summary area of the form, select the '''Make Visible on the UI''' check box.
#:The system automatically assigns the default workspace (''Data Views'') and category (''Pivot Tables'') to the table, which you can override any time. 
#In the '''Site Map Title''' box, modify the table title, if needed.
#On the form toolbar, click '''Save'''.
#On the main menu, select '''Data Views''', and in the workspace, under the '''Pivot Tables''' category, make sure the pivot table you created is listed. 

==Self-Test Exercise==
Now that you have learned how to create a pivot table as a separate form and specify different properties, try to apply this knowledge and modify the pivot table on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form as follows:[anchor|#_e2b73d8f-0aad-4731-9641-af93609cd33f]
*Make the system aggregate invoice totals by quarters, using the '''Date Part''' setting in the '''Properties''' pane.
*Make the system display the percentage of the column total instead of the grand total.
*Move the pivot table to the '''Receivables''' workspace.
]]></column>
			<column name="PlainText"><![CDATA[Pivot Tables: To Create a Pivot Table as a Form In this activity, you will learn how to create a pivot table and make it available as a         standalone form in  Acumatica ERP. Story Suppose that you are a technical specialist in your company who is working on simple         customizations, including the creation and modification of generic inquiry forms and pivot         tables. An accountant of your company has asked you to create a pivot table that aggregates         invoice totals by quarter for each customer and displays this customer's percentage of the         grand total of all sales to customers in the         quarter . Process Overview In this activity, on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form, you will create         the requested pivot table, which is based on the data retrieved by the predefined Invoices         and Memos (AR3010PL) inquiry form, which has the  AR-Invoices and Memos  inquiry title         and the  Invoices and Memos  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. While creating the pivot table, you will notice that the inquiry does not include the field         that holds the line total of the document. You will add the missing field to the inquiry,         refresh the data in the  Fields  pane, and proceed with the table         configuration. When the table has been created and all the necessary settings have been specified, you         will preview the pivot table and then add it to the site map. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Creating a Pivot Table To create the pivot table, do the following: Open the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form. In the  Screen ID  box, select  Invoices and Memos . You can             look for the generic inquiry by typing its name ( Invoices and               Memos ) or screen identifier ( AR3010PL ) in the             search box in the lookup table. The lookup table for the box shows a                Title  column (with the site map title for each row) and a                Screen ID  column (with the screen ID of the row). When you             double-click a row to select it, the system inserts the title rather than the screen ID             into the  Screen ID  box. In the  Name  box, type  Invoice Totals by             Customer , which describes the type of data that is shown with this pivot           table. The value will be used as a default value for the pivot table title in the site           map. On the form toolbar, click  Save . In the  Pivot Table             ID  box, notice that the name you have entered is used as the identifier of           the pivot table. Step 2: Adding a Missing Field to the Inquiry Suppose that you have realized that you need the  Line Total  field to calculate the         percentage. To add the missing field to an inquiry for a pivot table, do the following: On the form toolbar of the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form with the              Invoices and Memos  pivot table selected in the  Screen ID  box (and with the              Invoice Totals by Customer  in the  Name  box), click  Edit             Inquiry .  The system opens the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000)             form in a separate tab. (Do not close the other browser tab, with the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables form opened with the  Invoices and Memos  pivot table             selected; you will return to it in the next step.) In the  Results Grid  tab, add a row with the following             settings: Object :  ARInvoice Data Field :  Line Total Visible : Cleared Default Navigation : Cleared Caption :  Line Total If some columns mentioned in this instruction (or any instruction)             of the activity are hidden in the table, make them visible by using the                Column Configuration  dialog box of the table. On the form toolbar, click  Save . Step 3: Configuring the Pivot Table To configure the pivot table, do the following: Switch to the browser tab with the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form with           the  Invoices and Memos  pivot table selected. On the toolbar of the  Fields  pane, click              Refresh  to update the list of available fields. Verify that the              Line Total  is available in the list. To configure the rows of the pivot table, add fields to the pivot table as follows: Drag  Customer  from the  Fields  pane to the                  Rows  pane. The names of customers will be displayed as row               headers in the pivot table. In the  Rows  pane, click  Customer  to display the               properties of this field in the  Properties  pane. In the  Properties  pane, make sure that the  Show                 Total  check box is selected. With this setting, the system will add the                  Total  row, which will display a total for all customers in               each column. To configure the columns of the pivot table, add fields to the pivot table as             follows: Drag  Date  from the  Fields  pane to the                  Columns  pane.  In the  Columns  pane, click  Date  to display the               properties of this field in the  Properties  pane. In the  Properties  pane, make sure that the  Show                 Total  check box is selected. With this setting, the system will add the                  Total  column, where a total for all dates in each row will be               displayed. In the  Round To  box, select  Quarters  to aggregate               invoice totals by quarter. Notice that in the  Format  box, the               format of the date is displayed automatically. To configure the values of the pivot table, add fields to the pivot table as follows: Drag  Line Total  from the  Fields  pane to the                  Values  pane. The pivot table will display invoice amounts,               aggregated by quarter, for each customer. In the  Properties  pane, type  $#,##0.00                in the  Format  box. Drag  Line Total  from the  Fields  pane to the                  Values  pane one more time. In the  Properties  pane, type  % of Grand                 Total  in the  Caption  box. In the  Properties  pane, select  % of Grand Total  in the                  Show Value As  box. On the form toolbar, click  Save . Step 4: Previewing the Pivot Table To preview the pivot table you have created, with the  Invoices and Memos  pivot table         selected on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form, click  View           Pivot  on the form toolbar. The system opens the table in a separate browser         tab. The pivot table that you have created is shown in the following screenshot. The Invoice Totals by Customer pivot table Step 5: Making the New Table Visible to Other Users To add the pivot table you have created to the site map, do the following while viewing the            Invoices and Memos  pivot table on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010)         form: In the Summary area of the form, select the  Make Visible on the             UI  check box. The system automatically assigns the default workspace               ( Data Views ) and category ( Pivot Tables ) to the table, which you can             override any time.  In the  Site Map Title  box, modify the table title, if           needed. On the form toolbar, click  Save . On the main menu, select  Data Views , and in the workspace, under           the  Pivot Tables  category, make sure the pivot table you created is           listed.  Self-Test Exercise Now that you have learned how to create a pivot table as a separate form and specify         different properties, try to apply this knowledge and modify the pivot table on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form as follows: Make the system aggregate invoice totals by quarters, using the  Date             Part  setting in the  Properties  pane. Make the system display            the           percentage of the column total instead of the grand           total. Move the pivot table to the  Receivables  workspace. ]]></column>
		</row>
		<row PageID="d1d73984-a2a9-4c98-b95b-4551004a9ee3" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b1b82dbc-8425-51b9-6bd1-4bf0a359afed" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create a pivot table as a filter tab and share it with other users.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including the creation and modification of generic inquiry forms and pivot tables. A warehouse manager of your company has asked you to create a pivot table that groups stock items by item class and shows the total number of all items and the number of items in each class. Also, the pivot table should be viewed as a tab of the predefined Stock Items (IN2025PL) inquiry form, which has the ''IN-StockItem'' inquiry title and the ''Stock Items'' site map title specified on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form.((({S:Hint}The Stock Items (IN2025PL) inquiry form, which displays the list of the stock items that have been created on the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]) form, is the substitute form that is opened when you click the ''Stock Items'' link in a workspace or the Search form.
)))
==Process Overview==
In the activity, on the Stock Items (IN2025PL) generic inquiry form, you will create the requested pivot table and save it as a shared filter tab of this inquiry form. [anchor|#_77828045-5da5-49f4-b4fb-d43bcce73a87]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_72ec3b2b-c523-41fd-b529-d4988df1ec51]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Creating the Pivot Table on a Filter Tab==
To create the pivot table as a filter tab, do the following:[anchor|#_b389546f-c713-4bd0-a3f7-f53e00946d30]
#Open the Stock Items (IN2025PL) generic inquiry form.
#In the filtering area of the form, click '''...''' > '''Save as Pivot'''.
#In the '''Filter Settings''' dialog box, do the following:
##In the '''Filter Name''' box, type <tt>Items by Item Class</tt>.
##Select the '''Shared Configuration''' check box.
##Click '''OK''' to add the shared filter tab.
#:The system opens the newly created tab in edit mode for the pivot table.

==Step 2: Configuring the Pivot Table==
To configure the pivot table, do the following:[anchor|#_7b3fc872-31e3-4699-a40b-c3bb0702649d]
#While you are still viewing the '''Items by Item Class''' filter tab of the Stock Items (IN2025PL) inquiry form in edit mode, to configure the rows of the pivot table, add fields to the pivot table as follows:
##Drag ''Item Class'' from the '''Fields''' pane to the '''Rows''' pane. The identifiers of the item classes will be displayed as row headers in the pivot table.
##Drag ''Inventory ID'' from the '''Fields''' pane to the '''Rows''' pane as a second row after ''Item Class''. This will group stock items that belong to the same item class.
#In the '''Rows''' pane, click ''Item Class'' to display its properties in the '''Properties''' pane, and do the following in this pane:
##Make sure that the '''Show Total''' check box is selected. With this setting, the system will add the '''Total''' row at the bottom of the table, which will display the total number of items in stock for all item classes.
##Type <tt>Total Positions</tt> in the '''Total Label''' box. With this setting, the system will change the caption for the '''Total''' row at the bottom of the table
##Select the '''Collapsed''' check box. With this setting, the system will collapse item class groups by default.
#In the '''Rows''' pane, click ''Inventory ID'' to display its properties in the '''Properties''' pane. In this pane, clear the '''Show Total''' check box. The total number of stock items in a class will be displayed with the collapsed groups of item classes.
#To configure the values of the pivot table, add fields to the pivot table as follows:
##Drag ''Inventory ID'' from the '''Fields''' pane to the '''Values''' pane. The pivot table will display the number of stock positions, aggregated by item class.
##In the '''Properties''' pane, clear the '''Show Total''' check box.
#In the filtering area, click '''Edit pivot table''' to switch to view mode.
#:The system will display the pivot table, which aggregates stock items by item class. Item class groups are collapsed by default, and the total number of positions in the group is displayed in the '''Total''' column. The '''Total Positions''' row is added at the bottom of the table and shows the total number of stock positions available. A user can expand a particular group by clicking the plus sign next to a group name (shown in the following screenshot) or click the '''Expand All''' button at the bottom of the form (also shown in the screenshot) to expand all groups at once. The button next to '''Expand All''' is the '''Collapse All''' button.[anchor|#_ccadd361-0f41-484e-af2b-5c0905e8dabd][image:UserGuide/Images/entity_Pivot_Tables_CollapsedGroups.png|popup|A pivot table with the groups collapsed |150px]
]]></column>
			<column name="PlainText"><![CDATA[Pivot Tables: To Create a Pivot Table on a Filter Tab In this activity, you will learn how to create a pivot table as a filter tab and share it         with other users. Story Suppose that you are a technical specialist in your company who is working on simple         customizations, including the creation and modification of generic inquiry forms and pivot         tables. A warehouse manager of your company has asked you to create a pivot table that         groups stock items by item class and shows the total number of all items and the number of         items in each class. Also, the pivot table should be viewed as a tab of the predefined Stock         Items (IN2025PL) inquiry form, which has the  IN-StockItem  inquiry title and the            Stock Items  site map title specified on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry (SM208000) form. The Stock Items (IN2025PL) inquiry form, which displays the list of the stock         items that have been created on the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500) form, is the         substitute form that is opened when you click the  Stock Items  link in a workspace or         the Search form. Process Overview In the activity, on the Stock Items (IN2025PL) generic inquiry form, you will create the         requested pivot table and save it as a shared filter tab of this inquiry form.  System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Creating the Pivot Table on a Filter Tab To create the pivot table as a filter tab, do the following: Open the Stock Items (IN2025PL) generic inquiry form. In the filtering area of the form, click  ... Save as Pivot . In the  Filter Settings  dialog box, do the following: In the  Filter Name  box, type  Items by Item                 Class . Select the  Shared Configuration  check box. Click  OK  to add the shared filter tab. The system opens the newly created tab in edit mode for the pivot table. Step 2: Configuring the Pivot Table To configure the pivot table, do the following: While you are still viewing the  Items by Item Class  filter tab of           the Stock Items (IN2025PL) inquiry form in edit mode, to configure the rows of the pivot           table, add fields to the pivot table as follows: Drag  Item Class  from the  Fields  pane to the                  Rows  pane. The identifiers of the item classes will be               displayed as row headers in the pivot table. Drag  Inventory ID  from the  Fields  pane to the                  Rows  pane as a second row after  Item Class . This will               group stock items that belong to the same item class. In the  Rows  pane, click  Item Class  to display its           properties in the  Properties  pane, and do the following in this             pane: Make sure that the  Show Total  check box is selected. With               this setting, the system will add the  Total  row at the bottom               of the table, which will display the total number of items in stock for all item               classes. Type  Total Positions  in the  Total                 Label  box. With this setting, the system will change the caption for the                  Total  row at the bottom of the table Select the  Collapsed  check box. With this setting, the system               will collapse item class groups by default. In the  Rows  pane, click  Inventory ID  to display its           properties in the  Properties  pane. In this pane, clear the              Show Total  check box. The total number of stock items in a class           will be displayed with the collapsed groups of item classes. To configure the values of the pivot table, add fields to the pivot table as follows: Drag  Inventory ID  from the  Fields  pane to the                  Values  pane. The pivot table will display the number of stock               positions, aggregated by item class. In the  Properties  pane, clear the  Show                 Total  check box. In the filtering area, click  Edit pivot table  to switch to view             mode. The system will display the pivot table, which aggregates stock items by item             class. Item class groups are collapsed by default, and the total number of positions in             the group is displayed in the  Total  column. The  Total               Positions  row is added at the bottom of the table and shows the total             number of stock positions available. A user can expand a particular group by clicking             the plus sign next to a group name (shown in the following screenshot) or click the                Expand All  button at the bottom of the form (also shown in the             screenshot) to expand all groups at once. The button next to  Expand               All  is the  Collapse All  button. A pivot table with the groups collapsed  ]]></column>
		</row>
		<row PageID="10a63808-3994-4bb6-b1dc-256e5c05ce45" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ebed3d50-1a10-f714-fb9d-575618656595" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to delete a pivot table that is created as a form.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations, including the creation and modification of generic inquiry forms and pivot tables. An accountant of your company has asked you to delete the ''Invoice Totals by Customer'' pivot table, which you created as a result of performing the [HelpRoot_ReportingTools\Pivot_Tables_Activity_CreatingAsForm|Pivot Tables: To Create a Pivot Table as a Form] activity. 
==Process Overview==
In this activity, on the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] ([~/?ScreenId=SM208010|SM208010]) form, you will delete the ''Invoice Totals by Customer'' pivot table.[anchor|#_5c0f7992-6c9e-40dd-87b4-e0221a7cdbbc]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_63f350fe-baf6-4722-a2e2-f72962cd143e]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step: Deleting a Pivot Table==
To delete a pivot table, do the following:{br}

[anchor|#_f739bba8-22e1-4942-bd97-9e826ed35ae0]
#Open the [HelpRoot_FormReference\SM_20_80_10|Pivot Tables] form ([~/?ScreenId=SM208010|SM208010]).
#In the '''Screen ID''' box of the Summary area, select ''Invoices and Memos'', which is the generic inquiry that is used as a data source for the pivot table. 
#In the '''Pivot Table ID''' box, select ''Invoice Totals by Customer'', which is the pivot table that should be deleted.
#On the form toolbar, click '''Delete'''.
]]></column>
			<column name="PlainText"><![CDATA[Pivot Tables: To Delete a Pivot Table as a Form In this activity, you will learn how to delete a pivot table that is created as a                 form. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations, including the creation and modification of generic inquiry forms and                 pivot tables. An accountant of your company has asked you to delete the  Invoice                     Totals by Customer  pivot table, which you created as a result of performing                 the  Pivot Tables: To Create a Pivot Table as a Form activity.  Process Overview In this activity, on the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables (SM208010) form, you will                 delete the  Invoice Totals by Customer  pivot table. System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step: Deleting a Pivot Table To delete a pivot table, do the following: Open the   ([~/?ScreenId=SM208010|SM208010]) Pivot Tables form (SM208010). In the  Screen ID  box of the Summary area, select                              Invoices and Memos , which is the generic inquiry that is used as                         a data source for the pivot table.  In the  Pivot Table ID  box, select  Invoice Totals                             by Customer , which is the pivot table that should be deleted. On the form toolbar, click  Delete . ]]></column>
		</row>
		<row PageID="324b9ad1-6481-4633-8d45-f520f054dfe7" Language="en-US" PageRevisionID="1" Content="&#xA;In Acumatica ERP, a dashboard is a form to which you can add a collection of widgets that give you needed information at a glance.{br}&#xA;&#xA;To be able to manage dashboards, your user account must be designed a role with full access rights to the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form. By default, the built-in ''Administrator'' role provides the access rights for working with dashboards.{br}&#xA;&#xA;In this part of the guide, you will learn what types of widgets that you can place on dashboards, how to configure access rights to dashboards, and how to create a dashboard." PlainText="Managing Dashboards In  Acumatica ERP,     a dashboard is a form to which you can add a collection of widgets that give you needed     information at a glance. To be able to manage dashboards, your user account must be designed a role with full access     rights to the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form. By default, the     built-in  Administrator  role provides the access rights for working with dashboards. In this part of the guide, you will learn what types of widgets that you can place on     dashboards, how to configure access rights to dashboards, and how to create a dashboard. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ce29ed0e-1719-0e44-1793-9adbde2aaa89" RecordSourceID="22377" />
		<row PageID="99b5a064-5c8f-47aa-a6a4-28ef3fab1a35" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="6ff96f30-3352-a497-5d62-fc8eb62b7613" RecordSourceID="22377">
			<column name="Content"><![CDATA[
With Acumatica ERP dashboards, you can monitor your company’s current financial, operational, and organizational information, and analyze real-time trends that relate to your job. On dashboards, different types of information can be displayed in various presentation forms—such as text, charts, graphs, and tables—depending on your preferences and the specific types of data you want to see. {br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to do the following:[anchor|#_0273fc84-0b85-4fe9-9d34-b03af642faf6]
*Design a dashboard
*Manage access rights for the viewing, configuration, and personalization of dashboards

==Applicable Scenarios==
You design and manage dashboards in the following cases:[anchor|#ul_bhj_zlp_rlb]
*You are responsible for the customization of Acumatica ERP in your company. 
*You need to present your company&rsquo;s information on dashboards as text, charts, graphs, and tables that help your colleagues to monitor their job data and perform the needed processes more easily.

==Dashboards==
A dashboard is a collection of widgets that are displayed on a single screen. Acumatica ERP dashboards support various types of widgets, as you can see in the screenshot below, which shows a predefined dashboard designed for AP clerks. A particular widget might present such data as key customers’ details for the past 12 months, or the number of projects that will be closed within 30 days.{br}

The widgets have drill-down capabilities, which give users the ability to navigate directly from a dashboard widget to the source of the data they are viewing. With these capabilities, users can learn more about the data on the widgets of the dashboard and take appropriate action, as needed. [anchor|#_278d2617-1e65-40af-bbb4-06d2edd3b1c4][anchor|#_137dc85e-5713-4ba6-b96c-e0f933690417][image:UserGuide/Images/AdminDashboards_dashboards_example.png|popup|The AP Clerk predefined dashboard|450px]
==Types of Widgets==
A widget is a dashboard component that provides a particular type of information, such as a real-time data view or a wiki article.{br}

Before you create or modify a dashboard, you need to plan how many widgets and which types the dashboard will have. We recommend that you add no more than seven widgets to a particular dashboard. If a dashboard is cluttered with too many widgets, the users viewing the dashboard cannot understand the data quickly and easily.{br}

You can add the following types of widgets to a dashboard:[anchor|#_d4ca5992-65a8-4ad7-99db-f3be5995ad6e]
*A chart: A graphical representation of data from an Acumatica ERP form. You can use charts of various types, such as bar charts and line charts.
*A data table: A systematic display of data from an Acumatica ERP form, with data arranged into rows and columns.
*An embedded page: A document or an image that is stored on an external resource, such as cloud storage.
*A pivot table: A data table organized to filter, sort, count, total, or average data from an Acumatica ERP inquiry, displaying the summarized results.
*A Power BI tile: A chart, scorecard, or other type of analytical information that is represented on a Power BI dashboard designed by your organization.
*A scorecard KPI: A statistical record that measures progress or achievement toward a set performance indicator by showing parameters that are important to the business processes of your organization and should be monitored daily.
*A trend card KPI: A statistical record showing parameters whose dynamic change is important to the business processes of your organization.
*A wiki page: A reference topic, procedure, business plan, or other type of content that is frequently consulted by Acumatica ERP users.

==Widgets Based on Generic Inquiries==
Most types of widgets are based on data from generic inquiries. A generic inquiry is a user-definable tool, generally created by a developer or system administrator, that collects data from the system database and displays the query results on an Acumatica ERP form. To create widgets based on a generic inquiry, you need to have at minimum ''View Only'' access rights to the generic inquiry form.If you have access rights to view the form a particular widget is based on, you can do the following:[anchor|#_036d6b1f-5263-4939-a63f-1ceddf02b9ce]
*During dashboard design: For the widget, select the data that is displayed on the widget and drill down as needed for more details
*While you are viewing the dashboard: View the widget, which displays data from the form
]]></column>
			<column name="PlainText"><![CDATA[Administering Dashboards: General Information With  Acumatica ERP     dashboards, you can monitor your company’s current financial, operational, and organizational     information, and analyze real-time trends that relate to your job. On dashboards, different     types of information can be displayed in various presentation forms—such as text, charts,     graphs, and tables—depending on your preferences and the specific types of data you want     to see.  Learning Objectives In this chapter, you will learn how to do the following: Design a dashboard Manage access rights for the viewing, configuration, and personalization of dashboards Applicable Scenarios You design and manage dashboards in the following cases: You are responsible for the customization of  Acumatica ERP       in your company.  You need to present your company's information on dashboards as text, charts, graphs, and       tables that help your colleagues to monitor their job data and perform the needed processes       more easily. Dashboards A dashboard is a collection of widgets that are displayed on a single screen.  Acumatica ERP     dashboards support various types of widgets, as you can see in the screenshot below, which shows     a predefined dashboard designed for AP clerks. A particular widget might present such data as     key customers’ details for the past 12 months, or the number of projects that will be closed     within 30 days. The widgets have drill-down capabilities, which give users the ability to navigate directly     from a dashboard widget to the source of the data they are viewing. With these capabilities,     users can learn more about the data on the widgets of the dashboard and take appropriate action,     as needed.  The AP Clerk predefined dashboard Types of Widgets A widget is a dashboard component that provides a particular type of information, such as a     real-time data view or a wiki article. Before you create or modify a dashboard, you need to plan how many widgets and which types the     dashboard will have. We recommend that you add no more than seven widgets to a particular     dashboard. If a dashboard is cluttered with too many widgets, the users viewing the dashboard     cannot understand the data quickly and easily. You can add the following types of widgets to a dashboard: A chart: A graphical representation of data from an  Acumatica ERP      form. You can use charts of various types, such as bar charts and line charts. A data table: A systematic display of data from an  Acumatica ERP      form, with data arranged into rows and columns. An embedded page: A document or an image that is stored on an external resource, such as      cloud storage. A pivot table: A data table organized to filter, sort, count, total, or average data from an        Acumatica ERP      inquiry, displaying the summarized results. A Power BI       tile :      A chart, scorecard, or other type of analytical information that is represented on a Power BI       dashboard       designed by your organization. A scorecard KPI: A statistical record that measures progress or achievement toward a set      performance indicator by showing parameters that are important to the business processes of      your organization and should be monitored daily. A trend card KPI: A statistical record showing parameters whose dynamic change is important      to the business processes of your organization. A wiki page: A reference topic, procedure, business plan, or other type of content that is      frequently consulted by  Acumatica ERP      users. Widgets Based on Generic Inquiries Most types of widgets are based on data from generic inquiries. A generic inquiry is a     user-definable tool, generally created by a developer or system administrator, that collects     data from the system database and displays the query results on an  Acumatica ERP     form.      To     create widgets based on a generic inquiry, you need to have at minimum  View Only  access     rights to the generic inquiry form. If     you have access rights to view the form a particular widget is based on, you can do the     following: During dashboard design: For the widget, select the data that is displayed on the widget and      drill down as needed for more details While you are viewing the dashboard: View the widget, which displays data from the form ]]></column>
		</row>
		<row PageID="c228e179-4ae7-4d47-b1df-676f5861e379" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="d21ba7a7-01d5-7ee2-e14d-fed8bb2b92a2" RecordSourceID="22377">
			<column name="Content"><![CDATA[
As with generic inquiries and pivot tables, which are customizable Acumatica ERP forms, you can create dashboards and share them with other users as forms. That is, you can place any dashboard in a workspace by adding it to the Acumatica ERP site map and specifying different access levels to the dashboard for the user roles available in the system.
==Creation of a New Dashboard==
To add a new dashboard, on the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form, you perform the following steps:[anchor|#_84994fdd-0bb0-47be-8725-d2531f428bc9]
#Creation: You add the new dashboard, enter its name, and specify the role for the owner of this dashboard. A user with the specified role assigned will be able to populate the dashboard with widgets, modify the dashboard layout, and edit widget properties. 
#Publication: You select the '''Make Visible on the UI''' check box and make the needed changes to the default values in the '''Site Map Title''', '''Workspace''', and '''Category''' boxes. These settings control whether the dashboard is published on the Acumatica ERP site and where users can find it.
#Visibility configuration: On the '''Visible To''' tab of the form, you specify the access levels for the roles defined in the system. If the ''Not Set'' access level is set for all the roles, the dashboard will be available to all users in the system. To restrict the access, you select the ''Granted'' access level for those roles for which the dashboard should be available; users with other roles will not be able to view the dashboard.
#Configuration of additional settings: During this step, you can do any of the following:
#*Allow users who can view the dashboard to create personal copies of the dashboard and to design these copies by selecting the '''Allow Users to Personalize''' check box. For a newly created dashboard, the check box is selected by default.
#*Select '''Expose to the Mobile Application''' if the dashboard should be displayed in the Acumatica mobile app connected to your Acumatica ERP site.
#*Specify the parameters for which elements should be displayed in the Selection area of the dashboard on the '''Parameters''' tab of the form. For example, you can add a date-relative parameter with the default ''@WeekStart'' value. In this case, the dashboard widgets will display data relevant to the first day of the current week by default. A user can change the parameter value at any time.

After you have created the dashboard, a user with the owner role can populate it with the planned widgets. ((({S:Hint}If you will be designing this dashboard, be sure to select a role that you are assigned to as the owner role. Otherwise, you will be working with your personal copy of the dashboard, and other users will not see any widgets that you add to the dashboard.
)))]]></column>
			<column name="PlainText"><![CDATA[Administering Dashboards: Dashboard Creation As with generic inquiries and pivot tables, which are customizable  Acumatica ERP forms, you can create dashboards and share them with other users as forms. That is, you         can place any dashboard in a workspace by adding it to the  Acumatica ERP site map and specifying different access levels to the dashboard for the user roles         available in the system. Creation of a New Dashboard To add a new dashboard, on the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600)         form, you perform the following steps: Creation: You add the new dashboard, enter its name, and specify the role for the owner           of this dashboard. A user with the specified role assigned will be able to populate the           dashboard with widgets, modify the dashboard layout, and edit widget properties.  Publication: You select the  Make Visible on the UI  check box and           make the needed changes to the default values in the  Site Map           Title ,  Workspace , and  Category            boxes. These settings control whether the dashboard is published on the  Acumatica ERP site and where users can find it. Visibility configuration: On the  Visible To  tab of the form, you           specify the access levels for the roles defined in the system. If the  Not Set            access level is set for all the roles, the dashboard will be available to all users in the           system. To restrict the access, you select the  Granted  access level for those roles           for which the            dashboard            should be available; users with other roles will not be able to view the dashboard. Configuration of additional settings: During this step, you can do any of the             following: Allow users who can view the dashboard to create personal copies of the dashboard               and to design these copies by selecting the  Allow Users to                 Personalize  check box. For a newly created dashboard, the check box is               selected by default. Select  Expose to the Mobile Application  if the dashboard               should be displayed in the  Acumatica mobile app connected to your  Acumatica ERP site. Specify the parameters for which elements should be displayed in the Selection area               of the dashboard on the  Parameters  tab of the form. For               example, you can add a date-relative parameter with the default  @WeekStart                value. In this case, the dashboard widgets will display data relevant to the first day               of the current week by default. A user can change the parameter value at any               time. After you have created the dashboard, a user with the owner role can populate it with the         planned widgets.  If you will be designing this dashboard, be sure to select a role that you         are assigned to as the owner role. Otherwise, you will be working with your personal copy of         the dashboard, and other users will not see any widgets that you add to the         dashboard. ]]></column>
		</row>
		<row PageID="891ded74-5222-4c19-be92-227e318c34f1" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c9d766d2-b74f-f5a3-8ef6-ea02bda353fd" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#_06a72544-28dc-4216-8c78-4470e3b53c58]
In Acumatica ERP, you can allow users to manage dashboards, to view a dashboard, and to modify widgets on a dashboard. In this topic, you will read about access rights to dashboard forms.{br}{TOC}[anchor|#_b9465986-4ef1-47d0-81bd-144939ec10fa]
==Access Rights for Managing Dashboard Forms==
When you want to allow users to manage dashboards, you need to assign them a user role with full access rights to the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form. Users with such a role can add and remove dashboards. For a particular dashboard defined on this form, these users can specify user roles’ levels of access rights to the dashboard, select the user role that will own the dashboard, change the location of the dashboard in the site map, and allow other users to personalize copies of this dashboard.{br}

If you want a user who can manage a dashboard to also be able to configure an original dashboard (that is, make changes that are visible to all users who can view the dashboard), you should assign this user the dashboard owner role.[anchor|#_7664131b-ac05-45ef-aca8-ff30927f8e29]
==Access Rights for Configuring Dashboards==
An original dashboard can be configured by only a user with the role designated as the owner role of the particular dashboard on the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form. For predefined dashboards and dashboards created in previous versions of Acumatica ERP, the default owner role is the predefined role ''DashboardDesigner''. {br}

A user with a dashboard owner role can design the dashboard from scratch: add and delete widgets, arrange widgets, and modify widget properties.((({S:Hint}When you are designing a dashboard, be sure that the owner role you specify for the dashboard is one assigned to your user account. Otherwise, you will be working with a personal copy of the dashboard.
)))[anchor|#_6a77a468-101c-4f80-8a4a-a6d5bcb19119]
==Access Rights for Viewing Dashboards==
For each dashboard, you can control which roles have the ability to view the dashboard as a whole by using the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form. {br}

The set of widgets that are displayed to the users who can view the dashboard depends on their access rights to the forms from which the widgets&rsquo; source data is taken. If access to a form underlying a widget is denied for particular users, they instead see a placeholder on the dashboard. For example, suppose that you added the following widgets to the dashboard you have defined as the home page in the system:[anchor|#_b79af006-de53-4572-bfd2-99a72ad5b071]
*''Bills to Approve'', which uses data from the [HelpRoot_FormReference\AP_50_20_00|Approve Bills for Payment] ([~/?ScreenId=AP502000|AP502000]) form
*''Accounts Receivable Balances'', which is based on data from the [HelpRoot_FormReference\AP_40_10_00|Vendor Summary] ([~/?ScreenId=AP401000|AP401000]) form

When users who do not have access to the [HelpRoot_FormReference\AP_50_20_00|Approve Bills for Payment] form sign in to the system, they see only the ''Accounts Receivable Balances'' widget; they do not see the ''Bills to Approve'' widget on the dashboard. If the particular dashboard can be personalized (see the next section), these users can delete the hidden widget or change its properties in their personal copy of the dashboard.[anchor|#_2af3dc70-7707-45b6-ad2c-5c83d67b7f7f]
==Access Rights for Personalizing Dashboards==
For users who can view a dashboard, you can also control whether these users can personalize the dashboard—that is, create a personal copy of the dashboard and configure and modify the copied widgets. To provide users with this capability, you need to select the '''Allow Users to Personalize''' check box on the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form for the particular dashboard. With this check box selected, the '''Create User Copy''' button will be displayed on the title bar of the dashboard form. A user clicks the button to create a personal copy.{br}

If a user has created a personal copy of the dashboard and made modifications to it, this user can reset the copy to the original dashboard by clicking the '''Reset to Default''' button on the title bar of the dashboard form.{br}

A user who manages a particular dashboard can reset all user copies of the dashboard at once by clicking '''Reset All User Copies''' on the toolbar of the [HelpRoot_FormReference\SM_20_86_00|Dashboards] form.]]></column>
			<column name="PlainText"><![CDATA[Administering Dashboards: Access Rights In  Acumatica ERP, you can allow users to manage dashboards, to view a dashboard, and to modify widgets on         a dashboard. In this topic, you will read about access rights to dashboard forms. Access Rights for Managing Dashboard Forms When you want to allow users to manage dashboards, you need to assign them a user role with         full access rights to the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form.         Users with such a role can add and remove dashboards. For a particular dashboard defined on         this form, these users can specify user roles’ levels of access rights to the dashboard,         select the user role that will own the dashboard, change the location of the dashboard in         the site map, and allow other users to personalize copies of this dashboard. If you want a user who can manage a dashboard to also be able to configure an original         dashboard (that is, make changes that are visible to all users who can view the dashboard),         you should assign this user the dashboard owner role. Access Rights for Configuring Dashboards An original dashboard can be configured by only a user with the role designated as the         owner role of the particular dashboard on the   ([~/?ScreenId=SM208600|SM208600]) Dashboards         (SM208600) form. For predefined dashboards and dashboards created in previous versions of            Acumatica ERP, the default owner role is the predefined role  DashboardDesigner .  A user with a dashboard owner role can design the dashboard from scratch: add and delete         widgets, arrange widgets, and modify widget properties. When you are designing a dashboard, be sure that the owner role you specify         for the dashboard is one assigned to your user account. Otherwise, you will be working with         a personal copy of the dashboard. Access Rights for Viewing Dashboards For each dashboard, you can control which roles have the ability to view the dashboard as a         whole by using the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form.  The set of widgets that are displayed to the users who can view the dashboard depends on         their access rights to the forms from which the widgets' source data is taken. If access to         a form underlying a widget is denied for particular users, they instead see a placeholder on         the dashboard. For example, suppose that you added the following widgets to the dashboard         you have defined as the home page in the system: Bills to Approve , which uses data from the   ([~/?ScreenId=AP502000|AP502000]) Approve Bills for Payment (AP502000) form Accounts Receivable Balances , which is based on data from the   ([~/?ScreenId=AP401000|AP401000]) Vendor Summary (AR401000) form When users who do not have access to the   ([~/?ScreenId=AP502000|AP502000]) Approve Bills for Payment form         sign in to the system, they see only the  Accounts Receivable Balances  widget; they do         not see the  Bills to Approve  widget on the dashboard. If the particular dashboard can         be personalized (see the next section), these users can delete the hidden widget or change         its properties in their personal copy of the dashboard. Access Rights for Personalizing Dashboards For users who can view a dashboard, you can also control whether these users can         personalize the dashboard—that is, create a personal copy of the dashboard and         configure and modify the copied widgets. To provide users with this capability, you need to         select the  Allow Users to Personalize  check box on the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form for the particular dashboard. With         this check box selected, the  Create User Copy  button will be         displayed on the title bar of the dashboard form. A user clicks the button to create a         personal copy. If a user has created a personal copy of the dashboard and made modifications to it, this         user can reset the copy to the original dashboard by clicking the  Reset to           Default  button on the title bar of the dashboard form. A user who manages a particular dashboard can reset all user copies of the dashboard at         once by clicking  Reset All User Copies  on the toolbar of the   ([~/?ScreenId=SM208600|SM208600]) Dashboards form. ]]></column>
		</row>
		<row PageID="db5ed0df-1709-4b0b-b36c-d36591ff75e4" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="f9e527b1-ef60-72e4-8150-7a3df955ef08" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create a dashboard and share it with other users.
==Story==
Suppose that you are a technical specialist in your company who is working on simple customizations. A sales manager of your company has requested a dashboard named ''Sales Mgr Dashboard''. Every sales manager would like to have the capability to create a personal copy of the dashboard and populate it with widgets on their own. The dashboard should be visible to sales managers only and made available through a link in the '''Opportunities''' workspace under the '''Dashboards''' category.
==Process Overview==
In this activity, you will create a dashboard on the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form and specify the requested settings. You will specify your role (''Administrator'') as the owner role of this dashboard so that you can design the dashboard later if this is requested.{br}

To review how the access rights assigned to the dashboard are working, you will try to view the created dashboard as the technical specialist (with the ''Administrator'' role) and then as a sales manager (with the ''Sales Manager'' role). You will then make changes to the access rights to the dashboard so that users with the ''Administrator'' role can open the dashboard in order to begin adding widgets to it. [anchor|#_1c391da7-2c42-46b3-87b4-18be0e78c5d0]
==System Preparation==
Before you perform the steps of this activity, make sure that the following tasks have been performed:[anchor|#_0f6a839e-c18e-422d-9e61-5379760859a0]
#You have installed an Acumatica ERP instance with the ''U100'' dataset, or a system administrator has performed this task for you.
#You have signed in to Acumatica ERP with the following credentials:
#*Username: ''gibbs''
#*Password: ''123''
#:((({S:Hint}The ''gibbs'' user is assigned the ''Administrator'' role, which has sufficient access rights to manage system configuration and to modify generic inquiries, advanced filters, pivot tables, and dashboards.
)))

==Step 1: Creating a Dashboard==
To create the dashboard that will be used to create the dashboard the sales managers need, do the following:[anchor|#_b389546f-c713-4bd0-a3f7-f53e00946d30]
#Open the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form.
#In the Summary area, in the '''Name''' box, type the name for the dashboard: <tt>SalesMgrDashboard</tt>.
#In the '''Owner Role''' box, select ''Administrator''.
#Make sure that the '''Allow Users to Personalize''' check box is selected.
#Select the '''Make Visible on the UI''' check box.
#In the '''Site Map Title''' box, change the system-specified value, which was copied from the '''Name''' box, to <tt>Sales Mgr Dashboard</tt>.
#In the '''Workspace''' box, select ''Opportunities''.
#In the '''Category''' box, leave the default value, ''Dashboards''.
#On the '''Visible To''' tab, do the following:
##Locate the row with ''Sales Manager'' selected in the '''Role''' column.
##In the '''Access Rights''' column of this row, select ''Granted'' to assign this level of access rights to the role.[anchor|#_86acf724-61f3-48bc-9256-b01470d2bc1b]
#On the form toolbar, click '''Save'''.

You have created the empty dashboard, which will later be designed and populated with widgets.((({S:Hint}The system assigns the dashboard an automatically generated ID in a format similar to that of screen IDs of other dashboards, with ''DB'' as the two-letter module code: ''DB000000''. When the ID is assigned, the system adds the dashboard to the site map. Because a workspace and category have been specified, a user with the ''Sales Manager'' role can access the dashboard through the workspace.
)))
==Step 2: Accessing the Dashboard==
To review how the access rights you have specified for the dashboard are working, do the following:[anchor|#_03c80b68-a1ae-4214-9b84-e3114b144740]
#While you are still signed in as ''gibbs'' (to which the ''Administrator'' role is assigned), navigate to the '''Opportunities''' workspace. If the '''Opportunities''' menu item is not on the main menu, click the '''More Items''' menu item and then click the '''Opportunities''' tile.
#On the workspace footer, click the '''Show All''' button to expand the workspace menu, and in the '''Dashboards''' category, look for ''SalesMgrDashboard''.
#:The system does not display the dashboard you have created (or even the '''Dashboards''' category if ''SalesMgrDashboard'' is the only dashboard in the '''Opportunities''' workspace) because you have limited the access to the dashboard to only those who have the ''Sales Manager'' role. The ''Administrator'' role does not have access to the dashboard. ((({S:Hint}In Step 1, you specified the ''Administrator'' role as the '''Owner Role''' of the dashboard, indicating that a user with this role assigned can design the dashboard and edit its settings. This setting does not control, however, whether the ''Administrator'' role can access the dashboard. The rights of all roles to the dashboard are specified on the '''Visible To''' tab of the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form
)))
#Sign out, and then sign in with the credentials of David Chubb, whose user account has the ''Sales Manager'' role:
#*'''Username''': ''chubb''
#* '''Password''': ''123''
#Navigate to the '''Opportunities''' workspace, and click the ''Sales Mgr Dashboard'' link. If the '''Opportunities''' menu item is not on the main menu, click the '''More Items''' menu item and then click the '''Opportunities''' tile.
#:The system opens the dashboard, indicating that users with the ''Sales Manager'' role can access the dashboard. On the dashboard title toolbar, notice that the '''Create User Copy''' button is available (as shown in the following screenshot). This illustrates that users with the ''Sales Manager'' role can create a personal copy of the dashboard.
[anchor|#_a971bec7-ede1-4356-bcff-54f679ed818d][anchor|#_cf7e2b49-e939-414e-86ce-35f86c288938][image:UserGuide/Images/AdminDashboards_Dashboards_SalesRep.png|popup|Sales Mgr Dashboard viewed by a sales manager|450px]
==Step 3: Changing the Assess Rights to the Dashboard==
Now you need to change the access rights of the dashboard so that users with the ''Administrator'' role can open the dashboard in order to begin adding widgets. To change the access rights to the dashboard, do the following:[anchor|#_0127409c-47dd-44f4-9a03-9a8e90354bc4]
#Sign out, and sign in with the credentials of the technical specialist with the ''Administrator'' role (which you used earlier):
#*User name: ''gibbs''
#*Password: ''123''
#Open the [HelpRoot_FormReference\SM_20_86_00|Dashboards] ([~/?ScreenId=SM208600|SM208600]) form.
#In the Summary area, in the '''Name''' box, select ''SalesMgrDashboard''.
#On the '''Visible To''' tab, do the following:
##Locate the row with ''Administrator'' selected in the '''Role''' column.
##In the '''Access Rights''' column of this row, select ''Granted'' to assign this level of access rights to the role.[anchor|#_30fc828c-c79c-4704-8491-70bd1c75db7f]
#On the form toolbar, click '''Save'''.
#Open the '''Opportunities''' workspace, and click the ''SalesMgrDashboard'' link.
#:The system opens the dashboard, indicating that you have the needed access rights to view the dashboard. On the dashboard title toolbar, notice that the '''Design''' button is available (as shown in the following screenshot). This illustrates that as the owner of the dashboard, you can populate it with widgets.
[anchor|#_f90ab2ac-96db-4251-96c1-a5ba0849dcb6][anchor|#_776760c1-4ab4-4131-9b69-5f8f200cd11e][image:UserGuide/Images/AdminDashboards_Dashboards_SalesRepAdmin.png|popup|Sales Mgr Dashboard viewed by the owner of the dashboard|450px]]]></column>
			<column name="PlainText"><![CDATA[Administering Dashboards: To Add a Dashboard In this activity, you will learn how to create a dashboard and share it with other                 users. Story Suppose that you are a technical specialist in your company who is working on simple                 customizations. A sales manager of your company has requested a dashboard named                      Sales Mgr Dashboard . Every sales manager would like to have the                 capability to create a personal copy of the dashboard and populate it with widgets                 on their own. The dashboard should be visible to sales managers only and made                 available through a link in the  Opportunities  workspace under                 the  Dashboards  category. Process Overview In this activity, you will create a dashboard on the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form and specify the requested                 settings. You will specify your role ( Administrator ) as the owner role of                 this dashboard so that you can design the dashboard later if this is requested. To review how the access rights assigned to the dashboard are working, you will try                 to view the created dashboard as the technical specialist (with the                      Administrator  role) and then as a sales manager (with the  Sales                     Manager  role). You will then make changes to the access rights to the                 dashboard so that users with the  Administrator  role can open the dashboard in                 order to begin adding widgets to it.  System Preparation Before you perform the steps of this activity, make sure that the following tasks                 have been performed: You have installed an  Acumatica ERP instance with the  U100  dataset, or a system administrator has                     performed this task for you. You have signed in to  Acumatica ERP with the following credentials: Username:  gibbs Password:  123 The  gibbs  user is assigned the  Administrator                          role, which has sufficient access rights to manage system configuration and                         to modify generic inquiries, advanced filters, pivot tables, and                         dashboards. Step 1: Creating a Dashboard To create the dashboard that will be used to create the dashboard the sales managers                 need, do the following: Open the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form. In the Summary area, in the  Name  box, type the name for                     the dashboard:  SalesMgrDashboard . In the  Owner Role  box, select  Administrator . Make sure that the  Allow Users to Personalize  check box                     is selected. Select the  Make Visible on the UI  check box. In the  Site Map Title  box, change the system-specified                     value, which was copied from the  Name  box, to                          Sales Mgr Dashboard . In the  Workspace  box, select  Opportunities . In the  Category  box, leave the default value,                          Dashboards . On the  Visible To  tab, do the following: Locate the row with  Sales Manager  selected in the                                  Role  column. In the  Access Rights  column of this row, select                                  Granted  to assign this level of access rights to the                             role. On the form toolbar, click  Save . You have created the empty dashboard, which will later be designed and populated with                 widgets. The system assigns the dashboard an automatically generated ID in a                 format similar to that of screen IDs of other dashboards, with  DB  as the                 two-letter module code:  DB000000 . When the ID is assigned, the system adds                 the dashboard to the site map. Because a workspace and category have been specified,                 a user with the  Sales Manager  role can access the dashboard through the                 workspace. Step 2: Accessing the Dashboard To review how the access rights you have specified for the dashboard are working, do                 the following: While you are still signed in as  gibbs  (to which the  Administrator                      role is assigned), navigate to the  Opportunities                      workspace. If the  Opportunities  menu item is not on the                     main menu, click the  More Items  menu item and then click                     the  Opportunities  tile. On the workspace footer, click the  Show All  button to                     expand the workspace menu, and in the  Dashboards                      category, look for  SalesMgrDashboard . The system does not display the                         dashboard you have created (or even the  Dashboards                          category if  SalesMgrDashboard  is the only dashboard in the                              Opportunities  workspace) because you have limited                         the access to the dashboard to only those who have the  Sales Manager                          role. The  Administrator  role does not have access to the dashboard.                              In Step 1, you specified the  Administrator  role                             as the  Owner Role  of the dashboard, indicating                             that a user with this role assigned can design the dashboard and edit                             its settings. This setting does not control, however, whether the                                  Administrator  role can access the dashboard. The rights of                             all roles to the dashboard are specified on the  Visible                                 To  tab of the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form Sign out, and then sign in with the credentials of David Chubb, whose user                     account has the  Sales Manager  role: Username :  chubb Password :  123 Navigate to the  Opportunities  workspace, and click the                          Sales Mgr Dashboard  link. If the  Opportunities                      menu item is not on the main menu, click the  More Items                      menu item and then click the  Opportunities  tile. The                         system opens the dashboard, indicating that users with the  Sales                             Manager  role can access the dashboard. On the dashboard title                         toolbar, notice that the  Create User Copy  button is                         available (as shown in the following screenshot). This illustrates that                         users with the  Sales Manager  role can create a personal copy of the                         dashboard. Sales Mgr Dashboard viewed by a sales manager Step 3: Changing the Assess Rights to the Dashboard Now you need to change the access rights of the dashboard so that users with the                      Administrator  role can open the dashboard in order to begin adding                 widgets. To change the access rights to the dashboard, do the following: Sign out, and sign in with the credentials of the technical specialist with the                          Administrator  role (which you used earlier): User name:  gibbs Password:  123 Open the   ([~/?ScreenId=SM208600|SM208600]) Dashboards (SM208600) form. In the Summary area, in the  Name  box, select                          SalesMgrDashboard . On the  Visible To  tab, do the following: Locate the row with  Administrator  selected in the                                  Role  column. In the  Access Rights  column of this row, select                                  Granted  to assign this level of access rights to the                             role. On the form toolbar, click  Save . Open the  Opportunities  workspace, and click the                          SalesMgrDashboard  link. The system opens the dashboard, indicating                         that you have the needed access rights to view the dashboard. On the                         dashboard title toolbar, notice that the  Design                          button is available (as shown in the following screenshot). This illustrates                         that as the owner of the dashboard, you can populate it with                     widgets. Sales Mgr Dashboard viewed by the owner of the dashboard ]]></column>
		</row>
		<row PageID="0b174aab-ae96-4b7d-aa8d-df83bdb06292" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="76b7fd5e-30fe-c1c8-cb91-7d97c2e1bc62" RecordSourceID="22377">
			<column name="Content"><![CDATA[To embed a Power BI tile on a dashboard in Acumatica ERP, you should first register your Acumatica ERP instance on Microsoft Azure for Power BI to obtain the client ID and client secret parameters. When you have obtained the parameters for your Acumatica ERP you can add Power BI tile on a dashboard. For information on adding Power BI tile widgets, see [HelpRoot_Interface\DB__con_PowerBI|Power BI Tile Widgets].((({S:Hint}Integrating Microsoft Power BI reports into Acumatica ERP to be used as Acumatica ERP forms is a different type of interaction between Acumatica ERP and Microsoft Power BI that is described in [HelpRoot_ReportingTools\RP__Integration_Power_BI|Managing Power BI Integration] and [HelpRoot_ReportingTools\RP__how_integrations_externalApps|To Integrate an External Application] topics.
))){br}{TOC}[anchor|#_db8a0096-5311-44e2-b760-dbfa3d0984a4]((({S:Warn}This topic describes the configuration of third-party software. Please note the following:[anchor|#_33d57dc8-4062-4451-ba6a-2f39ea691613]
*The procedure below is designed for the most common usage scenarios. If you are implementing a more complicated scenario and you encounter difficulties, contact Acumatica ERP technical support.
*The vendor of the third-party software may change the user interface and settings. Therefore, the screen elements and setting names you see may differ from the ones described in the procedure. 
*The procedure will be updated each time information is made available about new common scenarios and changes in the user interface and settings.
)))
==Before You Begin==[anchor|#_9e3c3f89-643b-47d4-8112-f1ed9af71c0a]
*Be sure your company has an Azure Active Directory (AD) instance configured. For more information, see [http://azure.microsoft.com/en-us/services/active-directory/|Azure Active Directory].
*Make sure you have at least one configured Power BI dashboard with tiles that you want to embed in Acumatica ERP. For details, see [https://powerbi.microsoft.com/|Power BI].

==To Register Your Acumatica ERP Instance for Power BI==
You can register your Acumatica ERP instance for Power BI in one of the following ways:[anchor|#_d03603bb-cf8c-4876-a202-98083799720b]
*By using the Power BI App Registration Tool. This way is very simple and does not require special knowledge of Microsoft Azure. For details, see [[#_681ea30a-0755-42c8-bf9c-67c888d64b9d|To Register Your Instance with Power BI App Registration Tool].
*By using the Microsoft Azure Management Portal. This way requires knowledge of the user interface of Microsoft Azure Management Portal and provides more advanced tools for application registration. We recommend that you use this way only if you are familiar with Microsoft Azure. For details, see [[#_b23fad17-5e59-40be-b202-fa5e7519726f|To Register Your Instance with Microsoft Azure Management Portal]

After you register your Acumatica ERP instance for Power BI, you can add Power BI tiles on a dashboard, as described in [HelpRoot_GettingStarted\DB__how_Adding_PowerBI|To Add a Power BI Tile Widget].[anchor|#_681ea30a-0755-42c8-bf9c-67c888d64b9d]
==To Register Your Acumatica ERP Instance with Power BI App Registration Tool==
[anchor|#_2c44b71b-6d6c-4d24-8fc4-f1d841e4a862]
#Open [https://dev.powerbi.com/apps|Power BI App Registration Tool].
#In the '''Step 1 Login to your Power BI account''' section, click '''Sign in with your existing account''' (see the following screenshot), and type your Azure AD credentials. You will see your name in the '''Welcome''' line.[anchor|#_619fc043-bdc1-4408-bf09-f9ee10661b9f][image:UserGuide/Images/DB__how_PowerBI_Widget_Register_Step1.png|popup|Logging in to your Power BI account|400px]
#In the '''Step 2 Tell us about your app''' section, enter the following parameters, as shown in the screenshot below:
##'''App Name''': Type a name for your Acumatica ERP instance.
##'''App Type''': Select ''Server-side Web''.
##'''Redirect URL''': Enter the link to your Acumatica ERP site in the following format: ''https://&lt;full URL of your Acumatica ERP site&gt;/powerBI/auth'' (for example, ''https://app.site.net/powerBI/auth'').
##:((({S:Hint}This URL (''https://app.site.net/powerBI/auth'') is case sensitive. 
)))
##'''Home Page''': Enter the full URL of your Acumatica ERP instance (for example, ''https://app.site.net/instance&#95;name/'').[anchor|#_4bed3cf7-4d68-4988-a1f9-75f2f958a257][image:UserGuide/Images/DB__how_PowerBI_Widget_Register_Step2.png|popup|Entering app parameters|400px]
#In the '''Step 3 Choose APIs to access''' section, select all check boxes, as shown in the following screenshot.[anchor|#_0ec38de7-7608-4521-ba90-6e7f62269f7a][image:UserGuide/Images/DB__how_PowerBI_Widget_Register_Step3.png|popup|Choosing APIs to access|400px]
#In the '''Step 4 Register your app''' section, click '''Register App'''. After your Acumatica ERP instance is registered, you will see the client ID and client secret parameters in the corresponding boxes (see the screenshot below).[anchor|#_0b3e1afd-4ed2-4284-b20d-7615c45141ce][image:UserGuide/Images/DB__how_PowerBI_Widget_Register_Step4.png|popup|Registering your app|400px]
#Copy the client ID and client secret values for later retrieval.
[anchor|#_b23fad17-5e59-40be-b202-fa5e7519726f]
==To Register Your Acumatica ERP Instance with Microsoft Azure Management Portal==[anchor|#_18c0eda3-7594-47d5-94c0-bbb1f56a13fc]
#Sign in to the [https://portal.azure.com|Microsoft Azure portal].
#Optional: Follow the instructions described in Steps 2–8 in [HelpRoot_Integration\US__how_AzureAD_Registering_with_Azure|To Configure Microsoft Azure for Integration with Your Acumatica ERP Instance ]. If you have integrated your Acumatica ERP instance with Microsoft Azure Active Directory previously, you can skip this step because you already have the client ID and client secret required for configuring a Power BI tile widget.
#Specify permissions for Power BI Service as follows:
##In the '''Settings''' pane, click '''Required permissions'''.
##On the '''Required permissions''' pane toolbar, click '''Add'''.
##On the '''Add API access''' pane, click ''Select an API''.
##On the '''Select an API''' pane, select ''Power BI Service'' and click '''Select'''.
##In the '''Delegated Permissions''' section of the '''Enable Access''' pane, select the following permissions for Power BI Service:
##*''View users Groups''
##* ''View all Reports (preview)''
##* ''Read and Write all Datasets''
##* ''View all Dashboards (preview)''
#Click '''Save''' to apply changes.
]]></column>
			<column name="PlainText"><![CDATA[Administering Dashboards: To Register Your  Acumatica ERP Instance for Power BI To embed a Power BI tile on a dashboard in  Acumatica ERP, you should first register your  Acumatica ERP instance on Microsoft Azure for Power BI to obtain the client ID and client secret             parameters. When you have obtained the parameters for your  Acumatica ERP you can add Power BI tile on a dashboard. For information on adding Power BI tile             widgets, see  Power BI Tile Widgets. Integrating Microsoft Power BI reports into  Acumatica ERP to be used as  Acumatica ERP forms is a different type of interaction between  Acumatica ERP and Microsoft Power BI that is described in  Managing Power BI Integration and  To Integrate an External Application topics. This topic describes the             configuration of third-party software. Please note the following: The procedure below is designed for the most common usage scenarios. If you are                     implementing a more complicated scenario and you encounter difficulties, contact                          Acumatica ERP technical support. The vendor of the third-party software may change the user interface and                     settings. Therefore, the screen elements and setting names you see may differ                     from the ones described in the procedure.  The procedure will be updated each time information is made available about new                     common scenarios and changes in the user interface and settings. Before You Begin Be sure your company has an Azure Active Directory (AD) instance configured. For                     more information, see  Azure Active Directory Azure Active Directory. Make sure you have at least one configured Power BI dashboard with tiles that                     you want to embed in  Acumatica ERP. For details, see  Power BI Power BI. To Register Your  Acumatica ERP Instance for Power BI You can register your  Acumatica ERP instance for Power BI in one of the following ways: By using the Power BI App Registration Tool. This way is very simple and                         does not require special knowledge of Microsoft Azure. For details, see                              To Register Your  Instance with Power BI App Registration Tool To Register Your Instance with Power BI App Registration Tool. By using the Microsoft Azure Management Portal. This way requires knowledge                         of the user interface of Microsoft Azure Management Portal and provides more                         advanced tools for application registration. We recommend that you use this                         way only if you are familiar with Microsoft Azure. For details, see  To Register Your  Instance with Microsoft Azure Management Portal To Register Your Instance with Microsoft Azure Management PortalAfter you register your  Acumatica ERP instance for Power BI, you can add Power BI tiles on a dashboard, as described in                      To Add a Power BI Tile Widget. To Register Your  Acumatica ERP Instance with Power BI App Registration Tool Open  Power BI App Registration Tool Power BI App Registration Tool. In the  Step 1 Login to your Power BI account  section,                         click  Sign in with your existing account  (see the                         following screenshot), and type your Azure AD credentials. You will see your                         name in the  Welcome  line. Logging in to your Power BI account In the  Step 2 Tell us about your app  section, enter                         the following parameters, as shown in the screenshot below: App Name : Type a name for your  Acumatica ERP instance. App Type : Select  Server-side Web . Redirect URL : Enter the link to your  Acumatica ERP site in the following format:  https://<full URL of your  Acumatica ERP site>/powerBI/auth  (for example,                                      https://app.site.net/powerBI/auth ). This                                     URL ( https://app.site.net/powerBI/auth ) is case                                     sensitive.  Home Page : Enter the full URL of your  Acumatica ERP instance (for example,                                  https://app.site.net/instance_name/ ). Entering app parameters In the  Step 3 Choose APIs to access  section, select                         all check boxes, as shown in the following screenshot. Choosing APIs to access In the  Step 4 Register your app  section, click                              Register App . After your  Acumatica ERP instance is registered, you will see the client ID and client secret                         parameters in the corresponding boxes (see the screenshot below). Registering your app Copy the client ID and client secret values for later retrieval. To Register Your  Acumatica ERP Instance with Microsoft Azure Management Portal Sign in to the  Microsoft Azure portal Microsoft Azure portal. Optional: Follow the instructions described in Steps 2–8 in  To Configure Microsoft Azure for Integration with Your Acumatica ERP Instance . If you                     have integrated your  Acumatica ERP instance with Microsoft Azure Active Directory previously, you can skip this                     step because you already have the client ID and client secret required for                     configuring a Power BI tile widget. Specify permissions for Power BI Service as follows: In the  Settings  pane, click  Required                                 permissions . On the  Required permissions  pane toolbar, click                                  Add . On the  Add API access  pane, click  Select an                                 API . On the  Select an API  pane, select  Power BI                                 Service  and click  Select . In the  Delegated Permissions  section of the                                  Enable Access  pane, select the following                             permissions for Power BI Service: View users Groups View all Reports (preview) Read and Write all Datasets View all Dashboards (preview) Click  Save  to apply changes. ]]></column>
		</row>
		<row PageID="bad301b5-ad56-4399-943e-f5b4a1e351b3" Language="en-US" PageRevisionID="1" Content="&#xA;You can build Microsoft Power BI reports into Acumatica ERP so that users can have these reports displayed as Acumatica ERP forms.{br}&#xA;&#xA;In this part of the guide, you will read about configuring and managing integration with external applications.&#xA;==Related Articles==&#xA;*[HelpRoot_ReportingTools\SM__con_Integration_External_Applications|Integration with External Applications]&#xA;*[HelpRoot_ReportingTools\RP__how_integrations_externalApps|To Integrate an External Application]&#xA;*[HelpRoot_ReportingTools\RP__how_integrations_EXTtoAppResources|To Add an Integrated External Application Resource to Acumatica Site Map]" PlainText="Managing Power BI Integration You can build Microsoft Power BI reports into  Acumatica ERP     so that users can have these reports displayed as  Acumatica ERP     forms. In this part of the guide, you will read about configuring and managing integration with     external applications. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="6d09be79-024e-351f-d34c-24aa33281c98" RecordSourceID="22377" />
		<row PageID="acfa8a09-c6de-456c-9ea9-29a25fd3d932" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="44a17095-053a-2ed8-cf21-2b8516415697" RecordSourceID="22377">
			<column name="Content"><![CDATA[
If you use Microsoft Power BI to visually display reports generated in Acumatica ERP, you can embed these Microsoft Power BI reports into Acumatica ERP. With this integration, users of your Acumatica ERP instance will have at hand the information that they need for their work.{br}

In this topic, you will find information about the types of integration with Microsoft Power BI, the configuration steps for integration with Microsoft Power BI, and the refreshing of access tokens.((({S:Warn}Embedding Power BI tiles in an Acumatica ERP dashboard is a different type of interaction between Acumatica ERP and Microsoft Power BI that is described in [HelpRoot_ReportingTools\DB__how_Registering_for_PowerBI|Administering Dashboards: To Register Your Acumatica ERP Instance for Power BI] and [HelpRoot_Interface\DB__con_PowerBI|Power BI Tile Widgets] topics.
))){br}{TOC}
==Types of Integration with Microsoft Power BI==
In Acumatica ERP, the following types of integration with Microsoft Power BI are supported:[anchor|#_5ebf2283-7ad5-496a-ae7c-5f748e840b14]
*''Power BI'': This type of integration is intended for reports created in the Microsoft Power BI. These reports are kept in a user&rsquo;s personal workspace. Acumatica ERP works with these reports on behalf of this user and uses the OAuth 2.0 protocol for integration. The configuration steps are described in [[#_6072cef1-6809-4088-ade7-44ca6758f433|Configuration Steps for Power BI]. For this integration type, you need to refresh access tokens periodically, as described in [[#_78375a77-33e9-4a5d-bc3e-4a62a741de99|Access Token Refreshment].
*''Power BI Embedded Workspace (Obsolete)'': Power BI Workspace Collections service is being retired. We recommend that by June 30, 2018, you migrate to Power BI Embedded, so that you can keep using the embedded analytics capabilities you’re familiar with, and take advantage of additional Power BI Embedded features. For more information, see [https://azure.microsoft.com/email/?destination=%2Fen-us%2Fservices%2Fpower-bi-embedded%2F&p=bXNnSWQ9N2EwMTU5ODMtNDZmZC00MDAxLWJkMzItMjc3YmVjNzJiYTQyJmpvYklkPTU3MzA4Y2E5LTc3ZDQtNGMwZS1iOTg0LTA4ODU2YjVjM2UxZCZzdWJzY3JpcHRpb25JZD0mZW1haWxJZD1TZXJ2aWNlTm90aWZpY2F0aW9ucy9Qb3dlckJJV29ya3NwYWNlUmV0aXJlbWVudCZldnRJZD1zZXJ2aWNlLW5vdGlmaWNhdGlvbi1wb3dlcmJpLXdvcmtzcGFjZS1yZXRpcmVtZW50JmxpbmtOYW1lPXBvd2VyLWJpLWVtYmVkZGVkJnNvdXJjZT1hZW8=|Power BI Embedded] and [https://azure.microsoft.com/email/?destination=https%3A%2F%2Fdocs.microsoft.com%2Fen-us%2Fazure%2Fpower-bi-embedded%2Fmigrate-from-power-bi-workspace-collections&p=bXNnSWQ9N2EwMTU5ODMtNDZmZC00MDAxLWJkMzItMjc3YmVjNzJiYTQyJmpvYklkPTU3MzA4Y2E5LTc3ZDQtNGMwZS1iOTg0LTA4ODU2YjVjM2UxZCZzdWJzY3JpcHRpb25JZD0mZW1haWxJZD1TZXJ2aWNlTm90aWZpY2F0aW9ucy9Qb3dlckJJV29ya3NwYWNlUmV0aXJlbWVudCZldnRJZD1zZXJ2aWNlLW5vdGlmaWNhdGlvbi1wb3dlcmJpLXdvcmtzcGFjZS1yZXRpcmVtZW50JmxpbmtOYW1lPW1pZ3JhdGUtZnJvbS1wb3dlci1iaS13b3Jrc3BhY2UtY29sbGVjdGlvbnMmc291cmNlPWFlbw==|How to migrate to Power BI Embedded].
*''Power BI Embedded '': With this type of integration, the Microsoft Power BI Embedded tool is used for the integration of Microsoft Power BI reports. For the configuration steps, see [[#_e1423d93-eb7d-456c-96ca-596d3183ed79|Configuration Steps for Power BI Embedded].

You can use either of these types for adding Microsoft Power BI reports in Acumatica ERP.[anchor|#_6072cef1-6809-4088-ade7-44ca6758f433]
==Configuration Steps for Power BI==
Before you integrate your Acumatica ERP instance with Microsoft Power BI, make sure of the following:[anchor|#_44ff092e-184a-4247-b805-09f491d63d4a]
*Your organization should be signed up for Microsoft Power BI. If your organization uses Azure Active Directory (AD) you can use your Azure AD account to sign in to Microsoft Power BI.
*You have configured a Power BI report that you want to integrate in Acumatica ERP. For details, see [https://powerbi.microsoft.com/|Power BI].

To integrate your Acumatica ERP instance with Microsoft Power BI, you do the following:[anchor|#_8e1ee907-beaa-4536-95eb-8d5248566be4]
#You obtain a client ID and client secret for your Acumatica ERP instance. For this procedure, see [HelpRoot_ReportingTools\DB__how_Registering_for_PowerBI|Administering Dashboards: To Register Your Acumatica ERP Instance for Power BI].
#You set up integration on the [HelpRoot_FormReference\SM_30_10_00|External Applications] ([~/?ScreenId=SM301000|SM301000]) form.
#You sign in to the Microsoft Power BI website with the credentials of a user who is an owner of a report that you want to integrate in Acumatica ERP.
#You add a report from the integrated Microsoft Power BI workspace in Acumatica ERP on the [HelpRoot_FormReference\SM_30_10_10|Application Resources] ([~/?ScreenId=SM301010|SM301010]) form.
#You give user roles access rights to the integrated report on the [HelpRoot_FormReference\SM_30_10_10|Application Resources] form.

After you perform these steps, the Microsoft Power BI report you have added appears on the selected site map location and is visible to users with the defined roles.[anchor|#_e1423d93-eb7d-456c-96ca-596d3183ed79]
==Configuration Steps for Power BI Embedded==
Before you use Microsoft Power BI Embedded for integrating Microsoft Power BI reports with your Acumatica ERP instance, you should make sure of the following:[anchor|#_5a43913c-b3e0-48ae-b534-3fac78b566ab]
*Your organization should have an Azure Active Directory (AD) instance configured. For more information, see [http://azure.microsoft.com/en-us/services/active-directory/|Azure Active Directory].
*You have imported a Power BI report to Microsoft Azure. For details, see [https://docs.microsoft.com/en-us/azure/power-bi-embedded/get-started|Get started with Power BI Embedded].

To integrate Microsoft Power BI reports with your Acumatica ERP instance by using Microsoft Power BI Embedded, you do the following:[anchor|#_a02108a6-b925-4058-888b-8a8965095314]
#You create a capacity for a Power BI report that you want to integrate with Acumatica ERP on the Microsoft Azure portal. For details, see [https://docs.microsoft.com/en-us/power-bi/developer/azure-pbie-create-capacity|Create Power BI Embedded capacity in the Azure portal].
#You set up integration on the [HelpRoot_FormReference\SM_30_10_00|External Applications] ([~/?ScreenId=SM301000|SM301000]) form. For more details, see [HelpRoot_ReportingTools\RP__how_integrations_externalApps|To Integrate an External Application]
#You add a report from the integrated Power BI capacity in Acumatica ERP on the [HelpRoot_FormReference\SM_30_10_10|Application Resources] ([~/?ScreenId=SM301010|SM301010]) form. For more details, see [HelpRoot_ReportingTools\RP__how_integrations_EXTtoAppResources|To Add an Integrated External Application Resource to Acumatica Site Map]
#You assign user roles access rights to the integrated report on the [HelpRoot_FormReference\SM_30_10_10|Application Resources] form.

After you perform these steps, the Microsoft Power BI report you added appears on the specified site map location and is visible to users with the defined roles.[anchor|#_78375a77-33e9-4a5d-bc3e-4a62a741de99]
==Access Token Refreshment==
When you integrate an external application in Acumatica ERP by using the OAuth 2.0 protocol, access tokens are generated by the application. These tokens have a short lifetime for security reasons. The tokens are refreshed automatically if Acumatica ERP connects to the application before the expiration date and time. If the application is called from Acumatica ERP rarely and the access token becomes expired, you need to refresh it to continue using the integrated resources of this application. You use the [HelpRoot_FormReference\SM_50_10_00|Refresh Application Access Tokens] ([~/?ScreenId=SM501000|SM501000]) form to refresh tokens that are expired or about to expire. You can refresh tokens manually or schedule this process. We recommend that tokens be refreshed at least once a day.((({S:Warn}You need to refresh tokens only for the ''Power BI'' integration type. Authentication tokens used by the ''Power BI Embedded'' integration type do not require manual refreshment.
)))
==Related Articles==
*[HelpRoot_ReportingTools\DB__how_Registering_for_PowerBI|Administering Dashboards: To Register Your Acumatica ERP Instance for Power BI]
*[HelpRoot_FormReference\SM_30_10_10|Application Resources] ([~/?ScreenId=SM301010|SM301010])
*[HelpRoot_FormReference\SM_30_10_00|External Applications] ([~/?ScreenId=SM301000|SM301000])
*[HelpRoot_FormReference\SM_50_10_00|Refresh Application Access Tokens] ([~/?ScreenId=SM501000|SM501000])]]></column>
			<column name="PlainText"><![CDATA[Integration with External Applications If you use Microsoft Power BI to visually display reports generated in  Acumatica ERP, you can embed these Microsoft Power BI reports into  Acumatica ERP. With this integration, users of your  Acumatica ERP instance will have at hand the information that they need for their work. In this topic, you will find information about the types of integration with Microsoft         Power BI, the configuration steps for integration with Microsoft Power BI, and the         refreshing of access tokens. Embedding Power BI tiles in an  Acumatica ERP dashboard is a different type of  interaction between  Acumatica ERP and Microsoft Power BI that is described in  Administering Dashboards: To Register Your Acumatica ERP Instance for Power BI and  Power BI Tile Widgets         topics. Types of Integration with Microsoft Power BI In  Acumatica ERP, the following types of integration with Microsoft Power BI are supported: Power BI : This type of integration is intended for reports created in the           Microsoft Power BI. These reports are kept in a user's personal workspace.  Acumatica ERP works with these reports on behalf of this user and uses the OAuth 2.0 protocol for           integration. The configuration steps are described in  Configuration Steps for Power BI Configuration Steps for Power BI. For this integration type, you need to refresh access tokens           periodically, as described in  Access Token Refreshment Access Token Refreshment. Power BI Embedded Workspace (Obsolete) : Power BI Workspace Collections service is           being retired. We recommend that by June 30, 2018, you migrate to Power BI Embedded, so           that you can keep using the embedded analytics capabilities you’re familiar with, and take           advantage of additional Power BI Embedded features. For more information, see  Power BI Embedded Power BI Embedded and  How to migrate to Power BI Embedded How to migrate to Power BI Embedded. Power BI Embedded  : With this type of integration, the Microsoft Power BI           Embedded tool is used for the integration of Microsoft Power BI reports. For the           configuration steps, see  Configuration Steps for Power BI Embedded Configuration Steps for Power BI Embedded. You can use either of these types for adding Microsoft Power BI reports in  Acumatica ERP. Configuration Steps for Power BI Before you integrate your  Acumatica ERP instance with Microsoft Power BI, make sure of the following: Your organization should be signed up for Microsoft Power BI. If your organization uses Azure Active Directory (AD) you can use your Azure AD account to sign in to Microsoft Power BI. You have configured a Power BI report that you want to integrate in  Acumatica ERP. For details, see  Power BI Power BI. To integrate your  Acumatica ERP instance with Microsoft Power BI, you do the following: You obtain a client ID and client secret for your  Acumatica ERP instance. For this procedure, see  Administering Dashboards: To Register Your Acumatica ERP Instance for Power BI. You set up integration on the   ([~/?ScreenId=SM301000|SM301000]) External Applications (SM301000) form. You sign in to the Microsoft Power BI website with the credentials of a user who is an owner of a report that you want to integrate in  Acumatica ERP. You add a report from the integrated Microsoft Power BI workspace in  Acumatica ERP on the   ([~/?ScreenId=SM301010|SM301010]) Application Resources (SM301010) form. You give user roles access rights to the integrated report on the   ([~/?ScreenId=SM301010|SM301010]) Application Resources form. After you perform these steps, the Microsoft Power BI report you have added appears on the selected site map location and is visible to users with the defined roles. Configuration Steps for Power BI Embedded Before you use Microsoft Power BI Embedded for integrating Microsoft Power BI reports with         your  Acumatica ERP instance, you should make sure of the following: Your organization should have an Azure Active Directory (AD) instance configured. For           more information, see  Azure Active Directory Azure Active Directory. You have imported a Power BI report to Microsoft Azure. For details, see  Get started with Power BI Embedded Get started with Power BI Embedded. To integrate Microsoft Power BI reports with your  Acumatica ERP instance by using Microsoft Power BI Embedded, you do the following: You create a capacity for a Power BI report that you want to integrate with  Acumatica ERP on the Microsoft Azure portal. For details, see  Create Power BI Embedded capacity in the Azure             portal Create Power BI Embedded capacity in the Azure portal. You set up integration on the   ([~/?ScreenId=SM301000|SM301000]) External Applications (SM301000) form. For more           details, see  To Integrate an External ApplicationYou add a report from the integrated Power BI capacity in  Acumatica ERP on the   ([~/?ScreenId=SM301010|SM301010]) Application Resources (SM301010) form. For more details, see  To Add an Integrated External Application Resource to Acumatica Site MapYou assign user roles access rights to the integrated report on the   ([~/?ScreenId=SM301010|SM301010]) Application Resources form. After you perform these steps, the Microsoft Power BI report you added appears on the         specified site map location and is visible to users with the defined roles. Access Token Refreshment When you integrate an external application in  Acumatica ERP by using the OAuth 2.0 protocol, access tokens are generated by the application. These         tokens have a short lifetime for security reasons. The tokens are refreshed automatically if            Acumatica ERP connects to the application before the expiration date and time. If the application is         called from  Acumatica ERP rarely and the access token becomes expired, you need to refresh it to continue using the         integrated resources of this application. You use the   ([~/?ScreenId=SM501000|SM501000]) Refresh Application Access Tokens         (SM501000) form to refresh tokens that are expired or about to expire. You can refresh         tokens manually or schedule this process. We recommend that tokens be refreshed at least         once a day. You need to refresh tokens only for the  Power BI  integration type. Authentication         tokens used by the  Power BI Embedded  integration type do not require manual         refreshment.  ([~/?ScreenId=SM301010|SM301010])  ([~/?ScreenId=SM301000|SM301000])  ([~/?ScreenId=SM501000|SM501000]) ]]></column>
		</row>
		<row PageID="c367a962-0e04-4ba6-b823-b809f9c5432c" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="bd764edd-19d8-7956-f65a-f148bfb83fa2" RecordSourceID="22377">
			<column name="Content"><![CDATA[To integrate an external with Acumatica ERP, you use [HelpRoot_FormReference\SM_30_10_00|External Applications] ([~/?ScreenId=SM301000|SM301000]) form. For more information about integrations with external applications, see [HelpRoot_ReportingTools\SM__con_Integration_External_Applications|Integration with External Applications].
==To Integrate an External Application==[anchor|#_ce62f9cf-ad3e-48d5-a913-b5982eac2ee2]
# Open the [HelpRoot_FormReference\SM_30_10_00|External Applications] ([~/?ScreenId=SM301000|SM301000]) form.
#In the '''Application ID''' box, leave default value. 
#:((({S:Warn}The unique identifier of the application integration is generated automatically by the system.
)))
#In the '''Type''' box, you select the type of application to be used for the integration..
#In the '''Application Name''' box, you type a name that will be displayed in Acumatica ERP.
#In the '''Client ID''' box, you type the client ID that you obtain during registration of your Acumatica ERP instance on the external application side.
#In the '''Client Secret''' box, you type the client secret that you have obtained during the registration of your Acumatica ERP instance on the external application side.
#On the form toolbar, click '''Save'''.
#On the form toolbar, click '''Sign In'''.
#:((({S:Warn}The '''Bearer''' and '''Expires On (UTC)''' boxes are populated automatically. For more information, see [HelpRoot_FormReference\SM_30_10_00|Authentication Tokens Section].
)))
]]></column>
			<column name="PlainText"><![CDATA[To Integrate an External Application To integrate an external with  Acumatica ERP, you use   ([~/?ScreenId=SM301000|SM301000]) External Applications (SM301000) form. For more information about             integrations with external applications, see  Integration with External Applications. To Integrate an External Application  Open the   ([~/?ScreenId=SM301000|SM301000]) External Applications (SM301000) form. In the  Application ID  box, leave default value.  The                         unique identifier of the application integration is generated automatically                         by the system. In the  Type  box, you select the type of application to be                     used for the integration.. In the  Application Name  box, you type a name that will be                     displayed in  Acumatica ERP. In the  Client ID  box, you type the client ID that you                     obtain during registration of your  Acumatica ERP instance on the external application side. In the  Client Secret  box, you type the client secret that                     you have obtained during the registration of your  Acumatica ERP instance on the external application side. On the form toolbar, click  Save . On the form toolbar, click  Sign In . The  Bearer  and  Expires On                                 (UTC)  boxes are populated automatically. For more                             information, see   ([~/?ScreenId=SM301000|SM301000]) Authentication Tokens Section Authentication Tokens Section. ]]></column>
		</row>
		<row PageID="e51dc7e9-be5b-46b1-960f-fc1c3be00553" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="4029ae59-eff9-e8c8-980f-f4a53cb3da71" RecordSourceID="22377">
			<column name="Content"><![CDATA[To add an integrated an external application to be used as Acumatica ERP form, you use [HelpRoot_FormReference\SM_30_10_10|Application Resources] ([~/?ScreenId=SM301010|SM301010]) form. For more information about integrations with external applications, see [HelpRoot_ReportingTools\SM__con_Integration_External_Applications|Integration with External Applications].
==To Add Integrated Application to Acumatica Site Map==[anchor|#_c531fa7d-7bfd-439b-831b-8a5241a5dbec]
#Open the [HelpRoot_FormReference\SM_30_10_10|Application Resources] ([~/?ScreenId=SM301010|SM301010]) form.
#In the '''Application ID''' box, you select an integration with an external application that contains a resource to be added in Acumatica ERP.
#Select the '''Make Visible on the UI''' check box to make the boxes related to the site map available for editing. 
#In the '''Site Map Title''' box, you type the name of the resource page to be displayed on the site map. Other boxes are populated automatically, based on the values you specified. The '''Workspace''' and '''Category''' boxes are populated with the default values for the application resources. For details see, [HelpRoot_Interface\UIG__con_New_UI_Categories_Workspaces|Categories and Workspaces for Entities of Specific Forms].
#Optional: In the table below, you specify the access rights level of each user role for the selected resource. You can select one of the following access rights levels:
#*''Not Set'': Allows all roles to have access to the suite or the module until the ''Revoked'' or ''Granted'' access level to the suite or module is set for at least one role. After that, a role with this level is denied access to the suite or module.
#*''Revoked'': Denies the role access to the resource page; for users with the role, the resource page does not appear on the screen.
#*''Granted'': Allows the role access to the resource page.
#Click '''Save''' on the form toolbar. 
#:The system assigns the resource an automatically generated ID in a format similar to that of screen IDs of other forms, with ''PB'' as the two-letter module code: ''PB000000''. After ID is assigned the system adds the resource to the site map. If a workspace and category are specified, the resource can be accessed from the workspace.
#On the form toolbar, click '''View Resource '''to display the Acumatica ERP page with the external application resource selected on the form. 
#:((({S:Warn}The screen ID, title, workspace, and category of an inquiry can be modified on the [HelpRoot_FormReference\SM_20_05_20|Site Map] ([~/?ScreenId=SM200520|SM200520]) form.
)))
]]></column>
			<column name="PlainText"><![CDATA[To Add an Integrated External Application Resource to  Acumatica Site Map To add an integrated an external application to be used as  Acumatica ERP form, you use   ([~/?ScreenId=SM301010|SM301010]) Application Resources (SM301010) form. For more information             about integrations with external applications, see  Integration with External Applications. To Add Integrated Application to  Acumatica Site Map Open the   ([~/?ScreenId=SM301010|SM301010]) Application Resources (SM301010) form. In the  Application ID  box, you select an integration with                     an external application that contains a resource to be added in  Acumatica ERP. Select the  Make Visible on the UI  check box to make the                     boxes related to the site map available for editing.  In the  Site Map Title  box, you type the name of the                     resource page to be displayed on the site map. Other boxes are populated                     automatically, based on the values you specified. The                          Workspace  and  Category  boxes                     are populated with the default values for the application resources. For details                     see,  Categories and Workspaces for Entities of Specific Forms. Optional: In the table below, you specify the access rights level of each user                     role for the selected resource. You can select one of the following access                     rights levels: Not Set : Allows all roles to have access to the suite or the                             module until the  Revoked  or  Granted  access level to the                             suite or module is set for at least one role. After that, a role with                             this level is denied access to the suite or module. Revoked : Denies the role access to the resource page; for users                             with the role, the resource page does not appear on the screen. Granted : Allows the role access to the resource page. Click  Save  on the form toolbar.  The system assigns the                         resource an automatically generated ID in a format similar to that of screen                         IDs of other forms, with  PB  as the two-letter module code:                              PB000000 . After ID is assigned the system adds the resource to                         the site map. If a workspace and category are specified, the resource can be                         accessed from the workspace. On the form toolbar, click  View Resource  to display the                          Acumatica ERP page with the external application resource selected on the form.  The screen ID, title, workspace, and category of an inquiry can be                             modified on the   ([~/?ScreenId=SM200520|SM200520]) Site Map (SM200520) form. ]]></column>
		</row>
		<row PageID="6998580f-25d2-42ba-bde5-668c2bf1f551" Language="en-US" PageRevisionID="1" PlainText="Managing Analytical Reports Analytical reports are used to display the consolidated and summarized general ledger and &#x9;&#x9;&#x9;&#x9;project data in the way defined by the report designer. Analytical reports are used &#x9;&#x9;&#x9;&#x9;to provide the summarized and aggregated values in a variety of views: The data in &#x9;&#x9;&#x9;&#x9;the analytical report can be displayed in monthly, yearly, and quarterly views, and &#x9;&#x9;&#x9;&#x9;the data can provide information from the point of view of departments, selected &#x9;&#x9;&#x9;&#x9;account classes, and other dimensions.  In  Acumatica ERP, you can design analytical reports and run the reports that were designed and &#x9;&#x9;&#x9;&#x9;published on the site. This part of the guide contains information on how to design &#x9;&#x9;&#x9;&#x9;an analytical report and define the analytical report structure and layout by using &#x9;&#x9;&#x9;&#x9;the Analytical Report Manager.  In This Part Analytical Report ManagerReport Structure DesignRow SetsColumn SetsUnit SetsData SourceFormulasBest PracticesExample: Designing an Analytical ReportARM Reference" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7b010d19-f22a-072b-6507-ea2bb2581151" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Analytical reports are used to display the consolidated and summarized general ledger and project data in the way defined by the report designer. Analytical reports are used to provide the summarized and aggregated values in a variety of views: The data in the analytical report can be displayed in monthly, yearly, and quarterly views, and the data can provide information from the point of view of departments, selected account classes, and other dimensions. {br}

In Acumatica ERP, you can design analytical reports and run the reports that were designed and published on the site. This part of the guide contains information on how to design an analytical report and define the analytical report structure and layout by using the Analytical Report Manager. {br}{TOC}
==In This Part==[anchor|#ul_bbc_y1y_qr]
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_ReportingTools\CS__ARM_Designing_the_Report_Layout|Report Structure Design]
*[HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets]
*[HelpRoot_ReportingTools\CS__ARM_Column_Set|Column Sets]
*[HelpRoot_ReportingTools\CS__ARM_Unit_Set|Unit Sets]
*[HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]
*[HelpRoot_ReportingTools\RP__ARM_Best_Practices|Best Practices]
*[HelpRoot_ReportingTools\RP__CON_tools_ARM_How_to_Design_an_AR|Example: Designing an Analytical Report]
*[HelpRoot_ReportingTools\RP__Tools_ARM_Form_Reference|ARM Reference]
]]></column>
		</row>
		<row PageID="3b87b2cb-7620-441b-bbf9-ae19ed966d5f" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="633e00c2-b9e8-9680-6d6c-16fa4baa697b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The Analytical Report Manager (ARM) is a web-based report access and management tool for creating and modifying analytical reports by retrieving ledger and project data.{br}

You need no programming skills to use the ARM for modifying existing financial reports and developing new ones, such as Balance Sheet and Income Statement. You also need no knowledge about the structure of the Acumatica ERP database. {br}

Report designers can design and run custom analytical reports by using advanced data selection criteria, data calculation rules, and customizable report layout design features. By using the Analytical Report Manager, you can perform the following tasks: [anchor|#_74c6fde4-359e-4667-bb70-76c8788b61a0]
*Create the layout and structure of an analytical report, based on your business requirements.
*Define data selection criteria for the report with a high level of granularity. The entities specified as the data source could include, for example, a range of accounts, subaccounts, and financial periods.
*Use advanced formulas to calculate values based on the information extracted from the data source.
*Create consolidated reports based on the data from multiple data sources or analytical reports. 
*Localize the data used by a report if multilingual support of user input is configured.
{br}{TOC}
==ARM and Report Designer==
You can use the ARM toolkit rather than Acumatica Report                         Designer to create the following types of reports: [anchor|#_e8d44907-e3b3-4dfc-84c9-a894ba12e1a9]
*Financial reports that display data that is posted to the General Ledger accounts and accumulated in the General Ledger submodule
*Project accounting reports that display data accumulated in the Projects submodule

==Report Creation==
To create a report in ARM, do the following:[anchor|#_96b77b09-dbe6-4aad-ba07-59b0bc420069]
#Define your goals. You need to decide what kind of report to create and what data should be displayed in it.
#Design the report structure. For more information, see [HelpRoot_ReportingTools\CS__ARM_Designing_the_Report_Layout|Report Structure Design]
#Publish the report. For more information, see [HelpRoot_ReportingTools\CS__ARM_Publishing_the_Analytical_Report|To Publish the Analytical Report]
#Give access rights to the users that will use the report. For more information, see [[#_970e32a6-6b42-4f7d-8918-8754a6ec3432|ARM Access Rights]

==Report Structure Elements==
The structure of the analytical report determines the content to be presented and its appearance. To configure the report structure, you specify the units of the report and identify the rows and columns to be displayed. You define the report headers, and the headers for the individual columns and rows or for the specific groups of columns and rows. The formatting options can be defined for the entire report and for any particular row or column. By using formatting options, you can set up the report page layout, select font attributes, and visually emphasize rows or columns in the report. {br}

The report in the following screenshot consists of a row set, a column set, and a unit set.[anchor|#_04af700e-9814-48f4-8e6c-55fc202cda7a][anchor|#_0f19d4a8-32d4-4350-b08b-35bab19e2220][image:UserGuide/Images/RP_tools_ARM.png|popup|Profit & Loss report|450px]
To design a report structure, you need to do the following:[anchor|#_a78f8af9-4cae-4795-b08a-44510f65bb42]
*Define the row set and column set
*Optional: Specify the unit set for the report, if you want to split the report into sections
*Optional: Specify the report formatting settings

For details about the particular structure elements, see [HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets], [HelpRoot_ReportingTools\CS__ARM_Column_Set|Column Sets], and [HelpRoot_ReportingTools\CS__ARM_Unit_Set|Unit Sets].{br}

For details about the design process, see [HelpRoot_ReportingTools\CS__ARM_Designing_the_Report_Layout|Report Structure Design]. {br}

For details about the formatting settings on every particular level, see [HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets] and [HelpRoot_ReportingTools\CS__ARM_Column_Set|Column Sets]{br}

For details about the formatting settings, see [HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]. 
==Data Source Options==
Data source options specify how the data will be selected for the report. Depending on the report structure, the data source can be defined for the whole report, and different data selection criteria can be used for the rows and columns in the data source editor. For detailed information about data source elements, see [HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source] and [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor]
==Data Transformation and Calculation Rules==
To calculate the values in the report, you use formulas. Formulas describe data transformations and other operations performed with the data selected from the data source. The formulas can use the data selected from the data source as parameters. Depending on the report structure, formulas can be defined at the unit, row, or column level. {br}

In [HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas], you can find detailed descriptions of the formulas.
==Reports Based on the Data from Multiple Data Sources or Analytical Reports==You can use a unit set to organize the report structure when the groups of rows and columns included in the report use data from different data sources. For example, a unit set can include one unit or multiple units that specify how the data is selected, calculated, and displayed in reports. In the report, you can view data for each individual unit, which could be a branch or a cost center, as well as data consolidated for all the units. To define the data that should be included in the unit set and set up the formatting for the rows and columns, you can specify the values of the units in the unit set. 
For details about the unit sets, see [HelpRoot_ReportingTools\CS__ARM_Unit_Set|Unit Sets].[anchor|#_970e32a6-6b42-4f7d-8918-8754a6ec3432]
==ARM Access Rights==
When a report is published, the users who will generate the report must be granted access rights to this report. {br}

In Acumatica ERP, you can customize the access rights of users to work with analytical reports. You can control their access to forms and operations based on each user&rsquo;s job responsibilities.{br}

You can set up access to analytical reports by using the [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen] ([~/?ScreenId=SM201020|SM201020]) form; on this form, you select the '''Site Map Location''' of the published report form and then select the relevant level of access for a user role in '''Access Rights''' column. For more information on access rights, see [HelpRoot_Administration\User_Roles_GeneralInfo|User Roles: General Information].
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Column_Set|Column Sets]
*[HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets]
*[HelpRoot_ReportingTools\CS__ARM_Unit_Set|Unit Sets]
*[HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]
*[HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]
*[HelpRoot_ReportingTools\CS__ARM_Designing_the_Report_Layout|Report Structure Design]]]></column>
			<column name="PlainText"><![CDATA[Analytical Report Manager The Analytical Report Manager (ARM) is a web-based report access and management tool 				for creating and modifying analytical reports by retrieving ledger and project 				data. You need no programming skills to use the ARM for modifying existing financial 				reports and developing new ones, such as Balance Sheet and Income Statement. You 				also need no knowledge about the structure of the  Acumatica ERP database.  Report designers can design and run custom analytical reports by using advanced data 				selection criteria, data calculation rules, and customizable report layout design 				features. By using the Analytical Report Manager, you can perform the following 				tasks:  Create the layout and structure of an analytical report, based on your business 					requirements. Define data selection criteria for the report with a high level of granularity. 					The entities specified as the data source could include, for example, a range of 					accounts, subaccounts, and financial periods. Use advanced formulas to calculate values based on the information extracted 					from the data source. Create consolidated reports based on the data from multiple data sources or 					analytical reports.  Localize the data used by a report if multilingual support of user input is 					configured. ARM and Report Designer You can use the ARM toolkit rather than  Acumatica Report                         Designer to create the following types of reports:  Financial reports that display data that is posted to the General Ledger 					accounts and accumulated in the General Ledger submodule Project accounting reports that display data accumulated in the Projects 					submodule Report Creation To create a report in ARM, do the following: Define your goals. You need to decide what kind of report to create and what 						data should be displayed in it. Design the report structure. For more information, see  Report Structure DesignPublish the report. For more information, see  To Publish the Analytical ReportGive access rights to the users that will use the report. For more 						information, see  ARM Access Rights ARM Access RightsReport Structure Elements The structure of the analytical report determines the content to be presented and its 				appearance. To configure the report structure, you specify the units of the report 				and identify the rows and columns to be displayed. You define the report headers, 				and the headers for the individual columns and rows or for the specific groups of 				columns and rows. The formatting options can be defined for the entire report and 				for any particular row or column. By using formatting options, you can set up the 				report page layout, select font attributes, and visually emphasize rows or columns 				in the report.  The report in the following screenshot consists of a row set, a column set, and a 				unit set. Profit & Loss report To design a report structure, you need to do the following: Define the row set and column set Optional: Specify the unit set for the report, if you want to split the report 					into sections Optional: Specify the report formatting settings For details about the particular structure elements, see  Row Sets,  Column Sets, and  Unit Sets. For details about the design process, see  Report Structure Design.  For details about the formatting settings on every particular level, see  Row Sets and  Column SetsFor details about the formatting settings, see  Printing Style.  Data Source Options Data source options specify how the data will be selected for the report. Depending 				on the report structure, the data source can be defined for the whole report, and 				different data selection criteria can be used for the rows and columns in the data 				source editor. For detailed information about data source elements, see  Data Source and  Data Source EditorData Transformation and Calculation Rules To calculate the values in the report, you use formulas. Formulas describe data 				transformations and other operations performed with the data selected from the data 				source. The formulas can use the data selected from the data source as parameters. 				Depending on the report structure, formulas can be defined at the unit, row, or 				column level.  In  Formulas, you can find detailed 				descriptions of the formulas. Reports Based on the Data from Multiple Data Sources or Analytical 				Reports You can use a unit set to organize the report structure when the groups of rows and 			columns included in the report use data from different data sources. For example, a unit 			set can include one unit or multiple units that specify how the data is selected, 			calculated, and displayed in reports. In the report, you can view data for each 			individual unit, which could be a branch or a cost center, as well as data consolidated 			for all the units. To define the data that should be included in the unit set and set up 			the formatting for the rows and columns, you can specify the values of the units in the 			unit set.  For details about the unit sets, see  Unit Sets. ARM Access Rights When a report is published, the users who will generate the report must be granted 				access rights to this report.  In  Acumatica ERP, you can customize the access rights of users to work with analytical reports. 				You can control their access to forms and operations based on each user's job 				responsibilities. You can set up access to analytical reports by using the   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen (SM201020) form; on this form, you select the 					 Site Map Location  of the published report form and then 				select the relevant level of access for a user role in  Access 					Rights  column. For more information on access rights, see  User Roles: General Information. ]]></column>
		</row>
		<row PageID="90b3d3d4-2add-41c0-84bc-33ced2cb1a3e" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="2b433a1d-b596-eb40-3c7e-1ef4bb5dbbc2" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The report structure determines the report outlook, and identifies the rows and columns to be included in the report. To design an analytical report, you define what sections will be included in the report, how the data will be grouped in the report, and what rows and columns will be included in the report; you also specify the order in which the rows and columns will be displayed in the report. You also define the headers for the report columns and for the report itself, and specify the captions for the rows. All the parameters required to define the analytical report structure can be specified by using the Analytical Report Manager forms. {br}{TOC}
==Selecting the Rows and Columns for the Report==
Every report has its set of rows and columns, which can be specific for this report or can be used in other reports. Every row included in the row set and every column included in the column set has attributes specifying what data will be displayed in the report. {br}

The row set and column set can be used in a specific report or in a variety of reports that have common data selection criteria and a similar structure. {br}

To define the rows and columns to be included in the report, you should perform the following steps: [anchor|#_f2d2fc83-3f3d-45dc-af0a-9993232c25c8]
#You open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form to view the predefined row sets that you can use for your report. On this form, you can modify a row set or create a new one. 
#:For a detailed description of row sets, see [HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets]. 
#You open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form to view the predefined column sets that you can use for your report. On this form, you can modify a column set or create a new one. 
#:For a detailed description of the column sets, see [HelpRoot_ReportingTools\CS__ARM_Column_Set|Column Sets]. 
#You open the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form, and in the '''Row Set''' and '''Column Set''' boxes, you select the set that you want to use in your report.
((({S:Hint} The row and column sets are defined for the report as a whole, and if the report includes multiple sections, each consisting of various rows and columns, the row set and column set should include all rows and columns for all the report sections.
)))
==Defining the Report Sections==
Every report can include one section or multiple sections made up of rows and columns. The grouping rules for rows and columns can be defined separately for each report section. {br}

To make a report with more than one section, you need to specify the report with a unit set. You can define the structure of the sections in the report by creating a unit hierarchy on the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form.{br}

To define what units will be included in the report, you should perform the following steps: [anchor|#_b5426b57-badd-46cd-9180-0909ea1ff1f1]
#You open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] form to view the predefined unit sets that you can use for your report. On this form, you can modify a unit set or create a new one.
#You open the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form, and in the '''Unit Set''' box, select the unit set that you want to use in your report. 
#:For a detailed description of unit sets, see [HelpRoot_ReportingTools\CS__ARM_Unit_Set|Unit Sets]. 

For each section in the report, you can specify the following: [anchor|#_f2082189-861e-4d64-8918-d2abec7db50f]
*The rows and columns to be included in this section.
*The data selection criteria used to include the data in this section of the report.

==Defining the Rows and Columns to Be Included in the Report Section==
The rows and columns to be displayed in the analytical report sections can be selected separately for each report section. {br}

To specify the rows and columns to be included in a report section, you perform the following steps: [anchor|#_5a93ff16-2600-4166-bc22-8b9f15a060bf]
#You open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form, and specify the '''Printing Group''' column value for the unit that is related to this report section. 
#:
#You open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form, and specify the same value in the '''Unit Group''' column for all the rows to be included in this report section. 
#:
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form and specify the same value in the '''Unit Group''' column for all the columns to be included in this report section. 

==Defining the Data Selection Criteria for the Report Sections==
Depending on the report structure and the need to use the same row sets and column sets in a variety of reports, you can define the section-specific data filtering criteria for the rows and columns included in a report section, or define them separately for each unit. {br}

To decide where to define the data filtering criteria, you should use the following guidelines: [anchor|#_18420aaf-d66f-4815-bed3-517a060854fa]
*When the row set and column set are used in only one report, or the other reports&rsquo; row set and column set have common data selection criteria, the data selection criteria for each report section can be defined at the row and column levels.
*When the row set and column set will be used in another report, the data selection criteria for each report section should be defined at the unit level.

To define the data selection criteria for the report section at the row and column level, you perform the following steps: [anchor|#_5e312bc5-35ea-4a39-84dc-7d9f09646fd1]
#You specify the data source parameters for each row included in the report section.
#You specify the data source parameters for each column included in the report section.

To define the data selection criteria for the report section at the unit level, you specify the data source parameters for the unit related to the specific report section. {br}

For more information about the data source parameters, see [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor] and [HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]
==Grouping the Report Sections=={br}

Depending on the data sampling rules, the sections in the report can be arranged in a flat or hierarchical structure. {br}

The flat structure can be used when the report consists of multiple sets of data assembled in different numbers of rows and columns.A hierarchical report structure is used when a report section includes the data from the other sections of the report (for example, the consolidated sales volumes followed by separation of the sales volumes by the time periods). {br}

To define how the sections will be grouped and displayed in the report, you should define the unit structure in the unit set selected for the report. For a flat report structure, the sections will be included in the report in the same order as the corresponding units in the unit set selected for the report. For a hierarchical structure, the sections corresponding to the nodes in the units&rsquo;s hierarchical structure will be displayed before the sections corresponding to the child nodes or leaves in the units&rsquo;s hierarchical structure. {br}

When the sections in the report are organized in a hierarchical structure, you usually apply additional data filtering rules for the node units to include the particular data from the other report sections in the section corresponding to the node unit, use the formulas in the node units if the data in one report section is calculated by using the data from the other report sections, or apply both formulas and data filtering rules. {br}

To group the section in the report, you perform the following steps: 
#You open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form and select the unit set that you want to use in your report.
#In the left area of the form, you set up the units in a hierarchical or flat structure. 
#In the table area of the form, for the node units in the unit set, you define the '''Data Source''' column to apply the additional data filtering criteria for data selection for the node unit, and define the formulas in the '''Values''' column to calculate the values based on the data from the other units, when necessary. 
#:For a detailed description of specifying the unit attributes, see [HelpRoot_ReportingTools\CS__ARM_Defining_the_Units_to_be_Included_in_the_Unit_Set|To Define the Units to Be Included in the Unit Set]. 

==Specifying the Report Headers and Captions==
To provide the description of the data included in the report, you should define the titles for the report and its sections, add the headers for the report columns or column groups, and specify the captions for the rows or a group of rows. For more information, see [HelpRoot_ReportingTools\CS__ARM_Setting_Up_the_Report_Headline|To Add a Report Title] and [HelpRoot_ReportingTools\CS__ARM_Setting_Up_the_Headline_for_a_Report_Section|To Add a Title for a Report Section].]]></column>
			<column name="PlainText"><![CDATA[Report Structure Design The report structure determines the report outlook, and identifies the rows and 				columns to be included in the report. To design an analytical report, you define 				what sections will be included in the report, how the data will be grouped in the 				report, and what rows and columns will be included in the report; you also specify 				the order in which the rows and columns will be displayed in the report. You also 				define the headers for the report columns and for the report itself, and specify the 				captions for the rows. All the parameters required to define the analytical report 				structure can be specified by using the Analytical Report Manager forms.  Selecting the Rows and Columns for the Report Every report has its set of rows and columns, which can be specific for this report 				or can be used in other reports. Every row included in the row set and every column 				included in the column set has attributes specifying what data will be displayed in 				the report.  The row set and column set can be used in a specific report or in a variety of 				reports that have common data selection criteria and a similar structure.  To define the rows and columns to be included in the report, you should perform the 				following steps:  You open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form to 					view the predefined row sets that you can use for your report. On this form, you 					can modify a row set or create a new one.  For a detailed description of row 						sets, see  Row Sets.  You open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form to 					view the predefined column sets that you can use for your report. On this form, 					you can modify a column set or create a new one.  For a detailed description 						of the column sets, see  Column Sets.  You open the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form, and 					in the  Row Set  and  Column Set  					boxes, you select the set that you want to use in your report.  The row and column sets are defined for the report as a whole, and if 				the report includes multiple sections, each consisting of various rows and columns, 				the row set and column set should include all rows and columns for all the report 				sections. Defining the Report Sections Every report can include one section or multiple sections made up of rows and 				columns. The grouping rules for rows and columns can be defined separately for each 				report section.  To make a report with more than one section, you need to specify the report with a 				unit set. You can define the structure of the sections in the report by creating a 				unit hierarchy on the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form. To define what units will be included in the report, you should perform the following 				steps:  You open the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets form to view the predefined unit 					sets that you can use for your report. On this form, you can modify a unit set 					or create a new one. You open the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form, and 					in the  Unit Set  box, select the unit set that you want to 					use in your report.  For a detailed description of unit sets, see  Unit Sets.  For each section in the report, you can specify the following:  The rows and columns to be included in this section. The data selection criteria used to include the data in this section of the 					report. Defining the Rows and Columns to Be Included in the Report Section The rows and columns to be displayed in the analytical report sections can be 				selected separately for each report section.  To specify the rows and columns to be included in a report section, you perform the 				following steps:  You open the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form, and 					specify the  Printing Group  column value for the unit that 					is related to this report section.  You open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form, and 					specify the same value in the  Unit Group  column for all 					the rows to be included in this report section.  Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form and 					specify the same value in the  Unit Group  column for all 					the columns to be included in this report section.  Defining the Data Selection Criteria for the Report Sections Depending on the report structure and the need to use the same row sets and column 				sets in a variety of reports, you can define the section-specific data filtering 				criteria for the rows and columns included in a report section, or define them 				separately for each unit.  To decide where to define the data filtering criteria, you should use the following 				guidelines:  When the row set and column set are used in only one report, or the other 					reports' row set and column set have common data selection criteria, the data 					selection criteria for each report section can be defined at the row and column 					levels. When the row set and column set will be used in another report, the data 					selection criteria for each report section should be defined at the unit 					level. To define the data selection criteria for the report section at the row and column 				level, you perform the following steps:  You specify the data source parameters for each row included in the report 					section. You specify the data source parameters for each column included in the report 					section. To define the data selection criteria for the report section at the unit level, you 				specify the data source parameters for the unit related to the specific report 				section.  For more information about the data source parameters, see  Data Source Editor and  Data SourceGrouping the Report Sections Depending on the data sampling rules, the sections in the report can be arranged in a 				flat or hierarchical structure.  The flat structure can be used when the report consists of multiple sets of data 				assembled in different numbers of rows and columns.A hierarchical report structure 				is used when a report section includes the data from the other sections of the 				report (for example, the consolidated sales volumes followed by separation of the 				sales volumes by the time periods).   To define how the sections will be grouped and displayed in the report, you should 				define the unit structure in the unit set selected for the report. For a flat report 				structure, the sections will be included in the report in the same order as the 				corresponding units in the unit set selected for the report. For a hierarchical 				structure, the sections corresponding to the nodes in the units's hierarchical 				structure will be displayed before the sections corresponding to the child nodes or 				leaves in the units's hierarchical structure.  When the sections in the report are organized in a hierarchical structure, you 				usually apply additional data filtering rules for the node units to include the 				particular data from the other report sections in the section corresponding to the 				node unit, use the formulas in the node units if the data in one report section is 				calculated by using the data from the other report sections, or apply both formulas 				and data filtering rules.  To group the section in the report, you perform the following steps:  You open the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form 						and select the unit set that you want to use in your report. In the left area of the form, you set up the units in a hierarchical or flat 						structure.  In the table area of the form, for the node units in the unit set, you 						define the  Data Source  column to apply the additional 						data filtering criteria for data selection for the node unit, and define the 						formulas in the  Values  column to calculate the values 						based on the data from the other units, when necessary.  For a detailed 							description of specifying the unit attributes, see  To Define the Units to Be Included in the Unit Set.  Specifying the Report Headers and Captions To provide the description of the data included in the report, you should define the 				titles for the report and its sections, add the headers for the report columns or 				column groups, and specify the captions for the rows or a group of rows. For more 				information, see  To Add a Report Title and 					 To Add a Title for a Report Section. ]]></column>
		</row>
		<row PageID="361737b1-9659-4a36-9494-53439eb00aa5" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="092bb57b-25e4-b8ec-6118-9f226ba04ea2" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A row set is a set of rows to be used in a report or in a group of reports that all use the same rows. You define row sets and their properties on the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form. Although a row set can be used in multiple reports, each report can be associated with only one row set.{br}

You can specify what rows will be displayed in the analytical report by creating a new row set, adding rows to it, and specifying this row set for the report on the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form. {br}{TOC}
==Row Set Properties==
Each row in a row set has its properties displayed in the lines of the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form. The properties of each row specify how the data of the row is selected, calculated, formatted, and displayed in the rows of the printed analytical report. The row data source, the data transformation and calculation rules are defined to display the calculated values in the row. 
==Row Code and Description==
The row code ('''Code''' column) is a unique value the system specifies when you add a new row to the row set. This code is used to identify the row within the row set, and the references to the rows in the formulas also include the row codes. The code assigned to the row can be changed later, but we do not recommend that you change the existing row codes, because they may be used in the formula references to this row. The rows in the row sets are sorted by row code in ascending order, and this is the order in which they appear in the generated report.{br}

The row description ('''Description''' column) is a descriptive definition of the row contents. The data from this column is not printed in the analytical report. To include a row description in the report, you should create a caption for this column. 
==Type==
By defining the '''Type''' attribute in a row set, you specify what data will be displayed in a particular report row, and how the data in the row will be processed. For more information, see [HelpRoot_FormReference\CS_20_60_10|Row Sets].
==Value==
By filling in the '''Value''' column for a row, you can define a particular value to be displayed in the report line. The values in the rows can be predefined parameters or computed values that the system calculates by using formulas. Values are frequently used to insert sums and totals into the report lines. For more information about formulas, see [HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]. {br}

The formulas used to calculate the data in the report lines usually include references to other rows or particular cells in the report. The expressions used to insert the data in the report rows can also use parameter queries to select the necessary data from the data source. ((({S:Warn}When you fill in the '''Value''' column to display a total values in the row, you need to confirm that the appropriate row '''Type''' is selected for this row to exclude it from the data that can be selected as a source for summarized value calculation.
)))
==Format==
In the '''Format''' column, you specify the format functions for the row cells. For the rules of row cell formatting, see [HelpRoot_ReportingTools\CS__ARM_Cells_Formatting|Cell Formatting].
==Data Source==
In the '''Data Source''' column, you define the filtering criteria for the data to be displayed in a specific row of your report. To set up filtering criteria, you should specify the appropriate parameters in the [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor] dialog box, which the system opens when you click the magnifier icon in '''Data Source''' column for any row. {br}

You can specify filtering criteria on different levels (row, column, unit, or entire report), but the filtering rules defined for the unit have the highest priority. The rules defined on the row, column, and report levels have the next highest priorities (in that order). For example, if you want to define filtering criteria for a column and these criteria differ from the criteria that has already been specified for the rows, you need to clear the parameters or specify the '''Amount Type'''as ''Not Set'' for the '''Data Source''' of the row that interacts with the corresponding column so that the data filtering criteria specified for the column will be applied. For more information about the data filtering criteria, see [HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Filtering Criteria]. {br}

By specifying the data filtering parameters on the row level, you define the data structure in the report. For example, if a group of lines in the report must display the calculated values for a specific period, you should specify the start date and end date of the period for each row included in this group of report lines. If some lines in the report must display the data related to a specific account, and the columns must display the values calculated for certain periods, you should specify the account on the row level, and specify the start date and the end date of each period on the column level. 
==Style==
In the '''Style''' column, you can click the magnifier icon to bring up a dialog box in which you can define the printing style—such as the font, background color, or text alignment—for the data in the specific report row. You can use this column when some report row must be visually emphasized and have formatting that differs from that of the other rows in the report. For example, you can set special formatting properties for the rows that include the total values for some periods. {br}

For more information about the printing style, see [HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]. 
==Printing Control==
In the '''Printing Control''' column, you can specify how the particular row will be printed in the report. For more information, see [HelpRoot_FormReference\CS_20_60_10|Row Sets]. 
==Page Formatting and Row Printing Control properties==
Multiple formatting and printing control properties ('''Page Break''', '''Height''', '''Indent''', , '''Line Style''', '''Suppress Empty''', '''Hide Zero''', '''Linked Row''', and '''Base Row''') are used to define the page formatting and to control printing. These properties include options that allow you to set the row printing options and block the printing of empty rows. For more information, see the description for the corresponding columns in [HelpRoot_FormReference\CS_20_60_10|Table Columns]. 
==Column Group==
In the '''Column Group''' column, you specify the group of columns where the values from the current row will be printed. Every column group selected for the current row can include one column or multiple columns. When a column group is specified for the current row, the same value should be specified as the '''Printing Group''' attribute for the columns that will be included in this analytical report where the values from the current row will be inserted. {br}

For example, if the values from the row with the ''R01'' code should be displayed in columns ''A'' and ''B'', the '''Column Group''' column of the row should have the same value as the '''Printing Group''' attribute defined for columns ''A'' and ''B''. 
==Unit Group==
You use the '''Unit Group''' column to include the current row in a unit group. Unit groups are used to generate summarized or aggregated reports and to define the groups of rows to be displayed in some specific reports. Unit groups include the column sets and row sets in hierarchically organized units that can be used to summarize the values in the report formed from the various column sets and row sets.
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000])
*[HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]
*[HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]
*[HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010])]]></column>
			<column name="PlainText"><![CDATA[Row Sets A row set is a set of rows to be used in a report or in a group 				of reports that all use the same rows. You define row sets and their properties on 				the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form. Although a row 				set can be used in multiple reports, each report can be associated with only one row 				set. You can specify what rows will be displayed in the analytical report by creating a 				new row set, adding rows to it, and specifying this row set for the report on the 					  ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form.  Row Set Properties Each row in a row set has its properties displayed in the lines of the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form. The properties of each row specify 				how the data of the row is selected, calculated, formatted, and displayed in the 				rows of the printed analytical report. The row data source, the data transformation 				and calculation rules are defined to display the calculated values in the row.  Row Code and Description The row code ( Code  column) is a unique value the system specifies when 				you add a new row to the row set. This code is used to identify the row within the 				row set, and the references to the rows in the formulas also include the row codes. 				The code assigned to the row can be changed later, but we do not recommend that you 				change the existing row codes, because they may be used in the formula references to 				this row. The rows in the row sets are sorted by row code in ascending order, and 				this is the order in which they appear in the generated report. The row description ( Description  column) is a descriptive definition of 				the row contents. The data from this column is not printed in the analytical report. 				To include a row description in the report, you should create a caption for this 				column.  Type By defining the  Type  attribute in a row set, you specify what data will 				be displayed in a particular report row, and how the data in the row will be 				processed. For more information, see   ([~/?ScreenId=CS206010|CS206010]) Row Sets. Value By filling in the  Value  column for a row, you can define a particular 				value to be displayed in the report line. The values in the rows can be predefined 				parameters or computed values that the system calculates by using formulas. Values 				are frequently used to insert sums and totals into the report lines. For more 				information about formulas, see  Formulas.  The formulas used to calculate the data in the report lines usually include references to 				other rows or particular cells in the report. The expressions used to insert the 				data in the report rows can also use parameter queries to select the necessary data 				from the data source.  When you fill in the  Value  column to display a total values in the 				row, you need to confirm that the appropriate row  Type  is 				selected for this row to exclude it from the data that can be selected as a source 				for summarized value calculation. Format In the  Format  column, you specify the format functions for the 				row cells. For the rules of row cell formatting, see  Cell Formatting. Data Source In the  Data Source  column, you define the filtering criteria for the 				data to be displayed in a specific row of your report. To set up filtering criteria, 				you should specify the appropriate parameters in the  Data Source Editor dialog box, which the system opens when 				you click the magnifier icon in  Data Source  column for any 				row.  You can specify filtering criteria on different levels (row, column, unit, or entire report), 				but the filtering rules defined for the unit have the highest priority. The rules 				defined on the row, column, and report levels have the next highest priorities (in 				that order). For example, if you want to define filtering criteria for a column and 				these criteria differ from the criteria that has already been specified for the 				rows, you need to clear the parameters or specify the  Amount 					Type as  Not Set  for the  Data Source  of 				the row that interacts with the corresponding column so that the data filtering 				criteria specified for the column will be applied. For more information about the 				data filtering criteria, see  Data Filtering Criteria Data Filtering Criteria.  By specifying the data filtering parameters on the row level, you define the data structure in 				the report. For example, if a group of lines in the report must display the 				calculated values for a specific period, you should specify the start date and end 				date of the period for each row included in this group of report lines. If some 				lines in the report must display the data related to a specific account, and the 				columns must display the values calculated for certain periods, you should specify 				the account on the row level, and specify the start date and the end date of each 				period on the column level.  Style In the  Style  column, you can click the magnifier icon to bring up a 				dialog box in which you can define the printing style—such as the font, 				background color, or text alignment—for the data in the specific report row. 				You can use this column when some report row must be visually emphasized and have 				formatting that differs from that of the other rows in the report. For example, you 				can set special formatting properties for the rows that include the total values for 				some periods.  For more information about the printing style, see  Printing Style.  Printing Control In the  Printing Control  column, you can specify how the particular row 				will be printed in the report. For more information, see   ([~/?ScreenId=CS206010|CS206010]) Row Sets.  Page Formatting and Row Printing Control properties Multiple formatting and printing control properties ( Page Break , 					 Height ,  Indent , ,  Line 					Style ,  Suppress Empty ,  Hide 					Zero ,  Linked Row , and  Base 					Row ) are used to define the page formatting and to control printing. 				These properties include options that allow you to set the row printing options and 				block the printing of empty rows. For more information, see the description for the 				corresponding columns in   ([~/?ScreenId=CS206010|CS206010]) Table Columns Table Columns.  Column Group In the  Column Group  column, you specify the group of columns 				where the values from the current row will be printed. Every column group selected 				for the current row can include one column or multiple columns. When a column group 				is specified for the current row, the same value should be specified as the 					 Printing Group  attribute for the columns that will be 				included in this analytical report where the values from the current row will be 				inserted.  For example, if the values from the row with the  R01  code should be displayed in 				columns  A  and  B , the  Column Group  column of the 				row should have the same value as the  Printing Group  				attribute defined for columns  A  and  B .  Unit Group You use the  Unit Group  column to include the current row in a unit 				group. Unit groups are used to generate summarized or aggregated reports and to 				define the groups of rows to be displayed in some specific reports. Unit groups 				include the column sets and row sets in hierarchically organized units that can be 				used to summarize the values in the report formed from the various column sets and 				row sets.  ([~/?ScreenId=CS206000|CS206000])  ([~/?ScreenId=CS206010|CS206010]) ]]></column>
		</row>
		<row PageID="dd9d50f5-ccc3-47b3-8d84-8a068a7eabab" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a61d3daf-4bec-b553-b7a0-77bb0c61d529" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Column sets are used to define the set of columns to be used in a specific report or in a variety of reports having a common layout. Every report can be associated with only one column set. When different reports use the same columns, you can create a single column set for them. {br}

You can specify what columns will be displayed in an analytical report by creating a new column set on the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form, adding the columns to it, and including this column set in the report on the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form of the Acumatica ERP analytical report manager. {br}{TOC}
==Column Set Properties==
Each column in a column set has its properties displayed in the lines of the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form. The properties of each column, described in the sections of this topic, specify how the data is selected, calculated, formatted, and displayed in the particular column of the printed analytical reports. 
==Column Code and Description==
The system assigns a letter code ('''A''', '''B''', '''C''', and so on) to every column that you add to the column set. The added columns are named as they would be named in an Excel file, and the letter assigned to the column cannot be changed later.((({S:Warn}The system assigns letter code within '''A''' - '''ZZZ''' range.
))){br}

In the '''Description''' row, you can add a description of the contents of each column. The data from the '''Description''' row is not automatically printed in the analytical report. To include the description column in the report, you should create a header for this column. 
==Type==
By defining the '''Type''' attribute for a column in the column set, you specify what data will be displayed in the particular report column, and how the data in this column will be processed. For more information, see [HelpRoot_FormReference\CS_20_60_20|Column Sets].
==Value==
By specifying the '''Value''' attribute, you define a certain value to be displayed in the report column. The values in the columns can be predefined parameters or computed values that the system calculates by using formulas. Values are frequently used to insert sums and totals into the report columns. {br}

The formulas used to calculate the data in the report columns usually include references to other columns or particular cells in the report. The expressions defined for the report columns can also use parameter queries to select the values from the data source and insert them in the column cells. ((({S:Warn}When you use the '''Value''' attribute to display predefined or calculated values in the column, you must confirm that the appropriate '''Type''' attribute is selected for this column; otherwise, the formula and value calculation rules will be ignored.
)))
 For more information about the formulas, see [HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]. 
==Rounding==
By specifying the '''Rounding''' attribute, you set up the level of rounding that will be used in each particular column of your report to round the values. You can select one of the following types of rounding for a column: ''No Rounding'', ''Whole Dollars'', ''Thousands'', ''Whole Thousands'', ''Millions'', ''Whole Millions'', ''Billions'', and ''Whole Billions''. For a detailed description of each type, see [HelpRoot_FormReference\CS_20_60_20|Column Sets].
==Format==
You use the '''Format''' attribute to specify the format functions for the column cells and row cells. For the rules of cell formatting, see [HelpRoot_ReportingTools\CS__ARM_Cells_Formatting|Cell Formatting].
==Page Formatting and Column Printing Control Properties==
Multiple formatting and printing control properties ('''Width''', '''Auto Height''', , '''Extra Space''', '''Suppress Empty''', '''Hide Zero''', and '''Suppress Line''') are used to define page formatting and to control printing. These properties include options you can use to set the column printing options and block the printing of empty columns. For more information, see the description for the corresponding columns in [HelpRoot_FormReference\CS_20_60_20|Column Sets].
==Printing Group==
You use the '''Printing Group''' attribute to define the group of rows where the values from the current column will be printed. Every printing group can include one row or multiple rows, and can be assigned to a single column set or multiple sets. When a column group attribute is specified for the current row, the same column group should be assigned to the '''Printing Group''' attribute for the column set that will be included in this analytical report. 
==Unit Group==
You use the '''Unit Group''' attribute to include the current column in the unit group. Unit groups are used to generate summarized or aggregated reports; they define the groups of columns to be displayed in some specific reports. Unit groups include the column sets and row sets in hierarchically organized units that can be used to summarize the values in the report formed from the various column sets and row sets. 
==Printing Control==
You use the '''Printing Control''' attribute to specify how the columns will be printed in the report. For more information, see [HelpRoot_FormReference\CS_20_60_20|Column Sets]. 
==Visible Formula==
You use the '''Visible Formula''' attribute to define the conditions of hiding a column when you run the report. If you do not want to have needless columns (for example, those with no data) in the report, you can hide a column or multiple columns by specifying appropriate hiding conditions in the '''Visible Formula''' box.{br}

Hiding a column does not remove the column or its data at all. The column will be displayed when the report is generated outside the specified conditions.{br}

For example, suppose you have an annual report that has twelve columns, each of which accumulates data by month. If you run the report in March, it will contain the data for the three months (from January to March), so only three columns will contain data. In that case, there is no need to display other columns that have no data. Thus, you can specify conditions to hide the columns depending on the period of time when you run the report.{br}

For the '''Visible Formula''' attribute, you can specify such values as =''True'' (for displaying the column), ''=False'' (for hiding the column), or a formula with specific conditions for hiding the column depending on the {{@StartPeriod}} parameter.
==Style==
You can use the '''Style''' attribute to define the printing style—such as the font, background color, or text alignment—for the data in a specific report column. This attribute can be used when some report column must be visually emphasized and have formatting that differs from that of the other columns in the report. For example, you can set special formatting properties for the columns that include the total values for some periods. {br}

For more information about the printing style, see [HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]. 
==Data Source==
You use the '''Data Source''' attribute to define the filtering criteria for the data to be displayed in a specific column of your report. To set up filtering criteria, you should specify appropriate parameters in the Data Source Editor ([HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor]) dialog box. You can specify criteria on different levels (row, column, unit, or entire report). The filtering rules defined for the unit have the highest priority. The rules defined on the row, column, and report levels have the next highest priorities (in that order). For example, if you want to define filtering criteria for a column and these criteria differ from the criteria that has already been specified for the rows, you need to clear the parameters or specify them as '''Not Set''' for the row that interacts with the corresponding column, so that the data filtering criteria specified for the column will be applied. For more information about the data filtering criteria, see [HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Filtering Criteria]. {br}

By specifying the data filtering parameters on the row level, you define the data structure in the report. For example, if a group of lines in the report must display the calculated values for the specific period, you should specify the start date and the end date of the period for each row included in this group of report lines. If some lines in the report must display the data related to a specific account, and the columns must display the values calculated for certain periods, you should specify the account on the row level, and specify the start date and the end date of each period on the columns level. 
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000])
*[HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020])
*[HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]
*[HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]]]></column>
			<column name="PlainText"><![CDATA[Column Sets Column sets are used to define the set of columns to be used in a specific report or 				in a variety of reports having a common layout. Every report can be associated with 				only one column set. When different reports use the same columns, you can create a 				single column set for them.  You can specify what columns will be displayed in an analytical report by creating a 				new column set on the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form, 				adding the columns to it, and including this column set in the report on the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form of the  Acumatica ERP analytical report manager.  Column Set Properties Each column in a column set has its properties displayed in the lines of the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form. The properties of each column, 				described in the sections of this topic, specify how the data is selected, 				calculated, formatted, and displayed in the particular column of the printed 				analytical reports.  Column Code and Description The system assigns a letter code ( A ,  B , 					 C , and so on) to every column that you add to the column 				set. The added columns are named as they would be named in an Excel file, and the 				letter assigned to the column cannot be changed later. The system assigns 					letter code within  A  -  ZZZ  					range. In the  Description  row, you can add a description of the contents of 				each column. The data from the  Description  row is not 				automatically printed in the analytical report. To include the description column in 				the report, you should create a header for this column.  Type By defining the  Type  attribute for a column in the column set, you 				specify what data will be displayed in the particular report column, and how the 				data in this column will be processed. For more information, see   ([~/?ScreenId=CS206020|CS206020]) Column Sets. Value By specifying the  Value  attribute, you define a certain value to be 				displayed in the report column. The values in the columns can be predefined 				parameters or computed values that the system calculates by using formulas. Values 				are frequently used to insert sums and totals into the report columns.  The formulas used to calculate the data in the report columns usually include references to 				other columns or particular cells in the report. The expressions defined for the 				report columns can also use parameter queries to select the values from the data 				source and insert them in the column cells.  When you use the  Value  attribute to display predefined or calculated 				values in the column, you must confirm that the appropriate 					 Type  attribute is selected for this column; otherwise, 				the formula and value calculation rules will be ignored.  For more information about the formulas, see  Formulas.  Rounding By specifying the  Rounding  attribute, you set up the level of rounding 				that will be used in each particular column of your report to round the values. You 				can select one of the following types of rounding for a column:  No Rounding , 					 Whole Dollars ,  Thousands ,  Whole Thousands ,  Millions , 					 Whole Millions ,  Billions , and  Whole Billions . For a 				detailed description of each type, see 					  ([~/?ScreenId=CS206020|CS206020]) Column Sets. Format You use the  Format  attribute to specify the format functions for the 				column cells and row cells. For the rules of cell formatting, see  Cell Formatting. Page Formatting and Column Printing Control Properties Multiple formatting and printing control properties ( Width , 					 Auto Height , ,  Extra Space , 					 Suppress Empty ,  Hide Zero , and 					 Suppress Line ) are used to define page formatting and to 				control printing. These properties include options you can use to set the column 				printing options and block the printing of empty columns. For more information, see 				the description for the corresponding columns in 					  ([~/?ScreenId=CS206020|CS206020]) Column Sets. Printing Group You use the  Printing Group  attribute to define the group of rows where 				the values from the current column will be printed. Every printing group can include 				one row or multiple rows, and can be assigned to a single column set or multiple 				sets. When a column group attribute is specified for the current row, the same 				column group should be assigned to the  Printing Group  				attribute for the column set that will be included in this analytical report.  Unit Group You use the  Unit Group  attribute to include the current column in the 				unit group. Unit groups are used to generate summarized or aggregated reports; they 				define the groups of columns to be displayed in some specific reports. Unit groups 				include the column sets and row sets in hierarchically organized units that can be 				used to summarize the values in the report formed from the various column sets and 				row sets.  Printing Control You use the  Printing Control  attribute to specify how the columns will 				be printed in the report. For more information, see 					  ([~/?ScreenId=CS206020|CS206020]) Column Sets.  Visible Formula You use the  Visible Formula  attribute to define the conditions 				of hiding a column when you run the report. If you do not want to have needless 				columns (for example, those with no data) in the report, you can hide a column or 				multiple columns by specifying appropriate hiding conditions in the 					 Visible Formula  box. Hiding a column does not remove the column or its data at all. The column will be displayed 				when the report is generated outside the specified conditions. For example, suppose you have an annual report that has twelve columns, each of which 				accumulates data by month. If you run the report in March, it will contain the data 				for the three months (from January to March), so only three columns will contain 				data. In that case, there is no need to display other columns that have no data. 				Thus, you can specify conditions to hide the columns depending on the period of time 				when you run the report. For the  Visible Formula  attribute, you can specify such values as 					= True  (for displaying the column),  =False  (for hiding the column), 				or a formula with specific conditions for hiding the column depending on the 					 @StartPeriod  parameter. Style You can use the  Style  attribute to define the printing style—such 				as the font, background color, or text alignment—for the data in a specific 				report column. This attribute can be used when some report column must be visually 				emphasized and have formatting that differs from that of the other columns in the 				report. For example, you can set special formatting properties for the columns that 				include the total values for some periods.  For more information about the printing style, see  Printing Style.  Data Source You use the  Data Source  attribute to define the filtering criteria for 				the data to be displayed in a specific column of your report. To set up filtering 				criteria, you should specify appropriate parameters in the Data Source Editor ( Data Source Editor) dialog box. You can specify criteria 				on different levels (row, column, unit, or entire report). The filtering rules 				defined for the unit have the highest priority. The rules defined on the row, 				column, and report levels have the next highest priorities (in that order). For 				example, if you want to define filtering criteria for a column and these criteria 				differ from the criteria that has already been specified for the rows, you need to 				clear the parameters or specify them as  Not Set  for the row 				that interacts with the corresponding column, so that the data filtering criteria 				specified for the column will be applied. For more information about the data 				filtering criteria, see  Data Filtering Criteria Data Filtering Criteria.  By specifying the data filtering parameters on the row level, you define the data structure in 				the report. For example, if a group of lines in the report must display the 				calculated values for the specific period, you should specify the start date and the 				end date of the period for each row included in this group of report lines. If some 				lines in the report must display the data related to a specific account, and the 				columns must display the values calculated for certain periods, you should specify 				the account on the row level, and specify the start date and the end date of each 				period on the columns level.   ([~/?ScreenId=CS206000|CS206000])  ([~/?ScreenId=CS206020|CS206020]) ]]></column>
		</row>
		<row PageID="e99f5f68-c354-417b-a143-af621296157a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ed7f47b4-c2ba-4706-6d4e-b3a8eb46d166" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Unit sets are used to organize the report structure in a report or a group of reports when the groups of rows and columns included in the report all use data from different data sources, or formulas must be applied to calculate the report values based on specific data from the explicitly defined groups of columns and rows. Unit sets and their properties are defined on the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. {br}

A unit set can include one unit or multiple units that define the calculation formulas (for report values), the printing groups, and the data source for the data set to be used. Units allow for applying additional data filtering criteria and data calculations for the specific data set in the report. You can specify what units will be included in the unit set by adding the units in it, and organizing the unit structure in the report. Each unit set can be used in a report or a group of reports; however, each report can use only one unit set. {br}{TOC}
==Unit Set Properties==
Each unit in a unit set has its properties displayed in the lines of the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. The properties of each unit, described in the sections of this topic, specify how the data is selected, calculated, and displayed in the unit of the printed analytical reports. 
==Unit Set Code and Description==
The unit set code ('''Code''' column) is an unique value specified by the system when a new unit is added to the unit set. This code is used to identify the unit within the row set, and the references in the formulas defined for the units can also include the unit codes. {br}

The units in the unit sets are sorted by the row code in ascending order, and this is the order they appear in the hierarchical structure on the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. The '''Code''' column value can be modified manually. We do not recommend that you use successive values as the codes of new units added to the unit set, to make it easier if you need to add the units between the existing ones. {br}

For each unit, the '''Description''' column should contain a description of the unit. The value in this column is not printed in the analytical report. 
==Value==
By specifying the '''Value''' unit attribute, you can define a certain calculated value to be displayed in the report. The values in the units can be predefined parameters or computed values that the system calculates by using formulas. Values are frequently used to insert sums and totals into the reports. {br}

The formulas used to calculate the data in the units usually include references to other units. The expressions defined for the units can also use parameter queries to select the values from the data source and insert them in the column cells. For more information about formulas, see [HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]. {br}

The values defined for the units in the analytical reports usually specify the report structure and follow up the user defined unit&rsquo;s hierarchical structure. The units from the top hierarchical level are usually based on the calculated values from the units on the lower hierarchical levels. The higher hierarchical levels can include the summarized and aggregated values based on the units from the lower hierarchical levels. 
==Printing Group==
The '''Printing Group''' attribute identifies which groups of columns and rows from the row and column sets will be included in the current unit. The '''Printing Group''' parameter should be specified for the respective columns and rows in the column and row sets of the analytical report. 
==Data Source==
You can use the '''Data Source''' attribute to define the data filtering criteria for the data set to be displayed in the specific report column. You can specify the data filtering criteria on the row, column, unit, and report levels. The filtering rules defined for the data rows are applied first, and the rules defined on the column level are applied to the data set formed by applying the rules defined on the row level; after that, the criteria defined on the unit level are applied. The data filtering criteria specified on the unit level are applied to the unit as a number of rows and columns included in it. If the data selection criteria set on the unit level have no common data source with the data set received from the data source defined on the row and column level, the report will not produce any meaningful results. {br}

The data filtering rules used in the data source definition on the unit level help you to narrow the criteria applied on the row and column level. For example, if a group of columns in the report included in the unit must display the calculated values for the specific subaccounts, you should set the start subaccount and the end subaccount in the data filtering rules defined for the unit. {br}

For more information about data filtering criteria, see [HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]. 
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000])
*[HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020])
*[HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets]
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]
*[HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030])
*[HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]]]></column>
			<column name="PlainText"><![CDATA[Unit Sets Unit sets are used to organize the report structure in a report or a group of reports 				when the groups of rows and columns included in the report all use data from 				different data sources, or formulas must be applied to calculate the report values 				based on specific data from the explicitly defined groups of columns and rows. Unit 				sets and their properties are defined on the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form.  A unit set can include one unit or multiple units that define the calculation 				formulas (for report values), the printing groups, and the data source for the data 				set to be used. Units allow for applying additional data filtering criteria and data 				calculations for the specific data set in the report. You can specify what units 				will be included in the unit set by adding the units in it, and organizing the unit 				structure in the report. Each unit set can be used in a report or a group of 				reports; however, each report can use only one unit set.  Unit Set Properties Each unit in a unit set has its properties displayed in the lines of the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form. The properties of each unit, 				described in the sections of this topic, specify how the data is selected, 				calculated, and displayed in the unit of the printed analytical reports.  Unit Set Code and Description The unit set code ( Code  column) is an unique value specified by the 				system when a new unit is added to the unit set. This code is used to identify the 				unit within the row set, and the references in the formulas defined for the units 				can also include the unit codes.  The units in the unit sets are sorted by the row code in ascending order, and this is the 				order they appear in the hierarchical structure on the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form. The  Code  column value 				can be modified manually. We do not recommend that you use successive values as the 				codes of new units added to the unit set, to make it easier if you need to add the 				units between the existing ones.  For each unit, the  Description  column should contain a description of 				the unit. The value in this column is not printed in the analytical report.  Value By specifying the  Value  unit attribute, you can define a certain 				calculated value to be displayed in the report. The values in the units can be 				predefined parameters or computed values that the system calculates by using 				formulas. Values are frequently used to insert sums and totals into the reports.  The formulas used to calculate the data in the units usually include references to other 				units. The expressions defined for the units can also use parameter queries to 				select the values from the data source and insert them in the column cells. For more 				information about formulas, see  Formulas.  The values defined for the units in the analytical reports usually specify the report 				structure and follow up the user defined unit's hierarchical structure. The units 				from the top hierarchical level are usually based on the calculated values from the 				units on the lower hierarchical levels. The higher hierarchical levels can include 				the summarized and aggregated values based on the units from the lower hierarchical 				levels.  Printing Group The  Printing Group  attribute identifies which groups of columns and 				rows from the row and column sets will be included in the current unit. The 					 Printing Group  parameter should be specified for the 				respective columns and rows in the column and row sets of the analytical report.  Data Source You can use the  Data Source  attribute to define the data filtering 				criteria for the data set to be displayed in the specific report column. You can 				specify the data filtering criteria on the row, column, unit, and report levels. The 				filtering rules defined for the data rows are applied first, and the rules defined 				on the column level are applied to the data set formed by applying the rules defined 				on the row level; after that, the criteria defined on the unit level are applied. 				The data filtering criteria specified on the unit level are applied to the unit as a 				number of rows and columns included in it. If the data selection criteria set on the 				unit level have no common data source with the data set received from the data 				source defined on the row and column level, the report will not produce any 				meaningful results.  The data filtering rules used in the data source definition on the unit level help you to 				narrow the criteria applied on the row and column level. For example, if a group of 				columns in the report included in the unit must display the calculated values for 				the specific subaccounts, you should set the start subaccount and the end subaccount 				in the data filtering rules defined for the unit.  For more information about data filtering criteria, see  Data Source.   ([~/?ScreenId=CS206000|CS206000])  ([~/?ScreenId=CS206020|CS206020])  ([~/?ScreenId=CS206030|CS206030]) ]]></column>
		</row>
		<row PageID="c2b2e88d-1d50-4253-a6d6-ef63673f48a7" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="66a94fa3-657d-eb6f-9b3f-3d84382f51eb" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The data source defines and applies the data filtering criteria to select the data that will be used in the report. You can include the selected data in the report in the following ways: [anchor|#ul_nf1_r3y_cr]
*For each row of a row set, by specifying data filtering criteria in the [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor] dialog box. You invoke this dialog box by clicking the magnifier icon in the '''Data Source''' column on the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form).
*For each column of a column set, by specifying data filtering criteria for the report columns in the [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor] dialog box. You invoke this dialog box by clicking the magnifier icon in the '''Data Source''' cell for the column, in the lower table of the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form).
*For each unit that includes rows and columns, by specifying data filtering criteria in the [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor] dialog box. You invoke this dialog box by clicking the magnifier icon in the '''Data Source''' column (in the table of the Units area) on the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form.
*For the data source defined for the entire report, by specifying additional data filtering criteria to be applied to the report rows and columns. You do this by specifying the data source parameters on the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form.

Thus, you can define the data filtering criteria for a separate row, column, or unit included in the report, or for the whole report at once.{br}{TOC}[anchor|#_fb2e02e9-bdb6-4c93-9508-3db4713ed5f9]
==Data Filtering Criteria==
Data filtering criteria specify how the data will be selected from the database. These criteria can be defined for the whole report, for a unit, or for any specific row or column in the report. Usually, the criteria defined for the rows and columns reflect the report structure: how the report data will be grouped in rows and columns. {br}

The data filtering criteria defined for the whole report or for the individual rows and columns, use common parameters that identify the subsets of data to be displayed in the report. These parameters can be specified in the [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor] dialog box.{br}

Data filtering criteria specified for a report or for an individual row or column in the report includes the following (further described in the following sections of this topic): [anchor|#_03ce7893-0f93-42c0-8a2b-19eb7517b842]
*Specific group of accounts and subaccounts: The specific group of accounts and subaccounts used to limit the volume of data to be included in the report
*Specific range of periods ('''Start Period''' and '''End Period'''): The range of periods for the data to be used in the report
*Type of amount: The specific amount type to be used in the ARM report (in the whole report or in a separate row or column), such as the beginning balance amount or ending balance amount

==Specific Group of Accounts and Subaccounts==
To eliminate the data that is not related to a specific account and subaccount, or define the range of accounts and subaccounts to be used for data filtering criteria in the report, you should define the account and subaccount ranges. {br}

To specify a predefined group of accounts and subaccounts to be included in the report, you can select an '''Account Class'''. To set additional limitations and select the specific accounts, subaccounts, or both as data filtering criteria, you should enter values in the '''Start Account''' and '''End Account''' (and '''Start Sub.''' and''' End Sub.''', if subaccounts are used in your system and you want to report on only a specific range of subaccounts) boxes.{br}

If the accounts specified in the '''Account Class''', '''Start Account''', and '''End Account''' boxes have no common data, null values will be displayed in the report rows, columns, or both. {br}

((({S:Warn}You can use denominated accounts for retrieving amounts in a foreign currency.
)))
==Specific Period==
To define specific periods for the data to be included in the report, specify '''Start Period''' and '''End Period''' values. {br}

The data related to the periods not included in the selected range of periods will be filtered out and not included in the report. 
==Amount Type==
To define the type of amounts that should be used in the report lines (displayed or used in calculations), you should select the appropriate '''Amount Type''' option in the [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor] dialog box or on the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form. The following types of amounts can be selected: ''Turnover'', ''Credit'', ''Debit'', ''Beg. Balance'', ''Ending Balance''. These types of amounts can be specified for use in the whole analytical report or for a separate row or column.{br}

You can also use the amounts in a foreign currency retrieved from the denominated accounts by specifying one of the following options: ''Curr. Turnover'', ''Curr. Credit'', ''Curr. Debit'', ''Curr. Beg. Balance'', or ''Curr. Ending Balance''. {br}

If no '''Amount Type''' is specified for any report item (such as row or column), the null value will be displayed in the report row or column. {br}


==Related Articles==
*[HelpRoot_ReportingTools\GL__GL_ARM_Reports|Managing Analytical Reports]
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor]
*[HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000])
*[HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010])
*[HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020])
*[HelpRoot_ReportingTools\RP__how_tools_ARM_Data_Source|To Select the Data Source of a Row, Column, or Unit]]]></column>
			<column name="PlainText"><![CDATA[Data Source The data source defines and applies the data filtering criteria to select the data that will 				be used in the report. You can include the selected data in the report in the 				following ways:  For each row of a row set, by specifying data filtering criteria in the  Data Source Editor dialog box. You 					invoke this dialog box by clicking the magnifier icon in the  Data 						Source  column on the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) 					form). For each column of a column set, by specifying data filtering criteria for the report 					columns in the  Data Source Editor 					dialog box. You invoke this dialog box by clicking the magnifier icon in the 						 Data Source  cell for the column, in the lower table 					of the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form). For each unit that includes rows and columns, by specifying data filtering criteria in the 						 Data Source Editor dialog box. You 					invoke this dialog box by clicking the magnifier icon in the  Data 						Source  column (in the table of the Units area) on the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form. For the data source defined for the entire report, by specifying additional data filtering 					criteria to be applied to the report rows and columns. You do this by specifying 					the data source parameters on the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) 					form. Thus, you can define the data filtering criteria for a separate row, column, or unit 				included in the report, or for the whole report at once. Data Filtering Criteria Data filtering criteria specify how the data will be selected from the database. These 				criteria can be defined for the whole report, for a unit, or for any specific row or 				column in the report. Usually, the criteria defined for the rows and columns reflect 				the report structure: how the report data will be grouped in rows and columns.  The data filtering criteria defined for the whole report or for the individual rows and 				columns, use common parameters that identify the subsets of data to be displayed in 				the report. These parameters can be specified in the  Data Source Editor dialog box. Data filtering criteria specified for a report or for an individual row or column in the 				report includes the following (further described in the following sections of this 				topic):  Specific group of accounts and subaccounts: The specific group of accounts and subaccounts 					used to limit the volume of data to be included in the report Specific range of periods ( Start Period  and  End 						Period ): The range of periods for the data to be used in the 					report Type of amount: The specific amount type to be used in the ARM report (in the whole report 					or in a separate row or column), such as the beginning balance amount or ending 					balance amount Specific Group of Accounts and Subaccounts To eliminate the data that is not related to a specific account and subaccount, or define the 				range of accounts and subaccounts to be used for data filtering criteria in the 				report, you should define the account and subaccount ranges.  To specify a predefined group of accounts and subaccounts to be included in the report, you 				can select an  Account Class . To set additional limitations 				and select the specific accounts, subaccounts, or both as data filtering criteria, 				you should enter values in the  Start Account  and 					 End Account  (and  Start Sub.  					and  End Sub. , if subaccounts are used in your system and 				you want to report on only a specific range of subaccounts) boxes. If the accounts specified in the  Account Class ,  Start 					Account , and  End Account  boxes have no common 				data, null values will be displayed in the report rows, columns, or both.  You can use denominated accounts for retrieving amounts in a foreign currency. Specific Period To define specific periods for the data to be included in the report, specify 					 Start Period  and  End Period  				values.  The data related to the periods not included in the selected range of periods will be 				filtered out and not included in the report.  Amount Type To define the type of amounts that should be used in the report lines (displayed or used in 				calculations), you should select the appropriate  Amount Type  				option in the  Data Source Editor dialog 				box or on the  Default Data Source Settings  section of the 					  ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form. The following types of amounts 				can be selected:  Turnover ,  Credit ,  Debit ,  Beg. Balance , 					 Ending Balance . These types of amounts can be specified for use in the 				whole analytical report or for a separate row or column. You can also use the amounts in a foreign currency retrieved from the denominated accounts by 				specifying one of the following options:  Curr. Turnover ,  Curr. Credit , 					 Curr. Debit ,  Curr. Beg. Balance , or  Curr. Ending Balance .  If no  Amount Type  is specified for any report item (such as row or 				column), the null value will be displayed in the report row or column.   ([~/?ScreenId=CS206000|CS206000])  ([~/?ScreenId=CS206010|CS206010])  ([~/?ScreenId=CS206020|CS206020]) ]]></column>
		</row>
		<row PageID="f03d234f-6813-4259-8f62-0a36a8320c2e" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1edb0868-babb-d90c-9e67-c295f471cd22" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can use formulas to calculate the values to be displayed in the rows and columns of each report. Formulas give you the ability to use advanced calculations and data transformation functions if some values in the report rows and columns are calculated or depend on the data from other sources (such as rows, columns or individual cells included in the report). {br}

The formulas used in the analytical reports are much like the formulas used in Excel. You can define parameters and construct a formula by using operators and functions. You can select the parameters used in the formula from the list of predefined parameters or enter them into the formula. 
==Editing of Formulas==
To define formulas in analytical reports, you use the Formula Editor dialog box. You invoke this dialog box by clicking the magnifier icon in the appropriate '''Value''' cell on the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]), [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]), or [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. [anchor|#_17553cb0-66fb-4287-b860-a00b5464b218]
==Formula Editor Dialog Box==[anchor|#_3211b819-da11-4d64-916c-ecc6591a1083][anchor|#_34a97d15-9ee3-4e0d-be81-be0bee45adba][image:Shared/Images/Formula_Editor_panes.png|popup|Formula Editor dialog box|300px]
 The Formula Editor dialog box, which is shown in the screenshot above, includes the following panes: [anchor|#_ef0fa729-f3a9-4ee8-9338-1fc387850c11]
*Component Type pane (upper left): Displays the types of operators, functions, and fields that can be used as formula components. Click any of the types to display the corresponding list of available components in the Component Selection pane.
*Component Selection pane (upper right): For the component type chosen in the Component Types pane, displays the list of available components. Click a component to add it to the formula at the bottom of the dialog box. You can search for the needed component by using the Search box at the top of the Component Selection pane.
*Formula Text pane (bottom): Contains the text of the formula, which you can edit manually. The formula may include the selected components, arguments of manually inserted components, and other elements, all arranged in accordance with the syntax of the formula. 
[anchor|#_6caed9f4-b607-45f1-b497-70987ae230d8]
===Formula Editor Dialog Box Buttons=== The dialog has the following buttons. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Button
!width="80%" ! Description
|- 
| '''Validate'''
| Checks whether the formula typed in the Formula Text pane is valid.
|- 
| '''OK'''
| Closes the dialog box and inserts into the specified box the formula you have created. 
|- 
| '''Cancel'''
| Closes the dialog box without saving your changes. 
|}
==Related Articles==
*[HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010])
*[HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020])
*[HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030])
*[HelpRoot_ReportingTools\CS__ARM_Formula_Parameters|Formula Parameters]
*[HelpRoot_ReportingTools\CS__ARM_Operators|Formula Operators]
*[HelpRoot_ReportingTools\CS__ARM_Functions|Formula Functions]]]></column>
			<column name="PlainText"><![CDATA[Formulas You can use formulas to calculate the values to be displayed in the rows and columns 				of each report. Formulas give you the ability to use advanced calculations and data 				transformation functions if some values in the report rows and columns are 				calculated or depend on the data from other sources (such as rows, columns or 				individual cells included in the report).  The formulas used in the analytical reports are much like the formulas used in Excel. 				You can define parameters and construct a formula by using operators and functions. 				You can select the parameters used in the formula from the list of predefined 				parameters or enter them into the formula.  Editing of Formulas To define formulas in analytical reports, you use the Formula Editor dialog box. You 				invoke this dialog box by clicking the magnifier icon in the appropriate 					 Value  cell on the   ([~/?ScreenId=CS206010|CS206010]) Row Sets 				(CS206010),   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020), or   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form.  Formula Editor Dialog Box Formula Editor dialog box  The Formula Editor dialog box, which is shown in the screenshot above, includes the                 following panes:  Component Type pane (upper left): Displays the types of operators, functions,                     and fields that can be used as formula components. Click any of the types to                     display the corresponding list of available components in the Component                     Selection pane. Component Selection pane (upper right): For the component type chosen in the                     Component Types pane, displays the list of available components. Click a                     component to add it to the formula at the bottom of the dialog box. You can                     search for the needed component by using the Search box at the top of the                     Component Selection pane. Formula Text pane (bottom): Contains the text of the formula, which you can edit                     manually. The formula may include the selected components, arguments of manually                     inserted components, and other elements, all arranged in accordance with the                     syntax of the formula.  Formula Editor Dialog Box Buttons  The dialog has the following buttons.  Button Description Validate Checks whether the formula typed in the Formula Text pane is                                 valid. OK Closes the dialog box and inserts into the specified box the                                 formula you have created.  Cancel Closes the dialog box without saving your changes.   ([~/?ScreenId=CS206010|CS206010])  ([~/?ScreenId=CS206020|CS206020])  ([~/?ScreenId=CS206030|CS206030]) ]]></column>
		</row>
		<row PageID="fdb54c27-e494-4cf8-8fd8-7ce09ab7c79b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="736ea8ad-d724-9df8-6e49-2c2b3e2e6f95" RecordSourceID="22377">
			<column name="Content"><![CDATA[
We recommend that you heed the following suggestions when you are developing an Analytical Report Manager (ARM) report.
==Proper Naming Conventions and Descriptions==
You should develop naming conventions so that you can easily identify the report definitions, row sets, and column sets that are used together in the same reports. If you have multiple column sets that are used with the same row set in different report definitions, you can name the column sets with a prefix that helps you identify the row set with which each column set is used. For example, the names (codes) of the report definition, the row set, and the column set of each report can be similar. The codes of all the predefined reports—report definitions, column sets, row sets, and unit sets—start with ''D''. For your reports, we recommend that you start the codes with any character except ''D''. {br}

Also, you should specify a report description that matches the report title. On the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form, specify a description that matches the title of the report in the '''Site Map '''section of this form. This will help you find the report when you select its report definition code.
==Creation of a Copy for Modification==
If you want to modify a default report, you should create a copy of it, including the row set and the column set, and modify the copy. This way, the changes you make will not affect the existing reports.
==Frequent Saving and Reviewing==
While you are modifying a report, we recommend that you regularly save each portion of your changes to the row set or the column set. For example, save the row set after you have added each new row.{br}

You should review your report regularly to see the changes you have made. These reviews will ease troubleshooting, because you can detect issues sooner and trace them more easily to their causes.
==Codes Reserved for Future Use==
When you are creating a report, you should reserve row codes—that is, omit a particular number or a range of numbers after each row code. For example, if the code of the first row of your row set is ''0010'', omit the numbers ''0011'' through ''0019'', and add the next row with the ''0020'' code. Similarly, you should then omit the numbers ''0021'' through ''0029'' and use the ''0030'' code for the next row, and continue using multiples of 10 as the codes. {br}

The order of rows in a row set depends on their codes. If you don&rsquo;t specify any sorting conditions for the row set, the rows are printed in the report in the order in which they are listed in the row set. Reserving row codes gives you the ability to add new rows between existing ones. For example, if you decide to expand a row of an existing report, you will be able to add a subtotal after this row.
==Sorting Conditions==
You should keep all rows with sorting conditions together in a particular row set. The location of rows with sorting conditions in the row set doesn&rsquo;t affect sorting conditions. We recommend that you add the rows with sorting conditions to the end of the row set and keep all conditions listed together for easier maintenance of the row set.
==Use of Templates for Quicker Review==
We recommend that you save the parameters of a particular report, which are specified on the report form, as a template so that you can run the report quickly. For example, for test scenarios, you can save the report parameters to be used for testing as a default report template. Because you have created the default template, you can just open the report and then run it immediately without needing to remember and specify all the report parameters. You can use templates for other routine tasks as well. {br}

You can also specify default values of the report parameters in the report definition. If you do, and the values were specified for testing purposes, remember to clear these default values when you finish developing the report.
==Account Classes==
You may want to use account classes to aggregate the data of some accounts instead of using complicated masks. Selecting accounts by account classes is a flexible approach that is also easy to use and maintain. Moreover, the selection of data by account classes works faster than selection by account-subaccount ranges specified in the data source does. {br}

When you define the chart of accounts or any time after, you can define the account classes for further use in analytical reports. To select a set of particular accounts in the data source of a report row or a report column, you can create an account class and assign this class to the needed accounts. You can define any number of custom account classes.
==Formulas and the Sign of the Trial Balance==
You need to use appropriate formulas for the analytical reports if the sign of the trial balance is reversed. The '''Sign of the Trial Balance''' option, which is specified on the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form, defines how the trial balance is displayed on reports and inquiries:[anchor|#_942efe0e-3ff0-430f-8580-f85e7dd96dbc]
*If the sign of the trial balance is normal, the credit balances for liability and income accounts are displayed with the plus sign so that the following equation is adhered to: Assets + Expenses = Liabilities + Income.
*:((({S:Warn}YTD Net Income is excluded from these equations.
)))
*If the sign of the trial balance is reversed, the credit balances for liability and income accounts are displayed with the minus sign so that the following equation is correct: Assets + Expenses + Liabilities + Income = 0. However, the reversed sign of the trial balance doesn&rsquo;t affect analytical reports, because analytical reports don&rsquo;t consider the type of accounts. That is, the second equation isn&rsquo;t correct for analytical reports, which always show the credit balance of liabilities and income with the positive sign.
{br}

You should use uppercase references to the codes of rows and units in formulas. The codes of rows in row sets and units in unit sets can be up to 10 alphanumeric characters. The letters of codes are always uppercase. Thus, it is very important to use the appropriate letter case of codes in formulas. For example, the expression {{=@RowCode1+@RowCode2}} in a formulat would return an exception because lowercase letters are specified in the codes. In formulas, you have also to precede a row code and a unit code with the ''@'' character, such as {{=@UNITCODE1+@UNITCODE2}}. {br}

However, you shouldn&rsquo;t use the ''@'' character with a row code or a unit code in functions. Thus, for example, you would use {{=Sum('ROWCODE01', 'ROWCODE10')}} in this function rather than ''=Sum(@ROWCODE01, @ROWCODE10)''.
==Merged ARM Reports==
 Acumatica ERP supports merging multiple ARM reports to be sent as a single HTML or PDF file. For more information, see [HelpRoot_ReportingTools\CS__ARM_Merging_Analytical_Reports|To Merge Analytical Reports].]]></column>
			<column name="PlainText"><![CDATA[Best Practices We recommend that you heed the following suggestions when you are developing an Analytical         Report Manager (ARM) report. Proper Naming Conventions and Descriptions You should develop naming conventions so that you can easily identify the report         definitions, row sets, and column sets that are used together in the same reports. If you         have multiple column sets that are used with the same row set in different report         definitions, you can name the column sets with a prefix that helps you identify the row set         with which each column set is used. For example, the names (codes) of the report definition,         the row set, and the column set of each report can be similar. The codes of all the         predefined reports—report definitions, column sets, row sets, and unit sets—start with            D . For your reports, we recommend that you start the codes with any character         except  D .  Also, you should specify a report description that matches the report title. On the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form, specify a description that         matches the title of the report in the  Site Map  section of this form.         This will help you find the report when you select its report definition code. Creation of a Copy for Modification If you want to modify a default report, you should create a copy of it, including the row         set and the column set, and modify the copy. This way, the changes you make will not affect         the existing reports. Frequent Saving and Reviewing While you are modifying a report, we recommend that you regularly save each portion of your         changes to the row set or the column set. For example, save the row set after you have added         each new row. You should review your report regularly to see the changes you have made. These reviews         will ease troubleshooting, because you can detect issues sooner and trace them more easily         to their causes. Codes Reserved for Future Use When you are creating a report, you should reserve row codes—that is, omit a particular         number or a range of numbers after each row code. For example, if the code of the first row         of your row set is  0010 , omit the numbers  0011  through  0019 , and add         the next row with the  0020  code. Similarly, you should then omit the numbers            0021  through  0029  and use the  0030  code for the next row, and         continue using multiples of 10 as the codes.  The order of rows in a row set depends on their codes. If you don't specify any sorting         conditions for the row set, the rows are printed in the report in the order in which they         are listed in the row set. Reserving row codes gives you the ability to add new rows between         existing ones. For example, if you decide to expand a row of an existing report, you will be         able to add a subtotal after this row. Sorting Conditions You should keep all rows with sorting conditions together in a particular row set. The         location of rows with sorting conditions in the row set doesn't affect sorting conditions.         We recommend that you add the rows with sorting conditions to the end of the row set and         keep all conditions listed together for easier maintenance of the row set. Use of Templates for Quicker Review We recommend that you save the parameters of a particular report, which are specified on         the report form, as a template so that you can run the report quickly. For example, for test         scenarios, you can save the report parameters to be used for testing as a default report         template. Because you have created the default template, you can just open the report and         then run it immediately without needing to remember and specify all the report parameters.         You can use templates for other routine tasks as well.  You can also specify default values of the report parameters in the report definition. If         you do, and the values were specified for testing purposes, remember to clear these default         values when you finish developing the report. Account Classes You may want to use account classes to aggregate the data of some accounts instead of using         complicated masks. Selecting accounts by account classes is a flexible approach that is also         easy to use and maintain. Moreover, the selection of data by account classes works faster         than selection by account-subaccount ranges specified in the data source does.  When you define the chart of accounts or any time after, you can define the account classes         for further use in analytical reports. To select a set of particular accounts in the data         source of a report row or a report column, you can create an account class and assign this         class to the needed accounts. You can define any number of custom account classes. Formulas and the Sign of the Trial Balance You need to use appropriate formulas for the analytical reports if the sign of the trial         balance is reversed. The  Sign of the Trial Balance  option, which is         specified on the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form, defines how the trial         balance is displayed on reports and inquiries: If the sign of the trial balance is normal, the credit balances for liability and             income accounts are displayed with the plus sign so that the following equation is             adhered to: Assets + Expenses = Liabilities + Income. YTD Net Income is excluded               from these equations. If the sign of the trial balance is reversed, the credit balances for liability and             income accounts are displayed with the minus sign so that the following equation is             correct: Assets + Expenses + Liabilities + Income = 0. However, the reversed sign of the             trial balance doesn't affect analytical reports, because analytical reports don't             consider the type of accounts. That is, the second equation isn't correct for analytical             reports, which always show the credit balance of liabilities and income with the             positive sign. You should use uppercase references to the codes of rows and units in formulas. The codes         of rows in row sets and units in unit sets can be up to 10 alphanumeric characters. The         letters of codes are always uppercase. Thus, it is very important to use the appropriate         letter case of codes in formulas. For example, the expression            =@RowCode1+@RowCode2  in a formulat would return an exception because         lowercase letters are specified in the codes. In formulas, you have also to precede a row         code and a unit code with the  @  character, such as            =@UNITCODE1+@UNITCODE2 .  However, you shouldn't use the  @  character with a row code or a unit code in         functions. Thus, for example, you would use  =Sum('ROWCODE01', 'ROWCODE10')          in this function rather than  =Sum(@ROWCODE01, @ROWCODE10) . Merged ARM Reports  Acumatica ERP supports merging multiple ARM reports to be sent as a single HTML or PDF file. For more         information, see  To           Merge Analytical Reports To Merge Analytical Reports. ]]></column>
		</row>
		<row PageID="ba36e1e9-81ab-4ff6-99e2-900a9da419f4" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1af52df5-82ca-7cfd-432d-722abd9cd456" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The report title generally contains the name of the report and other information that will appear only at the beginning of the report. You create a report title in one of the following ways: 
*Create a header for the column set selected for the report, and use it as the report title. This is the preferred method to define the title for a report that has a hierarchical structure. With this method, you can include variable data in the report title. 
*Define a caption in the first row of the row set selected for the report. This method can be used when the report has a flat structure and variable data should not be used in the report title. 

==To Use a Column Set Header to Specify the Report Title==
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form.
#In the '''Code''' box of the Summary area, select the code of the column set used in the report. 
#On the table toolbar of the upper table (which is used to define and modify column headers for the column set), click '''New'''. The system creates a new row in the upper table.
#Click the column in which you want to define the header i. 
#: The report title definition can span one column or be contained in multiple columns. For example, brief text can be displayed in one column and variable data in the other. 
#In the selected column, enter the header text, which might include a formula if you want to display variable data in the report title.
#Specify the range of columns where the report title will be displayed as follows:
##In the column containing the header, click the magnifier icon. The lookup dialog box containing the column range and header style elements appears.
##Enter the relevant values in the '''Column Range''' boxes. Note that the start value in the column range should contain the reference to the column where the report title is defined.
#While remaining in the dialog box, specify the formatting parameters for the header text and background. 
#Click '''OK''' to exit the dialog box and save the settings you have specified.
#On the table toolbar of the upper table, use the '''Shift Up''' and '''Shift Down''' buttons to move the report title to the top position in the list of headers.
#Click '''Save''' on the form toolbar.

==To Use the Row Set Captions to Specify the Report Title==
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form.
#In the '''Code''' box of the Summary area, select the code of the row set used in the report. 
#On the tabletoolbar, click '''Add Row''' to add a new row to the row set.
#In the '''Code''' column, specify the value for the new row so that the row becomes the first one in the row set. 
#In the '''Description''' column of the row, enter the text to be displayed in the report section title. 
#In the '''Type''' column of the row, select the ''Caption'' value.
#In the '''Style''' column, click the magnifier icon, and in the dialog box that opens, select the parameter values to define the report section title formatting. Click '''OK''' to exit the dialog box.
#Click '''Save''' on the form toolbar.
]]></column>
			<column name="PlainText"><![CDATA[To Add a Report Title The report title generally contains the name of the report and other information that will 				appear only at the beginning of the report. You create a report title in one of the 				following ways:  Create a header for the column set selected for the report, and use it as the report title. 					This is the preferred method to define the title for a report that has a 					hierarchical structure. With this method, you can include variable data in the 					report title.  Define a caption in the first row of the row set selected for the report. This method can be 					used when the report has a flat structure and variable data should not be used 					in the report title.  To Use a Column Set Header to Specify the Report Title Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) 					form . In the  Code  box of the Summary area, select the code of 					the column set used in the report.  On the table toolbar of the upper table (which is used to define and modify 					column headers for the column set), click  New . The system 					creates a new row in the upper table. Click the column in which you want to define the header i.   The report title 						definition can span one column or be contained in multiple columns. For 						example, brief text can be displayed in one column and variable data in the 						other.  In the selected column, enter the header text, which might include a formula if 					you want to display variable data in the report title. Specify the range of columns where the report title will be displayed as 						follows: In the column containing the header, click the magnifier icon. The 							lookup dialog box containing the column range and header style elements 							appears. Enter the relevant values in the  Column Range  							boxes. Note that the start value in the column range should contain the 							reference to the column where the report title is defined. While remaining in the dialog box, specify the formatting parameters for the 					header text and background.  Click  OK  to exit the dialog box and save the settings you 					have specified. On the table toolbar of the upper table, use the  Shift Up  					and  Shift Down  buttons to move the report title to the 					top position in the list of headers. Click  Save  on the form toolbar. To Use the Row Set Captions to Specify the Report Title Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) 					form . In the  Code  box of the Summary area, select the code of 					the row set used in the report.  On the table toolbar, click  Add Row  to add a new row 					to the row set. In the  Code  column, specify the value for the new row so 					that the row becomes the first one in the row set.  In the  Description  column of the row, enter the text to 					be displayed in the report section title.   In the  Type  column of the row, select the  Caption  					value. In the  Style  column, click the magnifier icon, and in the 					dialog box that opens, select the parameter values to define the report section 					title formatting. Click  OK  to exit the dialog box. Click  Save  on the form toolbar. ]]></column>
		</row>
		<row PageID="8f292dd7-6693-412a-8e68-f4fe06143dac" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3dd07aaf-e9b0-5692-176b-2d820705408f" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A report can include multiple sections, with each having a header. Depending on the report structure, you can use either row captions or column headers to set up the headers for the report sections. {br}

For a flat report structure, the report sections usually include rows from the whole row set, and to set up a report section header, you can use either a caption defined for a number of rows, or a header defined in the column set and printed in the specific row of the report. (The first two subprocedures cover these methods.){br}

For a hierarchical report structure, you should use column set headers for each section in the report, as described in the third subprocedure. 
==To Specify a Report Section Title for a Flat Report Structure: Using a Column Set Header==
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form.
#In the '''Code''' box of the Summary area, select the code of the column set used in the report. 
#On the table toolbar of the upper table, click '''New'''.
#Click the column in which you want to define the header. 
#: The report section title can be defined in a single column or be contained in multiple columns. For example, the brief text can be displayed in one column and variable data in the other. 
#In the selected column, enter the header text, which might include a formula to display variable data in the report section title. 
#Specify the range of columns where the report section title will be displayed as follows:
##In the column containing the header, click the magnifier icon. The lookup dialog box containing the column range and header style elements opens.
##Enter the relevant values in the '''Column Range''' boxes. Note that the start value in the column range should contain the reference to the column where the report section title is defined.
#While remaining in the dialog box, specify the formatting parameters for the header text and background.
#Click '''OK''' to exit the dialog box and save the settings you have specified.
#On the table toolbar of the upper table, use the '''Shift Up''' and '''Shift Down''' buttons to move the report section title to the relevant position in the list of headers.
#To define the row of the report where the report section title will appear, do the following: 
##Specify the '''Printing Group''' value for the header.
##Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form by searching for or navigating to it.
##Specify the values for the row where the report section title will be inserted as follows: 
##*In the '''Type''' column, select ''Header''.
##*In the '''Column Group''' column, specify the same value that you defined for the '''Printing Group''' value for the header.
##On the form toolbar, click '''Save'''.
#Return to the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form, and on the form toolbar, click '''Save'''.

==To Specify a Report Section Title for a Flat Report Structure: Using a Row Set Caption==[anchor|#ol_d34_lgp_l2b]
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form.
#In the '''Code''' box of the Summary area, select the code of the row set used in the report.
#In the table, click (or add and click) the row where the report section title will be inserted.
#In the '''Description''' column of the row, enter the text to be displayed in the report section title. 
#In the '''Type''' column of the row, select the ''Caption'' value.
#In the '''Style''' column, click the magnifier icon, and in the dialog box that opens, select the parameter values to define the report section title formatting. Click '''OK''' to exit the dialog box. 
#Click '''Save''' on the form toolbar.

==To Specify a Report Section Titles for a Hierarchical Report Structure==
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form.
#In the '''Code''' box of the Summary area, select the code of the column set used in the report. 
#On the table toolbar of the upper table, click '''New'''.
#In the upper table, click the column in which you want to define the header. 
#: The report section title can be defined in a single column or be contained in multiple columns. For example, the brief text can be displayed in one column and the variable data in the other. 
#In the selected column in '''Headers''' section of the Column Sets form, enter the header text, which might include a formula to display variable data in the report section title. 
#Specify the range of columns where the report section title will be displayed as follows:
##In the column containing the header, click the magnifier icon. The lookup dialog box containing the column range and header style elements opens.
##Enter the relevant values in the '''Column Range''' boxes. Note that the start value in the column range should contain the reference to the column where the report section title is defined.
#While remaining in the dialog box, specify the formatting parameters for the header text and background.
#Click '''OK''' to exit the dialog box and save the settings you have specified.
#On the table toolbar of the upper table, use the '''Shift Up''' and '''Shift Down''' buttons to move the report section title to the relevant position in the list of headers.
#To define the row of the report where the report section title will appear, do the following: 
##Specify the '''Printing Group''' value for the header.
##Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form by searching for or navigating to it.
##Specify the values for the row where the report section title will be inserted as follows: 
##*In the '''Type''' column, select ''Header''.
##*In the '''Column Group''' column, specify the same value that you defined for the '''Printing Group''' value for the header.
##On the form toolbar, click '''Save'''.
#Return to the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form, and on the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[To Add a Title for a Report Section A report can include multiple sections, with each having a header. Depending on the 				report structure, you can use either row captions or column headers to set up the 				headers for the report sections.  For a flat report structure, the report sections usually include rows from the whole 				row set, and to set up a report section header, you can use either a caption defined 				for a number of rows, or a header defined in the column set and printed in the 				specific row of the report. (The first two subprocedures cover these methods.) For a hierarchical report structure, you should use column set headers for each 				section in the report, as described in the third subprocedure.  To Specify a Report Section Title for a Flat Report Structure: Using a Column Set 				Header Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) 					form . In the  Code  box of the Summary area, select the code of 					the column set used in the report.  On the table toolbar of the upper table, click  New . Click the column in which you want to define the header.   The report section 						title can be defined in a single column or be contained in multiple columns. 						For example, the brief text can be displayed in one column and variable data 						in the other.  In the selected column, enter the header text, which might include a formula to 					display variable data in the report section title.  Specify the range of columns where the report section title will be displayed as 						follows: In the column containing the header, click the magnifier icon. The 							lookup dialog box containing the column range and header style elements 							opens. Enter the relevant values in the  Column Range  							boxes. Note that the start value in the column range should contain the 							reference to the column where the report section title is defined. While remaining in the dialog box, specify the formatting parameters for the 					header text and background. Click  OK  to exit the dialog box and save the settings you 					have specified. On the table toolbar of the upper table, use the  Shift Up  					and  Shift Down  buttons to move the report section title 					to the relevant position in the list of headers. To define the row of the report where the report section title will appear, do 					the following:  Specify the  Printing Group  value for the 							header. Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form 							by searching for or navigating to it. Specify the values for the row where the report section title will be 							inserted as follows:  In the  Type  column, select 									 Header . In the  Column Group  column, specify the 									same value that you defined for the  Printing 										Group  value for the header. On the form toolbar, click  Save . Return to the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form, and 					on the form toolbar, click  Save . To Specify a Report Section Title for a Flat Report Structure: Using a Row Set 				Caption Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) 					form . In the  Code  box of the Summary area, select the code of 					the row set used in the report. In the table, click (or add and click) the row where the report section title 					will be inserted. In the  Description  column of the row, enter the text to 					be displayed in the report section title.  In the  Type  column of the row, select the  Caption  					value. In the  Style  column, click the magnifier icon, and in the 					dialog box that opens, select the parameter values to define the report section 					title formatting. Click  OK  to exit the dialog box.  Click  Save  on the form toolbar. To Specify a Report Section Titles for a Hierarchical Report Structure Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) 					form . In the  Code  box of the Summary area, select the code of 					the column set used in the report.  On the table toolbar of the upper table, click  New . In the upper table, click the column in which you want to define the header.   						The report section title can be defined in a single column or be contained 						in multiple columns. For example, the brief text can be displayed in one 						column and the variable data in the other.  In the selected column in  Headers  section of the Column 					Sets form, enter the header text, which might include a formula to display 					variable data in the report section title.  Specify the range of columns where the report section title will be displayed as 						follows: In the column containing the header, click the magnifier icon. The 							lookup dialog box containing the column range and header style elements 							opens. Enter the relevant values in the  Column Range  							boxes. Note that the start value in the column range should contain the 							reference to the column where the report section title is defined. While remaining in the dialog box, specify the formatting parameters for the 					header text and background. Click  OK  to exit the dialog box and save the settings you 					have specified. On the table toolbar of the upper table, use the  Shift Up  					and  Shift Down  buttons to move the report section title 					to the relevant position in the list of headers. To define the row of the report where the report section title will appear, do 					the following:  Specify the  Printing Group  value for the 							header. Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form 							by searching for or navigating to it. Specify the values for the row where the report section title will be 							inserted as follows:  In the  Type  column, select 									 Header . In the  Column Group  column, specify the 									same value that you defined for the  Printing 										Group  value for the header. On the form toolbar, click  Save . Return to the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form, and 					on the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="24a4be74-6c8a-41b4-a708-d12563cbc758" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="93c2c255-7652-2695-447c-cebe5e57c495" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Row sets, which you work with on the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form, are used to define the rows to be included in the report and the data to be displayed in each row. A row set can be used in multiple reports that use similar data selection rules and a similar report layout structure. Once a row set has been defined, you can include it in an analytical report it was designed for by using the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form.{br}

To specify the set of rows for a group of analytical reports or a single report, you can create new row sets or modify the existing ones. To remove the row sets that are no longer used, you can delete the row sets associated with them. This topic describes the steps involved in these operations.
==To Create a Row Set==
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form.
#On the form toolbar, click '''Add New Record'''.
#In the '''Code''' box of the Summary area, enter the code to be used for the row set.
#:((({S:Warn}The row set code must be unique within the whole system. The length of the code can be up to 10 alphanumeric characters.
)))
#In the '''Description''' box, enter the description of the row set. (The row description is not displayed in the printed report and is used only to add a descriptive comment on this form about the row set.)
#On the form toolbar, click '''Save'''. The rows can be added to the created row set at this time or later; see [HelpRoot_ReportingTools\CS__ARM_Defining_the_Rows_to_be_Included_in_the_Row_Set|To Define the Rows of the Row Set].

==To Modify an Existing Row Set==
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form.
#In the '''Code''' box of the Summary area, select the code of the row set you want to work with.
#Change the attributes of the row set as required.
#On the form toolbar, click '''Save''' in the form toolbar.

==To Delete a Row Set==
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form.
#In the '''Code''' box of the Summary area, select the code of the row set you want to delete. 
#On the form toolbar, click '''Delete'''.

==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets]
*[HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000])]]></column>
			<column name="PlainText"><![CDATA[To Create, Modify, or Delete a Row Set Row sets, which you work with on the   ([~/?ScreenId=CS206010|CS206010]) Row Sets 				(CS206010) form, are used to define  the rows to be included in the report and the 				data to be displayed in each row. A row set can be used in multiple reports that use 				similar data selection rules and a similar report layout structure. Once a row set 				has been defined, you can include it in an analytical report it was designed for by 				using the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions(CS206000)  form. To specify the set of rows for a group of analytical reports or a single report, you 				can create new row sets or modify the existing ones. To remove the row sets that are 				no longer used, you can delete the row sets associated with them. This topic 				describes the steps involved in these operations. To Create a Row Set Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) 					form . On the form toolbar, click  Add New Record . In the  Code  box of the Summary area, enter the code to be 					used for the row set. The row set code must be unique within the whole 						system. The length of the code can be up to 10 alphanumeric 						characters. In the  Description  box, enter the description of the row 					set. (The row description is not displayed in the printed report and is used 					only to add a descriptive comment on this form about the row set.) On the form toolbar, click  Save . The rows can be added to 					the created row set at this time or later; see  To Define the Rows of the Row Set. To Modify an Existing Row Set Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) 					form . In the  Code  box of the Summary area, select the code of 					the row set you want to work with. Change the attributes of the row set as required. On the form toolbar, click  Save  in the form toolbar. To Delete a Row Set Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) 					form . In the  Code  box of the Summary area, select the code of 					the row set you want to delete.  On the form toolbar, click  Delete .  ([~/?ScreenId=CS206000|CS206000]) ]]></column>
		</row>
		<row PageID="3913e24a-08ff-4638-9566-2172e364c394" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="974b0c20-ebc1-d8b5-56ec-08799e713373" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#_36987622-f948-4495-8dd2-cbaaace811e5]
On the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form, you can perform the following operations with the rows, each of which is described in this topic: 
*Add new rows to the row set.
*Specify the attributes for each row in the row set. By changing the row attributes, you can define the data selection, processing, and formatting rules for the data to be included in this row. 
*Delete any rows from the row set.

The table on this form displays the rows of the row set and their attributes. 
==To Create a Row==
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form.
#In the '''Code''' box of the Summary area, select the code of the row set to which you want to add a row.
#:((({S:Warn}The row set code must be unique within the row set that includes this row. The length of the code can be up to 10 alphanumeric characters.
)))
#On the table toolbar, click '''Add Row'''.
#In the relevant columns of the added row, specify the attributes. 
#:Only the '''Code''' attribute is mandatory for the row. 
#On the form toolbar, click '''Save'''.

==To View and Edit the Row Attributes==
You can edit any row attributes by changing the relevant values. To edit rows, do the following:[anchor|#_9c75e06d-c9e8-4482-858e-4d2e44aa0e61]
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form.
#In the '''Code''' box of the Summary area, select the code of the row set in which you want to edit a row.
#For the rows whose attributes you want to change, fill in or edit the values.
#Repeat Step 3 for each row you want to edit. 
#On the form toolbar, click '''Save'''. 

==To Delete a Row==
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form.
#Select the existing row set code in the '''Code''' box in the Row Set area, or use navigation buttons on the form toolbar to find the required row set.
#In the table, select the row to be deleted.
#On the table toolbar, click '''Delete'''.
#On the form toolbar, click '''Save'''.

==Related Articles==
*[HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010])
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]]]></column>
			<column name="PlainText"><![CDATA[To Define the Rows of the Row Set On the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form, you can perform the 				following operations with the rows, each of which is described in this topic:  Add new rows to the row set. Specify the attributes for each row in the row set. By changing the row attributes, you can 					define the data selection, processing, and formatting rules for the data to be 					included in this row.  Delete any rows from the row set. The table on this form displays the rows of the row set and their attributes.  To Create a Row Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) 					form . In the  Code  box of the Summary area, select the code of 					the row set to which you want to add a row. The row set code must be unique 						within the row set that includes this row. The length of the code can be up 						to 10 alphanumeric characters. On the table toolbar, click  Add Row . In the relevant columns of the added row, specify the attributes.  Only the 							 Code  attribute is mandatory for the row. 					 On the form toolbar, click  Save . To View and Edit the Row Attributes You can edit any row attributes by changing the relevant values. To edit rows, do the 				following: Open  					the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form. In the  Code  box of the Summary area, select the code of 					the row set in which you want to edit a row. For the rows whose attributes you want to change, fill in or edit the 					values. Repeat Step 3 for each row you want to edit.  On the form toolbar, click  Save .  To Delete a Row Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) 					form . Select the existing row set code in the  Code  box in the 					Row Set area, or use navigation buttons on the form toolbar to find the required 					row set. In the table, select the row to be deleted. On the table toolbar, click  Delete . On the form toolbar, click  Save .  ([~/?ScreenId=CS206010|CS206010]) ]]></column>
		</row>
		<row PageID="1173f974-1912-45fe-b418-234f00085254" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="9bc6d215-3c4a-869a-cd62-b002c877e650" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Column sets, which you work with on the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form, are used to define the columns to be included in the report and the data to be displayed in each column, as well as column headers. A column set can be used in multiple reports that use similar data selection rules and a similar report layout structure. Once a column set has been defined, you can include it in an analytical report it was designed for by using the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form.{br}

To specify the set of columns for a group of analytical reports or a single report, you can create new column sets or modify existing ones. To remove column sets that are no longer used, you can delete them. This topic describes the steps involved in these operations.
==To Create a Column Set==
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form. 
#On the form toolbar, click '''Add New Record'''.
#In the '''Code''' box of the Summary area, enter the code to be used for the column set.
#:((({S:Warn}The column set code must be unique within the whole system. The length of the code can be up to 10 alphanumeric characters.
)))
#In the '''Description''' box, enter the description of the column set. (The column description is not displayed in the printed report and is used only to add a descriptive comment on this form about the column set.)
#On the form toolbar, click '''Save'''. The columns and data filters can be added to the created column set at this time or later; see [HelpRoot_ReportingTools\CS__ARM_Defining_the_Columns_to_be_Included_in_the_Column_Set|To Define the Columns of the Column Set].

==To Modify an Existing Column Set==
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form. 
#In the '''Code''' box of the Summary area, select the code of the column set you want to modify. 
#Change the attributes of the column set as required.
#On the form toolbar, click '''Save'''.

==To Delete a Column Set==
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form. 
#In the '''Code''' box of the Summary area, select the code of the column set you want to delete. 
#On the form toolbar, click '''Delete'''.

==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_ReportingTools\CS__ARM_Column_Set|Column Sets]
*[HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020])
*[HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000])]]></column>
			<column name="PlainText"><![CDATA[To Create, Modify, or Delete a Column Set Column sets, which you work with on the   ([~/?ScreenId=CS206020|CS206020]) Column Sets(CS206020)  form, are used to define the columns to be included in the                 report and the data to be displayed in each column, as well as column headers. A                 column set can be used in multiple reports that use similar data selection rules and                 a similar report layout structure. Once a column set has been defined, you can                 include it in an analytical report it was designed for by using the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form. To specify the set of columns for a group of analytical reports or a single report,                 you can create new column sets or modify existing ones. To remove column sets that                 are no longer used, you can delete them. This topic describes the steps involved in                 these operations. To Create a Column Set Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020)                     form .                      On the form toolbar, click  Add New Record . In the  Code  box of the Summary area, enter the code to be                     used for the column set. The column set code must be unique within the                         whole system. The length of the code can be up to 10 alphanumeric                         characters. In the  Description  box, enter the description of the                     column set. (The column description is not displayed in the printed report and                     is used only to add a descriptive comment on this form about the column                     set.) On the form toolbar, click  Save . The columns and data                     filters can be added to the created column set at this time or later; see  To Define the Columns of the Column Set. To Modify an Existing Column Set Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020)                     form .  In the  Code  box of the Summary area, select the code of                     the column set you want to modify.  Change the attributes of the column set as required. On the form toolbar, click  Save . To Delete a Column Set Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020)                     form .  In the  Code  box of the Summary area, select the code of                     the column set you want to delete.  On the form toolbar, click  Delete .  ([~/?ScreenId=CS206020|CS206020])  ([~/?ScreenId=CS206000|CS206000]) ]]></column>
		</row>
		<row PageID="e7c8b8c0-0286-4b5a-ab24-54207f28c6d0" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7e8f8fab-8c35-5c74-5ead-aed25728d3ef" RecordSourceID="22377">
			<column name="Content"><![CDATA[
On the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form, you can perform the following operations, each of which is described in this topic: 
*Add new columns to the column set.
*Add a column header for any column or group of columns in the column set, and specify the printing style of the header. The header for a column or a column range should be defined after the columns are added to the column set. 
*Specify the attributes for each column in the column set. By changing the column attributes, you can define the data selection, processing, and formatting rules for the data to be included in this column. 
*Delete any column from the column set

The [HelpRoot_FormReference\CS_20_60_20|Column Sets] form has two tables below the Summary area: the upper table with the column headers of the column set; and the lower table, which has the columns of the column set and their attributes. {br}{TOC}
==To Create a Column==
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form. 
#In the '''Code''' box of the Summary area, select the code of the column set in which you want to add a column. 
#On the table toolbar of the lower table, click '''New'''. The new column is added to the right of the existing columns.
#Specify the attributes of the new column in the relevant rows of the added column.
#On the form toolbar, click '''Save'''.

==To Add a Header for a Column or Column Range==
To add a text description for a single column or a column range in the printed report, you define a header for a column or a group of columns. In the upper table of the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form, you can to add the headers to the column set and define in which rows the headers should be printed. {br}

In the upper table, you can define the headers for a single column or a column range, and insert the headers in the rows specified by the '''Printing Group''' attribute. You can add, delete, or change the order of the headers, and copy the printing style defined for a certain header to apply it to another header in the analytical report. {br}

To add a header for a single column or a range of columns, do the following: 
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form. 
#In the '''Code''' box of the Summary area, select the code of the column set to which you want to add a header. 
#On the table toolbar of the upper table, click '''New'''.
#If the header should be printed in a specific row, in the '''Printing Group''' column, enter the printing group code. (The same code should be entered in the '''Column Group''' column for the relevant row.)
#In the column where the header should appear, enter the header text.
#Use the lookup control in the column to set the column range for the header printing and define the printing style.
#:((({S:Warn}By default, the column range is limited to the single column where the header text is entered. To make the header span a range of columns, enter the codes of the start column and the end column in the range. 
)))
#On the form toolbar, click '''Save'''.

==To View and Edit the Column Attributes==
You can edit any column attributes by changing the values in the relevant rows. To edit columns, do the following:[anchor|#_9c75e06d-c9e8-4482-858e-4d2e44aa0e61]
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form.
#In the '''Code''' box of the Summary area, select the code of the column set in which you want to edit a column.
#In the lower table, click the column whose attributes you want to change, fill in or edit the values.
#Repeat Step 3 for each column you want to edit. 
#On the form toolbar, click '''Save'''. 

==To Delete a Column==
#Open the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form. 
#In the '''Code''' box of the Summary area, select the code of the column set in which you want to delete a column. 
#In the lower table, click the column to be deleted.
#On the table toolbar, click '''Delete'''.
#On the form toolbar, click '''Save'''.

==To Use the Column Set in the Analytical Reports==
Once you define a column set, you can use this column set in any analytical report you configure using the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form. 
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]
*[HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020])]]></column>
			<column name="PlainText"><![CDATA[To Define the Columns of the Column Set On the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form, you can perform 				the following operations, each of which is described in this topic:  Add new columns to the column set. Add a column header for any column or group of columns in the column set, and 					specify the printing style of the header. The header for a column or a column 					range should be defined after the columns are added to the column set.  Specify the attributes for each column in the column set. By changing the column 					attributes, you can define the data selection, processing, and formatting rules 					for the data to be included in this column.  Delete any column from the column set The   ([~/?ScreenId=CS206020|CS206020]) Column Sets  form has two tables below the 				Summary area: the upper table with the column headers of the column set; and the 				lower table, which has the columns of the column set and their attributes.  To Create a Column Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) 					form . 					 In the  Code  box of the Summary area, select the code of 					the column set in which you want to add a column.  On the table toolbar of the lower table, click  New . The 					new column is added to the right of the existing columns. Specify the attributes of the new column in the relevant rows of the added 					column. On the form toolbar, click  Save . To Add a Header for a Column or Column Range To add a text description for a single column or a column range in the printed 				report, you define a header for a column or a group of columns. In the upper table 				of the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form, you can to add 				the headers to the column set and define in which rows the headers should be 				printed.  In the upper table, you can define the headers for a single column or a column range, 				and insert the headers in the rows specified by the  Printing 					Group  attribute. You can add, delete, or change the order of the 				headers, and copy the printing style defined for a certain header to apply it to 				another header in the analytical report.  To add a header for a single column or a range of columns, do the following:  Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) 					form .  In the  Code  box of the Summary area, select the code of 					the column set to which you want to add a header.  On the table toolbar of the upper table, click  New . If the header should be printed in a specific row, in the  Printing 						Group  column, enter the printing group code. (The same code 					should be entered in the  Column Group  column for the 					relevant row.) In the column where the header should appear, enter the header text. Use the lookup control in the column to set the column range for the header 					printing and define the printing style. By default, the column range is 						limited to the single column where the header text is entered. To make the 						header span a range of columns, enter the codes of the start column and the 						end column in the range.  On the form toolbar, click  Save . To View and Edit the Column Attributes You can edit any column attributes by changing the values in the relevant rows. To 				edit columns, do the following: Open  					the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form. In the  Code  box of the Summary area, select the code of 					the column set in which you want to edit a column. In the lower table, click the column whose attributes you want to change, fill in or edit 					the values. Repeat Step 3 for each column you want to edit.  On the form toolbar, click  Save .  To Delete a Column Open the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) 					form .  In the  Code  box of the Summary area, select the code of 					the column set in which you want to delete a column.  In the lower table, click the column to be deleted. On the table toolbar, click  Delete . On the form toolbar, click  Save . To Use the Column Set in the Analytical Reports Once you define a column set, you can use this column set in any analytical report 				you configure using the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions(CS206000)  form.   ([~/?ScreenId=CS206020|CS206020]) ]]></column>
		</row>
		<row PageID="01f413cb-6375-4e29-8039-fdf6422de202" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="840b811a-0bfb-7071-0813-da959834817e" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can use unit sets, which you define on the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form, to define which sections will be included in the analytical reports, and to set the data filtering criteria and data calculation rules for each report section. Once a unit set has been defined, you can include it in an analytical report it was designed for by using the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form. {br}

To specify the unit set for a group of analytical reports or a single report, you can create new unit sets or modify existing ones. To remove unit sets associated with reports that are no longer used, you delete the unit sets. This topic describes the steps involved in these operations.
==To Create a Unit Set==
#Open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. 
#On the form toolbar, click '''Add New Record'''.
#In the '''Code''' box of the Summary area, enter the code to be used for the unit set.
#:((({S:Warn}The unit set code must be unique within the whole system. The length of the code can be up to 10 alphanumeric characters.
)))
#In the '''Description''' box, enter the unit set description. (The unit description is not displayed in the printed report and is used only to add a descriptive comment on this form about the unit set.)
#On the form toolbar, click '''Save''' to save the created unit set. The units and data filters can be added to the created unit set at this time or later; see [HelpRoot_ReportingTools\CS__ARM_Defining_the_Units_to_be_Included_in_the_Unit_Set|To Define the Units to Be Included in the Unit Set].

==To Modify an Existing Unit Set==
#Open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. 
#In the '''Code''' box of the Summary area, select the code of the unit set to be modified.
#Change the attributes of the unit set as required.
#On the form toolbar, click '''Save'''.

==To Delete a Unit Set==
#Open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. 
#In the '''Code''' box of the Summary area, select the code of the unit set to be deleted.
#On the form toolbar, click '''Delete'''.

==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_ReportingTools\CS__ARM_Unit_Set|Unit Sets]
*[HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030])
*[HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000])]]></column>
			<column name="PlainText"><![CDATA[To Create, Modify, or Delete a Unit Set You can use unit sets, which you define on the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form, to define which sections will be included in 				the analytical reports, and to set the data filtering criteria and data calculation 				rules for each report section. Once a unit set has been defined, you can include it 				in an analytical report it was designed for by using the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form.  To specify the unit set for a group of analytical reports or a single report, you can 				create new unit sets or modify existing ones. To remove unit sets associated with 				reports that are no longer used, you delete the unit sets. This topic describes the 				steps involved in these operations. To Create a Unit Set Open the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) 					form . 					 On the form toolbar, click  Add New Record . In the  Code  box of the Summary area, enter the code to be 					used for the unit set. The unit set code must be unique within the whole 						system. The length of the code can be up to 10 alphanumeric 						characters. In the  Description  box, enter the unit set description. 					(The unit description is not displayed in the printed report and is used only to 					add a descriptive comment on this form about the unit set.) On the form toolbar, click  Save  to save the created unit 					set. The units and data filters can be added to the created unit set at this 					time or later; see  To Define the Units to Be Included in the Unit Set. To Modify an Existing Unit Set Open the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) 					form .  In the  Code  box of the Summary area, select the code of 					the unit set to be modified. Change the attributes of the unit set as required. On the form toolbar, click  Save . To Delete a Unit Set Open the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) 					form .  In the  Code  box of the Summary area, select the code of 					the unit set to be deleted. On the form toolbar, click  Delete .  ([~/?ScreenId=CS206030|CS206030])  ([~/?ScreenId=CS206000|CS206000]) ]]></column>
		</row>
		<row PageID="e7cf468a-df0c-400f-aeb3-e5303519534a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="4ddf5f45-1e4e-9ace-25f4-6e7d62366405" RecordSourceID="22377">
			<column name="Content"><![CDATA[
On the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form, you can perform the following operations on the selected unit set, as detailed in the sections of this topic: 
*Add new units to the unit set.
*Specify the attributes for each unit in the unit set. By changing the unit attributes, you can define the data selection and processing rules for the data to be included in this unit.
*Organize the units in the unit set into a hierarchical structure, which defines the order in which the units will be included in the report. 
*Delete units from the unit set.

The Units table on the form displays available units and their properties. {br}{TOC}
==To Create a Unit==
#Open then [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. 
#In the '''Code''' box of the Summary area, select the code of the unit set in which you want to create a unit.
#On the table toolbar of the Units table, click '''Add Row'''.
#Specify the settings of the new unit in the relevant columns of the added row.
#On the form toolbar, click '''Save'''.

==To View and Edit the Unit Attributes==
Each unit is represented by a row in the Units table. You can edit the attributes for any unit by changing the values in the row that represents the unit. [anchor|#_9c75e06d-c9e8-4482-858e-4d2e44aa0e61]
#Open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form.
#In the '''Code''' box of the Summary area, select the code of the unit set in which you want to make edits.
#In the row of the Units table that represents the unit whose attributes you want to change, fill in or edit the values
#Repeat Step 3 for each row you want to edit. 
#On the form toolbar, click '''Save'''. 

==To Define the Units&rsquo; Hierarchical Structure==
#Open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. 
#In the '''Code''' box of the Summary area, select the code of the unit set you want to work with.
#In the lower left pane, click the unit in the hierarchical structure.
#Use the buttons on the toolbar to move the selected unit to the appropriate position: 
#* The '''Move to external node''' button moves the unit one position left and places it in the next external node in the hierarchical structure.
#* The '''Move to internal node''' button moves the unit one position right and places it in the next internal node in the hierarchical structure.

==To Delete a Unit from the Unit Set==
#Open the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form. 
#In the '''Code''' box of the Summary area, select the code of the unit set you want to work with.
#In the Units area, click the unit to be deleted.
#On the table toolbar, click '''Delete'''.
#On the form toolbar, click '''Save'''.

==Related Articles==
*[HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030])
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]]]></column>
			<column name="PlainText"><![CDATA[To Define the Units to Be Included in the Unit Set On the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form, you can perform 				the following operations on the selected unit set, as detailed in the sections of 				this topic:  Add new units to the unit set. Specify the attributes for each unit in the unit set. By changing the unit 					attributes, you can define the data selection and processing rules for the data 					to be included in this unit. Organize the units in the unit set into a hierarchical structure, which defines 					the order in which the units will be included in the report.  Delete units from the unit set. The Units table on the form displays available units and their properties.  To Create a Unit Open then   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) 					form . 					 In the  Code  box of the Summary area, select the code of 					the unit set in which you want to create a unit. On the table toolbar of the Units table, click  Add 					Row . Specify the settings of the new unit in the relevant columns of the added 					row. On the form toolbar, click  Save . To View and Edit the Unit Attributes Each unit is represented by a row in the Units table. You can edit the attributes for 				any unit by changing the values in the row that represents the unit.  Open  					the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form. In the  Code  box of the Summary area, select the code of 					the unit set in which you want to make edits. In the row of the Units table that represents the unit whose attributes you want 					to change, fill in or edit the values Repeat Step 3 for each row you want to edit.  On the form toolbar, click  Save .  To Define the Units' Hierarchical Structure Open the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) 					form .  In the  Code  box of the Summary area, select the code of 					the unit set you want to work with. In the lower left pane, click the unit in the hierarchical structure. Use the buttons on the toolbar to move the selected unit to the appropriate 					position:   The  Move to external node  button moves the unit 							one position left and places it in the next external node in the 							hierarchical structure.  The  Move to internal node  button moves the unit 							one position right and places it in the next internal node in the 							hierarchical structure. To Delete a Unit from the Unit Set Open the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) 					form .  In the  Code  box of the Summary area, select the code of 					the unit set you want to work with. In the Units area, click the unit to be deleted. On the table toolbar, click  Delete . On the form toolbar, click  Save .  ([~/?ScreenId=CS206030|CS206030]) ]]></column>
		</row>
		<row PageID="2b745f84-dd62-4517-8f67-6939c91d4b35" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="af6aeaaa-c0f6-01fd-5813-9a4f22638fc3" RecordSourceID="22377">
			<column name="Content"><![CDATA[For a report (and for any row, column, and unit that makes up the report), you select the data source, including the data filtering criteria that the system applies to select the data. 
For a row, column, or unit, you can use the Data Source Editor dialog box to limit the data displayed in the report. For example, by selecting a value in the '''Ledger''' box of this dialog box, you specify the ledger for which the data will be displayed in the report.
==To Select the Data Source==[anchor|#_0df6349e-3006-414a-acab-d01718daf7db]
#Open the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]), [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]), or [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form.
#Open the Data Source Editor dialog box by clicking the magnifier icon in the '''Data Source''' cell of the required row, column or unit.
#Use the Data Source Editor dialog box to select the needed criteria. For more information, see [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor].
#Click '''OK''' to save your selections, close the dialog box, and return to the form you were using.
#On the form toolbar, click '''Save''' to preserve the data source criteria you selected.
]]></column>
			<column name="PlainText"><![CDATA[To Select the Data Source of a Row, Column, or Unit For a report (and for any row, column, and unit that makes up the report), you             select the data source, including the data filtering criteria that the system applies to             select the data.  For a row, column, or unit, you can use the Data Source Editor                 dialog box to limit the data displayed in the report. For example, by selecting a                 value in the  Ledger  box of this dialog box, you specify the                 ledger for which the data will be displayed in the report. To Select the Data Source Open the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010),   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020), or   ([~/?ScreenId=CS206030|CS206030]) Unit Sets (CS206030) form. Open the Data Source Editor dialog box by clicking the magnifier icon in the                          Data Source  cell of the required row, column or                     unit. Use the Data Source Editor dialog box to select the needed criteria. For more                     information, see  Data Source Editor. Click  OK  to save your selections, close the dialog box,                     and return to the form you were using. On the form toolbar, click  Save  to preserve the data                     source criteria you selected. ]]></column>
		</row>
		<row PageID="7c526367-736f-4a8d-b191-e8c980124435" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="f26751f5-cc1c-4a47-ce4e-02eeb555c060" RecordSourceID="22377">
			<column name="Content"><![CDATA[
An analytical report can be published on the Acumatica ERP site to become available to the Acumatica ERP application users. To publish the report, use the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form. 
==To publish an Analytical Report using Report Definitions Form==[anchor|#_40b432c9-a725-4b17-bc2c-0318f39eb8e3]
#Open the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form.
#In the '''Code''' box, select the report to publish.
#Select the '''Make Visible on the UI''' check box in the Site Map section. The boxes in the section become available for editing. 
#In the '''Title''' box of the Site Map section, enter the report title that will be displayed in the menu.
#In the '''Workspace''' and '''Category''' boxes select needed workspace and category.
#Click '''Save''' on the form toolbar.
{br}

After the report is published, the users who will generate the report must be granted access rights to this report. For more information about access rights, see [HelpRoot_FormReference\SM_20_10_20|Access Rights by Screen].]]></column>
			<column name="PlainText"><![CDATA[To Publish the Analytical Report An analytical report can be published on the  Acumatica ERP site to become available to the  Acumatica ERP application users. To publish the report, use the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form.  To publish an Analytical Report using Report Definitions Form Open the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form. In the  Code  box, select the report to publish. Select the  Make Visible on the UI  check box in the Site 					Map section. The boxes in the section become available for editing.  In the  Title  box of the Site Map section, enter the 					report title that will be displayed in the menu. In the  Workspace  and  Category  					boxes select needed workspace and category. Click  Save  on the form toolbar. After the report is published, the users who will generate the report must be granted 				access rights to this report. For more information about access rights, see   ([~/?ScreenId=SM201020|SM201020]) Access Rights by Screen. ]]></column>
		</row>
		<row PageID="26868d9f-dc4d-4373-9318-60f3a326ec70" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="49c0cf8d-ac6f-a738-eaeb-2a1ed53935c6" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 Acumatica ERP supports sending of multiple reports created in Analytical Report Manager (ARM). The reports can be merged into a report package to be sent as a single HTML or PDF file on the [HelpRoot_FormReference\SM_20_50_60|Send Reports] ([~/?ScreenId=SM205060|SM205060]) form.{br}

To merge the ARM reports:[anchor|#_a586968a-761c-44c8-96a1-581059a17ca4]
#On an ARM report form, set up and schedule a template for every report that you want to merge. For details, see [HelpRoot_GettingStarted\GS__how_Create_Report_Templates|To Create, Remove, and Schedule a Report Template].
#On the report form toolbar, click '''Schedule Template''', the '''Select Schedule Name''' dialog box opens.
#In the '''Select Schedule Name''' dialog box Select the '''Merge Reports''' check box and select a value in the '''Merging Order''' box for every report to be merged. The '''Merging Order''' box value indicates the position of the report in the resulting merged document.
#Navigate to the [HelpRoot_FormReference\SM_20_50_60|Send Reports] ([~/?ScreenId=SM205060|SM205060]) form, and process the merged reports.
]]></column>
			<column name="PlainText"><![CDATA[To Merge Analytical Reports  Acumatica ERP supports sending of multiple reports created in Analytical Report Manager (ARM).                 The reports can be merged into a report package to be sent as a single HTML or PDF                 file on the   ([~/?ScreenId=SM205060|SM205060]) Send                     Reports Send Reports (SM205060) form. To merge the ARM reports: On an ARM report form, set up and schedule a template for every report that you                     want to merge. For details, see  To Create, Remove, and Schedule a Report Template To Create, Remove, and Schedule a Report Template. On the report form toolbar, click  Schedule Template , the                          Select Schedule Name  dialog box opens. In the  Select Schedule Name  dialog box Select the                          Merge Reports  check box and select a value in the                          Merging Order  box for every report to be merged. The                          Merging Order  box value indicates the position of the                     report in the resulting merged document. Navigate to the   ([~/?ScreenId=SM205060|SM205060]) Send Reports Send Reports (SM205060) form, and process the merged reports. ]]></column>
		</row>
		<row PageID="8b2cceda-11d9-45b8-92ce-1dcf7dced9c7" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8770ba65-3637-ad43-f2d0-7f1b3effc164" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The Analytical Report Manager (ARM) provides the functionality to produce accurate financial reports that can be customized according to your company&rsquo;s business needs.{br}

 Acumatica ERP comes with a number of predefined Analytical reports, such as Balance sheet, Balance Sheet Comparative, Profit and Loss, Profit and Loss by Product, and Statement of Cash Flows.{br}

Each analytical report consists of the following: [anchor|#_f39264e4-bd2d-47fc-b360-221f793907cd]
*a row set, which defines the rows to be used in the report. 
*a column set, which defines the report title, column headers, and columns of the report.
*a report definition, which defines the report and links together the row set and a column set of a report and defines report parameters. The report definition is also used to easily add a report to the site map.
*a unit set, which defines units to be used for the report. With unit sets, the user can quickly filter or consolidate the report data. The use of unit sets is optional.
{br}

((({S:Warn}If you are performing the steps of this example, we recommend that you set up your system with the ''SalesDemo'' database to populate it with demo data. For more information, see [HelpRoot_Install\Installing_ERP_Instance|To Deploy an Acumatica ERP Instance].
)))The report shown in the following screenshot will be examined as an example in this topic. You can perform the steps of this example or just read about them and become familiar with the report creation process. The purpose of this example is to provide the basic information to help you understand how the ARM works. This report consists of a row set, a column set, and a unit set, as you can see on the screenshot.[anchor|#_53141b3c-859d-4d15-8670-608fa894e93b][anchor|#_5a49b195-5869-4fb3-8240-bc4273445ca8][image:UserGuide/Images/RP_tools_ARM.png|popup|Profit & Loss report|450px]{br}{TOC}
==Creating a Sample Analytical Report==To create the report, do the following:[anchor|#_64d83ddc-3ee1-4129-a924-78e705352cfa]
#Open the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form. This form is used to create reports, set up various report parameters, and select a row set, a column set, and a unit set to be used for the report.
#In the '''Code''' box of the '''Report Definition''' section, select ''DPL''.
#On the form toolbar, click '''Copy Report'''. In the '''New Report Code''' dialog box, which appears, type <tt>SAMPLE DPL</tt> as the code, and click '''Copy'''. This closes the dialog box; you are now working with the copied version of the report with the ''SAMPLE DPL'' code, which is used to identify the report.
#In the '''Title''' box, change the value to <tt>Sample Profit & Loss</tt>, and click '''Save''' on the form toolbar. Now the ''SAMPLE DPL'' report will be available to access on the site map and through standard search functionality of the UI. To find the report, you can simply type {{Sample Profit & Loss}} in the Search box.
#:The report you have just created uses a predefined row set, column set, and unit set; however, more experienced users may want to create their own sets from scratch or modify existing ones. Keep in mind that the row sets and column sets that you are working with can be used in other reports, so any modifications to existing sets may affect other reports. You can create new sets while using existing predefined sets as templates, so that making any changes to them affects only your report.
[anchor|#_1eae2cab-8d35-4fe1-adf4-40f38a395e8e]
==Previewing the Analytical Report==When the report has the required settings selected, you can preview it by doing the following:[anchor|#_8bf4cf4e-af33-4db1-9681-5680d5ead203]
#On the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form, select the needed report code in the '''Code''' box.
#Click '''Preview''' on the form toolbar.
#In the tab that opens, review the generated report and see if the changes you have made suit your needs.

==Creating a New Row Set==
You use row sets to define the rows and row headers of the report.{br}

The sample report is now configured with the same row set that is used by the predefined ''DPL - Profit and Loss'' analytical report. You can use the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form not only to select the row set to be used in the report, but also to review and quickly modify the specified row set or even create a new one. To modify row set, do the following:[anchor|#_77813ce9-2e60-4177-b8bd-b4065aca71da]
#On the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form for the report you have created (with the ''SAMPLE DPL'' code), click the '''Edit''' button, which is right of the '''Row Set''' box. 
#:This opens the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form in a new browser tab with the row set selected. You can use this form to modify the row set or to copy one and create a new row set.
#On the form toolbar, click '''Copy Row Set'''. In the '''New Row Set Code''' dialog box, which appears, type <tt>SAMPLE DPL</tt> as the code, and click '''Copy'''. This closes the dialog box; the system returns you to the [HelpRoot_FormReference\CS_20_60_10|Row Sets] form with the copied version of the row set, which has the ''SAMPLE DPL'' code.
#:In this example, you will enhance the report with a '''Warehouse Assets''' section. To do this, you need to add two more rows to the ''SAMPLE DPL'' row set.
#On the table toolbar click '''Add Row'''. The row is added to the end of the list.
#In the respective columns of the newly added row, specify the following settings:
#*'''Code''': Type <tt>0048</tt>. This value will be used by the ARM to specify the position of the row in the list.
#*'''Description''': Type <tt>Warehouse Assets</tt>. This text will be displayed as the row header.
#*'''Type''': Select ''Caption''. This value indicates the type of the row.
#*'''Style''': Select <tt>Bold, Font Size 14</tt>.
#On the table toolbar, click '''Add Row'''. 
#In the respective columns of the newly added row, specify the following settings:
#*'''Code''': Type <tt>0049</tt>. This value indicates the position of the row in the list. With this code specified, the row will be displayed after the row that has the <tt>0048</tt> code.
#*'''Type''': Select ''GL''. The ''GL'' type gives you the ability to use actual ledger data.
#*In the '''Data Source''' box, click the magnifier icon, and in the dialog box that opens, select the following values: '''Expand''': Select ''Account''; '''Row Description''': Select ''Description-Code''; '''Account Class''': Select ''WAREHOUSE''. 
#*:With these settings, the expanded row will be displayed in the report, showing warehouse assets with each account in a separate line with a short description and a code.
#Click '''Save''' on the form toolbar.
#Go back to the browser tab with the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form with the ''SAMPLE DPL'' code selected, and enter '' SAMPLE DPL'' in the '''Row Sets''' box.
#Click '''Save''' on the form toolbar.
#Preview the report to verify that the new rows with warehouse assets are displayed properly. 
For more information about row sets in the Analytical Report Manager, see [HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets]..
==Creating a New Column Set==
Column sets give you the convenience to work with various types of information, such as date ranges or financial periods. Column sets can have columns with calculated values.{br}

The sample report is now set up with the same column set as that used by the predefined ''Profit & Loss'' analytical report. You can use the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form not only to select the column set to be used in the report, but also to review and quickly modify the column set or even create a new one. To modify the column set, do the following:
#On the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form for the report you have created (with the ''SAMPLE DPL'' code), click the '''Edit''' button to the right of the '''Column Set''' box. 
#:The system opens the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form in a new browser tab with the column set selected. You can use this form to modify a column set or to copy one and create a new column set.
#On the form toolbar, click '''Copy Column Set'''. In the '''New Column Set Code''' dialog box, which appears, type <tt>SAMPLE DPL</tt> as the code, and click '''Copy'''. This closes the dialog box; the system returns you to the the [HelpRoot_FormReference\CS_20_60_20|Column Sets] form with the copied version of the column set, which has the ''SAMPLE DPL'' code.
#:In this example, you will enhance the report with a column displaying the beginning balance of the selected ledger. To do this, you need to add a column in the lower table of the ''SAMPLE DPL'' column set.
#On the table toolbar of the lower table, click '''New'''. This will add column '''D''' to the upper and lower tables.
#Use the upper table to set up the header for the new column. To do this, in the upper table, in the fourth row of the new column '''D''', type <tt>=&rsquo;Beginning Balance&rsquo;</tt>
#Copy the style of the '''C''' column by clicking the fourth row of the '''C''' column and clicking '''Copy Style''' on the table toolbar. Then select the fourth row of the '''D''' column and click '''Paste Style''' on the table toolbar.
#Similarly, as described in the previous step, copy and paste the style of the fifth row of the '''C''' column to the fifth row of the '''D''' column.
#In the lower table, select the following settings for the '''D''' column:
#*'''Type''': Select ''GL''.
#*'''Format''': Type <tt>#,##0.00</tt>.
#*'''Data Source''': Click the magnifier icon, and in the dialog box that opens, select ''Beg. Balance'' in the '''Amount Type''' box.
#Click '''Save''' on the form toolbar.
#Go back to the browser tab with the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form with the ''SAMPLE DPL'' code selected, and select ''SAMPLE DPL'' in the '''Column Sets''' box.
#Click '''Save''' on the form toolbar.
#Preview the report to verify that the new column with the beginning balance is displayed properly. 
#:For more information about column sets in the Analytical Report Manager, see [HelpRoot_ReportingTools\CS__ARM_Column_Set|Column Sets]..

==Reviewing Unit Sets==
You can use unit sets to aggregate report data, so that multiple reports can be broken down and consolidated.{br}

The sample report is now set up with the same '''Unit Set''' as that of the predefined ''Profit & Loss'' analytical report. You can use the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form not only to select the '''Unit Set''' to be used in the report, but also to review and quickly modify the '''Unit Set''' or even create a new one. To modify column set, do the following:[anchor|#_208ec49f-291c-4c3e-b9f5-516f8ce87188]
#On the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form for the report you have created (with the ''SAMPLE DPL'' code), select ''PRODUCT'' in the '''Unit Set''' box.
#Click '''Save''' on the form toolbar. 
#:The selected unit set will be used for the report, which means that you can quickly filter or consolidate the report data by the product groups set up on the [HelpRoot_FormReference\CS_20_60_30|Unit Sets] ([~/?ScreenId=CS206030|CS206030]) form.
#Preview the report to verify that the selected unit set grouping entries by product groups are displayed properly.
For more information about unit sets in the Analytical Report Manager, see [HelpRoot_ReportingTools\CS__ARM_Unit_Set|Unit Sets]..]]></column>
			<column name="PlainText"><![CDATA[Example: Designing an Analytical Report The Analytical Report Manager (ARM) provides the functionality to produce accurate         financial reports that can be customized according to your company's business needs.  Acumatica ERP comes with a number of predefined Analytical reports, such as Balance sheet, Balance         Sheet Comparative, Profit and Loss, Profit and Loss by Product, and Statement of Cash         Flows. Each analytical report consists of the following:  a row set, which defines the rows to be used in the report.  a column set, which defines the report title, column headers, and columns of the             report. a report definition, which defines the report and links together the row set and a             column set of a report and defines report parameters. The report definition is also used             to easily add a report to the site map. a unit set, which defines units to be used for the report. With unit sets, the user             can quickly filter or consolidate the report data. The use of unit sets is             optional. If you are performing the steps of this example, we recommend that you set up your           system with the  SalesDemo  database to populate it with demo data. For more           information, see  To Deploy an Acumatica ERP Instance. The report shown in the following screenshot will be examined as an example in         this topic. You can perform the steps of this example or just read about them and become         familiar with the report creation process. The purpose of this example is to provide the         basic information to help you understand how the ARM works. This report consists of a row         set, a column set, and a unit set, as you can see on the screenshot. Profit & Loss report Creating a Sample Analytical Report To create the report, do the         following: Open the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form. This form is           used to create reports, set up various report parameters, and select a row set, a column           set, and a unit set to be used for the report. In the  Code  box of the  Report Definition            section, select  DPL . On the form toolbar, click  Copy Report . In the  New             Report Code  dialog box, which appears, type  SAMPLE             DPL  as the code, and click  Copy . This closes the           dialog box; you are now working with the copied version of the report with the  SAMPLE             DPL  code, which is used to identify the report. In the  Title  box, change the value to  Sample Profit             & Loss , and click  Save  on the form toolbar. Now           the  SAMPLE DPL  report will be available to access on the site map and through           standard search functionality of the UI. To find the report, you can simply type              Sample Profit & Loss  in the Search box. The report you have just             created uses a predefined row set, column set, and unit set; however, more experienced             users may want to create their own sets from scratch or modify existing ones. Keep in             mind that the row sets and column sets that you are working with can be used in other             reports, so any modifications to existing sets may affect other reports. You can create             new sets while using existing predefined sets as templates, so that making any changes             to them affects only your report. Previewing the Analytical         Report When the report has the required settings selected, you can preview it by       doing the following: On the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form, select the needed           report code in the  Code  box. Click  Preview  on the form toolbar. In the tab that opens, review the generated report and see if the changes you have made           suit your needs. Creating a New Row Set You use row sets to define the rows and row         headers of the report. The sample report is now configured with the same row set that         is used by the predefined  DPL - Profit and Loss  analytical report. You can use the             ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form not only to select the row         set to be used in the report, but also to review and quickly modify the specified row set or         even create a new one. To modify row set, do the following: On the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form for the report             you have created (with the  SAMPLE DPL  code), click the                Edit  button, which is right of the  Row               Set  box.  This opens the   ([~/?ScreenId=CS206010|CS206010]) Row Sets               (CS206010) form in a new browser tab with the row set selected. You can use this form               to modify the row set or to copy one and create a new row set. On the form toolbar, click  Copy Row Set . In the  New               Row Set Code  dialog box, which appears, type  SAMPLE               DPL  as the code, and click  Copy . This closes the             dialog box; the system returns you to the   ([~/?ScreenId=CS206010|CS206010]) Row Sets             form with the copied version of the row set, which has the  SAMPLE DPL  code. In               this example, you will enhance the report with a  Warehouse                 Assets  section. To do this, you need to add two more rows to the                  SAMPLE DPL  row set. On the table toolbar click  Add Row . The row is added to the end             of the list. In the respective columns of the newly added row, specify the following settings: Code : Type  0048 . This value will be                 used by the ARM to specify the position of the row in the list. Description : Type  Warehouse Assets .                 This text will be displayed as the row header. Type : Select  Caption . This value indicates the type                 of the row. Style : Select  Bold, Font Size                 14 . On the table toolbar, click  Add Row .  In the respective columns of the newly added row, specify the following settings: Code : Type  0049 . This value                 indicates the position of the row in the list. With this code specified, the row                 will be displayed after the row that has the  0048  code. Type : Select  GL . The  GL  type gives you the                 ability to use actual ledger data. In the  Data Source  box, click the magnifier icon, and in                 the dialog box that opens, select the following values:                    Expand : Select  Account ;  Row                   Description : Select  Description-Code ;  Account                   Class : Select  WAREHOUSE .  With these settings, the expanded                   row will be displayed in the report, showing warehouse assets with each account in                   a separate line with a short description and a code. Click  Save  on the form toolbar. Go back to the browser tab with the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form             with the  SAMPLE DPL  code selected, and enter   SAMPLE DPL  in the                Row Sets  box. Click  Save  on the form toolbar. Preview the report to verify that the new rows with warehouse assets are displayed             properly.  For more information about row sets in the Analytical Report Manager, see  Row Sets.. Creating a New Column Set Column sets give you the convenience to work with various types of information, such as         date ranges or financial periods. Column sets can have columns with calculated values. The sample report is now set up with the same column set as that used by the predefined            Profit & Loss  analytical report. You can use the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form not only to select the column set to be used in the         report, but also to review and quickly modify the column set or even create a new one. To         modify the column set, do the following: On the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form for the report you have             created (with the  SAMPLE DPL  code), click the  Edit  button             to the right of the  Column Set  box.  The system opens the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form in a new browser tab with               the column set selected. You can use this form to modify a column set or to copy one               and create a new column set. On the form toolbar, click  Copy Column Set . In the                New Column Set Code  dialog box, which appears, type                SAMPLE DPL  as the code, and click  Copy .             This closes the dialog box; the system returns you to the the   ([~/?ScreenId=CS206020|CS206020]) Column Sets form with the copied version of the column             set, which has the  SAMPLE DPL  code. In this example, you will enhance the               report with a column displaying the beginning balance of the selected ledger. To do               this, you need to add a column in the lower table of the  SAMPLE DPL  column               set. On the table toolbar of the lower table, click  New . This will             add column  D  to the upper and lower tables. Use the upper table to set up the header for the new column. To do this, in the upper             table, in the fourth row of the new column  D , type                ='Beginning Balance' Copy the style of the  C  column by clicking the fourth row of             the  C  column and clicking  Copy Style  on             the table toolbar. Then select the fourth row of the  D  column and             click  Paste Style  on the table toolbar. Similarly, as described in the previous step, copy and paste the style of the fifth             row of the  C  column to the fifth row of the                D  column. In the lower table, select the following settings for the  D                column: Type : Select  GL . Format : Type  #,##0.00 . Data Source : Click the magnifier icon, and in the dialog                 box that opens, select  Beg. Balance  in the  Amount Type                  box. Click  Save  on the form toolbar. Go back to the browser tab with the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form             with the  SAMPLE DPL  code selected, and select  SAMPLE DPL  in the                Column Sets  box. Click  Save  on the form toolbar. Preview the report to verify that the new column with the beginning balance is             displayed properly.  For more information about column sets in the Analytical Report               Manager, see  Column Sets.. Reviewing Unit Sets You can use unit sets to aggregate report data, so         that multiple reports can be broken down and consolidated. The sample report is now         set up with the same  Unit Set  as that of the predefined  Profit           & Loss  analytical report. You can use the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form not only to select the  Unit Set  to         be used in the report, but also to review and quickly modify the  Unit           Set  or even create a new one. To modify column set, do the following: On the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form for the report you           have created (with the  SAMPLE DPL  code), select  PRODUCT  in the              Unit Set  box. Click  Save  on the form toolbar.  The selected unit set will be             used for the report, which means that you can quickly filter or consolidate the report             data by the product groups set up on the   ([~/?ScreenId=CS206030|CS206030]) Unit Sets             (CS206030) form. Preview the report to verify that the selected unit set grouping entries by product           groups are displayed properly. For more information about unit sets in the Analytical Report Manager, see  Unit Sets.. ]]></column>
		</row>
		<row PageID="ec388462-018b-411a-9863-be63b870f409" Language="en-US" PageRevisionID="1" Content="&#xA;The following Analytical Report Manager (ARM) reference documents will help you to use advanced cell formatting features and set up the desired printing style in your report.&#xA;==In This Part==[anchor|#_3227b0ac-39f5-4c56-bc9c-2c993b5dac39]&#xA;*[HelpRoot_ReportingTools\CS__ARM_Cells_Formatting|Cell Formatting]&#xA;*[HelpRoot_ReportingTools\CS__ARM_Functions|Formula Functions]&#xA;*[HelpRoot_ReportingTools\CS__ARM_Operators|Formula Operators]&#xA;*[HelpRoot_ReportingTools\CS__ARM_Formula_Parameters|Formula Parameters]&#xA;*[HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]&#xA;" PlainText="ARM Reference The following Analytical Report Manager (ARM) reference documents will help you to use         advanced cell formatting features and set up the desired printing style in your report. In This Part Cell FormattingFormula FunctionsFormula OperatorsFormula ParametersPrinting Style" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="41a41a42-da08-269e-5c9d-f362cc511bb8" RecordSourceID="22377" />
		<row PageID="13a86d40-60db-4339-92aa-d7959c23ac2d" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7bec7f1b-2869-29ae-62a1-cad624e12c58" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You use the format functions specified for the '''Format''' attribute on the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form (for a column cell) and on the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form (for a row cell). To specify the format for the column or row cells, you can use the standard formats defined for the format function in .Net. Standard (numeric and datetime) and user-defined data formats are supported. {br}

The standard numeric data formats use the form ''Axx'', where ''A'' is a single alphabetic character called the format specifier, and ''xx'' is an optional integer called the precision specifier. The precision specifier ranges from 0 to 99 and controls the number of significant digits or zeros to the right of the decimal point. The format string cannot contain spaces. {br}

The standard ''DateTime'' format string consists of a single format specifier character. If the format specifier is not found in the list of standard string format specifiers, a runtime exception occurs. If the format string is longer than a single character (even if the extra characters are blanks), the format string is interpreted as a custom format string. {br}

If the standard numeric format specifiers do not provide the type of formatting required by the report, you can use custom format strings. The custom format strings use the format characters to specify what symbol should be placed in the specific position of the format string. Any numeric format string that does not fit the definition of a standard numeric format string is interpreted as a custom numeric format string. Thus, the format string ''c!'' is interpreted as a custom format string because it contains two alphabetic characters, even though the character ''c'' is a standard numeric format specifier. The custom ''DateTime'' format specifiers can be used to create a custom ''DateTime'' format string. [anchor|#_ezs_qwh_1h]
===Standard Numeric Format Strings===The following table includes the standard numeric format strings and their descriptions. Note that the result string produced by these format specifiers is influenced by the settings specified in the '''Regional Options''' control panel of your machine. Computers using different settings will generate different result strings. 
{| class="checklist" | width="100%" 
|- 
!width="19%" ! Format specifier
!width="22%" ! Name
!width="58%" ! Description
|- 
| ''C'' or ''c''
|  Currency
| 
 The numbers in the report row or column will be converted to strings that represent the currency amounts. The precision specifier indicates the number of decimal places to be shown.{br}

'''Examples''': ''c'', ''c2''{br}

 You can use a currency symbol in the report rows, such as the U.S. dollar symbol (''$'') or the Euro symbol (''€''). To set up the required symbol, use the format string as shown in the following example.{br}

'''Example (for Euro)''': ''\€ #,##0.00''{br}

 Any symbol that you type after the backslash (''\'') will be printed as it is.
|- 
| ''D'' or ''d''
|  Decimal
| 
This format is supported for integral types only. The number is converted to a string of decimal digits (0 to 9), preceded by a minus sign if the number is negative. The precision specifier indicates the minimum number of digits in the resulting string. If required, the number is padded with zeros to its left to produce the number of digits given by the precision specifier. The exponent always consists of a plus or minus sign and a minimum of three digits. The exponent is padded with zeros to meet this minimum, if required.{br}

'''Examples''': ''d'', ''d4''
|- 
| __ ''E''__ or __''e''__
|  Scientific (exponential; this format is very seldom used in analytical reports)
| 
 The number is converted to a string of the form ''-d.ddd... E+ddd'' or ''-d.ddd... e+ddd'', where each ''d'' indicates a digit (0 to 9). The string starts with a minus sign if the number is negative. One digit always precedes the decimal point. The precision specifier indicates the appropriate number of digits after the decimal point. If the precision specifier is omitted, a default of six digits after the decimal point is used. The case of the format specifier indicates whether to prefix the exponent with an ''E'' or an ''e''. The exponent always consists of a plus or minus sign and a minimum of three digits. The exponent is padded with zeros to meet this minimum, if required.{br}

'''Examples''': ''e'', ''e2''
|- 
|  ''F'' or ''f''
|  Fixed point
| 
 The number is converted to a string of the form ''-ddd.ddd...'' where each ''d'' indicates a digit (0 to 9). The string starts with a minus sign if the number is negative. The precision specifier indicates the number of decimal places to be shown.{br}

'''Examples''': ''f'', ''f4''
|- 
|  ''G'' or ''g''
|  General
|  The number is converted to the most compact of the fixed-point or scientific notation, depending on the type of the number and whether a precision specifier is present. If the precision specifier is omitted or zero, the type of the number determines the default precision, as indicated by the following list. [anchor|#_b1t_qwh_1h]
*Byte or SByte: 3
*Int16 or UInt16: 5
*Int32 or UInt32: 10
*Int64 or UInt64: 19
*Single: 7
*Double: 15
*Decimal: 29

Fixed-point notation is used if the exponent that would result from expressing the number in scientific notation is greater than –5 and less than the precision specifier; otherwise, scientific notation is used. The result contains a decimal point, if required, and trailing zeros are omitted. If the precision specifier is present and the number of significant digits in the result exceeds the specified precision, then the excess trailing digits are removed by rounding. If scientific notation is used, the exponent in the result is preceded by ''E'' if the format specifier is ''G'', or ''e'' if the format specifier is ''g''. The exception to the preceding rule is if the number is a decimal and the precision specifier is omitted. In that case, fixed-point notation is always used and trailing zeros are preserved.{br}

'''Examples''': ''g'', ''g4''
|- 
|  ''N'' or ''n''
|  Number
| 
 The number is converted to a string of the form ''-d,ddd,ddd.ddd...'' where each ''d'' indicates a digit (0 to 9). The string starts with a minus sign if the number is negative. Thousand separators are inserted between each group of three digits to the left of the decimal point. The precision specifier indicates the number of decimal places to be shown. {br}

'''Examples''': ''n'', ''n4''
|- 
|  ''P'' or ''p''
|  Percent
| 
 The number is converted to a string that represents a percent. The converted number is multiplied by 100 in order to be presented as a percentage. The precision specifier indicates the number of decimal places to be shown.{br}

'''Examples''': ''p'', ''p4''
|- 
|  ''R'' or ''r''
|  Round-trip (this format is very seldom used in analytical reports)
| 
 The round-trip specifier guarantees that a numeric value converted to a string will be parsed back into the same numeric value. When a numeric value is formatted using this specifier, it is first tested using the general format, with 15 spaces of precision for a ''Double'' and 7 spaces of precision for a ''Single''. If the value is successfully parsed back to the same numeric value, it is formatted by using the general format specifier. However, if the value is not successfully parsed back to the same numeric value, then the value is formatted by using 17 digits of precision for a ''Double'' and 9 digits of precision for a ''Single''. Although a precision specifier can be appended to the round-trip format specifier, it is ignored. Round trips are given precedence over precision when you use this specifier. This format is supported by floating-point types only.{br}

'''Example''': ''r''
|- 
|  ''X'' or ''x''
|  Hexadecimal (this format is very seldom used in analytical reports)
| 
 The number is converted to a string of hexadecimal digits. The case of the format specifier indicates whether to use uppercase or lowercase characters for the hexadecimal digits greater than 9. For example, use ''X'' to produce ''ABCDEF'', and ''x'' to produce ''abcdef''. The precision specifier indicates the minimum number of digits in the resulting string. If required, the number is padded with zeros to its left to produce the number of digits given by the precision specifier. This format is supported for integral types only.{br}

'''Examples''': ''x'' ''X''
|}[anchor|#_vlr_tvh_1h]
===Custom Numeric Format Strings===The following table shows the characters you can use to create custom numeric format strings and their definitions. Note that the result strings produced by some of these characters are influenced by the settings in the '''Regional Options''' control panel. Computers that use different cultures will generate different result strings. 
{| class="checklist" | width="100%" 
|- 
!width="22%" ! Format character
!width="19%" ! Name
!width="57%" ! Description
|- 
| ''0''
|  Zero placeholder
|  If the value being formatted has a digit in the position where the ''0'' appears in the format string, then that digit is copied to the result string. The position of the leftmost ''0'' before the decimal point and the rightmost ''0'' after the decimal point determines the range of digits that are always present in the result string. The ''00'' specifier causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used. For example, formatting 34.5 with ''00'' would result in the value 35.
|- 
| ''#''
|  Digit placeholder
| 
 If the value being formatted has a digit in the position where the ''#'' appears in the format string, then that digit is copied to the result string. Otherwise, nothing is stored in that position in the result string. Note that this specifier never displays the ''0'' character if it is not a significant digit, even if ''0'' is the only digit in the string. This specifier displays the ''0'' character if it is a significant digit in the number being displayed. The ''##'' format string causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used. For example, formatting 34.5 with ''##'' would result in the value 35.{br}

 Examples: {br}

{{,##0.00}} }}{br}

{{"(###) ### - ####"}}
|- 
| ''.''
|  Decimal point
|  The first ''.'' character in the format string determines the location of the decimal separator in the formatted value; any additional ''.'' characters are ignored. The actual character used as the decimal separator is determined by the settings in the '''Regional Options''' control panel.
|- 
| '',''
|  Thousand separator and number scaling
|  This character serves two purposes. First, if the format string contains a '','' character between two digit placeholders (0 or #) and to the left of the decimal point if one is present, then the output will have thousand separators inserted between each group of three digits (counting from the right) to the left of the decimal separator. The actual character used as the decimal separator in the result string is determined by the settings in the ''Regional Options'' control panel. Second, if the format string contains at least one '','' character immediately to the left of the decimal point, then the number will be divided by the number of '','' characters multiplied by 1000 before it is formatted. For example, the format string ''0,,'' will represent 100 million as simply 100. The '','' character indicates that scaling does not include thousand separators in the formatted number. Thus, to scale a number by 1 million and insert thousand separators, you would use the format string ''#,##0,,''.
|- 
| ''%''
|  Percentage placeholder
|  The presence of the ''%'' character in a format string causes a number to be multiplied by 100 before it is formatted. The appropriate symbol is inserted in the number itself at the location where the ''%'' appears in the format string. The percent character used is dependent on the settings in the '''Regional Options''' control panel.
|- 
| ''E0'' ''E+0'' ''E-0'' ''e0''e+0
''e-0''
|  Scientific notation
|  If any of the strings ''E'', ''E+'', ''E-'', ''e'', ''e+'', or ''e-'' is present in the format string and followed immediately by at least one ''0'' character, then the number is formatted using scientific notation with an ''E'' or ''e'' inserted between the number and the exponent. The number of ''0'' characters following the scientific notation indicator determines the minimum number of digits to output for the exponent. The ''E+'' and ''e+'' formats indicate that a sign character (plus or minus) should always precede the exponent. The ''E'', ''E-'', ''e'', and ''e-'' formats indicate that a sign character should only precede negative exponents.
|- 
| ''\''
|  Escape character
|  In C# and C++, the backslash character causes the next character in the format string to be interpreted as an escape sequence. This character is used with traditional formatting sequences like ''\n'' (new line).
|- 
| ''&rsquo;ABC&rsquo;'' ''&ldquo;ABC&ldquo;''
|  Literal string
|  Characters enclosed in single or double quotes are copied to the result string literally, and do not affect formatting.
|- 
| '';''
|  Section separator
|  This character is used to separate sections for positive, negative, and zero numbers in the format string.
|- 
| ''Other''
|  All other characters
|  All other characters are copied to the result string as literals in the position in which they appear.
|}[anchor|#_kqn_1wh_1h]
===Standard DateTime Format Strings===
The following table describes the standard date/time format specifiers. The output of these format specifiers is influenced by the current culture and the settings in the '''Regional Options''' control panel. 
{| class="checklist" | width="100%" 
|- 
!width="18%" ! Format character
!width="24%" ! Name
!width="57%" ! Description
|- 
| ''d''
|  Short date pattern
| 
Displays a value in the short date format. {br}

Depending on the settings in the '''Regional Options''' control panel, the value can be in one of the following formats: [anchor|#ul_jj5_d3x_2r]
*''M/d/yyyy'' (for ''en-US'' local settings)
*''yyyy/MM/dd'' (for ''ja-JP'' local settings)
*''dd/MM/yyyy'' (for ''fr-FR'' local settings)
{br}

'''Example''': ''d''
|- 
|  ''D''
|  Long date pattern
| 
 Displays a value in the long date format. {br}

Depending on the settings in the '''Regional Options''' control panel, the value can be in one of the following formats: [anchor|#ul_gw2_43x_2r]
*''dddd, MMMM dd, yyyy'' (for ''en-US'' local settings) 
*''yyyy&rsquo;?&rsquo;M&rsquo;?&rsquo;d&rsquo;?&rsquo;'' (for ''ja-JP'' local settings)
*''dddd d MMMM yyyy'' (for ''fr-FR'' local settings)
{br}

'''Example''': ''D''
|- 
|  ''t''
|  Short time pattern
| 
 Displays a value in the short time format. {br}

Depending on the settings in the '''Regional Options''' control panel, the value can be in one of the following formats:[anchor|#ul_ff3_s3x_2r]
*''h:mm tt'' (for ''en-US'' local settings) 
*''H:mm'' (for ja-JP local settings)
*''HH:mm'' (for fr-FR local settings)
{br}

'''Example''': ''t''
|- 
|  ''T''
|  Long time pattern
| 
 Displays a value in the long time format. {br}

Depending on the settings in the '''Regional Options''' control panel, the value can be in one of the following formats: [anchor|#ul_ydk_v3x_2r]
*''h:mm:ss tt'' (for ''en-US'' local settings)
*''H:mm:ss'' (for ''ja-JP'' local settings)
*''HH:mm:ss'' (for ''fr-FR'' local settings)
{br}

'''Example''': ''T''
|- 
|  ''f''
|  Full date/time pattern (short time)
| 
 Displays a value in a combination of the long date and short time format patterns, separated by a space.{br}

'''Example''': ''f''
|- 
|  ''F''
|  Full date/time pattern (long time)
| 
 Displays a value in a full date/time format. {br}

Depending on the settings in the '''Regional Options''' control panel, the value can be in one of the following formats:[anchor|#ul_ihz_z3x_2r]
*''yyyy h:mm:ss tt'' (for ''en-US'' local settings)
*''yyyy&rsquo;?&rsquo;M&rsquo;?&rsquo;d&rsquo;?&rsquo; H:mm:ss'' (for ''ja-JP'' local settings)
*''dddd d MMMM yyyy HH:mm:ss'' (for ''fr-FR'' local settings)
{br}

'''Example''': ''F''
|- 
|  ''g''
|  General date/time pattern (short time)
| 
Displays a combination of the short date and short time patterns, separated by a space.{br}

'''Example''': ''g''
|- 
|  ''G''
|  General date/time pattern (long time)
| 
 Displays a combination of the short date and long time patterns, separated by a space.{br}

'''Example''': ''G''
|- 
|  ''M'' or ''m''
|  Month day pattern
| 
 Displays the day of month defined by the value. {br}

Depending on the settings in the '''Regional Options''' control panel, the value can be in one of the following formats:[anchor|#ul_kjt_djx_2r]
*''MMMM dd'' (for ''en-US'' local settings)
*''M&rsquo;?&rsquo;d&rsquo;?&rsquo;'' (for ''ja-JP'' local settings)
*''d MMMM'' (for ''fr-FR'' local settings
{br}

'''Example''': ''M''{{m}}
|- 
| ''R'' or ''r''
|  RFC1123 pattern
| 
 Displays a time value based on the Internet Engineering Task Force (IETF) Request for Comments (RFC) 1123 specification. This specification sets the following common time format (regardless of the settings in the '''Regional Options''' control panel): ''ddd, dd MMM yyyy HH&rsquo;:&rsquo;mm&rsquo;:&rsquo;ss &rsquo;GMT&rsquo;''.{br}

 Formatting does not modify the ''DateTime'' value; therefore, you must adjust the value to GMT before formatting. {br}

'''Examples''': ''R'', {{r}}
|- 
| ''s''
|  Sortable date/time pattern; conforms to ISO 8601
| 
 Displays a date and time in ISO 8601-compatible format. The format uses the following custom format: ''yyyy-MM-ddTHH:mm:ss''.{br}

'''Example''': ''s''
|- 
|  ''u''
|  Universal sortable date/time pattern
| 
 Displays a time value in a standard defined form. This specification sets the following common time format (regardless of the settings in the '''Regional Options''' control panel): ''yyyy-MM-dd HH:mm:ssZ''.{br}

 No time zone conversion is done when the date and time is formatted; therefore, convert a local date and time to universal time before using this format specifier. {br}

'''Example''': ''u''
|- 
|  ''Y'' or ''y''
|  Year month pattern
| 
 Displays a year value. {br}

Depending on the settings in the '''Regional Options''' control panel, the value can be in one of the following formats:[anchor|#ul_icl_vjx_2r]
*''MMMM, yyyy'' (for ''en-US'' local settings)
*''yyyy&rsquo;?&rsquo;M&rsquo;?&rsquo;'' (for ''ja-JP'' local settings)
*''MMMM yyyy'' (for ''fr-FR'' local settings)
{br}

'''Examples''': ''Y''{{y}}
|}[anchor|#_dnh_fwh_1h]
===Custom DateTime Format Strings===
The following table describes the custom date/time format specifiers. The output of these format specifiers is influenced by the current culture and the settings in the '''Regional Options''' control panel.
{| class="checklist" | width="100%" 
|- 
!width="36%" ! Format specifier
!width="63%" ! Description
|- 
| ''d''
|  Displays the current day of the month, expressed as a number between 1 and 31. If the day is a single digit only (1 to 9), then it is displayed as a single digit. Note that if the ''d'' format specifier is used without other custom format strings, it is interpreted as the standard format specifier for the short date pattern. If the ''d'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''ddd''
|  Displays the abbreviated name of the day for the specified DateTime.
|- 
| ''dddd'' (plus any number of additional ''d'' characters)
|  Displays the full name of the day for the specified DateTime.
|- 
| ''f''
|  Displays the most significant digit of the seconds fraction. Note that if the ''f'' format specifier is used alone, without other custom format strings, it is interpreted as the full (long date + short time) format specifier. If the ''f'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''ff''
|  Displays the two most significant digits of the seconds fraction.
|- 
| ''fff''
|  Displays the three most significant digits of the seconds fraction.
|- 
| ''ffff''
|  Displays the four most significant digits of the seconds fraction.
|- 
| ''fffff''
|  Displays the five most significant digits of the seconds fraction.
|- 
| ''ffffff''
|  Displays the six most significant digits of the seconds fraction.
|- 
| ''fffffff''
|  Displays the seven most significant digits of the seconds fraction.
|- 
| ''F''
|  Displays the most significant digit of the seconds fraction. Nothing is displayed if the digit is zero.
|- 
| ''FF''
|  Displays the two most significant digits of the seconds fraction. However, trailing zeros or two zero digits are not displayed.
|- 
| ''FFF''
|  Displays the three most significant digits of the seconds fraction. However, trailing zeros or three zero digits are not displayed.
|- 
| ''FFFF''
|  Displays the four most significant digits of the seconds fraction. However, trailing zeros or four zero digitsare not displayed.
|- 
| ''FFFFF''
|  Displays the five most significant digits of the seconds fraction. However, trailing zeros or five zero digits are not displayed.
|- 
| ''FFFFFF''
|  Displays the six most significant digits of the seconds fraction. However, trailing zeros or six zero digits are not displayed.
|- 
| ''FFFFFFF''
|  Displays the seven most significant digits of the seconds fraction. However, trailing zeros or seven zero digits are not displayed.
|- 
| ''g'' or ''gg'' (plus any number of additional ''g'' characters)
|  Displays the era (A.D. for example) for the specified ''DateTime'' value. Note that if the ''g'' format specifier is used alone, without other custom format strings, it is interpreted as the standard general format specifier. If the ''g'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''h''
|  Displays the hour for the specified ''DateTime'' value in the range 1 to 12. The hour represents whole hours passed since either midnight (displayed as 12) or noon (also displayed as 12). If this format is used alone, then the same hour before or after noon is indistinguishable. If the hour is a single digit (1 to 9), it is displayed as a single digit. No rounding occurs when the hour is displayed. For example, a ''DateTime'' of 5:43 returns 5.
|- 
| ''hh'', ''hh'' (plus any number of additional ''h'' characters)
|  Displays the hour for the specified DateTime value in the range 1 to 12. The hour represents whole hours passed since either midnight (displayed as 12) or noon (also displayed as 12). If this format is used alone, then the same hour before or after noon is indistinguishable. If the hour is a single digit (1 to 9), it is formatted with a preceding 0 (01-09).
|- 
| ''H''
|  Displays the hour for the specified ''DateTime'' value in the range 0 to 23. The hour represents whole hours passed since midnight (displayed as 0). If the hour is a single digit (0 to 9), it is displayed as a single digit.
|- 
| ''HH, HH'' (plus any number of additional ''H'' characters)
|  Displays the hour for the specified ''DateTime'' value in the range 0 to 23. The hour represents whole hours passed since midnight (displayed as 0). If the hour is a single digit (0 to 9), it is formatted with a preceding 0 (01 to 09).
|- 
| ''m''
|  Displays the minute for the specified ''DateTime'' value in the range 0 to 59. The minute represents whole minutes passed since the last hour. If the minute is a single digit (0 to 9), it is displayed as a single digit. Note that if the ''m'' format specifier is used alone, without other custom format strings, it is interpreted as the standard format specifier for the month-day pattern. If the ''m'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''mm'', ''mm'' (plus any number of additional ''m'' characters)
|  Displays the minute for the specified DateTime in the range 0 to 59. The minute represents whole minutes passed since the last hour. If the minute is a single digit (0 to 9), it is formatted with a preceding 0 (01 to 09).
|- 
| ''M''
|  Displays the month, expressed as a number between 1 and 12. If the month is a single digit (1 to 9), it is displayed as a single digit. Note that if the ''M'' format specifier is used alone, without other custom format strings, it is interpreted as the standard format specifier for the month-day pattern. If the ''M'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''MM''
|  Displays the month, measured as a number between 1 and 12. If the month is a single digit (1 to 9), it is formatted with a preceding 0 (01 to 09).
|- 
| ''MMM''
|  Displays the abbreviated name of the month for the specified ''DateTime'' value.
|- 
| ''MMMM''
|  Displays the full name of the month for the specified ''DateTime'' value.
|- 
| ''s''
|  Displays the seconds for the specified ''DateTime'' value in the range 0 to 59. The second represents whole seconds passed since the last minute. If the second is a single digit (0 to 9), it is displayed as a single digit only. Note that if the ''s'' format specifier is used alone, without other custom format strings, it is interpreted as the standard sortable format specifier for the date-time pattern. If the ''s'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''ss'', ''ss'' (plus any number of additional ''s'' characters)
|  Displays the seconds for the specified ''DateTime'' value in the range 0 to 59. The second represents whole seconds passed since the last minute. If the second is a single digit (0 to 9), it is displayed as a single digit only. Note that if the ''s'' format specifier is used alone, without other custom format strings, it is interpreted as the standard sortable format specifier for the date-time pattern. If the ''s'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''ss'', ''ss'' (plus any number of additional ''s'' characters)
|  Displays the seconds for the specified DateTime in the range 0 to 59. The second represents whole seconds passed since the last minute. If the second is a single digit (0 to 9), it is formatted with a preceding 0 (01 to 09).
|- 
| ''t''
|  Displays the first character of the a.m./p.m. designator for the specified ''DateTime'' value. Note that if the ''t'' format specifier is used alone, without other custom format strings, it is interpreted as the standard format specifier for the long time pattern. If the ''t'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''tt'', ''tt'' (plus any number of additional ''t'' characters)
|  Displays the a.m./p.m. designator for the specified ''DateTime'' value.
|- 
| ''y''
|  Displays the year for the specified ''DateTime'' value as a maximum two-digit number. The first two digits of the year are omitted. If the year is a single digit (1 to 9), it is displayed as a single digit. Note that if the ''y'' format specifier is used alone, without other custom format strings, it is interpreted as the standard format specifier for the short date pattern. If the ''y'' format specifier is passed with other custom format specifiers or the ''%'' character, it is interpreted as a custom format specifier.
|- 
| ''yy''
|  Displays the year for the specified ''DateTime'' value as a maximum two-digit number. The first two digits of the year are omitted. If the year is a single digit (1 to 9), it is formatted with a preceding 0 (01 to 09).
|- 
| ''yyyy''
|  Displays the year for the specified ''DateTime'' value, including the century. If the year is fewer than four digits in length, then preceding zeros are appended as necessary to make the displayed year four digits long.
|- 
| ''z''
|  Displays the time zone offset for the system&rsquo;s current time zone in whole hours only. The offset is always displayed with a leading sign (zero is displayed as ''+0''), indicating hours ahead of Greenwich mean time (+) or hours behind Greenwich mean time (–). The range of values is –12 to +13. If the offset is a single digit (0 to 9), it is displayed as a single digit with the appropriate leading sign. The setting for the time zone is specified as ''+X'' or ''–X'', where ''X'' is the offset in hours from GMT. The displayed offset is affected by daylight saving time.
|- 
| ''zz''
|  Displays the time zone offset for the system&rsquo;s current time zone in whole hours only. The offset is always displayed with a leading or trailing sign (zero is displayed as ''+00''), indicating hours ahead of Greenwich mean time (+) or hours behind Greenwich mean time (–). The range of values is –12 to +13. If the offset is a single digit (0 to 9), it is formatted with a preceding 0 (01 to 09) with the appropriate leading sign. The setting for the time zone is specified as ''+X'' or ''–X'', where ''X'' is the offset in hours from GMT. The displayed offset is affected by daylight saving time.
|- 
| ''zzz'', ''zzz'' (plus any number of additional ''z'' characters)
|  Displays the time zone offset for the system&rsquo;s current time zone in whole hours only. The offset is always displayed with a leading or trailing sign (zero is displayed as ''+00''), indicating hours ahead of Greenwich mean time (+) or hours behind Greenwich mean time (–). The range of values is –12 to +13. If the offset is a single digit (0 to 9), it is formatted with a preceding 0 (01 to 09) with the appropriate leading sign. The setting for the time zone is specified as ''+X'' or ''–X'', where ''X'' is the offset in hours from GMT. The displayed offset is affected by daylight saving time.
|- 
| '':''
|  Serves as a time separator.
|- 
| ''/''
|  Functions as a date separator.
|- 
| ''&ldquo;''
|  Indicates a quoted string. Displays the literal value of any string between two quotation marks preceded by the escape character (/).
|- 
| ''&rsquo;''
|  Indicates a quoted string. Displays the literal value of any string between two single quotation marks.
|- 
| ''%c''
|  Where ''c'' is both a standard format specifier and a custom format specifier, displays the custom format pattern associated with the format specifier. Note that if a format specifier is used alone as a single character, it is interpreted as a standard format specifier. Only format specifiers consisting of two or more characters are interpreted as custom format specifiers. In order to display the custom format for a specifier defined as both a standard and a custom format specifier, precede the specifier with a ''%'' symbol.
|- 
| ''\c''
|  Where ''c'' is any character, displays the next character as a literal. The escape character cannot be used to create an escape sequence (like ''\n'' for new line) in this context.
|}
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_ReportingTools\CS__ARM_Column_Set|Column Sets]
*[HelpRoot_ReportingTools\CS__ARM_Row_Set|Row Sets]
*[HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]
*[HelpRoot_ReportingTools\CS__ARM_Printing_Style|Printing Style]
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]]]></column>
			<column name="PlainText"><![CDATA[Cell Formatting You use the format functions specified for the  Format  attribute on the        ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form (for a column cell) and on the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form (for a row cell). To specify the format for the     column or row cells, you can use the standard formats defined for the format function in .Net.     Standard (numeric and datetime) and user-defined data formats are supported.  The standard numeric data formats use the form  Axx , where  A  is a single     alphabetic character called the format specifier, and  xx  is an optional integer called     the precision specifier. The precision specifier ranges from 0 to 99 and controls the number of     significant digits or zeros to the right of the decimal point. The format string cannot contain     spaces.  The standard  DateTime  format string consists of a single format specifier character. If     the format specifier is not found in the list of standard string format specifiers, a runtime     exception occurs. If the format string is longer than a single character (even if the extra     characters are blanks), the format string is interpreted as a custom format string.  If the standard numeric format specifiers do not provide the type of formatting required by     the report, you can use custom format strings. The custom format strings use the format     characters to specify what symbol should be placed in the specific position of the format     string. Any numeric format string that does not fit the definition of a standard numeric format     string is interpreted as a custom numeric format string. Thus, the format string  c!  is     interpreted as a custom format string because it contains two alphabetic characters, even though     the character  c  is a standard numeric format specifier. The custom  DateTime  format     specifiers can be used to create a custom  DateTime  format string.  Standard Numeric Format Strings The following table includes the standard numeric format strings and their descriptions.      Note that the result string produced by these format specifiers is influenced by the settings      specified in the  Regional Options  control panel of your machine.      Computers using different settings will generate different result strings.  Format specifier Name Description C  or  c  Currency  The numbers in the report row or column will be converted to strings that represent the          currency amounts. The precision specifier indicates the number of decimal places to be          shown. Examples :  c ,  c2  You can use a currency symbol in the report rows, such as the U.S. dollar symbol           ( $ ) or the Euro symbol ( € ). To set up the required symbol, use the format          string as shown in the following example. Example (for Euro) :  \€ #,##0.00  Any symbol that you type after the backslash ( \ ) will be printed as it is. D  or  d  Decimal This format is supported for integral types only. The number is converted to a string of          decimal digits (0 to 9), preceded by a minus sign if the number is negative. The precision          specifier indicates the minimum number of digits in the resulting string. If required, the          number is padded with zeros to its left to produce the number of digits given by the          precision specifier. The exponent always consists of a plus or minus sign and a minimum of          three digits. The exponent is padded with zeros to meet this minimum, if required. Examples :  d ,  d4 E  or  e  Scientific (exponential; this format is very seldom used in analytical         reports)  The number is converted to a string of the form  -d.ddd... E+ddd  or  -d.ddd...           e+ddd , where each  d  indicates a digit (0 to 9). The string starts with a minus          sign if the number is negative. One digit always precedes the decimal point. The precision          specifier indicates the appropriate number of digits after the decimal point. If the          precision specifier is omitted, a default of six digits after the decimal point is used.          The case of the format specifier indicates whether to prefix the exponent with an  E           or an  e . The exponent always consists of a plus or minus sign and a minimum of three          digits. The exponent is padded with zeros to meet this minimum, if required. Examples :  e ,  e2 F  or  f  Fixed point  The number is converted to a string of the form  -ddd.ddd...  where each  d           indicates a digit (0 to 9). The string starts with a minus sign if the number is negative.          The precision specifier indicates the number of decimal places to be shown. Examples :  f ,  f4 G  or  g  General  The number is converted to the most compact of the fixed-point or scientific         notation, depending on the type of the number and whether a precision specifier is present.         If the precision specifier is omitted or zero, the type of the number determines the default         precision, as indicated by the following list.  Byte or SByte: 3 Int16 or UInt16: 5 Int32 or UInt32: 10 Int64 or UInt64: 19 Single: 7 Double: 15 Decimal: 29 Fixed-point notation is used if the exponent that would result from expressing the          number in scientific notation is greater than –5 and less than the precision specifier;          otherwise, scientific notation is used. The result contains a decimal point, if required,          and trailing zeros are omitted. If the precision specifier is present and the number of          significant digits in the result exceeds the specified precision, then the excess trailing          digits are removed by rounding. If scientific notation is used, the exponent in the result          is preceded by  E  if the format specifier is  G , or  e  if the format          specifier is  g . The exception to the preceding rule is if the number is a decimal          and the precision specifier is omitted. In that case, fixed-point notation is always used          and trailing zeros are preserved. Examples :  g ,  g4 N  or  n  Number  The number is converted to a string of the form  -d,ddd,ddd.ddd...  where each            d  indicates a digit (0 to 9). The string starts with a minus sign if the number is          negative. Thousand separators are inserted between each group of three digits to the left          of the decimal point. The precision specifier indicates the number of decimal places to be          shown.  Examples :  n ,  n4 P  or  p  Percent  The number is converted to a string that represents a percent. The converted number is          multiplied by 100 in order to be presented as a percentage. The precision specifier          indicates the number of decimal places to be shown. Examples :  p ,  p4 R  or  r  Round-trip (this format is very seldom used in analytical reports)  The round-trip specifier guarantees that a numeric value converted to a string will be          parsed back into the same numeric value. When a numeric value is formatted using this          specifier, it is first tested using the general format, with 15 spaces of precision for a            Double  and 7 spaces of precision for a  Single . If the value is successfully          parsed back to the same numeric value, it is formatted by using the general format          specifier. However, if the value is not successfully parsed back to the same numeric value,          then the value is formatted by using 17 digits of precision for a  Double  and 9          digits of precision for a  Single . Although a precision specifier can be appended to          the round-trip format specifier, it is ignored. Round trips are given precedence over          precision when you use this specifier. This format is supported by floating-point types          only. Example :  r X  or  x  Hexadecimal (this format is very seldom used in analytical reports)  The number is converted to a string of hexadecimal digits. The case of the format          specifier indicates whether to use uppercase or lowercase characters for the hexadecimal          digits greater than 9. For example, use  X  to produce  ABCDEF , and  x  to          produce  abcdef . The precision specifier indicates the minimum number of digits in          the resulting string. If required, the number is padded with zeros to its left to produce          the number of digits given by the precision specifier. This format is supported for          integral types only. Examples :  x X Custom Numeric Format Strings The following table shows the characters you can use to create custom numeric format      strings and their definitions. Note that the result strings produced by some of these      characters are influenced by the settings in the  Regional Options       control panel. Computers that use different cultures will generate different result strings.  Format character Name Description 0  Zero placeholder  If the value being formatted has a digit in the position where the  0  appears         in the format string, then that digit is copied to the result string. The position of the         leftmost  0  before the decimal point and the rightmost  0  after the decimal         point determines the range of digits that are always present in the result string. The           00  specifier causes the value to be rounded to the nearest digit preceding the         decimal, where rounding away from zero is always used. For example, formatting 34.5 with           00  would result in the value 35. #  Digit placeholder  If the value being formatted has a digit in the position where the  #  appears in          the format string, then that digit is copied to the result string. Otherwise, nothing is          stored in that position in the result string. Note that this specifier never displays the            0  character if it is not a significant digit, even if  0  is the only digit in          the string. This specifier displays the  0  character if it is a significant digit in          the number being displayed. The  ##  format string causes the value to be rounded to          the nearest digit preceding the decimal, where rounding away from zero is always used. For          example, formatting 34.5 with  ##  would result in the value 35.  Examples:  ,##0.00}}  "(###) ### - ####" .  Decimal point  The first  .  character in the format string determines the location of the         decimal separator in the formatted value; any additional  .  characters are ignored.         The actual character used as the decimal separator is determined by the settings in the           Regional Options  control panel. ,  Thousand separator and number scaling  This character serves two purposes. First, if the format string contains a  ,          character between two digit placeholders (0 or #) and to the left of the decimal point if         one is present, then the output will have thousand separators inserted between each group of         three digits (counting from the right) to the left of the decimal separator. The actual         character used as the decimal separator in the result string is determined by the settings         in the  Regional Options  control panel. Second, if the format string contains at least         one  ,  character immediately to the left of the decimal point, then the number will be         divided by the number of  ,  characters multiplied by 1000 before it is formatted. For         example, the format string  0,,  will represent 100 million as simply 100. The  ,          character indicates that scaling does not include thousand separators in the formatted         number. Thus, to scale a number by 1 million and insert thousand separators, you would use         the format string  #,##0,, . %  Percentage placeholder  The presence of the  %  character in a format string causes a number to be         multiplied by 100 before it is formatted. The appropriate symbol is inserted in the number         itself at the location where the  %  appears in the format string. The percent         character used is dependent on the settings in the  Regional Options          control panel. E0 E+0 E-0 e0 e+0 e-0  Scientific notation  If any of the strings  E ,  E+ ,  E- ,  e ,  e+ , or           e-  is present in the format string and followed immediately by at least one  0          character, then the number is formatted using scientific notation with an  E  or           e  inserted between the number and the exponent. The number of  0  characters         following the scientific notation indicator determines the minimum number of digits to         output for the exponent. The  E+  and  e+  formats indicate that a sign character         (plus or minus) should always precede the exponent. The  E ,  E- ,  e , and           e-  formats indicate that a sign character should only precede negative         exponents. \  Escape character  In C# and C++, the backslash character causes the next character in the format string         to be interpreted as an escape sequence. This character is used with traditional formatting         sequences like  \n  (new line). 'ABC' "ABC"  Literal string  Characters enclosed in single or double quotes are copied to the result string         literally, and do not affect formatting. ;  Section separator  This character is used to separate sections for positive, negative, and zero numbers         in the format string. Other  All other characters  All other characters are copied to the result string as literals in the position in         which they appear. Standard DateTime Format Strings The following table describes the standard date/time format specifiers. The output of these       format specifiers is influenced by the current culture and the settings in the         Regional Options  control panel.  Format character Name Description d  Short date pattern Displays a value in the short date format.  Depending on the settings in the  Regional Options  control panel,          the value can be in one of the following formats:  M/d/yyyy  (for  en-US  local settings) yyyy/MM/dd  (for  ja-JP  local settings) dd/MM/yyyy  (for  fr-FR  local settings) Example :  d D  Long date pattern  Displays a value in the long date format.  Depending on the settings in the  Regional Options  control panel,          the value can be in one of the following formats:  dddd, MMMM dd, yyyy  (for  en-US  local settings)  yyyy'?'M'?'d'?'  (for  ja-JP  local settings) dddd d MMMM yyyy  (for  fr-FR  local settings) Example :  D t  Short time pattern  Displays a value in the short time format.  Depending on the settings in the  Regional Options  control panel,          the value can be in one of the following formats: h:mm tt  (for  en-US  local settings)  H:mm  (for ja-JP local settings) HH:mm  (for fr-FR local settings) Example :  t T  Long time pattern  Displays a value in the long time format.  Depending on the settings in the  Regional Options  control panel,          the value can be in one of the following formats:  h:mm:ss tt  (for  en-US  local settings) H:mm:ss  (for  ja-JP  local settings) HH:mm:ss  (for  fr-FR  local settings) Example :  T f  Full date/time pattern (short time)  Displays a value in a combination of the long date and short time format patterns,          separated by a space. Example :  f F  Full date/time pattern (long time)  Displays a value in a full date/time format.  Depending on the settings in the  Regional Options  control panel,          the value can be in one of the following formats: yyyy h:mm:ss tt  (for  en-US  local settings) yyyy'?'M'?'d'?' H:mm:ss  (for  ja-JP  local settings) dddd d MMMM yyyy HH:mm:ss  (for  fr-FR  local settings) Example :  F g  General date/time pattern (short time) Displays a combination of the short date and short time patterns, separated by a          space. Example :  g G  General date/time pattern (long time)  Displays a combination of the short date and long time patterns, separated by a          space. Example :  G M  or  m  Month day pattern  Displays the day of month defined by the value.  Depending on the settings in the  Regional Options  control panel,          the value can be in one of the following formats: MMMM dd  (for  en-US  local settings) M'?'d'?'  (for  ja-JP  local settings) d MMMM  (for  fr-FR  local settings Example :  M m R  or  r  RFC1123 pattern  Displays a time value based on the Internet Engineering Task Force (IETF) Request for          Comments (RFC) 1123 specification. This specification sets the following common time format          (regardless of the settings in the  Regional Options  control panel):            ddd, dd MMM yyyy HH':'mm':'ss 'GMT' .  Formatting does not modify the  DateTime  value; therefore, you must adjust the          value to GMT before formatting.  Examples :  R ,  r s  Sortable date/time pattern; conforms to ISO 8601  Displays a date and time in ISO 8601-compatible format. The format uses the following          custom format:  yyyy-MM-ddTHH:mm:ss . Example :  s u  Universal sortable date/time pattern  Displays a time value in a standard defined form. This specification sets the following          common time format (regardless of the settings in the  Regional           Options  control panel):  yyyy-MM-dd HH:mm:ssZ .  No time zone conversion is done when the date and time is formatted; therefore, convert          a local date and time to universal time before using this format specifier.  Example :  u Y  or  y  Year month pattern  Displays a year value.  Depending on the settings in the  Regional Options  control panel,          the value can be in one of the following formats: MMMM, yyyy  (for  en-US  local settings) yyyy'?'M'?'  (for  ja-JP  local settings) MMMM yyyy  (for  fr-FR  local settings) Examples :  Y y Custom DateTime Format Strings The following table describes the custom date/time format specifiers. The output of these       format specifiers is influenced by the current culture and the settings in the         Regional Options  control panel. Format specifier Description d  Displays the current day of the month, expressed as a number between 1 and 31. If the         day is a single digit only (1 to 9), then it is displayed as a single digit. Note that if         the  d  format specifier is used without other custom format strings, it is interpreted         as the standard format specifier for the short date pattern. If the  d  format         specifier is passed with other custom format specifiers or the  %  character, it is         interpreted as a custom format specifier. ddd  Displays the abbreviated name of the day for the specified DateTime. dddd  (plus any number of additional  d  characters)  Displays the full name of the day for the specified DateTime. f  Displays the most significant digit of the seconds fraction. Note that if the           f  format specifier is used alone, without other custom format strings, it is         interpreted as the full (long date + short time) format specifier. If the  f  format         specifier is passed with other custom format specifiers or the  %  character, it is         interpreted as a custom format specifier. ff  Displays the two most significant digits of the seconds fraction. fff  Displays the three most significant digits of the seconds fraction. ffff  Displays the four most significant digits of the seconds fraction. fffff  Displays the five most significant digits of the seconds fraction. ffffff  Displays the six most significant digits of the seconds fraction. fffffff  Displays the seven most significant digits of the seconds fraction. F  Displays the most significant digit of the seconds fraction. Nothing is displayed if         the digit is zero. FF  Displays the two most significant digits of the seconds fraction. However, trailing         zeros or two zero digits are not displayed. FFF  Displays the three most significant digits of the seconds fraction. However, trailing         zeros or three zero digits are not displayed. FFFF  Displays the four most significant digits of the seconds fraction. However, trailing         zeros or four zero digitsare not displayed. FFFFF  Displays the five most significant digits of the seconds fraction. However, trailing         zeros or five zero digits are not displayed. FFFFFF  Displays the six most significant digits of the seconds fraction. However, trailing         zeros or six zero digits are not displayed. FFFFFFF  Displays the seven most significant digits of the seconds fraction. However, trailing         zeros or seven zero digits are not displayed. g  or  gg  (plus any number of additional  g  characters)  Displays the era (A.D. for example) for the specified  DateTime  value. Note         that if the  g  format specifier is used alone, without other custom format strings, it         is interpreted as the standard general format specifier. If the  g  format specifier is         passed with other custom format specifiers or the  %  character, it is interpreted as a         custom format specifier. h  Displays the hour for the specified  DateTime  value in the range 1 to 12. The         hour represents whole hours passed since either midnight (displayed as 12) or noon (also         displayed as 12). If this format is used alone, then the same hour before or after noon is         indistinguishable. If the hour is a single digit (1 to 9), it is displayed as a single         digit. No rounding occurs when the hour is displayed. For example, a  DateTime  of 5:43         returns 5. hh ,  hh  (plus any number of additional  h  characters)  Displays the hour for the specified DateTime value in the range 1 to 12. The hour         represents whole hours passed since either midnight (displayed as 12) or noon (also         displayed as 12). If this format is used alone, then the same hour before or after noon is         indistinguishable. If the hour is a single digit (1 to 9), it is formatted with a preceding         0 (01-09). H  Displays the hour for the specified  DateTime  value in the range 0 to 23. The         hour represents whole hours passed since midnight (displayed as 0). If the hour is a single         digit (0 to 9), it is displayed as a single digit. HH, HH  (plus any number of additional  H  characters)  Displays the hour for the specified  DateTime  value in the range 0 to 23. The         hour represents whole hours passed since midnight (displayed as 0). If the hour is a single         digit (0 to 9), it is formatted with a preceding 0 (01 to 09). m  Displays the minute for the specified  DateTime  value in the range 0 to 59. The         minute represents whole minutes passed since the last hour. If the minute is a single digit         (0 to 9), it is displayed as a single digit. Note that if the  m  format specifier is         used alone, without other custom format strings, it is interpreted as the standard format         specifier for the month-day pattern. If the  m  format specifier is passed with other         custom format specifiers or the  %  character, it is interpreted as a custom format         specifier. mm ,  mm  (plus any number of additional  m  characters)  Displays the minute for the specified DateTime in the range 0 to 59. The minute         represents whole minutes passed since the last hour. If the minute is a single digit (0 to         9), it is formatted with a preceding 0 (01 to 09). M  Displays the month, expressed as a number between 1 and 12. If the month is a single         digit (1 to 9), it is displayed as a single digit. Note that if the  M  format         specifier is used alone, without other custom format strings, it is interpreted as the         standard format specifier for the month-day pattern. If the  M  format specifier is         passed with other custom format specifiers or the  %  character, it is interpreted as a         custom format specifier. MM  Displays the month, measured as a number between 1 and 12. If the month is a single         digit (1 to 9), it is formatted with a preceding 0 (01 to 09). MMM  Displays the abbreviated name of the month for the specified  DateTime          value. MMMM  Displays the full name of the month for the specified  DateTime  value. s  Displays the seconds for the specified  DateTime  value in the range 0 to 59.         The second represents whole seconds passed since the last minute. If the second is a single         digit (0 to 9), it is displayed as a single digit only. Note that if the  s  format         specifier is used alone, without other custom format strings, it is interpreted as the         standard sortable format specifier for the date-time pattern. If the  s  format         specifier is passed with other custom format specifiers or the  %  character, it is         interpreted as a custom format specifier. ss ,  ss  (plus any number of additional  s  characters)  Displays the seconds for the specified  DateTime  value in the range 0 to 59.         The second represents whole seconds passed since the last minute. If the second is a single         digit (0 to 9), it is displayed as a single digit only. Note that if the  s  format         specifier is used alone, without other custom format strings, it is interpreted as the         standard sortable format specifier for the date-time pattern. If the  s  format         specifier is passed with other custom format specifiers or the  %  character, it is         interpreted as a custom format specifier. ss ,  ss  (plus any number of additional  s  characters)  Displays the seconds for the specified DateTime in the range 0 to 59. The second         represents whole seconds passed since the last minute. If the second is a single digit (0 to         9), it is formatted with a preceding 0 (01 to 09). t  Displays the first character of the a.m./p.m. designator for the specified           DateTime  value. Note that if the  t  format specifier is used alone, without         other custom format strings, it is interpreted as the standard format specifier for the long         time pattern. If the  t  format specifier is passed with other custom format specifiers         or the  %  character, it is interpreted as a custom format specifier. tt ,  tt  (plus any number of additional  t  characters)  Displays the a.m./p.m. designator for the specified  DateTime  value. y  Displays the year for the specified  DateTime  value as a maximum two-digit         number. The first two digits of the year are omitted. If the year is a single digit (1 to         9), it is displayed as a single digit. Note that if the  y  format specifier is used         alone, without other custom format strings, it is interpreted as the standard format         specifier for the short date pattern. If the  y  format specifier is passed with other         custom format specifiers or the  %  character, it is interpreted as a custom format         specifier. yy  Displays the year for the specified  DateTime  value as a maximum two-digit         number. The first two digits of the year are omitted. If the year is a single digit (1 to         9), it is formatted with a preceding 0 (01 to 09). yyyy  Displays the year for the specified  DateTime  value, including the century. If         the year is fewer than four digits in length, then preceding zeros are appended as necessary         to make the displayed year four digits long. z  Displays the time zone offset for the system's current time zone in whole hours only.         The offset is always displayed with a leading sign (zero is displayed as  +0 ),         indicating hours ahead of Greenwich mean time (+) or hours behind Greenwich mean time (–).         The range of values is –12 to +13. If the offset is a single digit (0 to 9), it is displayed         as a single digit with the appropriate leading sign. The setting for the time zone is         specified as  +X  or  –X , where  X  is the offset in hours from GMT. The         displayed offset is affected by daylight saving time. zz  Displays the time zone offset for the system's current time zone in whole hours only.         The offset is always displayed with a leading or trailing sign (zero is displayed as           +00 ), indicating hours ahead of Greenwich mean time (+) or hours behind Greenwich         mean time (–). The range of values is –12 to +13. If the offset is a single digit (0 to 9),         it is formatted with a preceding 0 (01 to 09) with the appropriate leading sign. The setting         for the time zone is specified as  +X  or  –X , where  X  is the offset in         hours from GMT. The displayed offset is affected by daylight saving time. zzz ,  zzz  (plus any number of additional  z  characters)  Displays the time zone offset for the system's current time zone in whole hours only.         The offset is always displayed with a leading or trailing sign (zero is displayed as           +00 ), indicating hours ahead of Greenwich mean time (+) or hours behind Greenwich         mean time (–). The range of values is –12 to +13. If the offset is a single digit (0 to 9),         it is formatted with a preceding 0 (01 to 09) with the appropriate leading sign. The setting         for the time zone is specified as  +X  or  –X , where  X  is the offset in         hours from GMT. The displayed offset is affected by daylight saving time. :  Serves as a time separator. /  Functions as a date separator. "  Indicates a quoted string. Displays the literal value of any string between two         quotation marks preceded by the escape character (/). '  Indicates a quoted string. Displays the literal value of any string between two         single quotation marks. %c  Where  c  is both a standard format specifier and a custom format specifier,         displays the custom format pattern associated with the format specifier. Note that if a         format specifier is used alone as a single character, it is interpreted as a standard format         specifier. Only format specifiers consisting of two or more characters are interpreted as         custom format specifiers. In order to display the custom format for a specifier defined as         both a standard and a custom format specifier, precede the specifier with a  %          symbol. \c  Where  c  is any character, displays the next character as a literal. The escape         character cannot be used to create an escape sequence (like  \n  for new line) in this         context. ]]></column>
		</row>
		<row PageID="00a69dbb-c06b-4ce4-8b29-e86ee0e8ed47" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ec841e6e-1df1-81b7-9195-cae4862e7f4e" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You use functions to perform specific tasks that facilitate data processing for the reports. Many functions available in the Analytical Report Manager process the data selected from the data source and return the values to be used in the report. {br}

To use functions in the formula, you can enter them directly in the formula editing area or select them from the list of functions provided in the Formula Editor dialog box ([HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]). {br}

The groups of functions in the formulas are described below.{br}{TOC}
==Conversion Functions==
You use conversion functions, summarized in the following table, to convert data from one data type to another. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Function
!width="80%" ! Description and Examples
|- 
| ''CBool(x)''
| 
 Converts an expression defined in a function argument into the Boolean expression. If the expression is zero, ''False'' is returned; otherwise, ''True'' is returned.{br}

'''Example:'''{{=CBool(A11+B11-C11*0.05)}} (where ''A11'', ''B11'' and ''C11'' are the links used in a function argument)
|- 
| ''CDate(x)''
| 
 Converts an expression defined in a function argument to a value of the ''Date'' type. The ''CDate'' function argument should be a valid date expression. ''CDate'' recognizes date formats according to the locale setting of the system.{br}

'''Example:'''{{=CDate(A2-B2)}} (where ''A2'' and ''B2'' are the links used in a function argument)
|- 
| ''CStr(x)''
| 
 Converts an expression defined in a function argument to a string. If the ''CStr'' function argument equals null, <tt>CStr</tt> returns a run-time error; otherwise, it returns a string of characters.{br}

'''Example:'''{{=CStr(A12)}} (where ''A12'' is the link used in a function argument)
|- 
| ''CDbl(x)''
| 
 Converts an expression defined in a function argument to a value of the ''Double'' type.{br}

'''Example:'''{{=CDbl(A12/B2)}} (where ''A12'' and ''B2'' are the links used in a function argument)
|- 
| ''CSng(x)''
| 
 Converts an expression defined in a function argument to a value of the ''Single'' type. If the expression defined in the function argument lies outside the acceptable range for the ''Single'' type, an error occurs.{br}

'''Example:'''{{=CSng(A12)}} (where ''A12'' is the link used in a function argument)
|- 
| ''CDec(x)''
| 
 Converts an expression defined in a function argument to a value of the ''Decimal'' type.{br}

'''Example:'''{{=CDec(A12*0.15)}} (where ''A12'' is the link used in a function argument)
|- 
| ''CInt(x)''
| 
 Converts an expression defined in a function argument to a value of the ''Integer'' type.{br}

'''Example:'''{{=CInt(A10)}} (where ''A10'' is the link used in a function argument)
|- 
| ''CShort(x)''
| 
 Converts a numeric value to a value of the ''Short'' type.{br}

'''Example:'''{{=CShort(B2)}} (where ''B2'' is the link used in a function argument)
|- 
| ''CLong(x)''
| 
 Converts a numeric value to a value of the ''Long'' type.{br}

'''Example:'''{{=CLong(B12)}} (where ''B12'' is the link used in a function argument)
|}
==Text Functions==
Text functions, described in the following table, are used to perform operations with text strings. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Function
!width="80%" ! Description and Examples
|- 
| '''LTrim(''string'')'''
| 
Removes all leading spaces or parsing characters from the specified character expression, or all leading zero bytes from the specified binary expression.{br}

'''Example:'''{{=LTrim(CStr(A12))}} (where ''A12'' is the link used in a function argument)
|- 
| '''RTrim(''string'')'''
| 
Removes all trailing spaces or parsing characters from the specified character expression, or all trailing zero bytes from the specified binary expression.{br}

'''Example:'''{{=RTrim(CStr(A12))}} (where ''A12'' is the link used in a function argument)
|- 
| '''Trim(''string'')'''
| 
Removes all trailing spaces or parsing characters from the specified character expression, or all trailing zero bytes from the specified binary expression.{br}

'''Example:'''{{=Trim(CStr(A12))}} (where ''A12'' is the link used in a function argument)
|- 
| '''Format(''format'', ''argument(s)'')'''
| 
Replaces the format item in a specified formatting string (''format'') with the text equivalent of the arguments (''arguments'').{br}

'''Example:'''{{=Format('Currency: . . . . . . . . {0:C}; Account: . . . . . . . . {1:N}', A1, B1)}} (where ''A1'' and ''B1'' are the links used as a function arguments; 0, 1 are the specifiers indicating where the arguments will be inserted; ''C'' is the ''currency'' format specifier; and ''N'' is the ''number'' format specifier)
|- 
| '''UCase(''string'')'''
| 
Returns a string that has been converted to uppercase. The ''string'' argument is any valid string expression. If ''string'' contains a null value, the null value is returned.{br}

'''Example:'''{{=UCase(CStr(A12))}} (where ''A12'' is the link used in a function argument)
|- 
| '''LCase(''string'')'''
| 
Returns a string that has been converted to lowercase. The ''string'' argument is any valid string expression. If ''string'' contains a null value, the null value is returned.{br}

'''Example:'''{{=LCase(CStr(A12))}} (where ''A12'' is the link used in a function argument)
|- 
| '''InStr(''string'', ''findString'')'''
| 
Returns the position of the first occurrence of one string (''findString'') within another (''string'').{br}

'''Example:'''{{=InStr(CStr(A12), 'rur')}} (where ''A12'' is the link used in a function argument)
|- 
| '''InStrRev(''string'', ''findString'')'''
| 
Returns the position of the last occurrence of one string (''findString'') within another (''string''), starting from the right side of the string.{br}

'''Example:'''{{=InStrRev(CStr(A12), 'rur')}} (where ''A12'' is the link used in a function argument)
|- 
| '''Len(''string'')'''
| 
Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.{br}

'''Example:'''{{=Len(CStr(A12))}} (where ''A12'' is the link used in a function argument)
|- 
| '''Left(''string'', ''length'')'''
| 
Returns a string containing a specified number of characters from the left side of a string. If ''string'' contains the null value, the null value is returned.{br}

'''Example:'''{{=Left(CStr(A12), 3)}} (where ''A12'' is the link used in a function argument)
|- 
| '''Right(''string'', ''length'')'''
| 
Returns a string containing a specified number of characters from the right side of a string. If ''string'' contains a null value, the null value is returned.{br}

'''Example:'''{{=Right(CStr(A12), 3)}} (where ''A12'' is the link used in a function argument)
|- 
| '''Replace(''string'', ''oldValue'', ''newValue'')'''
| 
Returns a string in which a specified substring (''oldValue'') has been replaced with another substring (''newValue'').{br}

'''Example:'''{{=Replace(CStr(A12), 'rur', 'eur')}} (where ''A12'' is the link used in a function argument)
|- 
| '''PadLeft(''string'', ''width'', ''paddingChar'')'''
| 
Right-aligns the characters in a specified string (''string''), padding with the specified characters (''paddingChar'') on the left for a specified total width (''width'').{br}

'''Example:'''{{=PadLeft(CStr(A12), 3, '%')}} (where ''A12'' is the link used in a function argument). In this example the {{PadLeft}} function adds padding character/s at the begining of the string.
|- 
| '''PadRight(''string'', ''width'', ''paddingChar'')'''
| 
Left-aligns the characters in a specified string (''string''), padding with the specified characters (''paddingChar'') on the right for a specified total width (''width'').{br}

'''Example:'''{{=PadRight(CStr(A12), 3, '%')}} (where ''A12'' is the link used in a function argument). In this example the {{PadRight}} function adds padding character/s at the end of the string.
|}
==Math Functions==
Mathematical functions, described in the following table, perform calculations, usually based on input values provided as arguments, and return numeric values. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Function
!width="80%" ! Description and Examples
|- 
| ''Abs(x)''
| 
 Returns the absolute value of a number.{br}

'''Example:'''{{=Abs(A10-B10)}}{br}

Here ''A10'' and ''B10'' are the links used in a function argument.
|- 
| ''Floor(x)''
| 
 Returns the largest integer that is not greater than the argument.{br}

'''Example:'''{{=Floor(A10-A12)}}{br}

Here ''A10'' and ''A12'' are the links used in a function argument.
|- 
| ''Ceiling(x)''
| 
 Returns the smallest integer that is not less than the argument.{br}

'''Example:'''{{=Ceiling(A10-C11)}}{br}

Here ''A10'' and ''C11'' are the links used in a function argument.
|- 
| '''Round(x, ''decimals'')'''
| 
 Returns a numeric expression, rounded to the specified precision (''decimals'').{br}

'''Example:'''{{=Round((A10-B12), 5)}}{br}

Here ''A10'' and ''B12'' are the links used in a function argument, and 5 is the number of digits after the decimal separator.
|- 
| ''Min(x, y)''
| 
 Returns the smaller of the two values.{br}

'''Example:'''{{=Min(A10, A12)}}{{=Min(A10, 12)}}{br}

Here ''A10'' and ''A12'' are the links used as function arguments)
|- 
| ''Max(x, y)''
| 
 Returns the greater of the two values.{br}

'''Example:'''{{=Max(A12, A14)}}{{=Max(A12, 240)}}{br}

Here ''A12'' and ''A14'' are the links used as function arguments.
|- 
| '''Pow(x, ''power'')'''
| 
 Computes the value of ''x'' raised to the specified power (''power'').{br}

'''Example:'''{{=Pow((A12, 2))}}{br}

Here ''A12'' is the link used as a function argument, and ''2'' is the power index.
|}
==Date and Time Functions==
The date and time functions, described below, perform operations on input values and return values of the following types: string, numeric, or date and time.
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Function
!width="80%" ! Description and Examples
|- 
| '''DateAdd(''date'', ''interval'', ''number'')'''
| [anchor|#_041b6484-915d-433e-899d-417e1922c5ab]
Returns a new date that is calculated by adding the specified number (<tt>number</tt>) of time intervals (<tt>interval</tt>) to the date (<tt>date</tt>). The <tt>interval</tt> argument specifies the type of time interval and can be one of the following options: [anchor|#_282b9448-e523-4b81-b03c-c320df92346c]
*''y'', ''yy'', ''yyyy'', or ''year'': The specified number (<tt>number</tt>) of years will be added to the specified date (<tt>date</tt>). 
*''m'', ''mm'', or ''month'': The specified number (<tt>number</tt>) of months will be added to the specified date (<tt>date</tt>).
*''d'', ''dd'', or ''day'': The specified number (<tt>number</tt>) of days will be added to the specified date (<tt>date</tt>).
*''h'', ''hh'', or ''hour'': The specified number (<tt>number</tt>) of hours will be added to the specified date (<tt>date</tt>).
*''n'', ''mi'', or ''minute'': The specified number (<tt>number</tt>) of minutes will be added to the specified date (<tt>date</tt>).
*''s'', ''ss'', or ''second'': The specified number (<tt>number</tt>) of seconds will be added to the specified date (<tt>date</tt>).
*''w'', ''ww'', ''wk'', or ''week'': The specified number (<tt>number</tt>) of weeks will be added to the specified date (<tt>date</tt>).
*''q'', ''qq'', or ''quarter'': The specified number (<tt>number</tt>) of quarters will be added to the specified date (<tt>date</tt>).
{br}

'''Example:'''{{=DateAdd(CDate('31/01/1995'), 'm', -2)}}{{=DateAdd(Today(), 'y', 3)}}{{=DateAdd(Now(), 'd', 1)}}
|- 
| '''DateDiff(''interval'', ''date1'', ''date2'')'''
| [anchor|#_ce03f8e5-a4ae-444f-a05a-ca58aa3d56a4]
Returns the number of time intervals (<tt>interval</tt>) between the specified <tt>date1</tt> and <tt>date2</tt>. The number is an integer that can be positive or negative. (The description of the function also can be the following: returns the count (as a signed integer value) of the specified <tt>interval</tt> boundaries crossed between the specified <tt>date1</tt> and <tt>date2</tt>.) The <tt>interval</tt> argument, which specifies the type of time interval, can be one of the following options: [anchor|#_0b48b321-eaef-40c1-a8c7-593fee9dac86]
*''y'', ''yy'', ''yyyy'', or ''year'': The specified number (<tt>number</tt>) of years will be added to the specified date (<tt>date</tt>). 
*''m'', ''mm'', or ''month'': The specified number (<tt>number</tt>) of months will be added to the specified date (<tt>date</tt>).
*''d'', ''dd'', or ''day'': The specified number (<tt>number</tt>) of days will be added to the specified date (<tt>date</tt>).
*''h'', ''hh'', or ''hour'': The specified number (<tt>number</tt>) of hours will be added to the specified date (<tt>date</tt>).
*''n'', ''mi'', or ''minute'': The specified number (<tt>number</tt>) of minutes will be added to the specified date (<tt>date</tt>).
*''s'', ''ss'', or ''second'': The specified number (<tt>number</tt>) of seconds will be added to the specified date (<tt>date</tt>).
*''w'', ''ww'', ''wk'', or ''week'': The specified number (<tt>number</tt>) of weeks will be added to the specified date (<tt>date</tt>).
*''q'', ''qq'', or ''quarter'': The specified number (<tt>number</tt>) of quarters will be added to the specified date (<tt>date</tt>).

|- 
| '''Day(''date'')'''
| 
Returns the day component of the ''date''.{br}

'''Example:'''{{=Day(Now())}}
|- 
| '''DayOfWeek(''date'')'''
| 
Returns the day of week for the ''date''.{br}

'''Example:'''{{=DayOfWeek(Today())}}
|- 
| '''DayOfYear(''date'')'''
| 
Returns the day of the year for the ''date''.{br}

'''Example:'''{{=DayOfYear(Now())}}
|- 
| '''DayOrdinal(''day'')'''
| [anchor|#_708295c5-eeda-41e9-9939-4494d8d6b21b]
Converts the specified integer value (<tt>day</tt>) to a string that contains the ordinal number in the current locale. For example, for the English locale, the string contains the short form of the ordinal number, such as 1st or 2nd. For numbers that are less than 1 or greater than 31, the function returns an empty string.{br}

'''Example:'''{{=DayOrdinal(1)}}
|- 
| '''Hour(''date'')'''
| 
Returns the hours of the ''date''.{br}

'''Example:'''{{=Hour(Now())}}
|- 
| '''Minute(''date'')'''
| 
Returns the minutes of the ''date''.{br}

'''Example:'''{{=Minute(Now())}}
|- 
| '''Month(''date'')'''
| 
Returns the month component of the ''date''.{br}

'''Example:'''{{=Month(Now())}}
|- 
| '''MonthName(''date'')'''
| [anchor|#_10bb8996-eba5-4f62-bf97-535ccaaf14a2]
Returns a string that contains the name of the month extracted from the specified date (<tt>date</tt>) in the current locale.{br}

'''Example:'''{{=<tt>MonthName(CDate('3/12/2018'))</tt>}}
|- 
|  '''Now()'''
| 
Returns the current date and time according to the system date and time on the local computer.{br}

'''Example:'''{{=Now()}}
|- 
| '''NowUTC()'''
| [anchor|#_ff71021f-3fd6-46aa-9368-cbd15b03a176]
Returns the current date and time in the user&rsquo;s time zone. The system extracts the user&rsquo;s time zone from one of the following sources, which are ordered by priority from the highest to the lowest:[anchor|#_4ce7866e-bb2d-4940-bdc7-b1b939bcafcb]
#The time zone in the user&rsquo;s preferences, which is specified in the '''Time Zone''' box on the '''General Info''' tab of the [HelpRoot_GettingStarted\SM_20_30_10|User Profile] ([~/?ScreenId=SM203010|SM203010]) form.
#The employee calendar selected for the user in the '''Calendar''' box of the '''General Info''' tab of the [HelpRoot_FormReference\EP_20_30_00|Employees] ([~/?ScreenId=EP203000|EP203000]) form. (Work calendars are defined on the [HelpRoot_FormReference\CS_20_90_00|Work Calendar] ([~/?ScreenId=CS209000|CS209000]) form.)
#The time zone in the site preferences specified in the '''Login Time Zone''' box on the [HelpRoot_FormReference\SM_20_05_05|Site Preferences] ([~/?ScreenId=SM200505|SM200505]) form.
{br}

'''Example:'''{{=NowUTC()}}
|- 
| '''Second(''date'')'''
| 
Returns the seconds of the ''date''.{br}

'''Example:'''{{=Second(Now())}}
|- 
| '''Today()'''
| 
Returns the current date according to the system date and time on the local computer.{br}

'''Example:'''{{=Today()}}
|- 
| '''TodayUTC()'''
| [anchor|#_2127ba76-9b0a-4f57-a18b-14cec957118c]
Returns the current date in the user&rsquo;s time zone. The system extracts the user&rsquo;s time zone from one of the following sources, which are ordered by priority from the highest to the lowest:[anchor|#_c3bd2ef9-4f4d-4892-9152-3070ddc8b33e]
#The time zone in the user&rsquo;s preferences, which is specified in the '''Time Zone''' box on the '''General Info''' tab of the [HelpRoot_GettingStarted\SM_20_30_10|User Profile] ([~/?ScreenId=SM203010|SM203010]) form.
#The employee calendar selected for the user in the '''Calendar''' box of the '''General Info''' tab of the [HelpRoot_FormReference\EP_20_30_00|Employees] ([~/?ScreenId=EP203000|EP203000]) form. (Work calendars are defined on the [HelpRoot_FormReference\CS_20_90_00|Work Calendar] ([~/?ScreenId=CS209000|CS209000]) form.)
#The time zone in the site preferences specified in the '''Login Time Zone''' box on the [HelpRoot_FormReference\SM_20_05_05|Site Preferences] ([~/?ScreenId=SM200505|SM200505]) form.
{br}

'''Example:'''{{=TodayUTC()}}
|- 
| '''Year(''date'')'''
| 
Returns the year component of the ''date''.{br}

'''Example:'''{{=Year(Now())}}
|}
==Other Functions==
The ''Other'' functions group includes the following functions.
{| class="checklist" | width="100%" 
|- 
!width="25%" ! Function
!width="75%" ! Description and Examples
|- 
| '''IIf(''expression'', ''truePart'', ''falsePart'')'''
| [anchor|#_d8c3dc80-ab46-4940-aaa4-b1e085a41f3d]
Returns one of two values, depending on the evaluation of the expression: If the expression evaluates to <tt>True</tt>, the function returns the ''truePart'' value; otherwise, it returns the ''falsePart'' value.{br}

'''Example:'''{{=IIf((A10-B10)<>0), CStr(A12), 'No data available')}} (where ''A10'', ''A12'', and ''B10'' are the links used as a function arguments)
|- 
| '''IsNull(''value'', ''nullValue'')'''
| [anchor|#_73e71b5d-3517-428d-8176-5f43d44a8d34]
Returns ''nullValue'' if ''value'' is NULL; otherwise, returns ''value''. {br}

'''Example:'''{{=IsNull(A10, '0')}} (if {{A10}} is NULL, returns ''0''; otherwise, returns the {{A10}} value)
|- 
| '''NullIf(''value1'', ''value2'')'''
| [anchor|#_cca4fc49-56a5-477f-984b-a00efee4a776]
Returns NULL if ''value1'' is equal to ''value2''.
|- 
| '''Sort(''from'', ''to'', ''column'')'''
| 
Returns the values in the specified range of rows in the specified column sorted in ascending order.{br}

'''Example:'''{{Sort('0100','0145','B')}} (the values in rows from 0100 to 0145 in the ''B'' column will be sorted in ascending order) 
|- 
| '''SortD(''from'', ''to'', ''column'')'''
| 
Returns the values in the specified range of rows in the specified column sorted in descending order.{br}

'''Example:'''{{SortD('0100','0145','B')}} (the values in rows from 0100 to 0145 in the ''B'' column will be sorted in descending order) 
|- 
| '''Sum(from, to)'''
| 
Returns the sum of the values in the specified interval.{br}

'''Example:'''{{=Sum('A11','A100')}} (where ''A11'' and ''A100'' are the links used in a function argument)
|- 
| '''Switch(''expression&#95;1'', ''value&#95;1'', ''expression&#95;2'', ''value&#95;2'', ...)'''
| [anchor|#_3493bf24-278d-4ec2-93e5-d21ace9284e3]
Returns the value (''value&#95;n'') that corresponds to the first expression (''expression&#95;n'') that evaluates to <tt>True</tt>. ''expression&#95;1'', ''expression&#95;2'', and so on are Boolean expressions. {br}

'''Example:'''{{=Switch(((A10-B10)<>0), A12, ((A10-B10)>0), B35)}}
|}
==Application-Specific Functions==
This functions are specific for Acumatica ERP. 
{| class="checklist" | width="100%" 
|- 
!width="27%" ! Function
!width="72%" ! Description and Examples
|- 
| '''ExtToInt(''object field'', ''object value'')'''
| Converts the external format of the ''object field'' parameter into the internal object presentation (for example, converts ''AccountCD'' to ''AccountID''). Both arguments of the ''ExtToInt'' function must have the same data type. '''Example:''': {{=Report.ExtToInt( 'ARAdjusted.AdjdCustomerID', [ARAdjusted.AdjdCustomerID])}}
|- 
| '''ExtToUI(''object field'', ''object value'')'''
| Converts the external format of the ''object field'' parameter into the UI format. Both arguments of the ''ExtToUI'' function must have the same data type. '''Example:'''{{=Report.ExtToUI('RowBatch.TranPeriodID', @PeriodID)}}
|- 
| '''GetDefExt(''object field'')'''
| Gets the default value of the ''object field'' parameter in the external format. '''Example:'''{{=Report.GetDefExt('OrganizationBranchReportParameters.OrganizationID')}}
|- 
| '''GetDefInt(''object field'')'''
| Gets the default value of the ''object field'' parameter in the internal format.
|- 
| '''GetDefUI(''object field'')'''
| Gets the default value of the ''object field'' parameter in the UI format. '''Example:'''{{=Report.GetDefUI('RowAccessInfo.DisplayName')}}
|- 
| '''GetDescription(''object field'', ''object value'')'''
| Returns the description of the ''object field'' parameter as it is defined in the <tt>PXSelectorAttribute</tt>. Both arguments of the <tt>GetDescription</tt> function must have the same data type. '''Example:''': {{=Report.GetDescription('GLTran.AccountID', @AccountCD)}}((({S:Warn}If you use this function for subaccounts, the subaccount description is not available if the ''By Segment: All Avail. Segment Values'' lookup mode is specified for the ''SUBACCOUNT'' segmented key on the [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000]) form.
)))
|- 
| '''GetDisplayName(''object field'')'''
| Returns the localized name of the ''object field'' parameter. Example: 
|- 
| '''GetFormat(''object field'')'''
| Returns the data type of the ''object field'' parameter. '''Example:'''{{=Report.GetFormat( [APRegister.CuryInfoID] )}}
|- 
| '''GetMask(''object field'')'''
| Returns the mask of the ''object field'' parameter. '''Example:'''{{ =Report.GetMask('RowTaxPeriodEffective.TaxPeriodID')}}
|- 
| '''IntToExt(''object field'', ''object value'')'''
| Converts the external format of the ''object field'' parameter into the internal object presentation (for example, converts ''AccountID'' to ''AccountCD''). Both arguments of the ''IntToExt'' function must have the same data type.
|- 
| '''IntToUI(''object field'', ''object value'')'''
| Converts the internal format of the ''object field'' parameter into the UI format. Both arguments of the ''IntToUI'' function must have the same data type. '''Example:'''{{=Report.IntToUI('APRegister.FinPeriodID',$ClosedPer)}}
|- 
| '''UIToExt(''object field'', ''object value'')'''
| Converts the UI format of the ''object field'' parameter into the external object format. Both arguments of the ''UIToExt'' function must have the same data type.
|- 
| '''UIToInt(''object field'', ''object value'')'''
| Converts the UI format of the ''object field'' parameter into the internal object format. Both arguments of the ''UIToInt'' function must have the same data type.
|- 
| '''FormatPeriod(''object period'')'''
| Performs ''ExtToUI'' data conversion for the ''object period'' parameter. This function is used to get the period defined by the report&rsquo;s <tt>@StartPeriod</tt> and <tt>@EndPeriod</tt> dates.
|- 
| '''FormatPeriod(''object period'', ''object period shift'')'''
| Performs ''ExtToUI'' data conversion for the ''object period'' parameter with a time shift defined by ''object period shift'' argument. This function is used to get the period defined by the report&rsquo;s <tt>@StartPeriod</tt> and <tt>@EndPeriod </tt>dates.
|- 
| '''FormatYear(''object period'')'''
| Performs ''ExtToUI'' data conversion for the ''object period'' parameter year part. This function is used to get the period defined by the report&rsquo;s <tt>@StartPeriod</tt> and<tt> @EndPeriod</tt> dates.
|- 
| '''FormatYear(''object period'', ''object period shift'')'''
| Performs ''ExtToUI'' data conversion for the ''object period'' parameter year part with a time shift defined by ''object period shift'' argument. This function is used to get the period defined by the report&rsquo;s <tt>@StartPeriod </tt>and <tt>@EndPeriod</tt> dates. '''Example:'''{{=FormatYear(@StartPeriod, -1)}} (The function obtains the year of the specified period and shifts the obtained year to the value of the shift. For example, if the @StartPeriod is the year 2014, the expression returns 2013)
|}
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]
*[HelpRoot_ReportingTools\CS__ARM_Formula_Parameters|Formula Parameters]
*[HelpRoot_ReportingTools\CS__ARM_Operators|Formula Operators]]]></column>
			<column name="PlainText"><![CDATA[Formula Functions You use functions to perform specific tasks that facilitate data processing for the 				reports. Many functions available in the Analytical Report Manager process the data 				selected from the data source and return the values to be used in the report.  To use functions in the formula, you can enter them directly in the formula editing area or 				select them from the list of functions provided in the Formula Editor dialog box 					( Formulas).  The groups of functions in the formulas are described below. Conversion Functions You use conversion functions, summarized in the following table, to convert data from one data 				type to another.  Function Description and Examples CBool(x)  Converts an expression defined in a function argument into the 									Boolean expression. If the expression is zero,  False  is 									returned; otherwise,  True  is returned. Example: =CBool(A11+B11-C11*0.05)  (where  A11 , 										 B11  and  C11  are the links used in a function 									argument) CDate(x)  Converts an expression defined in a function argument to a value 									of the  Date  type. The  CDate  function argument 									should be a valid date expression.  CDate  recognizes date 									formats according to the locale setting of the system. Example: =CDate(A2-B2)  (where  A2  and  B2  									are the links used in a function argument) CStr(x)  Converts an expression defined in a function argument to a 									string. If the  CStr  function argument equals null, 										 CStr  returns a run-time error; otherwise, 									it returns a string of characters. Example: =CStr(A12)  (where  A12  is the link used 									in a function argument) CDbl(x)  Converts an expression defined in a function argument to a value 									of the  Double  type. Example: =CDbl(A12/B2)  (where  A12  and  B2  									are the links used in a function argument) CSng(x)  Converts an expression defined in a function argument to a value 									of the  Single  type. If the expression defined in the 									function argument lies outside the acceptable range for the 										 Single  type, an error occurs. Example: =CSng(A12)  (where  A12  is the link used 									in a function argument) CDec(x)  Converts an expression defined in a function argument to a value 									of the  Decimal  type. Example: =CDec(A12*0.15)  (where  A12  is the link 									used in a function argument) CInt(x)  Converts an expression defined in a function argument to a value 									of the  Integer  type. Example: =CInt(A10)  (where  A10  is the link used 									in a function argument) CShort(x)  Converts a numeric value to a value of the  Short  									type. Example: =CShort(B2)  (where  B2  is the link used 									in a function argument) CLong(x)  Converts a numeric value to a value of the  Long  type. Example: =CLong(B12)  (where  B12  is the link used 									in a function argument) Text Functions Text functions, described in the following table, are used to perform operations with text 				strings.  Function Description and Examples LTrim( string ) Removes all leading spaces or parsing characters from the specified character expression, 									or all leading zero bytes from the specified binary 									expression. Example: =LTrim(CStr(A12))  (where  A12  is the link 									used in a function argument) RTrim( string ) Removes all trailing spaces or parsing characters from the specified character 									expression, or all trailing zero bytes from the specified binary 									expression. Example: =RTrim(CStr(A12))  (where  A12  is the link 									used in a function argument) Trim( string ) Removes all trailing spaces or parsing characters from the specified character 									expression, or all trailing zero bytes from the specified binary 									expression. Example: =Trim(CStr(A12))  (where  A12  is the link 									used in a function argument) Format( format ,  argument(s) ) Replaces the format item in a specified formatting string ( format ) with the text 									equivalent of the arguments ( arguments ). Example: =Format('Currency: . . . . . . . . {0:C}; Account: . 										. . . . . . . {1:N}', A1, B1)  (where  A1  									and  B1  are the links used as a function arguments; 0, 1 									are the specifiers indicating where the arguments will be 									inserted;  C  is the  currency  format specifier; and 										 N  is the  number  format specifier) UCase( string ) Returns a string that has been converted to uppercase. The  string  argument is any 									valid string expression. If  string  contains a null value, 									the null value is returned. Example: =UCase(CStr(A12))  (where  A12  is the link 									used in a function argument) LCase( string ) Returns a string that has been converted to lowercase. The  string  argument is any 									valid string expression. If  string  contains a null value, 									the null value is returned. Example: =LCase(CStr(A12))  (where  A12  is the link 									used in a function argument) InStr( string ,  findString ) Returns the position of the first occurrence of one string ( findString ) within 									another ( string ). Example: =InStr(CStr(A12), 'rur')  (where 										 A12  is the link used in a function argument) InStrRev( string ,  findString ) Returns the position of the last occurrence of one string ( findString ) within 									another ( string ), starting from the right side of the 									string. Example: =InStrRev(CStr(A12), 'rur')  (where 										 A12  is the link used in a function argument) Len( string ) Returns an integer containing either the number of characters in a string or the nominal 									number of bytes required to store a variable. Example: =Len(CStr(A12))  (where  A12  is the link 									used in a function argument) Left( string ,  length ) Returns a string containing a specified number of characters from the left side of a 									string. If  string  contains the null value, the null value 									is returned. Example: =Left(CStr(A12), 3)  (where  A12  is the 									link used in a function argument) Right( string ,  length ) Returns a string containing a specified number of characters from the right side of a 									string. If  string  contains a null value, the null value 									is returned. Example: =Right(CStr(A12), 3)  (where  A12  is the 									link used in a function argument) Replace( string ,  oldValue ,  newValue ) Returns a string in which a specified substring ( oldValue ) has been replaced with 									another substring ( newValue ). Example: =Replace(CStr(A12), 'rur', 										'eur')  (where  A12  is the link used 									in a function argument) PadLeft( string ,  width ,  paddingChar ) Right-aligns the characters in a specified string ( string ), padding with the 									specified characters ( paddingChar ) on the left for a 									specified total width ( width ). Example: =PadLeft(CStr(A12), 3, '%')  (where 										 A12  is the link used in a function argument). In this 									example the  PadLeft  function adds padding 									character/s at the begining of the string. PadRight( string ,  width ,  paddingChar ) Left-aligns the characters in a specified string ( string ), padding with the 									specified characters ( paddingChar ) on the right for a 									specified total width ( width ). Example: =PadRight(CStr(A12), 3, '%')  (where 										 A12  is the link used in a function argument). In this 									example the  PadRight  function adds padding 									character/s at the end of the string. Math Functions Mathematical functions, described in the following table, perform calculations, 				usually based on input values provided as arguments, and return numeric values.  Function Description and Examples Abs(x)  Returns the absolute value of a number. Example: =Abs(A10-B10) Here  A10  and  B10  are the links used in a function 									argument. Floor(x)  Returns the largest integer that is not greater than the 									argument. Example: =Floor(A10-A12) Here  A10  and  A12  are the links used in a function 									argument. Ceiling(x)  Returns the smallest integer that is not less than the 									argument. Example: =Ceiling(A10-C11) Here  A10  and  C11  are the links used in a function 									argument. Round(x,  decimals )  Returns a numeric expression, rounded to the specified precision 										( decimals ). Example: =Round((A10-B12), 5) Here  A10  and  B12  are the links used in a function 									argument, and 5 is the number of digits after the decimal 									separator. Min(x, y)  Returns the smaller of the two values. Example: =Min(A10, A12) =Min(A10, 12) Here  A10  and  A12  are the links used as function 									arguments) Max(x, y)  Returns the greater of the two values. Example: =Max(A12, A14) =Max(A12, 240) Here  A12  and  A14  are the links used as function 									arguments. Pow(x,  power )  Computes the value of  x  raised to the specified power 										( power ). Example: =Pow((A12, 2)) Here  A12  is the link used as a function argument, and 										 2  is the power index. Date and Time Functions The date and time functions, described below, perform operations on input values and return 				values of the following types: string, numeric, or date and time. Function Description and Examples DateAdd( date ,  interval , 								 number ) Returns a new date that is calculated by adding the             specified number ( number ) of time intervals                 ( interval ) to the date ( date ). The                  interval  argument specifies the type of time interval and can be             one of the following options:  y ,  yy ,  yyyy , or  year : The specified number                         ( number ) of years will be added to the specified date                         ( date ).  m ,  mm , or  month : The specified number                         ( number ) of months will be added to the specified date                         ( date ). d ,  dd , or  day : The specified number                         ( number ) of days will be added to the specified date                         ( date ). h ,  hh , or  hour : The specified number                         ( number ) of hours will be added to the specified date                         ( date ). n ,  mi , or  minute : The specified number                         ( number ) of minutes will be added to the specified date                         ( date ). s ,  ss , or  second : The specified number                         ( number ) of seconds will be added to the specified date                         ( date ). w ,  ww ,  wk , or  week : The specified number                         ( number ) of weeks will be added to the specified date                         ( date ). q ,  qq , or  quarter : The specified number                         ( number ) of quarters will be added to the specified date                         ( date ). Example: =DateAdd(CDate('31/01/1995'), 'm', 										-2) =DateAdd(Today(), 'y', 3) =DateAdd(Now(), 'd', 1) DateDiff( interval ,  date1 , 								 date2 ) Returns the number of time intervals                 ( interval ) between the specified  date1  and                  date2 . The number is an integer that can be positive or negative.             (The description of the function also can be the following: returns the count (as a             signed integer value) of the specified  interval  boundaries crossed             between the specified  date1  and  date2 .) The                  interval  argument, which specifies the type of time interval, can             be one of the following options:  y ,  yy ,  yyyy , or  year : The specified number                         ( number ) of years will be added to the specified date                         ( date ).  m ,  mm , or  month : The specified number                         ( number ) of months will be added to the specified date                         ( date ). d ,  dd , or  day : The specified number                         ( number ) of days will be added to the specified date                         ( date ). h ,  hh , or  hour : The specified number                         ( number ) of hours will be added to the specified date                         ( date ). n ,  mi , or  minute : The specified number                         ( number ) of minutes will be added to the specified date                         ( date ). s ,  ss , or  second : The specified number                         ( number ) of seconds will be added to the specified date                         ( date ). w ,  ww ,  wk , or  week : The specified number                         ( number ) of weeks will be added to the specified date                         ( date ). q ,  qq , or  quarter : The specified number                         ( number ) of quarters will be added to the specified date                         ( date ). Day( date ) Returns the day component of the  date . Example: =Day(Now()) DayOfWeek( date ) Returns the day of week for the  date . Example: =DayOfWeek(Today()) DayOfYear( date ) Returns the day of the year for the  date . Example: =DayOfYear(Now()) DayOrdinal( day ) Converts the specified integer value                 ( day ) to a string that contains the ordinal number in the current             locale. For example, for the English locale, the string contains the short form of the             ordinal number, such as 1st or 2nd. For numbers that are less than 1 or greater than 31,             the function returns an empty string. Example: =DayOrdinal(1) Hour( date ) Returns the hours of the  date . Example: =Hour(Now()) Minute( date ) Returns the minutes of the  date . Example: =Minute(Now()) Month( date ) Returns the month component of the  date . Example: =Month(Now()) MonthName( date ) Returns a string that contains the name of the month             extracted from the specified date ( date ) in the current locale. Example: = MonthName(CDate('3/12/2018')) Now() Returns the current date and time according to the system date 									and time on the local computer. Example: =Now() NowUTC() Returns the current date and time in the user's time             zone. The system extracts the user's time zone from one of the following sources, which             are ordered by priority from the highest to the lowest: The time zone in the user's preferences, which is specified in the                          Time Zone  box on the  General                         Info  tab of the   ([~/?ScreenId=SM203010|SM203010]) User Profile                     (SP203010) form. The employee calendar selected for the user in the                          Calendar  box of the  General                         Info  tab of the   ([~/?ScreenId=EP203000|EP203000]) Employees (EP203000) form. (Work calendars are defined on the   ([~/?ScreenId=CS209000|CS209000]) Work Calendar (CS209000)                     form.) The time zone in the site preferences specified in the  Login Time                         Zone  box on the   ([~/?ScreenId=SM200505|SM200505]) Site Preferences                     (SM200505) form. Example: =NowUTC() Second( date ) Returns the seconds of the  date . Example: =Second(Now()) Today() Returns the current date according to the system date and time on 									the local computer. Example: =Today() TodayUTC() Returns the current date in the user's time zone. The             system extracts the user's time zone from one of the following sources, which are             ordered by priority from the highest to the lowest: The time zone in the user's preferences, which is specified in the                          Time Zone  box on the  General                         Info  tab of the   ([~/?ScreenId=SM203010|SM203010]) User Profile                     (SP203010) form. The employee calendar selected for the user in the                          Calendar  box of the  General                         Info  tab of the   ([~/?ScreenId=EP203000|EP203000]) Employees (EP203000) form. (Work calendars are defined on the   ([~/?ScreenId=CS209000|CS209000]) Work Calendar (CS209000)                     form.) The time zone in the site preferences specified in the  Login Time                         Zone  box on the   ([~/?ScreenId=SM200505|SM200505]) Site Preferences                     (SM200505) form. Example: =TodayUTC() Year( date ) Returns the year component of the  date . Example: =Year(Now()) Other Functions The  Other  functions group includes the following functions. Function Description and Examples IIf( expression ,  truePart ,  falsePart ) Returns one of two values, depending on the evaluation of the expression: If the expression evaluates to  True , the function returns the  truePart  value; otherwise, it returns the  falsePart  value. Example: =IIf((A10-B10)<>0), CStr(A12), 'No data 										available')  (where  A10 ,  A12 , and 										 B10  are the links used as a function arguments) IsNull( value ,  nullValue ) Returns  nullValue  if  value  is NULL;             otherwise, returns  value .  Example: =IsNull(A10, '0')  (if 										 A10  is NULL, returns  0 ; otherwise, 									returns the  A10  value) NullIf( value1 ,  value2 ) Returns NULL if  value1  is equal to  value2 . Sort( from ,  to ,  column ) Returns the values in the specified range of rows in the 									specified column sorted in ascending order. Example: Sort('0100','0145','B')  (the values in rows 									from 0100 to 0145 in the  B  column will be sorted in 									ascending order)  SortD( from ,  to ,  column ) Returns the values in the specified range of rows in the 									specified column sorted in descending order. Example: SortD('0100','0145','B')  (the values in rows 									from 0100 to 0145 in the  B  column will be sorted in 									descending order)  Sum(from, to) Returns the sum of the values in the specified interval. Example: =Sum('A11','A100')  (where 										 A11  and  A100  are the links used in a function 									argument) Switch( expression_1 ,  value_1 ,  expression_2 ,  value_2 , 									...) Returns the value ( value_n ) that corresponds to the first expression ( expression_n ) that evaluates to  True .  expression_1 ,  expression_2 , and so on are Boolean expressions.  Example: =Switch(((A10-B10)<>0), A12, ((A10-B10)>0), 										B35) Application-Specific Functions This functions are specific for  Acumatica ERP.  Function Description and Examples ExtToInt( object field ,  object value ) Converts the external format of the  object field  parameter into the internal 								object presentation (for example, converts  AccountCD  to 									 AccountID ). Both arguments of the  ExtToInt  								function must have the same data type.  Example: : 									 =Report.ExtToInt( 'ARAdjusted.AdjdCustomerID', 									[ARAdjusted.AdjdCustomerID]) ExtToUI( object field ,  object value ) Converts the external format of the  object field  parameter into the UI format. 								Both arguments of the  ExtToUI  function must have the same 								data type.  Example: =Report.ExtToUI('RowBatch.TranPeriodID', @PeriodID) GetDefExt( object field ) Gets the default value of the  object field  parameter in the external format. 									 Example: =Report.GetDefExt('OrganizationBranchReportParameters.OrganizationID') GetDefInt( object field ) Gets the default value of the  object field  parameter in the internal 								format. GetDefUI( object field ) Gets the default value of the  object field  parameter in the UI format. 									 Example: =Report.GetDefUI('RowAccessInfo.DisplayName') GetDescription( object field ,  object value ) Returns the description of the  object field  parameter as it is defined in the 									 PXSelectorAttribute . Both arguments of the 									 GetDescription  function must have the same 								data type.  Example: : 									 =Report.GetDescription('GLTran.AccountID', 									@AccountCD) If you use this function for 									subaccounts, the subaccount description is not available if the 										 By Segment: All Avail. Segment Values  lookup mode is 									specified for the  SUBACCOUNT  segmented key on the   ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) form. GetDisplayName( object field ) Returns the localized name of the  object field  parameter. Example:  GetFormat( object field ) Returns the data type of the  object field  parameter.  Example: =Report.GetFormat( [APRegister.CuryInfoID] 								) GetMask( object field ) Returns the mask of the  object field  parameter.  Example:  									=Report.GetMask('RowTaxPeriodEffective.TaxPeriodID') IntToExt( object field ,  object value ) Converts the external format of the  object field  parameter into the internal 								object presentation (for example, converts  AccountID  to 									 AccountCD ). Both arguments of the  IntToExt  								function must have the same data type. IntToUI( object field ,  object value ) Converts the internal format of the  object field  parameter into the UI format. 								Both arguments of the  IntToUI  function must have the same 								data type.  Example: =Report.IntToUI('APRegister.FinPeriodID',$ClosedPer) UIToExt( object field ,  object value ) Converts the UI format of the  object field  parameter into the external object 								format. Both arguments of the  UIToExt  function must have the 								same data type. UIToInt( object field ,  object value ) Converts the UI format of the  object field  parameter into the internal object 								format. Both arguments of the  UIToInt  function must have the 								same data type. FormatPeriod( object period ) Performs  ExtToUI  data conversion for the  object period  parameter. This 								function is used to get the period defined by the report's 									 @StartPeriod  and 									 @EndPeriod  dates. FormatPeriod( object period ,  object period shift ) Performs  ExtToUI  data conversion for the  object period  parameter with a 								time shift defined by  object period shift  argument. This 								function is used to get the period defined by the report's 									 @StartPeriod  and  @EndPeriod 								 dates. FormatYear( object period ) Performs  ExtToUI  data conversion for the  object period  parameter year 								part. This function is used to get the period defined by the 								report's  @StartPeriod  and  									@EndPeriod  dates. FormatYear( object period ,  object period shift ) Performs  ExtToUI  data conversion for the  object period  parameter year 								part with a time shift defined by  object period shift  								argument. This function is used to get the period defined by the 								report's  @StartPeriod  and 									 @EndPeriod  dates.  Example: =FormatYear(@StartPeriod, -1)  (The function obtains 								the year of the specified period and shifts the obtained year to the 								value of the shift. For example, if the @StartPeriod is the year 								2014, the expression returns 2013) ]]></column>
		</row>
		<row PageID="cb4ef681-d8ff-4c4b-ad85-e9501ad86f82" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="798da8a0-8ec6-4829-a226-a8aead3d028e" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You use operators to perform certain operations with the formula parameters or modify the data specified by the '''Data Source''' report parameter before the data is inserted in the report. You can add operator manually by typing them in in the formula area or select them from the list of operators available in the formula editor.{br}

There are several groups of operators in the formulas, as described in the following sections.{br}{TOC}
==Arithmetic Operators==
Arithmetic operators perform common arithmetic operations with numeric values. The parameters of the arithmetic expressions are handled as the decimal values. The parameters of any other data type will be converted to the decimal type. 
{| class="checklist" | width="100%" 
|- 
!width="18%" ! Operator
!width="81%" ! Description and Examples
|- 
| ''+'' (addition) 
| 
Adds the value of one numeric expression to another or concatenates two strings.{br}

'''Example:'''{{=A10+B10}}{br}

Here, ''A10'' and ''B10'' are cell references. If the values in the cells are 12.85 and 2.25, the result of the expression would be 12.85 + 2.25 = 15.1.
|- 
| ''-'' (subtraction)
| 
Subtracts the value of one numeric expression from another.{br}

'''Example:'''{{=A20-B30}}{br}

Here, ''A20'' and ''B30'' are cell references. If the values in the cells are 12.85 and 2.25, the result of the expression would be 12.85 - 2.25 = 10.6.
|- 
| ''&#42;'' (multiplication)
| 
Multiplies the value of two expressions.{br}

'''Example:'''{{=C10*D10}}{br}

Here, ''C10'' and ''D10'' are cell references. '''' ''''If the values in the cells are 2.25 and 2, the example would evaluate to 2.25 &#42; 2 = 4.5.
|- 
| ''/'' (division) 
| 
Divides the values of two expressions.{br}

'''Example:'''{{=A10/C10}}. {br}

Here, ''A10'' and ''C10'' are cell references. If the values in the cells are 4.0 and 2.0, the result of the expression would be 4.0 / 2.0 = 2.0.
|- 
| ''%'' (Mod) 
| 
Divides two numbers and returns only the remainder.{br}

'''Example:'''{{=B15 % C15}}{br}

Here, ''B15'' and ''C15'' are cell references. If the values in the cells are 15.0 and 6.0, the result of the expression would be 3.0.
|}
==Logical Operators==
The logical operators, described below, compare Boolean expressions and return a Boolean result. 
{| class="checklist" | width="100%" 
|- 
!width="11%" ! Operator
!width="88%" ! Description and Examples
|- 
| ''And''
| 
Performs logical conjunction on two Boolean expressions. If both expressions evaluate to ''True'', then the operator returns ''True''; if at least one expression evaluates to ''False'', ''And'' returns ''False''.{br}

'''Example:'''{{=(A10>0) And (C10>0)}}{br}

In this example, ''A10'' and ''C10'' are cell references. If ''A10'' = 10 and ''C10'' = 20, then the expression would evaluate to ''True''. Alternatively, if ''A10'' = -10 and ''C10'' = 20, the expression would evaluate to ''False''. 
|- 
| ''Or''
| 
Performs logical disjunction on two Boolean expressions. If either expression evaluates to ''True'', the operation returns ''True''; if neither expression evaluates to ''True'', ''Or'' returns ''False''.{br}

'''Example:'''{{=(A10>0) Or (C10>0)}}{br}

In this example, ''A10'' and ''C10'' are cell references. If ''A10'' = 10 and ''C10'' = 20, then the expression would evaluate to ''True''. Alternatively, if ''A10'' = -10 and ''C10'' = -20, the expression would evaluate to ''False''. 
|- 
| ''Not''
| 
Performs logical negation on a Boolean expression, yielding the opposite of the expression it evaluates. If the expression evaluates to ''True'', the operator yields ''False''; alternatively, if the expression evaluates to ''False'', ''Not'' yields ''True''.{br}

'''Example:'''{{=Not (A10>C10)}}{br}

In this example, ''A10'' and ''C10'' are cell references. If ''A10'' is larger than ''C10'', then the expression would evaluate to ''False''. Alternatively, if ''A10'' is smaller than ''C10'', the expression would evaluate to ''True''.
|}
==Comparison Operators==
These operators, described below, compare two expressions and return a Boolean value that represents the result of the comparison. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Operator
!width="80%" ! Description and Examples
|- 
| ''=''
| 
Equality operator.{br}

'''Example:'''{{=(A10=B10)}}{br}

In this example, ''A10'' and ''B10'' are cell references. If the value in the ''A10'' cell is equal to the value in ''B10'', then the expression evaluates to ''True''; otherwise, the expression evaluates to ''False''.
|- 
| ''&lt;&gt;''
| 
Inequality operator. {br}

'''Example:'''{{=(C10<>A10)}}{br}

(where ''A10'' and ''C10'' are the links used as a formula parameters){br}

In this example, ''A10'' and ''C10'' are cell references. If the value in the ''C10'' cell is not equal to the value in ''A10'', then the expression evaluates to ''True''; otherwise, the expression evaluates to ''False''.
|- 
| ''&lt;''
| 
The ''less than'' operator.{br}

'''Example:'''{{=(@10<@12)}} (where <tt>@10</tt> and <tt>@12</tt> are the links to cells in the current column){br}

In this example, <tt>@10</tt> and <tt>@12</tt> are the links to cells in the current column. If the value in the @10 cell is less than the value in @12, then the expression evaluates to ''True''; otherwise, the expression evaluates to ''False''.
|- 
| ''&gt;''
| 
 ''Greater than'' operator.{br}

'''Example:'''{{=(C10>A10)}} (where ''A10'' and ''C10'' are the links used as a formula parameters){br}

In this example, ''A10'' and ''C10'' are cell references. If the value in the ''C10'' cell is greater than to the value in ''A10'', then the expression evaluates to ''True''; otherwise, the expression evaluates to ''False''.
|- 
| ''&lt;=''
| 
The ''less than or equal to'' operator.{br}

'''Example:'''{{=(C10<=A10)}} (where ''A10'' and ''C10'' are the links used as a formula parameters){br}

In this example, ''A10'' and ''C10'' are cell references. If the value in the ''C10'' cell is less than or equal to the value in ''A10'', then the expression evaluates to ''True''; otherwise, the expression evaluates to ''False''.
|- 
| ''&gt;= ''
| 
The ''greater than or equal to'' operator.{br}

'''Example:'''{{=(A10>=C10)}} (where ''A10'' and ''C10'' are the links used as a formula parameters){br}

In this example, ''A10'' and ''C10'' are cell references. If the value in the ''A10'' cell is greater than or equal to the value in ''C10'', then the expression evaluates to ''True''; otherwise, the expression evaluates to ''False''.
|}
==Other Operators==
This group includes the following operators. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Operator
!width="80%" ! Description and Examples
|- 
| ''In ''(a binary operator) 
| 
 This operator is used in an elementary logical expression that evaluates the search results and returns ''True'' when the parameter matches one of the elements from the set of values.{br}

'''Example''': {{=(A20 In (10, 50, 57))}} (where ''A20'' is the link used as a formula parameter)
|- 
| ''True'' (a binary constant) 
| 
 This operator is used as a parameter in logical expressions.{br}

'''Example''': {{=((D30<A30)=True)}} (where ''D30'' is the link used as a formula parameter)
|- 
| ''False ''(a binary constant)
| 
This operator is used as a parameter in logical expressions.{br}

'''Example:'''{{=((C10=E10)=False)}} (where ''C10'' and ''E10'' are the links to the data)
|- 
| ''Null'' (a value)
| 
 This operator is used as a parameter in logical expressions.{br}

'''Example:'''{{=(@20=Null)}} (where <tt>@20</tt> is the cell in the current column and 10th row)
|}
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]
*[HelpRoot_ReportingTools\CS__ARM_Formula_Parameters|Formula Parameters]]]></column>
			<column name="PlainText"><![CDATA[Formula Operators You use operators to perform certain operations with the formula parameters or modify the data 				specified by the  Data Source  report parameter before the data 				is inserted in the report. You can add operator manually by typing them in in the 				formula area or select them from the list of operators available in the formula 				editor. There are several groups of operators in the formulas, as described in the following 				sections. Arithmetic Operators Arithmetic operators perform common arithmetic operations with numeric values. The 				parameters of the arithmetic expressions are handled as the decimal values. The 				parameters of any other data type will be converted to the decimal type.  Operator Description and Examples +  (addition)  Adds the value of one numeric expression to another or 									concatenates two strings. Example: =A10+B10 Here,  A10  and  B10  are cell references. If the values in the cells are 12.85 									and 2.25, the result of the expression would be 12.85 + 2.25 = 									15.1. -  (subtraction) Subtracts the value of one numeric expression from another. Example: =A20-B30 Here,  A20  and  B30  are cell references. If the values in the cells are 12.85 									and 2.25, the result of the expression would be 12.85 - 2.25 = 									10.6. *  (multiplication) Multiplies the value of two expressions. Example: =C10*D10 Here,  C10  and  D10  are cell references.  If the values in the cells 									are 2.25 and 2, the example would evaluate to 2.25 * 2 = 									4.5. /  (division)  Divides the values of two expressions. Example: =A10/C10 .  Here,  A10  and  C10  are cell references. If the values in the cells are 4.0 									and 2.0, the result of the expression would be 4.0 / 2.0 = 									2.0. %  (Mod)  Divides two numbers and returns only the remainder. Example: =B15 % C15 Here,  B15  and  C15  are cell references. If the values in the cells are 15.0 									and 6.0, the result of the expression would be 3.0. Logical Operators The logical operators, described below, compare Boolean expressions and return a 				Boolean result.  Operator Description and Examples And Performs logical conjunction on two Boolean expressions. If both expressions evaluate to 										 True , then the operator returns  True ; if at 									least one expression evaluates to  False ,  And  									returns  False . Example: =(A10>0) And (C10>0) In this example,  A10  and  C10  are cell references. If  A10  = 10 and 										 C10  = 20, then the expression would evaluate to 										 True . Alternatively, if  A10  = -10 and 										 C10  = 20, the expression would evaluate to 										 False .  Or Performs logical disjunction on two Boolean expressions. If 									either expression evaluates to  True , the operation 									returns  True ; if neither expression evaluates to 										 True ,  Or  returns  False . Example: =(A10>0) Or (C10>0) In this example,  A10  and  C10  are cell references. If  A10  = 10 and 										 C10  = 20, then the expression would evaluate to 										 True . Alternatively, if  A10  = -10 and 										 C10  = -20, the expression would evaluate to 										 False .  Not Performs logical negation on a Boolean expression, yielding the 									opposite of the expression it evaluates. If the expression 									evaluates to  True , the operator yields  False ; 									alternatively, if the expression evaluates to  False , 										 Not  yields  True . Example: =Not (A10>C10) In this example,  A10  and  C10  are cell references. If  A10  is larger 									than  C10 , then the expression would evaluate to 										 False . Alternatively, if  A10  is smaller than 										 C10 , the expression would evaluate to 									 True . Comparison Operators These operators, described below, compare two expressions and return a Boolean value 				that represents the result of the comparison.  Operator Description and Examples = Equality operator. Example: =(A10=B10) In this example,  A10  and  B10  are cell references. If the value in the 										 A10  cell is equal to the value in  B10 , then 									the expression evaluates to  True ; otherwise, the 									expression evaluates to  False . <> Inequality operator.  Example: =(C10<>A10) (where  A10  and  C10  are the links used as a formula parameters) In this example,  A10  and  C10  are cell references. If the value in the 										 C10  cell is not equal to the value in  A10 , 									then the expression evaluates to  True ; otherwise, the 									expression evaluates to  False . < The  less than  operator. Example: =(@10<@12)  (where  @10  and 										 @12  are the links to cells in the current 									column) In this example,  @10  and  @12  are the links to cells 									in the current column. If the value in the @10 cell is less than 									the value in @12, then the expression evaluates to  True ; 									otherwise, the expression evaluates to  False . > Greater than  operator. Example: =(C10>A10)  (where  A10  and  C10  									are the links used as a formula parameters) In this example,  A10  and  C10  are cell references. 									If the value in the  C10  cell is greater than to the value 									in  A10 , then the expression evaluates to  True ; 									otherwise, the expression evaluates to  False . <= The  less than or equal to  operator. Example: =(C10<=A10)  (where  A10  and  C10  									are the links used as a formula parameters) In this example,  A10  and  C10  are cell references. If the value in the 										 C10  cell is less than or equal to the value in 										 A10 , then the expression evaluates to  True ; 									otherwise, the expression evaluates to  False . >=  The  greater than or equal to  operator. Example: =(A10>=C10)  (where  A10  and  C10  									are the links used as a formula parameters) In this example,  A10  and  C10  are cell references. If the value in the 										 A10  cell is greater than or equal to the value in 										 C10 , then the expression evaluates to  True ; 									otherwise, the expression evaluates to  False . Other Operators This group includes the following operators.  Operator Description and Examples In  (a binary operator)   This operator is used in an elementary logical expression that 									evaluates the search results and returns  True  when the 									parameter matches one of the elements from the set of 									values. Example :  =(A20 In (10, 50, 57))  (where 										 A20  is the link used as a formula parameter) True  (a binary constant)   This operator is used as a parameter in logical expressions. Example :  =((D30<A30)=True)  (where 										 D30  is the link used as a formula parameter) False  (a binary constant) This operator is used as a parameter in logical expressions. Example: =((C10=E10)=False)  (where  C10  and 										 E10  are the links to the data) Null  (a value)  This operator is used as a parameter in logical expressions. Example: =(@20=Null)  (where  @20  is 									the cell in the current column and 10th row) ]]></column>
		</row>
		<row PageID="f3d27b0f-5180-454b-b4ab-ffc8f70043d6" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e6c80338-4025-ba08-27b3-8156f4c0fb7d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A formula may include parameters that reference the data you want use in calculating the values in the report. There are two types of parameters: predefined parameters; and links to specific rows, columns, or individual report cells. {br}{TOC}
==Predefined Parameters==
The predefined parameters are application-specific and refer to the report parameters that you specify on other ARM forms, such as the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form or the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form. For example, the <tt>@StartPeriod</tt> parameter refers to the value specified in the '''Start Period''' box on the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form, and the <tt>@BaseRowCode</tt> parameter refers to the value specified in the '''Base Row''' box on the [HelpRoot_FormReference\CS_20_60_10|Row Sets] form. All the available predefined parameters are listed in the [HelpRoot_FormReference\CS__ref_Data_Source_Editor|Data Source Editor] dialog box.{br}

The table below provides the list of the predefined parameters with their descriptions.
{| class="checklist" | width="100%" 
|- 
!width="31%" ! Parameter
!width="68%" ! Description 
|- 
| <tt>@AccountCode</tt>
| 
The code of the current account if the ''Account'' option is selected in the '''Expand''' box in the Data Source Editor dialog box.{br}

This is the code of the current subaccount if the ''Sub'' option is selected in the '''Expand''' box.
|- 
| <tt>@AccountDescr</tt>
| 
The description of the current account if the ''Account'' option is selected in the '''Expand''' box in the Data Source Editor dialog box.{br}

This is the description of the current subaccount if the ''Sub'' option is selected in the '''Expand''' box.
|- 
| <tt>@BaseRowCode</tt>
| The row code specified for the selected row in the '''Base Row''' column on the [HelpRoot_FormReference\CS_20_60_10|Row Sets] form. This row code is referred to by this parameter, which you use in the formula in the '''Value''' box on the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form to retrieve the value specified in this row for computing another value in the report.
|- 
| <tt>@BookCode</tt>
| The code of the ledger whose data is used in the report. This parameter refers to the value in the '''Ledger''' box in the '''Default Data Source Settings''' section.
|- 
| <tt>@BranchName</tt>
| The identifier of the branch that is used in the report.
|- 
| <tt>@ColumnCode</tt>
| The code of the current column in the report.
|- 
| <tt>@ColumnIndex</tt>
| The index of the current column in the report.
|- 
| <tt>@ColumnSetCode</tt>
| The code of the current column set in the report.
|- 
| <tt>@ColumnText</tt>
| The description of the current column in the report.
|- 
| <tt>@EndAccount</tt>
| The last account in the range of accounts used in the report. This parameter refers to the value in the '''End Account''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.
|- 
| <tt>@EndAccountGroup</tt>
| The last account group in the range of account groups used in the report. This parameter refers to the value in the '''End Acc. Group''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.((({S:Warn}This parameter is valid only in reports of the ''PM'' type.
)))
|- 
| <tt>@EndBranch</tt>
| The last branch in the range of branches used in the report. This parameter refers to the value in the '''End Branch''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.
|- 
| <tt>@EndPeriod</tt>
| The end period of the report. This parameter refers to the value in the '''End Period''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.
|- 
| <tt>@EndProject</tt>
| The last project in the range of projects used in the report. This parameter refers to the value in the '''End Project''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.((({S:Warn}This parameter is valid only in reports of the ''PM'' type.
)))
|- 
| <tt>@EndProjectTask</tt>
| The last project task in the range of the project tasks used in the report. This parameter refers to the value in the '''End Task''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.((({S:Warn}This parameter is valid only in reports of the ''PM'' type.
)))
|- 
| <tt>@EndSub</tt>
| The last subaccount in the range of subaccounts used in the report. This parameter refers to the value in the '''End Sub''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.
|- 
| <tt>@StartAccount</tt>
| The first account in the range of accounts used in the report. This parameter refers to the value in the '''Start Account''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.
|- 
| <tt>@StartAccountGroup</tt>
| The first account group in the range of account groups used in the report. Refers to the value in the '''Start Acc. Group''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.((({S:Warn}This parameter is valid only in reports of the ''PM'' type.
)))
|- 
| <tt>@StartBranch</tt>
|  The first branch in the range of branches used in the report. This parameter refers to the value in the '''Start Branch''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.
|- 
| <tt>@StartPeriod</tt>
| The start period of the report. This parameter refers to the value in the '''Start Period''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.
|- 
| <tt>@StartProject</tt>
| The first project in the range of projects used in the report. This parameter refers to the value in the '''Start Project''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.((({S:Warn}This parameter is valid only in reports of the ''PM'' type.
)))
|- 
| <tt>@StartProjectTask</tt>
| The first project task in the range of project tasks used in the report. This parameter refers to the value in the '''Start Task''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.((({S:Warn}This parameter is valid only in reports of the ''PM'' type.
)))
|- 
| <tt>@StartSub</tt>
| The first subaccount in the range of subaccounts used in the report. This parameter refers to the value in the '''Start Sub''' box in the '''Default Data Source Settings''' section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] form.
|- 
| <tt>@ReportDescr</tt>
|  The report description that the system prints in the column set header. 
|- 
| <tt>@RowCode</tt>
|  The code of the current row in the report.
|- 
| <tt>@RowIndex</tt>
|  The index of the current row in the report.
|- 
| <tt>@RowSetCode</tt>
|  The code of the current row set in the report.
|- 
| <tt>@RowText</tt>
|  The description of the current row in the report.
|- 
| <tt>@UnitCode</tt>
|  The code of the current unit in the report.
|- 
| <tt>@UnitSetCode</tt>
|  The code of the current unit set in the report.
|- 
| '''@UnitText'''
|  The description of the current unit in the report.
|}
==Links to Rows==
You can use the links to the rows in the formulas to define the parameters. The links to the rows are used when a formula is defined for the row to calculate its values, and the referenced rows are the parameters used in these calculations. For example, when a row is a summarized value of the other two rows, the formula includes the references to the rows to be summarized. {br}

You can use the links to the rows in the formulas designed for the calculation of row and column values. However, we do not recommend that you reference the rows in the formulas defined for columns because of the self-references in these formulas. Self-references can be the source of circular reference errors in the formulas. {br}

The links to the rows have the following format: ''row&#95;code'', where ''row&#95;code'' is the code of the referenced row (for example, ''00112''). {br}

The following are examples of formulas using links to the rows.{{{{=@30+C30+E30
=C110-@110+H110
}}}}
In the examples above, ''@30'', ''C30'', ''E30'', ''C110'', ''H110'', and ''@110'' are the cells in rows 30 and 110. The row codes are entered manually by the report designer. 
==Links to Columns==
You can use the links to the columns in the formulas to define the parameters. You use the links to the columns when a formula is defined for the column to calculate its values, and the referenced columns are the parameters used in these calculations. For example, when a column is a summarized value of the other two columns, the formula includes the references to the columns to be summarized. You can use the links to the columns in the formulas designed for calculation of column and row values. Again, avoid referencing the columns in the formulas defined for rows because self-references in these formulas can cause circular reference errors. {br}

To reference a column, replace its code in the formula as a parameter. {br}

See the following examples of formulas with links to the columns.{{{{=A+B+D
=C-D
}}}}
''A'', ''B'', ''C'', and ''D'' are the column codes. The codes of the columns are assigned by the system and cannot be changed. 
==Links to Cells==
You can use the links to the report cells in the formulas to define the parameters. You use these links when a formula is defined for the column or row to calculate its values, and the referenced cells are the parameters used in these calculations. {br}

To reference a cell, substitute its code into the formula as a parameter. {br}

See the following examples of formulas using links to the cells.{{{{=A60+B30+D20
=C30-D20
}}}}
In the examples, ''A'', ''B'', ''C'', and ''D'' are the column codes, while ''20'', ''30'', and ''60'' are the row codes. The cells located in the specified rows of the columns indicated by the first letters are used as the parameters in these formulas. 
==Self-Links in Formula Parameters==
The self-links in the formulas can be used in very few cases; they typically are not used to avoid the situations when a self-link results in circular reference error. An example of a useful self-link is the case when some operations must be performed with the values selected directly from the data source, such as calculations of charges for a certain period. To use a self-link in a formula, insert a link to the row or column in the formula defined for this row or column. {br}

The following example of self-reference in a row and column can be used to calculate charges of 5%. {{{{=@20*0.05
}}}}
In the example, ''20'' is the code of the row where the formula is defined. In this example, all values in the 20th row will be multiplied by 0.05. {{{{=A*0.05
}}}}((({S:Hint}To avoid self-reference, you can use two different rows in the row set: The first row includes the data selected from the data source, while the second one calculates the charges. Then you can exclude the first row from the printed report by selecting the ''Hidden'' option in the '''Printing Control''' row attribute on the [HelpRoot_FormReference\CS_20_60_10|Row Sets] or [HelpRoot_FormReference\CS_20_60_20|Column Sets] form.
)))
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Formulas|Formulas]
*[HelpRoot_ReportingTools\CS__ARM_Operators|Formula Operators]
*[HelpRoot_ReportingTools\CS__ARM_Functions|Formula Functions]
*[HelpRoot_ReportingTools\CS__ARM_Data_Source|Data Source]]]></column>
			<column name="PlainText"><![CDATA[Formula Parameters A formula may include parameters that reference the data you want use in calculating the 				values in the report. There are two types of parameters: predefined parameters; and 				links to specific rows, columns, or individual report cells.  Predefined Parameters The predefined parameters are application-specific and refer to the report parameters that you 				specify on other ARM forms, such as the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) 				form or the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form. For example, the 					 @StartPeriod  parameter refers to the value specified in the 					 Start Period  box on the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions 				form, and the  @BaseRowCode  parameter refers to the value 				specified in the  Base Row  box on the   ([~/?ScreenId=CS206010|CS206010]) Row Sets form. All the available predefined parameters are 				listed in the  Data Source Editor dialog 				box. The table below provides the list of the predefined parameters with their 				descriptions. Parameter Description  @AccountCode The code of the current account if the  Account  option is selected in the 										 Expand  box in the Data Source Editor 									dialog box. This is the code of the current subaccount if the  Sub  option is selected in the 										 Expand  box. @AccountDescr The description of the current account if the  Account  option is selected in the 										 Expand  box in the Data Source Editor 									dialog box. This is the description of the current subaccount if the  Sub  option is selected in 									the  Expand  box. @BaseRowCode The row code specified for the selected row in the  Base Row  								column on the   ([~/?ScreenId=CS206010|CS206010]) Row Sets form. This row code is 								referred to by this parameter, which you use in the formula in the 									 Value  box on the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form to retrieve the value 								specified in this row for computing another value in the 								report. @BookCode The code of the ledger whose data is used in the report. This parameter refers to the 								value in the  Ledger  box in the 									 Default Data Source Settings  								section. @BranchName The identifier of the branch that is used in the report. @ColumnCode The code of the current column in the report. @ColumnIndex The index of the current column in the report. @ColumnSetCode The code of the current column set in the report. @ColumnText The description of the current column in the report. @EndAccount The last account in the range of accounts used in the report. This parameter refers to 								the value in the  End Account  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. @EndAccountGroup The last account group in the range of account groups used in the report. This 								parameter refers to the value in the  End Acc. 									Group  box in the  Default Data Source 									Settings  section of the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. This parameter is valid 									only in reports of the  PM  type. @EndBranch The last branch in the range of branches used in the report. This parameter refers to 								the value in the  End Branch  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. @EndPeriod The end period of the report. This parameter refers to the value in the  End 									Period  box in the  Default Data Source 									Settings  section of the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. @EndProject The last project in the range of projects used in the report. This parameter refers to 								the value in the  End Project  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. This parameter is 									valid only in reports of the  PM  type. @EndProjectTask The last project task in the range of the project tasks used in the report. This 								parameter refers to the value in the  End Task  								box in the  Default Data Source Settings  								section of the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. This 									parameter is valid only in reports of the  PM  								type. @EndSub The last subaccount in the range of subaccounts used in the report. This parameter 								refers to the value in the  End Sub  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. @StartAccount The first account in the range of accounts used in the report. This parameter refers 								to the value in the  Start Account  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. @StartAccountGroup The first account group in the range of account groups used in the report. Refers to 								the value in the  Start Acc. Group  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. This parameter is 									valid only in reports of the  PM  type. @StartBranch  The first branch in the range of branches used in the report. This parameter refers 								to the value in the  Start Branch  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. @StartPeriod The start period of the report. This parameter refers to the value in the 									 Start Period  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. @StartProject The first project in the range of projects used in the report. This parameter refers 								to the value in the  Start Project  box in the 									 Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. This parameter is 									valid only in reports of the  PM  type. @StartProjectTask The first project task in the range of project tasks used in the report. This 								parameter refers to the value in the  Start 									Task  box in the  Default Data Source 									Settings  section of the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. This parameter is valid 									only in reports of the  PM  type. @StartSub The first subaccount in the range of subaccounts used in the report. This parameter 								refers to the value in the  Start Sub  box in 								the  Default Data Source Settings  section of 								the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions form. @ReportDescr  The report description that the system prints in the column set header.  @RowCode  The code of the current row in the report. @RowIndex  The index of the current row in the report. @RowSetCode  The code of the current row set in the report. @RowText  The description of the current row in the report. @UnitCode  The code of the current unit in the report. @UnitSetCode  The code of the current unit set in the report. @UnitText  The description of the current unit in the report. Links to Rows You can use the links to the rows in the formulas to define the parameters. The links 				to the rows are used when a formula is defined for the row to calculate its values, 				and the referenced rows are the parameters used in these calculations. For example, 				when a row is a summarized value of the other two rows, the formula includes the 				references to the rows to be summarized.  You can use the links to the rows in the formulas designed for the calculation of row and 				column values. However, we do not recommend that you reference the rows in the 				formulas defined for columns because of the self-references in these formulas. 				Self-references can be the source of circular reference errors in the formulas.  The links to the rows have the following format:  row_code , where 					 row_code  is the code of the referenced row (for example,  00112 ).  The following are examples of formulas using links to the rows. =@30+C30+E30
=C110-@110+H110 In the examples above,  @30 ,  C30 ,  E30 ,  C110 ,  H110 , and 					 @110  are the cells in rows 30 and 110. The row codes are entered manually 				by the report designer.  Links to Columns You can use the links to the columns in the formulas to define the parameters. You use the 				links to the columns when a formula is defined for the column to calculate its 				values, and the referenced columns are the parameters used in these calculations. 				For example, when a column is a summarized value of the other two columns, the 				formula includes the references to the columns to be summarized. You can use the 				links to the columns in the formulas designed for calculation of column and row 				values. Again, avoid referencing the columns in the formulas defined for rows 				because self-references in these formulas can cause circular reference errors.  To reference a column, replace its code in the formula as a parameter.  See the following examples of formulas with links to the columns. =A+B+D
=C-D A ,  B ,  C , and  D  are the column codes. The codes of the columns are 				assigned by the system and cannot be changed.  Links to Cells You can use the links to the report cells in the formulas to define the parameters. 				You use these links when a formula is defined for the column or row to calculate its 				values, and the referenced cells are the parameters used in these calculations.  To reference a cell, substitute its code into the formula as a parameter.  See the following examples of formulas using links to the cells. =A60+B30+D20
=C30-D20 In the examples,  A ,  B ,  C , and  D  are the column codes, while 					 20 ,  30 , and  60  are the row codes. The cells located in the 				specified rows of the columns indicated by the first letters are used as the 				parameters in these formulas.  Self-Links in Formula Parameters The self-links in the formulas can be used in very few cases; they typically are not used to 				avoid the situations when a self-link results in circular reference error. An 				example of a useful self-link is the case when some operations must be performed 				with the values selected directly from the data source, such as calculations of 				charges for a certain period. To use a self-link in a formula, insert a link to the 				row or column in the formula defined for this row or column.  The following example of self-reference in a row and column can be used to calculate charges 				of 5%.  =@20*0.05 In the example,  20  is the code of the row where the formula is defined. In this 				example, all values in the 20th row will be multiplied by 0.05.  =A*0.05 To avoid self-reference, you can use two different rows in the row set: The 				first row includes the data selected from the data source, while the second one 				calculates the charges. Then you can exclude the first row from the printed report 				by selecting the  Hidden   option in the  Printing 					Control  row attribute on the   ([~/?ScreenId=CS206010|CS206010]) Row Sets or 					  ([~/?ScreenId=CS206020|CS206020]) Column Sets form. ]]></column>
		</row>
		<row PageID="cfe77fe2-5f9d-43ac-9037-c970bf122a61" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="4ea55e9a-3a57-a3a5-e951-d09965c80ae9" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Printing style settings determine how the text in the report will be formatted and printed. The printing style parameters include the text formatting options you can specify for the report pages and for the individual rows and columns. {br}{TOC}
==Report Formatting Settings==
You can set up the page structure (including the report page and margin sizes), select the font attributes (the font name, size, style, and color), and set up the text alignment and background color attributes for the text lines in the report. The formatting settings defined for the whole report include the report attributes for the page formatting, and the printing style for the report text. You specify the report formatting parameters, described in the following table, on the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form of the Analytical Report Manager. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Report Layout Parameter
!width="80%" ! Description
|- 
| '''Margins'''
| 
 Includes elements you can use to specify the margin size settings for the report page, which can be set in pixels, points, picas, centimeters, millimeters, or inches. You can specify the following margins:
*'''Left''': The size of the left margin of the report page.
*'''Top''': The size of the top margin of the report page.
*'''Bottom''': The size of the bottom margin of the report page.
*'''Right''': The size of the right margin of the report page.

|- 
| '''Print Area'''
| 
Includes elements you can use to specify the size of the report page, which can be set in pixels, points, picas, centimeters, millimeters, or inches. You can specify the following sizes:
*''Width'': The report page width.
*''Height'': The report page height.

|- 
| '''Default Font Style'''
|  Includes elements you can use to specify the style parameters, including font formatting, background color, and text align options, for the report. These parameters are the same as the settings specified for the row and column '''Style''' parameters used to define the printing style for the rows and columns.
|}
==Row Formatting Parameters==
On the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) form, you can set up any particular row in the report to visually emphasize it by using text alignment, font name, size, style, color, and background color. The formatting parameters defined on the row level include setting up the row attributes for the row formatting, and defining the printing style for the text in the row. To define the row formatting, set the following row parameters. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Row Formatting Parameter
!width="80%" ! Description
|- 
| '''Height'''
|  The row height (in pixels).
|- 
| '''Indent'''
|  The row indentation (in pixels).
|- 
| '''Style'''
| The style parameters for the row, including font formatting, background color, and text align options.
|}
==Column Formatting Parameters==
On the [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form, you can set up any particular column in the report to visually emphasize it by using text alignment, font name, size, style, color, and background color attributes. The formatting parameters defined on the column level include setting up the column formatting, and defining the printing style for the text in the column. Column formatting is frequently used to highlight some columns in the report (for example, when the highlighted columns display totals calculated for some reporting periods, and they must have a notable formatting). To define the column formatting, set the following column attributes. 
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Column Formatting Parameter
!width="80%" ! Description
|- 
| '''Width'''
|  The column width (in pixels).
|- 
| '''Extra Space'''
|  The indent defined for the column (in pixels).
|- 
| '''Style'''
| The style parameters for the column, including font formatting, background color, and text align options.
|}
==Style Parameters==
Style parameters are the text formatting parameters specified for the entire report or for individual row or column. {br}

You specify the text formatting parameters for a report, row, or column in the style section of the [HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000]) form or in the style dialog box (shown below), which you invoke from the [HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010]) or [HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020]) form. [image:UserGuide/Images/Printing_Style_Printing_StylePrinting_Style.PNG|popup|300px]
In the style dialog box, you can specify the following formatting parameters.
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Formatting parameter
!width="80%" ! Description
|- 
| '''Text Align'''
|  The alignment for the text in the report lines.
|- 
| '''Color'''
|  The text color.
|- 
| '''Back Color'''
|  The background color.
|- 
| '''Font'''
|  The font name.
|- 
| '''Font Size'''
|  The font size.
|- 
| '''Font Style'''
|  The font style, which can be one of the following options: ''Regular'', ''Bold'', ''Italic'', ''Underline'', or ''Strikeout'').
|}
==Related Articles==
*[HelpRoot_ReportingTools\CS__ARM_Analytical_Report_Parameters|Analytical Report Manager]
*[HelpRoot_FormReference\CS_20_60_00|Report Definitions] ([~/?ScreenId=CS206000|CS206000])
*[HelpRoot_FormReference\CS_20_60_10|Row Sets] ([~/?ScreenId=CS206010|CS206010])
*[HelpRoot_FormReference\CS_20_60_20|Column Sets] ([~/?ScreenId=CS206020|CS206020])]]></column>
			<column name="PlainText"><![CDATA[Printing Style Printing style settings determine how the text in the report will be formatted and printed. 				The printing style parameters include the text formatting options you can specify 				for the report pages and for the individual rows and columns.  Report Formatting Settings You can set up the page structure (including the report page and margin sizes), select the 				font attributes (the font name, size, style, and color), and set up the text 				alignment and background color attributes for the text lines in the report. The 				formatting settings defined for the whole report include the report attributes for 				the page formatting, and the printing style for the report text. You specify the 				report formatting parameters, described in the following table, on the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form of the Analytical Report 				Manager.  Report Layout Parameter Description Margins  Includes elements you can use to specify the margin size settings for the report page, 									which can be set in pixels, points, picas, centimeters, 									millimeters, or inches. You can specify the following 									margins: Left : The size of the left margin of the report page. Top : The size of the top margin of the report page. Bottom : The size of the bottom margin of the report page. Right : The size of the right margin of the report page. Print Area Includes elements you can use to specify the size of the report page, which can be set in 									pixels, points, picas, centimeters, millimeters, or inches. You 									can specify the following sizes: Width : The report page width. Height : The report page height. Default Font Style  Includes elements you can use to specify the style parameters, including font 								formatting, background color, and text align options, for the 								report. These parameters are the same as the settings specified for 								the row and column  Style  parameters used to define the 								printing style for the rows and columns. Row Formatting Parameters On the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) form, you can set up any 				particular row in the report to visually emphasize it by using text alignment, font 				name, size, style, color, and background color. The formatting parameters defined on 				the row level include setting up the row attributes for the row formatting, and 				defining the printing style for the text in the row. To define the row formatting, 				set the following row parameters.  Row Formatting Parameter Description Height  The row height (in pixels). Indent  The row indentation (in pixels). Style The style parameters for the row, including font formatting, background color, and 								text align options. Column Formatting Parameters On the   ([~/?ScreenId=CS206020|CS206020]) Column Sets (CS206020) form, you can set up 				any particular column in the report to visually emphasize it by using text 				alignment, font name, size, style, color, and background color attributes. The 				formatting parameters defined on the column level include setting up the column 				formatting, and defining the printing style for the text in the column. Column 				formatting is frequently used to highlight some columns in the report (for example, 				when the highlighted columns display totals calculated for some reporting periods, 				and they must have a notable formatting). To define the column formatting, set the 				following column attributes.  Column Formatting Parameter Description Width  The column width (in pixels). Extra Space  The indent defined for the column (in pixels). Style The style parameters for the column, including font formatting, 								background color, and text align options. Style Parameters Style parameters are the text formatting parameters specified for the entire report 				or for individual row or column.  You specify the text formatting parameters for a report, row, or column in the style section 				of the   ([~/?ScreenId=CS206000|CS206000]) Report Definitions (CS206000) form or in the style 				dialog box (shown below), which you invoke from the   ([~/?ScreenId=CS206010|CS206010]) Row Sets (CS206010) or   ([~/?ScreenId=CS206020|CS206020]) Column Sets 				(CS206020) form.  In the style dialog box, you can specify the following formatting parameters. Formatting parameter Description Text Align  The alignment for the text in the report lines. Color  The text color. Back Color  The background color. Font  The font name. Font Size  The font size. Font Style  The font style, which can be one of the following options:  Regular , 									 Bold ,  Italic ,  Underline , or 									 Strikeout ).  ([~/?ScreenId=CS206000|CS206000])  ([~/?ScreenId=CS206010|CS206010])  ([~/?ScreenId=CS206020|CS206020]) ]]></column>
		</row>
		<row PageID="24b77bbe-0eb3-4d37-9350-071ae5743571" Language="en-US" PageRevisionID="1" PlainText=" Acumatica Report                         Designer Guide This part of the guide provides information on how to create report forms and printed pages by     using the  Acumatica Report                         Designer tool. In This Part  Acumatica Report                         Designer User InterfaceCreating and Modifying the ReportsSelecting Data for the ReportComposing the Report LayoutData Grouping and SortingUsing ExpressionsCreating the Report ContentUsing VariablesUsing the External Parameter Collection EditorSaving and Publishing the ReportsTranslating ReportsUpdating the Database Schema for ReportsRecommendations" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="dab5ec51-aa5b-a855-4c41-3941d0058aa1" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This part of the guide provides information on how to create report forms and printed pages by using the Acumatica Report                         Designer tool.
==In This Part==[anchor|#ul_b12_pxy_kn]
*[HelpRoot_ReportingTools\Acumatica_Report_Designer_User_Interface| Acumatica Report                         Designer User Interface]
*[HelpRoot_ReportingTools\Creating_and_Modifying_the_Reports|Creating and Modifying the Reports]
*[HelpRoot_ReportingTools\Selecting_Data_for_the_Report|Selecting Data for the Report]
*[HelpRoot_ReportingTools\Composing_the_Report_Layout|Composing the Report Layout]
*[HelpRoot_ReportingTools\Data_Grouping_and_Sorting|Data Grouping and Sorting]
*[HelpRoot_ReportingTools\Using_Expressions|Using Expressions]
*[HelpRoot_ReportingTools\Creating_the_Report_Content|Creating the Report Content]
*[HelpRoot_ReportingTools\Using_Variables|Using Variables]
*[HelpRoot_ReportingTools\Using_the_External_Parameter_Collection_Editor|Using the External Parameter Collection Editor]
*[HelpRoot_ReportingTools\Saving_and_Publishing_the_Reports|Saving and Publishing the Reports]
*[HelpRoot_ReportingTools\Translating_Reports|Translating Reports]
*[HelpRoot_ReportingTools\RD__how_Update_Reports|Updating the Database Schema for Reports]
*[HelpRoot_ReportingTools\ReportGuidelines|Recommendations]
]]></column>
		</row>
		<row PageID="b17045e9-3acd-4c1f-b493-9eeb7b89a48a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a589b8fe-5376-f827-a0a7-f91abf96fc14" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The Acumatica Report                         Designer provides visual tools that you can use to design custom reports. From the Acumatica Report                         Designer screen, you can select the report data from the Acumatica ERP system database, create the report content, and save the report in a detached file with the <tt>.rpx</tt> format. This file stores the report description as XML data.{br}{TOC}
==Accessing the Report Designer==
To view the Acumatica Report                         Designer main window, navigate as follows: '''Start''' &gt; '''Programs''' &gt; '''Acumatica''' &gt; '''Report Designer'''.[image:UserGuide/Images/Acumatica_Report_Designer_User_Interface_Acumatica_Report_Designer_User_InterfaceReportDesigner_Signed.PNG|popup|Report Designer Main Window|400px]
 The main window of the Acumatica Report                         Designer includes three areas: 
*The Design area displays the report layout, which users can change.
*The Tools area provides access to the tools that can be used to design the report layout and add the report content.
*The Tabs area includes the following tabs: 
**'''Properties''': Displays the properties of the report element selected in the Design area.
**'''Fields''': Lists the names of all data access class (DAC) fields selected as the source of data for the report.
*The Modes area allows to toggle between the following display modes:
**'''Design''': This default mode is used for editing the report layout.
**'''Preview''': This mode is used for previewing the resulting report layout.

==Main Window Menu==
The Main Window menu of the Acumatica Report                         Designer includes the commands described below. [anchor|#_e237c41a-2953-4096-ab91-18cebc7b27c0]
{| class="checklist" | width="100%" 
|- 
!width="18%" ! Command
!width="81%" ! Description
|- 
| rowspan="9" | '''File'''
| The commands under the '''File''' menu, listed below, provide access to the main operations with the report file and allow you to access the database schema:
|- 
| ''New'': Creates a new report file.
|- 
| ''Open'': Opens and existing report file.
|- 
| ''Open From Server'': Opens an existing report file located on the Acumatica ERP application server.((({S:Warn}The history of successful connections is automatically saved in the drop down list of the URL box. You can delete records from the connection history list by using the right mouse click and selecting '''Delete URL from history'''.
)))
|- 
| ''Save'': Saves the current report file.
|- 
| ''Save As'': Saves the current report in a new file. This command can be used to rename a report file or to save it to a new location.
|- 
| ''Save On Server'': Saves the report on the Acumatica ERP application server.
|- 
| ''Build Schema'': Runs the Schema Builder wizard.
|- 
| ''Exit'':Closes the Report Designer main window.
|- 
| rowspan="7" | '''Edit'''
| You can use the commands under the '''Edit''' menu, listed below, to perform basic editing operations with the objects placed in the Design area.
|- 
| ''Undo'': Reverts the latest change done to the report. The Acumatica Report                         Designer stores all the report changes, which you can undo, until the report is closed.
|- 
| ''Redo'': Reverts the effect of the last undone action. Making a new edit clears the redo list.
|- 
| ''Cut'': Removes the selected items from the Design area and places a copy of them on the clipboard.
|- 
| ''Copy'': Places a copy of the selected items on the clipboard.
|- 
| ''Paste'': Places the items from the clipboard in the Design area.
|- 
| ''Delete'': Completely removes the selected items from the Design area.
|- 
| rowspan="7" | '''Format'''
|  The commands under the '''Format''' menu, listed below, let you perform basic formatting operations on the objects placed in the Design area.
|- 
| ''Bring To Front'': Changes the layering of the objects placed in the Design area, placing the selected items in front of all the other items in the area.
|- 
| ''Send To Back'': Changes the layering of the objects placed in the Design area, placing the selected items behind all the other items in the area.
|- 
| ''Align'': Aligns the selected objects as follows: [anchor|#_72a0abc3-fa5d-410c-84c9-513a61e46231]
*''Left'', ''Center'', and ''Right'' dictate how the selected items in the Design area will be horizontally aligned.
*''Top'', ''Middle'', and ''Bottom'' determine how the selected items in the Design area will be vertically aligned.
*''To Grid'' snaps the selected items in the Design area to the grid.

|- 
| ''Make Same Size'': Adjusts the size of the selected items in the Design area as follows: [anchor|#_19473f1a-876c-4225-95a6-4abac3a8822a]
*''Width'': Makes the selected objects the same width.
*''Height'': Makes the selected objects the same height.
*''Both'': Makes the selected objects the same width and height.

|- 
| ''Horizontal Spacing'': Changes the horizontal spacing between the selected items in the Design area as follows: [anchor|#_b10e368b-3d5b-4dad-8e02-275b5288c6d5]
*''Make Equal'': Sets equal horizontal spacing between the selected objects.
*''Increase'': Increases the horizontal spacing between the selected objects.
*''Decrease'': Decreases the horizontal spacing between the selected objects.
*''Remove'': Sets a zero horizontal spacing between the selected objects.

|- 
| ''Vertical Spacing'': Changes the vertical spacing between the selected items in the Design area as follows: [anchor|#_1fa4e288-5e97-4ddd-b82d-c50c93679198]
*''Make Equal'': Sets equal vertical spacing between the selected objects.
*''Increase'': Increases the vertical spacing between the selected objects.
*''Decrease'': Decreases the vertical spacing between the selected objects.
*''Remove'': Sets a zero vertical spacing between the selected objects.

|- 
| rowspan="2" | '''View'''
|  ''Regular Grid'': Toggles view modes: [anchor|#_e23bcecc-bdcc-46f3-a2d5-ad1b7ac40bd9]
*Regular Grid is visible.
*Regular Grid is hidden.

|- 
| ''Excel Grid'': Toggles view mode: 
Excel Grid Rows:[anchor|#_c8bc2a3e-9714-423f-bf93-ba1601edf176]
*Excel Grid Rows are visible.
*Excel Grid Rows are hidden.

Excel Grid Columns:[anchor|#_f629407d-f601-44b1-bfc3-775f222eb8f5]
*Excel Grid Columns are visible.
*Excel Grid Columns are hidden.

|}
==Main Window Toolbar==
The Main Window toolbar of the Acumatica Report                         Designer provides single-click access to the menu buttons, as shown and described below. {br}

[anchor|#image_ufg_rhp_tz][image:UserGuide/Images/Acumatica_Report_Designer_User_Interface_Acumatica_Report_Designer_User_InterfaceReportDesigner_Toolbar.PNG|popup|Report Designer Main Window|400px]
===Main Window Toolbar Buttons===
{| class="checklist" | width="100%" 
|- 
!width="16%" ! Number
!width="23%" ! Button Name
!width="60%" ! Description
|- 
| 1
| '''New Report'''
| Invokes the ''New'' command from the '''File''' menu 
|- 
|  2
| '''Open Report'''
| Invokes the ''Open'' command from the '''File''' menu
|- 
|  3
| '''Save Report'''
| Invokes the ''Save'' command from the '''File''' menu
|- 
|  4
| '''Save Report As'''
| Invokes the ''Save As'' command from the '''File''' menu
|- 
| 5
| '''Undo'''
| Invokes the ''Undo'' command from the '''Edit''' menu
|- 
| 6
| '''Redo'''
| Invokes the ''Redo'' command from the '''Edit''' menu
|- 
|  7
| '''Copy'''
| Invokes the ''Copy'' command from the '''Edit''' menu
|- 
|  8
| '''Delete'''
| Invokes the ''Delete'' command from the '''Edit''' menu
|- 
|  9
| '''Bring To Front'''
| Invokes the ''Bring To Front'' command from the '''Format''' menu
|- 
|  10
| '''Send To Back'''
| Invokes the ''Send To Back'' command from the '''Format''' menu
|- 
| 11
| '''Bring To Top'''
| Modifies ''Line'' visual elements to be placed in multiple report sections that are visible not only in the section where the visual elements have been originally placed but also in the rest sections.
|- 
|  12
| '''Align Left'''
| Invokes the ''Align'' &gt; ''Left'' command from the '''Format''' menu
|- 
|  13
| '''Align Center'''
| Invokes the ''Align'' &gt; ''Center'' command from the '''Format''' menu
|- 
|  14
| '''Align Right'''
| Invokes the ''Align'' &gt; ''Rights'' menu command from the '''Format''' menu
|- 
|  15
| '''Align Top'''
| Invokes the ''Align'' &gt; ''Top'' command from the '''Format''' menu
|- 
|  16
| '''Align Middle'''
| Invokes the ''Align'' &gt; ''Middle'' command from the '''Format''' menu
|- 
|  17
| '''Align Bottom'''
| Invokes the ''Align'' &gt; ''Bottom'' command from the '''Format''' menu
|- 
|  18
| '''Align To Grid'''
| Invokes the ''Align'' &gt; ''To Grid'' command from the '''Format''' menu
|- 
|  19
| '''Make Same Width'''
| Invokes the ''Make Same Size'' &gt; ''Width'' command from the '''Format''' menu
|- 
|  20
| '''Make Same Height'''
| Invokes the ''Make Same Size'' &gt; ''Height'' command from the '''Format''' menu
|- 
|  21
| '''Make Same Size'''
| Invokes the ''Make Same Size'' &gt; ''Both'' command from the '''Format''' menu
|- 
|  22
| '''Make Horizontal Spacing Equal'''
| Invokes the ''Horizontal Spacing'' &gt; ''Make Equal'' command from the '''Format''' menu
|- 
|  23
| '''Increase Horizontal Spacing'''
| Invokes the ''Horizontal Spacing'' &gt; ''Increase'' command from the '''Format''' menu
|- 
|  24
| '''Decrease Horizontal Spacing'''
| Invokes the ''Horizontal Spacing'' &gt; ''Decrease'' command from the '''Format''' menu
|- 
|  25
| '''Make Vertical Spacing Equal'''
| Invokes the ''Vertical Spacing'' &gt; ''Make Equal'' command from the '''Format''' menu
|- 
|  26
| '''Increase Vertical Spacing'''
| Invokes the ''Vertical Spacing'' &gt; ''Increase'' command from the '''Format''' menu
|- 
|  27
| '''Decrease Vertical Spacing'''
| Invokes the ''Vertical Spacing'' &gt; ''Decrease'' command from the '''Format''' menu
|}]]></column>
			<column name="PlainText"><![CDATA[ Acumatica Report                         Designer User Interface The  Acumatica Report                         Designer provides visual tools that you can use to design custom reports. From the  Acumatica Report                         Designer screen, you can select the report data from the  Acumatica ERP system database, create the report content, and save the report in a detached file with         the  .rpx  format. This file stores the report description as XML         data. Accessing the Report Designer To view the  Acumatica Report                         Designer main window, navigate as follows:  Start  >            Programs  >  Acumatica  >            Report Designer . Report Designer Main Window  The main window of the  Acumatica Report                         Designer includes three areas:  The Design area displays the report layout, which users can change. The Tools area provides access to the tools that can be used to design the report layout and add           the report content. The Tabs area includes the following tabs:  Properties : Displays the properties of the report element               selected in the Design area. Fields : Lists the names of all data access class (DAC) fields               selected as the source of data for the report. The Modes area allows to toggle between the following display modes: Design : This default mode is used for editing the report               layout. Preview : This mode is used for previewing the resulting               report layout. Main Window Menu The Main Window menu of the  Acumatica Report                         Designer includes the commands described below.  Command Description File The commands under the  File  menu, listed below, provide                 access to the main operations with the report file and allow you to access the                 database schema: New : Creates a new report file. Open : Opens and existing report file. Open From Server : Opens an existing report file located on the  Acumatica ERP application server. The history of successful connections is automatically                   saved in the drop down list of the URL box. You can delete records from the                   connection history list by using the right mouse click and selecting                      Delete URL from history . Save : Saves the current report file. Save As : Saves the current report in a new file. This command can be                 used to rename a report file or to save it to a new location. Save On Server : Saves the report on the  Acumatica ERP application server. Build Schema : Runs the Schema Builder wizard. Exit :Closes the Report Designer main window. Edit You can use the commands under the  Edit  menu, listed                 below, to perform basic editing operations with the objects placed in the Design                 area. Undo : Reverts the latest change done to the report. The  Acumatica Report                         Designer stores all the report changes, which you can undo, until the report is                 closed. Redo : Reverts the effect of the last undone action. Making a new edit                 clears the redo list. Cut : Removes the selected items from the Design area and places a copy                 of them on the clipboard. Copy : Places a copy of the selected items on the clipboard. Paste : Places the items from the clipboard in the Design area. Delete : Completely removes the selected items from the Design                 area. Format  The commands under the  Format  menu, listed below, let                 you perform basic formatting operations on the objects placed in the Design                 area. Bring To Front : Changes the layering of the objects placed in the Design                 area, placing the selected items in front of all the other items in the                 area. Send To Back : Changes the layering of the objects placed in the Design                 area, placing the selected items behind all the other items in the area. Align : Aligns the selected objects as follows:  Left ,  Center , and  Right  dictate how the selected items in                     the Design area will be horizontally aligned. Top ,  Middle , and  Bottom  determine how the selected items in                     the Design area will be vertically aligned. To Grid  snaps the selected items in the Design area to the grid. Make Same Size : Adjusts the size of the selected items in the Design                 area as follows:  Width : Makes the selected objects the same width. Height : Makes the selected objects the same height. Both : Makes the selected objects the same width and height. Horizontal Spacing : Changes the horizontal spacing between the selected                 items in the Design area as follows:  Make Equal : Sets equal horizontal spacing between the selected                     objects. Increase : Increases the horizontal spacing between the selected                     objects. Decrease : Decreases the horizontal spacing between the selected                     objects. Remove : Sets a zero horizontal spacing between the selected objects. Vertical Spacing : Changes the vertical spacing between the selected                 items in the Design area as follows:  Make Equal : Sets equal vertical spacing between the selected                     objects. Increase : Increases the vertical spacing between the selected                     objects. Decrease : Decreases the vertical spacing between the selected                     objects. Remove : Sets a zero vertical spacing between the selected objects. View Regular Grid : Toggles view modes:  Regular Grid is visible. Regular Grid is hidden. Excel Grid : Toggles view mode:  Excel Grid Rows: Excel Grid Rows are visible. Excel Grid Rows are hidden. Excel Grid Columns: Excel Grid Columns are visible. Excel Grid Columns are hidden. Main Window Toolbar The Main Window toolbar of the  Acumatica Report                         Designer provides single-click access to the menu buttons, as shown and described below.  Main Window Toolbar Buttons Number Button Name Description 1 New Report Invokes the  New  command from the  File  menu   2 Open Report Invokes the  Open  command from the  File                  menu  3 Save Report Invokes the  Save  command from the  File                  menu  4 Save Report As Invokes the  Save As  command from the  File                  menu 5 Undo Invokes the  Undo  command from the  Edit                  menu 6 Redo Invokes the  Redo  command from the  Edit                  menu  7 Copy Invokes the  Copy  command from the  Edit                  menu  8 Delete Invokes the  Delete  command from the  Edit                  menu  9 Bring To Front Invokes the  Bring To Front  command from the                    Format  menu  10 Send To Back Invokes the  Send To Back  command from the  Format                  menu 11 Bring To Top Modifies  Line  visual elements to be placed in multiple report sections                 that are visible not only in the section where the visual elements have been                 originally placed but also in the rest sections.  12 Align Left Invokes the  Align  >  Left  command from the                    Format  menu  13 Align Center Invokes the  Align  >  Center  command from the                    Format  menu  14 Align Right Invokes the  Align  >  Rights  menu command from the                    Format  menu  15 Align Top Invokes the  Align  >  Top  command from the                    Format  menu  16 Align Middle Invokes the  Align  >  Middle  command from the                    Format  menu  17 Align Bottom Invokes the  Align  >  Bottom  command from the                    Format  menu  18 Align To Grid Invokes the  Align  >  To Grid  command from the                    Format  menu  19 Make Same Width Invokes the  Make Same Size  >  Width  command from the                    Format  menu  20 Make Same Height Invokes the  Make Same Size  >  Height  command from the                    Format  menu  21 Make Same Size Invokes the  Make Same Size  >  Both  command from the                    Format  menu  22 Make Horizontal Spacing Equal Invokes the  Horizontal Spacing  >  Make Equal  command from the                    Format  menu  23 Increase Horizontal Spacing Invokes the  Horizontal Spacing  >  Increase  command from the                    Format  menu  24 Decrease Horizontal Spacing Invokes the  Horizontal Spacing  >  Decrease  command from the                    Format  menu  25 Make Vertical Spacing Equal Invokes the  Vertical Spacing  >  Make Equal  command from the                    Format  menu  26 Increase Vertical Spacing Invokes the  Vertical Spacing  >  Increase  command from the                    Format  menu  27 Decrease Vertical Spacing Invokes the  Vertical Spacing  >  Decrease  command from the                    Format  menu ]]></column>
		</row>
		<row PageID="45b01f94-838c-4ac4-97a2-73544db7c8bf" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="dba81bb2-4031-8f71-af38-f510934e0685" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can create new reports or modify existing reports by using Acumatica Report                         Designer, as is described briefly below.{br}{TOC}
==Creating a New Report==
To create a new report, on the menu bar of the Report Designer, select '''File''' > '''New'''. The Report Designer creates a new report file that includes the page header section, the page footer section, and the detail section. You can then create the layout or add content, as described in the [HelpRoot_ReportingTools\Composing_the_Report_Layout|Composing the Report Layout] and [HelpRoot_ReportingTools\Creating_the_Report_Content|Creating the Report Content] sections of this guide. After modification, you can save the report file in a local folder or to the server.
==Modifying an Existing Report==
To modify an existing report, you can open a locally stored file or load the file from the Acumatica ERP server.{br}

To open a locally stored file, on the menu bar, select '''File''' > '''Open''', and then select the report file you want to modify. The selected file is displayed in the Design area of the Report Designer. Once you modify it, you can save it locally or on the server.{br}

To create a report , based on a generic inquiry, on the [HelpRoot_FormReference\SM_20_80_00|Generic Inquiry] ([~/?ScreenId=SM208000|SM208000]) form, click '''Export as Report''' on the form toolbar. The system will export the generic inquiry as &#42;.rpx file, having similar name as the generic inquiry. The resulting exported file will contain generic inquiry data access classes information, such as, list of tables, relations, sort order and grouping. This information can be used to design the report layout in Acumatica Report                         Designer. For more information, see [HelpRoot_ReportingTools\Composing_the_Report_Layout|Composing the Report Layout].{br}

To open a report file located on the Acumatica ERP server, on the menu bar, select '''File''' > '''Open From Server'''. In the dialog box, which appears, do the following:[anchor|#ul_qzm_s4z_ct]
#Type the URL of your Acumatica ERP website, which can be your local website or an external URL of Acumatica ERP, for example:{{{{https://mysite.com/MyAcumatica
}}}}
#:You may need to replace <tt>https</tt> with <tt>http</tt>.
#:((({S:Warn}The history of successful connections is automatically saved in the drop down list of the URL box. You can delete records from the connection history list by using the right mouse click and selecting '''Delete URL from history'''.
)))
#Type your login and password. If your application contains more than one company, type the appropriate company name with the user login in the following format:{{{{admin@mycompany
}}}}
#:Here <tt>admin</tt> is the login, and <tt>mycompany</tt> is the company name. The company name matches the name that you select when you log in to Acumatica ERP. If your application contains only one company, specify only the user login.
#Load the list of available reports from the website, select a report to load, and click '''OK'''.
]]></column>
			<column name="PlainText"><![CDATA[Creating and Modifying the Reports You can create new reports or modify existing reports by using  Acumatica Report                         Designer, as is described briefly below. Creating a New Report To create a new report, on the menu bar of the  Report Designer, select  File New . The  Report Designer creates a new report file that includes the page header section, the page footer                 section, and the detail section. You can then create the layout or add content, as                 described in the  Composing the Report Layout Composing the Report Layout and  Creating the Report                     Content Creating the Report Content sections of this guide. After modification, you can save the                 report file in a local folder or to the server. Modifying an Existing Report To modify an existing report, you can open a locally stored file or load the file                 from the  Acumatica ERP server. To open a locally stored file, on the menu bar, select  File Open , and then select the report file you want to modify. The selected                 file is displayed in the Design area of the  Report Designer. Once you modify it, you can save it locally or on the server. To create a report , based on a generic inquiry, on the   ([~/?ScreenId=SM208000|SM208000]) Generic Inquiry Generic Inquiry (SM208000) form, click  Export as                     Report  on the form toolbar. The system will export the generic                 inquiry as *.rpx file, having similar name as the generic inquiry. The resulting                 exported file will contain generic inquiry data access classes information, such as,                 list of tables, relations, sort order and grouping. This information can be used to                 design the report layout in  Acumatica Report                         Designer. For more information, see  Composing the Report Layout. To open a report file located on the  Acumatica ERP server, on the menu bar, select  File Open From Server . In the dialog box, which appears, do the following: Type the URL of your  Acumatica ERP website, which can be your local website or an external URL of  Acumatica ERP, for example: https://mysite.com/MyAcumatica You may                         need to replace  https  with  http . The history of                         successful connections is automatically saved in the drop down list of the                         URL box. You can delete records from the connection history list by using                         the right mouse click and selecting  Delete URL from                             history . Type your login and password. If your application contains more than one                     company, type the appropriate company name with the user login in the following                         format: admin@mycompany Here  admin  is the                         login, and  mycompany  is the company name. The company name matches                         the name that you select when you log in to  Acumatica ERP. If your application contains only one company, specify only the user                         login. Load the list of available reports from the website, select a report to load,                     and click  OK . ]]></column>
		</row>
		<row PageID="aca7408e-4d55-42de-b257-f150c06d23a6" Language="en-US" PageRevisionID="1" Content="&#xA;When you create a report, you define the rules used to select the necessary data to be displayed in the report. This data is retrieved from the system database via an appropriate data access class (DAC). {br}&#xA;&#xA;To define what data is selected from the database, the Report Designer provides the Schema Builder wizard. Using this wizard, users can load the database schema, set the report parameters, and define the data selection criteria, data filtering, and sorting and grouping rules. &#xA;==In This Section==&#xA;This section contains the following topics: &#xA;*[HelpRoot_ReportingTools\Loading_the_Database_Schema|Loading the Database Schema]&#xA;*[HelpRoot_ReportingTools\Building_the_Database_Request|Building the Database Request]&#xA;" PlainText="Selecting Data for the Report When you create a report, you define the rules used to select the necessary data to                 be displayed in the report. This data is retrieved from the system database via an                 appropriate data access class (DAC).  To define what data is selected from the database, the Report Designer provides the                 Schema Builder wizard. Using this wizard, users can load the database schema, set                 the report parameters, and define the data selection criteria, data filtering, and                 sorting and grouping rules.  In This Section This section contains the following topics:  Loading the Database                         Schema Loading the Database SchemaBuilding the                         Database Request Building the Database Request" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="621d73f2-48d1-14e1-6e2f-eedfad303aea" RecordSourceID="22377" />
		<row PageID="8bb29ea8-b4c4-46b7-8821-85990ed82988" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="73f97376-350d-3c51-3fd4-8d543a669313" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The Acumatica Report                         Designer accesses the database through the data access classes (DACs) defined in Acumatica ERP. To select the necessary data for the report, you need to load the WSDL file generated by the Acumatica ERP application server. The WSDL file contains the definition of all available DACs. 
==Connecting to the Application Server==
To connect to the Application Server, perform the following steps: 
#Start the Report Designer: '''Start &gt; All Programs &gt; Acumatica &gt; Report Designer'''.
#To create a new blank report form, click '''New Report''' on the toolbar (or access this option on the '''File''' menu). 
#:((({S:Hint}When you open the Report Designer for the first time, the blank report form is displayed by default.
)))
#On the '''File''' menu, select ''Build schema'', as shown on the screenshot below. The Schema Builder wizard appears.[image:UserGuide/Images/Loading_the_Database_Schema_ccess_the_Schema_Builder.png|popup|Accessing the Schema Builder|400px]
#To load the Acumatica ERP WSDL definition file, enter the connection string (as shown in the second screenshot below, in the area left of the red 1). 
#:{{{{http://{domain}

}}}}
#:Here, you must replace <tt>&#0123;domain&#0125;</tt> with the actual URL to your application; you may also need to replace <tt>http</tt> with <tt>https</tt>. A typical connection string for an application launched from Microsoft Visual Studio on a local computer looks like the following. 
#:{{{{http://localhost:64971/Site

}}}}
#If access to the WSDL definition is restricted, provide the user ID and password (see item 2 in the screenshot below). If your application contains more than one company, you have to type an appropriate login company name with the user ID in the following format.{{{{{user ID}@{login company name}

}}}}The login company name matches the name you select when you log in to Acumatica ERP. 
#:((({S:Warn}If an application contains only one company, you type only the user ID.
)))
#Click the '''Load schema''' button (item 3). The Report Designer connects to the application server and loads the Acumatica ERP schema definition. When the WSDL file is retrieved, notice the list of all data access classes (DACs) defined in your application, as shown in the screenshot below. [image:UserGuide/Images/Loading_the_Database_Schema_able_tab_of_the_Schema_builder.png|popup|Loading the DAC schema|400px]
#:((({S:Hint}When you load the schema definition from the application in Visual Studio, make sure that the application has been started and is accessible through the web browser.
)))
#:((({S:Hint} The Acumatica Report                         Designer receives all the meta information required for report creation from the Acumatica ERP WSDL file. You don&rsquo;t need to install Acumatica ERP locally to develop the report; instead, you can just connect to the remote server by using the appropriate URL.
)))
]]></column>
			<column name="PlainText"><![CDATA[Loading the Database Schema The  Acumatica Report                         Designer accesses the database through the data access classes (DACs) defined in  Acumatica ERP. To select the necessary data for the report, you need to load the WSDL file generated by         the  Acumatica ERP application server. The WSDL file contains the definition of all available DACs.  Connecting to the Application Server To connect to the Application Server, perform the following steps:  Start the  Report Designer:  Start > All Programs >  Acumatica > Report Designer . To create a new blank report form, click  New Report  on the toolbar (or access           this option on the  File  menu).  When you open the  Report Designer for the first time, the blank report form is displayed by default. On the  File  menu, select  Build schema , as shown on the screenshot below.           The Schema Builder wizard appears. Accessing the Schema Builder To load the  Acumatica ERP WSDL definition file, enter the connection string (as shown in the second screenshot           below, in the area left of the red 1).  http://{domain}
 Here, you must replace  {domain}  with the actual URL to your application;             you may also need to replace  http  with  https . A typical connection             string for an application launched from Microsoft Visual Studio on a local computer             looks like the following.  http://localhost:64971/Site
 If access to the WSDL definition is restricted, provide the user ID and password (see           item 2 in the screenshot below). If your application contains more than one company, you           have to type an appropriate login company name with the user ID in the following           format. {user ID}@{login company name}
 The login company name           matches the name you select when you log in to  Acumatica ERP.  If an application contains only one company, you type only the user ID. Click the  Load schema  button (item 3). The  Report Designer connects to the application server and loads the  Acumatica ERP schema definition. When the WSDL file is retrieved, notice the list of all data access           classes (DACs) defined in your application, as shown in the screenshot below.  Loading the DAC schema When you load the schema definition from the application in Visual               Studio, make sure that the application has been started and is accessible through the               web browser.  The  Acumatica Report                         Designer receives all the meta information required for report creation from the  Acumatica ERP WSDL file. You don't need to install  Acumatica ERP locally to develop the report; instead, you can just connect to the remote server               by using the appropriate URL. ]]></column>
		</row>
		<row PageID="5de8b0d9-81dd-4733-b9f3-579c4adb2dba" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="80189bc5-98d2-0bd3-2628-e7d1ff28880f" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Data access classes (DACs), which are used to access the data in the system database from the report engine, must be defined for each report. To specify what data will be displayed in the designed report, you should perform the following steps, each of which is described in detail below: [anchor|#_9e63b63b-ab9b-4075-80f0-6252a4d0acd6]
*Select the DACs from the list of available ones displayed on the '''Tables''' tab of the Schema Builder wizard. The selected DACs specify the tables in the system database from which the data will be selected.
*Specify the relations between the selected DACs on the '''Relations''' tab of the Schema Builder wizard. The DAC relations provide the necessary information to build the SQL request to the database.
{br}{TOC}
==Selecting the DACs for the Report==
To select the DACs to be included in the report, perform the following steps: 
#In the list of available DACs on the '''Tables''' tab of the Schema Builder wizard, select the DAC name to select the data from the database table related to this DAC.
#:((({S:Warn}You can use the '''Search''' box to search for the necessary tables by typing in a table name or part of a table name in the box. The '''Search''' box is case sensitive.
)))
#Click the [image:UserGuide/Images/Building_the_Database_Request_Building_the_Database_RequestButtonRight.png|10px] button to move the DAC to the list of the selected DACs.
#Repeat Steps 1 and 2 for each DAC to be selected. The selected DACs will appear in the list of the selected DACs in the right side of the '''Tables''' tab.
#:((({S:Hint}To remove a DAC from the list of selected DACs, select the DAC by name and click the [image:UserGuide/Images/Building_the_Database_Request_Building_the_Database_RequestButtonLeft.png|10px] button (see screenshot). To remove all the DACs from the list of selected DACs, click the [image:UserGuide/Images/Building_the_Database_Request_Building_the_Database_RequestButtonLeftDouble.png|10px] button.
)))[image:UserGuide/Images/Building_the_Database_Request_electing_tables.png|popup|Selecting DACs|400px]

The list of the selected DACs displays the DACs and their attributes, which match the fields in the database table related to the DAC. 
==Specifying the Relations Between DACs==
The '''Relations''' tab of the '''Schema Builder''' wizard allows you to specify the relations between DACs. The relations between the DACs specify how the relevant tables will be joined in the generated SQL request. {br}

To define a relation between two DACs, you must specify the DAC related to the parent table and the DAC related to the child table in the relation, and specify the DAC attributes related to the data fields to be used as the relevant table joining criteria. Any report can include one or multiple relations between the two DACs. {br}

To set the relations between DACs, repeat the following steps for each relation to be used in the report: 
#Click the empty line in the grid '''Enter the report table relations here'''.
#In the '''Parent Table''' box, select the name of the parent table in the relation.
#In the '''Join Type''' box, select the type of table join: ''Left'', ''Right'', ''Inner'', ''Full'', or ''Cross''.
#In the '''Child Table''' box, select the name of the child table in the relation.
#Enter the aliases for the parent and child tables ('''Parent Alias''' and '''Child Alias'''), if required.

For each relation between the DACs, you should also specify the data field links. Repeat the following steps for each data link to be used in the relation between the tables: 
#Click the empty line in the grid '''Enter the data field links for the active relation'''.
#In the '''Parent Field''' box, select the name of the parent field for the data link.
#In the '''Link Condition''' box, select the condition for linking the fields: ''Equal'', ''NotEqual'', ''Greater'', ''GreaterOrEqual'', ''Less'', or ''LessOrEqual''. You can also select the ''IsNull'' or ''IsNotNull'' items; in such a case, you should not add a child field.
#In the '''Child Field''' box, select the name of the child field for the data link.
#If more than one relation expression will be used for joining the data tables, select the operator: ''And'' or ''Or''.
#Select the '''Braces''' if they are required in the data link expressions.
[image:UserGuide/Images/Building_the_Database_Request_onfiguring_Relation_1.png|popup|Configuring Relation|400px]
The DACs relations and data field links you defined can be deleted: Simply click the relevant line in the grid, and press the DELETE key.]]></column>
			<column name="PlainText"><![CDATA[Building the Database Request Data access classes (DACs), which are used to access the data in the system database                 from the report engine, must be defined for each report. To specify what data will                 be displayed in the designed report, you should perform the following steps, each of                 which is described in detail below:  Select the DACs from the list of available ones displayed on the  Tables                      tab of the Schema Builder wizard. The selected DACs specify the tables in the                     system database from which the data will be selected. Specify the relations between the selected DACs on the  Relations  tab of                     the Schema Builder wizard. The DAC relations provide the necessary information                     to build the SQL request to the database. Selecting the DACs for the Report To select the DACs to be included in the report, perform the following steps:  In the list of available DACs on the  Tables  tab of the Schema Builder wizard, select the                     DAC name to select the data from the database table related to this                         DAC. You can use the  Search  box to search for                         the necessary tables by typing in a table name or part of a table name in                         the box. The  Search  box is case                     sensitive. Click the   button to move the DAC to the list of the selected DACs. Repeat Steps 1 and 2 for each DAC to be selected. The selected DACs will appear in the list of                     the selected DACs in the right side of the  Tables  tab. To remove a DAC from the list of selected DACs, select the DAC by name and                         click the   button (see screenshot). To remove all the DACs from the list of selected                         DACs, click the   button. Selecting DACs The list of the selected DACs displays the DACs and their attributes, which match the fields in the database table related to the DAC.  Specifying the Relations Between DACs The  Relations  tab of the  Schema Builder  wizard allows you to specify                 the relations between DACs. The relations between the DACs specify how the relevant                 tables will be joined in the generated SQL request.  To define a relation between two DACs, you must specify the DAC related to the parent                 table and the DAC related to the child table in the relation, and specify the DAC                 attributes related to the data fields to be used as the relevant table joining                 criteria. Any report can include one or multiple relations between the two DACs.  To set the relations between DACs, repeat the following steps for each relation to be                 used in the report:  Click the empty line in the grid  Enter the report table relations                     here . In the  Parent Table  box, select the name of the parent table in the                     relation. In the  Join Type  box, select the type of table join:  Left ,                          Right ,  Inner ,  Full , or  Cross . In the  Child Table  box, select the name of the child table in the                     relation. Enter the aliases for the parent and child tables ( Parent Alias  and                          Child Alias ), if required. For each relation between the DACs, you should also specify the data field links.                 Repeat the following steps for each data link to be used in the relation between the                 tables:  Click the empty line in the grid  Enter the data field links for the active                         relation . In the  Parent Field  box, select the name of the parent field for the data                     link. In the  Link Condition  box, select the condition for linking the fields:                          Equal ,  NotEqual ,  Greater ,  GreaterOrEqual ,                          Less , or  LessOrEqual . You can also select the  IsNull  or                          IsNotNull  items; in such a case, you should not add a child                     field. In the  Child Field  box, select the name of the child field for the data                     link. If more than one relation expression will be used for joining the data tables,                     select the operator:  And  or  Or . Select the  Braces  if they are required in the data link expressions. Configuring Relation The DACs relations and data field links you defined can be deleted: Simply click the                 relevant line in the grid, and press the DELETE key. ]]></column>
		</row>
		<row PageID="046b3773-d8c5-459b-8393-6b9c3be9b090" Language="en-US" PageRevisionID="1" Content="&#xA;The report layout determines the visual presentation of the data. To design the report layout, you should perform the following tasks: [anchor|#_bd6db13f-1bc5-4a24-b5d5-46e139597086]&#xA;*Define what sections will be included in the report&#xA;*Set up the headers and footers for the report and each report section&#xA;*Set the appearance parameters for each report section&#xA;*Define the behavior parameters for each report section&#xA;*Add visual elements to the report&#xA;&#xA;==In This Section==&#xA;This section includes the following articles: &#xA;*[HelpRoot_ReportingTools\Adding_and_Removing_Report_Sections|Adding and Removing Report Sections]&#xA;*[HelpRoot_ReportingTools\Defining_the_Appearance_of_a_Report_Section|Defining the Appearance of a Report Section]&#xA;*[HelpRoot_ReportingTools\Defining_the_Behavior_Settings_of_a_Report_Section|Defining the Behavior Settings of a Report Section]&#xA;*[HelpRoot_ReportingTools\Adding_and_Removing_Visual_Elements_in_the_Report|Adding and Removing Visual Elements in the Report]&#xA;" PlainText="Composing the Report Layout The report layout determines the visual presentation of the data. To design the                 report layout, you should perform the following tasks:  Define what sections will be included in the report Set up the headers and footers for the report and each report section Set the appearance parameters for each report section Define the behavior parameters for each report section Add visual elements to the report In This Section This section includes the following articles:  Adding and                         Removing Report Sections Adding and Removing Report SectionsDefining the Appearance of a Report Section Defining the Appearance of a Report SectionDefining the Behavior Settings of a Report Section Defining the Behavior Settings of a Report SectionAdding and Removing Visual Elements in the Report Adding and Removing Visual Elements in the Report" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="34871b0a-3365-f0ea-8d50-2748989f4140" RecordSourceID="22377" />
		<row PageID="672a0ed6-b72e-4d4c-81a8-7e55111ffa4a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a1db73dd-735a-b304-71ec-5d2b3463eea6" RecordSourceID="22377">
			<column name="Content"><![CDATA[
By default, when you create a new report, it includes three sections: the page header section, one page detail section (others can be added), and the page footer section. The sections can display various content, and the values of variables used to calculate and display report values can be reset in each new section. ((({S:Warn}If you add a report header section to a report, on printing, the report header is placed right after the page header.
)))
You can add a new report section or delete any section. You can also copy the style of one section and apply it to another. {br}{TOC}
==Adding a Report Section==
To add a report section by duplicating an existing one, proceed as follows: 
#Select the report section you wish to duplicate, and right-click it.
#Choose '''Duplicate Section''' in the pop-up menu, and the new section will be added to the report. The new section will have the same type as the parent section (header of the relevant group, footer of the relevant group, detail section, page footer).
[image:UserGuide/Images/Adding_and_Removing_Report_Sections_uplicating_a_report_section.png|popup|Duplicating a report section|400px]
==Removing a Report Section==
To remove an existing section from a report, do the following steps: 
#Right-click the section.
#Choose '''Delete''' in the pop-up menu. The selected section will be removed from the report. 
[image:UserGuide/Images/Adding_and_Removing_Report_Sections_eleting_a_report_section.png|popup|Deleting a report section|400px]
==Copying the Style Between the Report Sections==
The style defined for one report section can be applied to another section. To copy the style between the sections, perform the following steps: 
#Right-click the report section from which the style should be copied, and choose '''Style Copy''' from the pop-up menu. [image:UserGuide/Images/Adding_and_Removing_Report_Sections_opying_the__style_from_a_section.png|popup|Copying the style from a section|400px]
#Right-click the report section to which the style should be applied, and choose '''Style Paste''' from the pop-up menu. The selected style will be applied to this section. [image:UserGuide/Images/Adding_and_Removing_Report_Sections_pplying_the_copied_style_to_another_section.png|popup|Applying the copied style to another section|450px]

We recommend that you use a special report template instead of defining styles—see the [HelpRoot_ReportingTools\Defining_the_Behavior_Settings_of_a_Report_Section|Defining the Behavior Settings of a Report Section] topic.]]></column>
			<column name="PlainText"><![CDATA[Adding and Removing Report Sections By default, when you create a new report, it includes three sections: the page header                 section, one page detail section (others can be added), and the page footer section.                 The sections can display various content, and the values of variables used to                 calculate and display report values can be reset in each new section.  If you add a report header section to a report, on printing, the                 report header is placed right after the page header. You can add a new report section or delete any section. You can also copy the style                 of one section and apply it to another.  Adding a Report Section To add a report section by duplicating an existing one, proceed as follows:  Select the report section you wish to duplicate, and right-click it. Choose  Duplicate Section  in the pop-up menu, and the new section will be added to the report. The new section will have the same type as the parent section (header of the relevant group, footer of the relevant group, detail section, page footer). Duplicating a report section Removing a Report Section To remove an existing section from a report, do the following steps:  Right-click the section. Choose  Delete  in the pop-up menu. The selected section will be removed from the report.  Deleting a report section Copying the Style Between the Report Sections The style defined for one report section can be applied to another section. To copy the style between the sections, perform the following steps:  Right-click the report section from which the style should be copied, and choose  Style Copy  from the pop-up menu.  Copying the style from a section Right-click the report section to which the style should be applied, and choose  Style Paste  from the pop-up menu. The selected style will be applied to this section.  Applying the copied style to another section We recommend that you use a special report template instead of defining styles—see the                      Defining the Behavior Settings of a Report Section Defining the Behavior Settings of a Report Section                 topic. ]]></column>
		</row>
		<row PageID="aed0eea7-0c14-495f-8e16-ada011c18aa8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7d0bb0ab-6101-c114-88c4-d23a8c035c61" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 Acumatica Framework supports report styling with two files: ''TemplateReport.rpx'' (for preparation of common reports) and ''TemplateForm.rpx'' (for preparation of printing Web pages). Using report templates enables users to print reports and documents that share a uniform style. You can create report and document templates yourself or edit existing Acumatica Framework templates through Microsoft Visual Studio. (Template files are XML files that define a set of styles.) Using style templates is the most sensible way to prepare well-styled reports and documents. {br}

If you decide not to use templates, programmers can manually adjust for a group of users font types, font colors, font sizes, and other settings for each field and label. (In the second screenshot below, you can see the '''Style''' group of parameters, which can be adjusted for fields and labels.) This method is labor-consuming, however; that&rsquo;s why using report and document templates is recommended. {br}{TOC}
==Using Template Files==
To use a template file, proceed as follows: 
#In Acumatica Report                         Designer, select the top level of the report. On the '''Properties''' tab, locate the '''Styles Template'''. Open the list of report files, choose the ''TemplateReport.rpx'' file, and click the '''Open''' button, as shown in the first screenshot below. [image:UserGuide/Images/Defining_the_Appearance_of_a_Report_Section_electing_the_template_report.png|popup|Selecting the template report|450px]
#Select any report field and set the required '''StyleName''' property. (The second screenshot below illustrates this with the '''Contact''' data field.)
#Try to set appropriate '''StyleName''' properties for the most fields and labels, save the report, and then open and execute the ''Product Replenishment'' report. The report will change its appearance according to the styles predefined for the fields and labels. [image:UserGuide/Images/Defining_the_Appearance_of_a_Report_Section_etting_style_parameter_for_a_field.png|popup|Setting a style parameter for a field|450px]

==Defining a Report Section&rsquo;s Appearance Settings==
You can define the appearance settings of each report section, which determine how the report section will be printed. Appearance settings include the following: 
*The number of columns
*The space between the columns
*The style of the section, which includes its text properties, border settings, and background color and image

To define the appearance settings for a report section, perform the following steps: 
#Click the section within the report to select it, as shown in the screenshot below. [image:UserGuide/Images/Defining_the_Appearance_of_a_Report_Section_tyling_adjustment.png|popup|Styling adjustment|450px]
#On the '''Properties''' tab, in the '''Appearance''' group, choose settings for the fields described below. 
#:=^'''Appearance Settings'''
{| class="checklist" | width="100%" 
|- 
!width="18%" ! Field
!width="81%" ! Description
|- 
| '''ColumnCount'''
|  The number of columns within the report section.
|- 
| '''ColumnSpacing'''
|  The spacing between the columns (in pixels).
|- 
| '''Height'''
|  The height of the section (in centimeters).
|- 
| rowspan="10" | '''Style'''
|  The printing style for the report section, set by the values in the following fields. 
|- 
| '''BackColor''' The background color for the report section.
|- 
| '''BackImage''' The background image parameters for the report section. Enter desired values in the following fields: 
*'''Source '''- Specify the source of the image.
*'''Image '''- Define the image to be used as the background: 
**For an embedded image, select the image name.
**For an external image, enter the path to the image file.
**For an image retrieved from the database, in the '''Image''' box, enter the name of the data field where the image is stored. For example, <tt>=&#91;Branch.LogoName&#93;</tt> to display background image that can be defined separately for each branch.
*'''Repeat''' - Select the appropriate value specifying the repeating pattern for the chosen image: 
**''NoRepeat'' - Adds the specified image with no repeating
**''RepeatX'' - Repeats the image horizontally to fill the width of the report section
**''RepeatY'' - Repeats the image vertically to fill the height of the report section
**''Repeat'' - Repeats the image horizontally and vertically to fill both the width and height of the report section

|- 
| '''BorderColor''' The border color for the report section. You can define the color for the bottom, left, right, and top border of the section, and set the default border color, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderStyle''' The border line style. You can define the style for the bottom, left, right, and top border of the section, and set the default border style, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderWidth''' The border line width for the report section (in pixels). You can define the width of the bottom, left, right, and top border of the section, and set the default border width, which will be applied if no special settings are defined for the specific borders.
|- 
| '''Font''' The font settings for the report section. You can select the font name and size and specify whether the following font attributes are applied: bold, italic, strikeout, and underline.
|- 
| '''Padding''' The padding setting for the report section, which you can specify in pixels for the left side, right side, top, and bottom of the report section.
|- 
| '''TextAlign''' The text alignment for the report section: ''Left'', ''Center'', ''Right'', or ''Not Set''.
|- 
| '''VerticalAlign''' The content vertical alignment for the report section: ''Not Set'', ''Top'', ''Middle'', or ''Bottom''.
|- 
| '''StyleName'''
| The name of the style defined for the report section. To assign a descriptive name to a style you have defined for a report section, enter the name. To apply an existing style to the report section, select its style name.
|}
^=
]]></column>
			<column name="PlainText"><![CDATA[Defining the Appearance of a Report Section  Acumatica Framework supports report styling with two files:  TemplateReport.rpx  (for 				preparation of common reports) and  TemplateForm.rpx  (for preparation of 				printing Web pages). Using report templates enables users to print reports and 				documents that share a uniform style. You can create report and document templates 				yourself or edit existing  Acumatica Framework templates through Microsoft Visual Studio. (Template files are XML files that 				define a set of styles.) Using style templates is the most sensible way to prepare 				well-styled reports and documents.  If you decide not to use templates, programmers can manually adjust for a group of 				users font types, font colors, font sizes, and other settings for each field and 				label. (In the second screenshot below, you can see the  Style  group of 				parameters, which can be adjusted for fields and labels.) This method is 				labor-consuming, however; that's why using report and document templates is 				recommended.  Using Template Files To use a template file, proceed as follows:  In  Acumatica Report                         Designer, select the top level of the report. On the  Properties  tab, locate the 						 Styles Template . Open the list of report files, choose the 						 TemplateReport.rpx  file, and click the  Open  button, as shown 					in the first screenshot below.  Selecting the template report Select any report field and set the required  StyleName  property. (The 					second screenshot below illustrates this with the  Contact  data 					field.) Try to set appropriate  StyleName  properties for the most fields and 					labels, save the report, and then open and execute the  Product 						Replenishment  report. The report will change its appearance according to 					the styles predefined for the fields and labels.  Setting a style parameter for a field Defining a Report Section's Appearance Settings You can define the appearance settings of each report section, which determine how 				the report section will be printed. Appearance settings include the following:  The number of columns The space between the columns The style of the section, which includes its text properties, border settings, 					and background color and image To define the appearance settings for a report section, perform the following steps:  Click the section within the report to select it, as shown in the screenshot 					below.  Styling adjustment On the  Properties  tab, in the  Appearance  group, choose settings 					for the fields described below.  Appearance Settings Field Description ColumnCount  The number of columns within the report section. ColumnSpacing  The spacing between the columns (in pixels). Height  The height of the section (in centimeters). Style  The printing style for the report section, set by the 										values in the following fields.  BackColor  The background color for the report 										section. BackImage  The background image parameters for the 										report section. Enter desired values in the following 										fields:  Source  - Specify the source of the 												image. Image  - Define the image to be used as the 												background:  For an embedded image, select the image 												name. For an external image, enter the path to the 												image file. For an image retrieved from the database, in the  Image  box, 												enter the name of the data field where the image 												is stored. For example, 												 =[Branch.LogoName]  to 												display background image that can be defined 												separately for each branch. Repeat  - Select the appropriate value 												specifying the repeating pattern for the chosen 												image:  NoRepeat  - Adds the specified image with no 												repeating RepeatX  - Repeats the image horizontally to 												fill the width of the report section RepeatY  - Repeats the image vertically to 												fill the height of the report section Repeat  - Repeats the image horizontally and 												vertically to fill both the width and height of 												the report section BorderColor  The border color for the report section. 										You can define the color for the bottom, left, right, and 										top border of the section, and set the default border color, 										which will be applied if no special settings are defined for 										the specific borders. BorderStyle  The border line style. You can define the 										style for the bottom, left, right, and top border of the 										section, and set the default border style, which will be 										applied if no special settings are defined for the specific 										borders. BorderWidth  The border line width for the report 										section (in pixels). You can define the width of the bottom, 										left, right, and top border of the section, and set the 										default border width, which will be applied if no special 										settings are defined for the specific borders. Font  The font settings for the report section. You 										can select the font name and size and specify whether the 										following font attributes are applied: bold, italic, 										strikeout, and underline. Padding  The padding setting for the report section, 										which you can specify in pixels for the left side, right 										side, top, and bottom of the report section. TextAlign  The text alignment for the report section: 											 Left ,  Center ,  Right , or  Not 											Set . VerticalAlign  The content vertical alignment for the 										report section:  Not Set ,  Top ,  Middle , 										or  Bottom . StyleName The name of the style defined for the report section. To 										assign a descriptive name to a style you have defined for a 										report section, enter the name. To apply an existing style 										to the report section, select its style name. ]]></column>
		</row>
		<row PageID="97657af2-b5f0-45de-a122-b26ceaf8181b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="572c09a0-e696-1756-5e36-7f451c47d5d4" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Each section has its own behavior settings that define the following: [anchor|#_1b66f508-774f-442a-8c5d-aae1204c00e7]
*How the section data is processed
*How the section position on the page is controlled
*How the section&rsquo;s data is displayed in the report
*What variables are defined within the report section
{br}{TOC}
==Defining Behavior Settings for Section==
To define the behavior settings for a report section, perform the following steps: 
#Click the section within the report to select it, as shown in the screenshot below (one of the header groups had been selected). [image:UserGuide/Images/Defining_the_Behavior_Settings_of_a_Report_Section_ehavior_settings_for_a_group_header_section.png|popup|Defining the Behavior Settings of a Report Section|450px]
#On the '''Properties''' tab, in the '''Behaviors''' group, specify the appropriate settings. The properties are listed and described below based on the section type.

===Behavior Settings of the Report Header and Report Footer Sections===
{| class="checklist" | width="100%" 
|- 
!width="23%" ! Property
!width="76%" ! Description
|- 
| '''KeepTogether'''
|  A setting that defines whether the lines in this section should be printed on the same page.
|- 
| '''PageBreak'''
|  A specification of where in this section the page break should be added: ''Before'', ''After'', or ''BeforeAndAfter''.
|- 
| '''PrintAtBottom'''
|  A setting that defines whether the lines in this report section are printed at the bottom of the page.
|- 
| '''PrintEmpty'''
|  A setting that specifies whether empty lines are printed in this report section.
|- 
| '''ProcessOrder'''
|  The processing order of the data within the section.
|- 
| '''ResetPageNumber'''
|  A setting specifying whether page numbering is reset when a new section starts.
|- 
| '''Variables'''
|  A listing of the variables defined for the section. These variables are visible within the whole report, but are calculated within the sections where they are defined.
|- 
| '''Visible'''
|  The report section&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) sections are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the report section visibility property. This value overrides the ''Visible'' property value if it was set explicitly.
|}
===Behavior Settings of the Page Header and Page Footer Sections===
{| class="checklist" | width="100%" 
|- 
!width="25%" ! Property
!width="74%" ! Description
|- 
| '''PrintAtBottom'''
|  A setting that defines whether the lines in the report section are printed at the bottom of the page.
|- 
| '''PrintEmpty'''
|  A setting that specifies whether empty lines are printed in this report section.
|- 
| '''PrintOnFirstPage'''
|  A setting that defines whether the page header data is printed on the first page of the report.
|- 
| '''PrintOnLastPage'''
|  A setting determining whether the page header data is printed on the last page of the report.
|- 
| '''ProcessOrder'''
|  The processing order of the data within the section.
|- 
| '''ResetPageNumber'''
|  A setting specifying whether page numbering is reset when a new section starts.
|- 
| '''Variables'''
|  A listing of the variables defined for the section. These variables are visible within the whole report, but are calculated within the sections where they are defined.
|- 
| '''Visible'''
|  The report section&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) sections are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the report section visibility property. This value overrides the ''Visible'' property value if it was set explicitly.
|}
===Behavior Settings of the Group Header and Group Footer Sections===
{| class="checklist" | width="100%" 
|- 
!width="30%" ! Property
!width="69%" ! Description
|- 
| '''KeepTogether'''
|  A setting that defines whether the lines in this section should be printed on the same page.
|- 
| '''PageBreak'''
|  A specification of where in this section the page break should be added: ''Before'', ''After'', or ''BeforeAndAfter''.
|- 
| '''PrintAtBottom'''
|  A setting that defines whether the lines in the report section are printed at the bottom of the page.
|- 
| '''PrintEmpty'''
|  A setting that specifies whether empty lines are printed in this report section.
|- 
| '''PrintForEmptyGroup'''
|  A setting defining whether empty data groups are printed in the report section.
|- 
| '''PrintOnEveryPage'''
|  A setting determining whether the section data is printed on every page of the report.
|- 
| '''ProcessOrder'''
|  The processing order of the data within the section.
|- 
| '''ResetPageNumber'''
|  A setting specifying whether page numbering is reset when a new section starts.
|- 
| '''Variables'''
|  A listing of the variables defined for the section. These variables are visible within the whole report, but are calculated within the sections where they are defined.
|- 
| '''Visible'''
|  The report section&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) sections are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the report section visibility property. This value overrides the ''Visible'' property value if it was set explicitly.
|}
===Behavior Settings of the Detail Section===
{| class="checklist" | width="100%" 
|- 
!width="26%" ! Property
!width="73%" ! Description
|- 
| '''KeepTogether'''
|  A setting that defines whether the lines in this section should be printed on the same page.
|- 
| '''PageBreak'''
|  A specification of where in this section the page break should be added: ''Before'', ''After'', or ''BeforeAndAfter''.
|- 
| '''PrintAtBottom'''
|  A setting that defines whether the lines in the report section are printed at the bottom of the page.
|- 
| '''PrintEmpty'''
|  A setting that specifies whether empty lines are printed in this report section.
|- 
| '''ProcessOrder'''
|  The processing order of the data within the section.
|- 
| '''ResetPageNumber'''
|  A setting specifying whether page numbering is reset when a new section starts.
|- 
| '''Variables'''
|  A listing of the variables defined for the section. These variables are visible within the whole report, but are calculated within the sections where they are defined.
|- 
| '''Visible'''
|  The report section&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) sections are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the report section visibility property. This value overrides the ''Visible'' property value if it was set explicitly.
|}
==References==
*[HelpRoot_ReportingTools\Using_Variables|Using Variables]
]]></column>
			<column name="PlainText"><![CDATA[Defining the Behavior Settings of a Report Section Each section has its own behavior settings that define the following:  How the section data is processed How the section position on the page is controlled How the section's data is displayed in the report What variables are defined within the report section Defining Behavior Settings for Section To define the behavior settings for a report section, perform the following steps:  Click the section within the report to select it, as shown in the screenshot 					below (one of the header groups had been selected).  Defining the Behavior Settings of a Report Section On the  Properties  tab, in the  Behaviors  group, specify 					the appropriate settings. The properties are listed and described below based on the 					section type. Behavior Settings of the Report Header and Report Footer Sections Property Description KeepTogether  A setting that defines whether the lines in this section should 								be printed on the same page. PageBreak  A specification of where in this section the page break should 								be added:  Before ,  After , or 								 BeforeAndAfter . PrintAtBottom  A setting that defines whether the lines in this report section 								are printed at the bottom of the page. PrintEmpty  A setting that specifies whether empty lines are printed in this 								report section. ProcessOrder  The processing order of the data within the section. ResetPageNumber  A setting specifying whether page numbering is reset when a new 								section starts. Variables  A listing of the variables defined for the section. These 								variables are visible within the whole report, but are calculated 								within the sections where they are defined. Visible  The report section's visibility property ( False  or 									 True ). The invisible (hidden) sections are not printed in 								the report. VisibleExpr  The expression that calculates the report section visibility 								property. This value overrides the  Visible  property value if 								it was set explicitly. Behavior Settings of the Page Header and Page Footer Sections Property Description PrintAtBottom  A setting that defines whether the lines in the report section 								are printed at the bottom of the page. PrintEmpty  A setting that specifies whether empty lines are printed in this 								report section. PrintOnFirstPage  A setting that defines whether the page header data is printed 								on the first page of the report. PrintOnLastPage  A setting determining whether the page header data is printed on 								the last page of the report. ProcessOrder  The processing order of the data within the section. ResetPageNumber  A setting specifying whether page numbering is reset when a new 								section starts. Variables  A listing of the variables defined for the section. These 								variables are visible within the whole report, but are calculated 								within the sections where they are defined. Visible  The report section's visibility property ( False  or 									 True ). The invisible (hidden) sections are not printed in 								the report. VisibleExpr  The expression that calculates the report section visibility 								property. This value overrides the  Visible  property value if 								it was set explicitly. Behavior Settings of the Group Header and Group Footer Sections Property Description KeepTogether  A setting that defines whether the lines in this section should 								be printed on the same page. PageBreak  A specification of where in this section the page break should 								be added:  Before ,  After , or 								 BeforeAndAfter . PrintAtBottom  A setting that defines whether the lines in the report section 								are printed at the bottom of the page. PrintEmpty  A setting that specifies whether empty lines are printed in this 								report section. PrintForEmptyGroup  A setting defining whether empty data groups are printed in the 								report section. PrintOnEveryPage  A setting determining whether the section data is printed on 								every page of the report. ProcessOrder  The processing order of the data within the section. ResetPageNumber  A setting specifying whether page numbering is reset when a new 								section starts. Variables  A listing of the variables defined for the section. These 								variables are visible within the whole report, but are calculated 								within the sections where they are defined. Visible  The report section's visibility property ( False  or 									 True ). The invisible (hidden) sections are not printed in 								the report. VisibleExpr  The expression that calculates the report section visibility 								property. This value overrides the  Visible  property value if 								it was set explicitly. Behavior Settings of the Detail Section Property Description KeepTogether  A setting that defines whether the lines in this section should 								be printed on the same page. PageBreak  A specification of where in this section the page break should 								be added:  Before ,  After , or 								 BeforeAndAfter . PrintAtBottom  A setting that defines whether the lines in the report section 								are printed at the bottom of the page. PrintEmpty  A setting that specifies whether empty lines are printed in this 								report section. ProcessOrder  The processing order of the data within the section. ResetPageNumber  A setting specifying whether page numbering is reset when a new 								section starts. Variables  A listing of the variables defined for the section. These 								variables are visible within the whole report, but are calculated 								within the sections where they are defined. Visible  The report section's visibility property ( False  or 									 True ). The invisible (hidden) sections are not printed in 								the report. VisibleExpr  The expression that calculates the report section visibility 								property. This value overrides the  Visible  property value if 								it was set explicitly. References Using Variables Using Variables]]></column>
		</row>
		<row PageID="c6f6d909-f59e-402f-8b82-7eda7a249fe0" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="d0100b7e-afe6-e2c5-b3a1-7b1786f08156" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The Tools area on the Acumatica Report                         Designer form (in the upper right) displays the visual elements that can be added to the report. You can add any of these visual elements to a report section or remove it from the section. 
==Adding a Visual Element==
To add a visual elements to a report section, select the element in the Tools area, and place it in the desired position within the report by dragging and dropping it. You can resize the element by dragging its borders. {br}

After a visual element is added on the screen, you can do the following actions to it: 
*Define the style of the element, and reset the style if desired
*Copy and paste the style between visual elements
*Define the order of visual elements on the screen by bringing them to the front or sending them to the back
*Cut, copy, and paste visual elements and their content to other areas within the report

To perform these actions with a visual element, use the commands available in the Report Designer toolbar, or right-click the visual element and select the relevant command from the pop-up menu.
==Removing a Visual Element==
To remove a visual element, you select the element in the report section by clicking it, and press the DELETE key.]]></column>
			<column name="PlainText"><![CDATA[Adding and Removing Visual Elements in the Report The Tools area on the  Acumatica Report                         Designer form (in the upper right) displays the visual elements that can be added to the                 report. You can add any of these visual elements to a report section or remove it                 from the section.  Adding a Visual Element To add a visual elements to a report section, select the element in the Tools area,                 and place it in the desired position within the report by dragging and dropping it.                 You can resize the element by dragging its borders.  After a visual element is added on the screen, you can do the following actions to                 it:  Define the style of the element, and reset the style if desired Copy and paste the style between visual elements Define the order of visual elements on the screen by bringing them to the front                     or sending them to the back Cut, copy, and paste visual elements and their content to other areas within                     the report To perform these actions with a visual element, use the commands available in the  Report Designer toolbar, or right-click the visual element and select the relevant command from                 the pop-up menu. Removing a Visual Element To remove a visual element, you select the element in the report section by clicking                 it, and press the DELETE key. ]]></column>
		</row>
		<row PageID="0df2d2f5-4ba5-4918-82ad-912c9f6ffac2" Language="en-US" PageRevisionID="1" Content="&#xA;The data in reports can be divided into several groups, each of which displays the data sorted in the order selected for the group. The sorting criteria are defined separately for every report group and for the report as a whole. {br}&#xA;&#xA;To set up the data grouping and sorting rules, you should define the following: [anchor|#_3c761968-a555-4449-a35a-d5d65f51108d]&#xA;*The data groups to be included in the report and their grouping rules&#xA;*The data sorting rules for the report&#xA;*The report&amp;rsquo;s parameters&#xA;&#xA;==In This Section==&#xA;This section includes the following articles: &#xA;*[HelpRoot_ReportingTools\Defining_the_Data_Groups_for_a_Report|Defining the Data Groups and Grouping and Sorting Rules for a Report]&#xA;*[HelpRoot_ReportingTools\Defining_Parameters_for_a_Report|Defining Parameters for a Report]&#xA;*[HelpRoot_ReportingTools\Using_Filters|Using Filters]&#xA;" PlainText="Data Grouping and Sorting The data in reports can be divided into several groups, each of which displays the                 data sorted in the order selected for the group. The sorting criteria are defined                 separately for every report group and for the report as a whole.  To set up the data grouping and sorting rules, you should define the following:  The data groups to be included in the report and their grouping rules The data sorting rules for the report The report's parameters In This Section This section includes the following articles:  Defining                         the Data Groups and Grouping and Sorting Rules for a Report Defining the Data Groups and Grouping and Sorting Rules for a ReportDefining                         Parameters for a Report Defining Parameters for a ReportUsing Filters Using Filters" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c7eaff22-9970-6609-29e6-e2c853bc9ef8" RecordSourceID="22377" />
		<row PageID="7dfd7c85-c28c-45cc-b4f6-089f2edf56aa" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="94ce45f3-d2c1-fcf4-6eef-a7580608f100" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Data groups are used to structure and logically group data in a report. You can add new data groups to the report and define the behavior properties for each group. The groups&rsquo; data will be displayed on the pages of the generated report. {br}

To define the data groups in a report, perform the following steps: [anchor|#_f254541c-825e-4666-b4cb-773c79c43e40]
#Select the whole report as an object for which properties will be set by clicking the [image:UserGuide/Images/Defining_the_Data_Groups_for_a_Report_Using_FiltersReportSelectionIcon.PNG|10px] icon in the top left corner of the Report Designer screen.
#On the '''Properties''' tab, click the [image:UserGuide/Images/Defining_the_Data_Groups_for_a_Report_Using_Filtersselection_button.PNG|10px] button next to the '''Groups''' collection. The '''Group Collection Editor''' dialog appears; using the dialog, you can add, remove, or modify the data groups.
#Select the top level of the report (click the [image:UserGuide/Images/Defining_the_Data_Groups_for_a_Report_Using_FiltersReportSelectionIcon.PNG|10px] icon left of the red 1 in the screenshot below). On the '''Properties''' tab, locate the '''Groups''' property under the '''Data''' section (see item 2). Open the '''GroupExp Collection Editor''' window by clicking the [image:UserGuide/Images/Defining_the_Data_Groups_for_a_Report_Using_Filtersselection_button.PNG|10px] button next to the '''Groups''' (Collection) property. [anchor|#_c9903250-4343-48b0-bfe1-cc3f85e473f7][image:UserGuide/Images/Defining_the_Data_Groups_for_a_Report_dding_Suppliers_group.png|popup|Adding the groupInvoice group|400px]
#Click the '''Add''' button (item 3) to create the new group section.
#Change the group name to required (item 4), set the '''PrintEmpty''' property (item 5), and the '''KeepTogether''' property (item 6) as you need.
#To specify the group description, enter the '''Description''' value in the '''Behavior''' set of group properties. The description will be displayed in the group header. To define the group description, you can use the '''Expression Editor''' dialog, as documented in the ''[HelpRoot_ReportingTools\Using_the_Expression_Editor|Using the Expression Editor]'' article.
#Locate the '''Grouping''' property and click the [image:UserGuide/Images/Defining_the_Data_Groups_for_a_Report_Using_Filtersselection_button.PNG|Adding the groupInvoice group|10px] button (item 7) to open the '''GroupExp Collection Editor''' window.
#Click the '''Add''' button to create a new grouping expression (see item 1 in the screenshot below). Specify the appropriate '''DataField''' property (item 2) and its '''SortOrder''' property as ''Ascending'' or ''Descending''. [anchor|#_723024d0-864d-40f1-84a8-d4e7df5339e2][image:UserGuide/Images/Defining_the_Data_Groups_for_a_Report_onfiguring_Suppliers_group.png|popup|Configuring the Suppliers group|400px]
#Click '''OK''' (item 3) to close the '''GroupExp Collection Editor''' window.
#If it&rsquo;s required, repeat the appropriate actions above to add more group sections with grouping on another field.

By defining groups, you specify sorting conditions for the SQL that is generated by the report, as well as adding the group footer and header section onto the report form in the designer. 
==References==
*[HelpRoot_ReportingTools\Using_the_Expression_Editor|Using the Expression Editor]
]]></column>
			<column name="PlainText"><![CDATA[Defining the Data Groups and Grouping and Sorting Rules for a Report Data groups are used to structure and logically group data in a report. You can add                 new data groups to the report and define the behavior properties for each group. The                 groups' data will be displayed on the pages of the generated report.  To define the data groups in a report, perform the following steps:  Select the whole report as an object for which properties will be set by                     clicking the   icon in the top left                     corner of the Report Designer screen. On the  Properties  tab, click the   button next to the                          Groups  collection. The  Group Collection Editor  dialog appears;                     using the dialog, you can add, remove, or modify the data groups. Select the top level of the report (click the   icon left of the red                     1 in the screenshot below). On the  Properties  tab, locate the                          Groups  property under the  Data  section (see item 2). Open the                          GroupExp Collection Editor  window by clicking the   button next to the                          Groups  (Collection) property.  Adding the groupInvoice group Click the  Add  button (item 3) to create the new group section. Change the group name to required (item 4), set the  PrintEmpty  property                     (item 5), and the  KeepTogether  property (item 6) as you need. To specify the group description, enter the  Description  value in the                          Behavior  set of group properties. The description will be displayed                     in the group header. To define the group description, you can use the                          Expression Editor  dialog, as documented in the  Using the                             Expression Editor Using the Expression Editor article. Locate the  Grouping  property and click the   button (item 7) to open the                          GroupExp Collection Editor  window. Click the  Add  button to create a new grouping expression (see item 1 in                     the screenshot below). Specify the appropriate  DataField  property (item                     2) and its  SortOrder  property as  Ascending  or  Descending .                          Configuring the Suppliers group Click  OK  (item 3) to close the  GroupExp Collection Editor                      window. If it's required, repeat the appropriate actions above to add more group                     sections with grouping on another field. By defining groups, you specify sorting conditions for the SQL that is generated by                 the report, as well as adding the group footer and header section onto the report                 form in the designer.  References Using the Expression                         Editor Using the Expression Editor]]></column>
		</row>
		<row PageID="2b5ed65f-be15-48a4-8ddc-834a8261df22" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="72112772-ce8e-84db-90b6-3a90aaf2cfdb" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can use parameters to share values between two or more reports, or in expressions and formulas to calculate values for multiple fields within the same report. Parameters are variables that are requested from the user before the report is executed. Based on the parameter, the report engine creates a variable within the report, which can be referred to as a database field can. When referred to from code, a parameter starts with the ''@'' symbol. {br}

To define a parameter for a report, perform the following steps: [anchor|#_de5a80f0-b03b-483d-a66c-f3c1c46a06d5]
#Start the Schema Builder wizard by selecting the ''Build Schema'' command from the '''File''' menu.
#Open the '''Parameters''' tab. The list of parameters defined for the report is displayed in the left area of the tab.
#Click '''Add''' (see the item with the red 1 in the first screenshot below) to add a new parameter to the parameters list. Alternatively, to change properties of an existing parameter, click its name in the parameters list.
#In the '''Name''' box, enter the parameter name (item 2).
#In the '''Input Mask''' box, define the input mask for the parameter, if necessary.
#In the '''Data Type''' box, select the data type for the parameter (item 3).
#In the '''Prompt''' box, enter the prompt for the parameter (the label to be displayed on the screen—see item 4).
#In the '''Default Value''' box, enter the default value for the parameter. You can use expressions and formulas to define parameters&rsquo; default values.
#In the '''Column Span''' box, set the column span to display the parameter.
#Set the appropriate check boxes for the parameter (item 5): 
#*'''Allow Null''' - To indicate that the parameter can have ''Null'' values
#*'''Visible''' - To display the parameter on the screen
#*'''Required''' - To indicate that the parameter is required for the report
#In the '''View Name''' box, enter the view formula used to retrieve data for the parameter (item 6). The '''View name''' property specifies the lookup window that will open to help the user select the parameter. The ''Report.GetView()'' function creates the lookup field by using the '''PXSelector''' attribute declared on the DAC field; the DAC field is passed as a function parameter. 
#:((({S:Hint}You can also use any field of any existing outside DAC, if it has an attribute with appropriate lookup columns for the report parameter being adjusted. You can create a special DAC with needed lookup fields if you haven&rsquo;t found the appropriate field or fields in the existing DACs.
)))
#In the '''Value''' column of the '''Available Values''' table, you can enter the value of the expression. If more than one value may be used for the parameter, add another value to the list of available values in a separate row.
#Add the label that will be displayed when the parameter has the corresponding value. [anchor|#_98889bdc-db0f-49e6-8a8f-bd37ecca9a30][image:UserGuide/Images/Defining_Parameters_for_a_Report_dding_CategoryName_parameter.png|popup|Adding the first parameter|400px][anchor|#_5779c032-0dd1-44e7-bcab-32bfb3c2f3aa][image:UserGuide/Images/Defining_Parameters_for_a_Report_dding_SupplierCD_parameter.png|popup|Adding the second parameter|400px]
#To apply the changes, click the '''Apply''' button.
#To save the parameters defined for the report, and their values, click '''OK'''; otherwise, click '''Cancel'''.
]]></column>
			<column name="PlainText"><![CDATA[Defining Parameters for a Report You can use parameters to share values between two or more reports, or in expressions                 and formulas to calculate values for multiple fields within the same report.                 Parameters are variables that are requested from the user before the report is                 executed. Based on the parameter, the report engine creates a variable within the                 report, which can be referred to as a database field can. When referred to from                 code, a parameter starts with the  @  symbol.  To define a parameter for a report, perform the following steps:  Start the Schema Builder wizard by selecting the  Build Schema  command                     from the  File  menu. Open the  Parameters  tab. The list of parameters defined for the report is                     displayed in the left area of the tab. Click  Add  (see the item with the red 1 in the first screenshot below) to                     add a new parameter to the parameters list. Alternatively, to change properties                     of an existing parameter, click its name in the parameters list. In the  Name  box, enter the parameter name (item 2). In the  Input Mask  box, define the input mask for the parameter, if                     necessary. In the  Data Type  box, select the data type for the parameter (item                     3). In the  Prompt  box, enter the prompt for the parameter (the label to be                     displayed on the screen—see item 4). In the  Default Value  box, enter the default value for the parameter. You                     can use expressions and formulas to define parameters' default values. In the  Column Span  box, set the column span to display the                     parameter. Set the appropriate check boxes for the parameter (item 5):  Allow Null  - To indicate that the parameter can have  Null                              values Visible  - To display the parameter on the screen Required  - To indicate that the parameter is required for the                             report In the  View Name  box, enter the view formula used to retrieve data for                     the parameter (item 6). The  View name  property specifies the lookup                     window that will open to help the user select the parameter. The                          Report.GetView()  function creates the lookup field by using the                          PXSelector  attribute declared on the DAC field; the DAC field is                     passed as a function parameter.  You can also use any field of                         any existing outside DAC, if it has an attribute with appropriate lookup                         columns for the report parameter being adjusted. You can create a special                         DAC with needed lookup fields if you haven't found the appropriate field or                         fields in the existing DACs. In the  Value  column of the  Available Values  table, you can enter                     the value of the expression. If more than one value may be used for the                     parameter, add another value to the list of available values in a separate                     row. Add the label that will be displayed when the parameter has the corresponding                     value.  Adding the first parameter Adding the second parameter To apply the changes, click the  Apply  button. To save the parameters defined for the report, and their values, click                      OK ; otherwise, click  Cancel . ]]></column>
		</row>
		<row PageID="f01983ce-4de4-44c5-86c5-f9f7ec2b41ca" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1aa82920-8c1f-0c82-4909-921248c76a13" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Filters allow you to limit the volume of data selected for the reports, set more specific criteria for selecting data from data tables, and remove unnecessary data as a result of the table joining. The '''Filters''' tab of the Schema Builder wizard lists the data filtering rules defined for the current report, which you can modify. Data filtering rules can also be set on the '''Properties''' tab. {br}{TOC}
==Using the Schema Builder Wizard==
Filter expressions use the data field names and parameters to set the criteria for data processing. To set a filter using the Schema Builder wizard, perform the following steps: 
#In the grid on the '''Filters''' tab, click the empty line to add a new expression to the filter.
#In the '''Data Field''' field, select a data field or parameter name.
#In the '''Condition''' field, select the appropriate condition for the expression: ''Equal'', ''NotEqual'', ''Greater'', ''GreaterOrEqual'', ''Less'', ''LessOrEqual'', ''Like'', ''RLike'', ''LLike'', ''Between'', ''IsNull'', or ''IsNotNull''.
#In the '''Value1''' and '''Value2''' fields, enter the value or values for the expression.
#If more than one data filtering expression will be used for filtering data, in the '''Operator''' field, select the operator: ''And'' or ''Or''.
#Select the braces in the '''Braces''' column if they are required in the data filtering expressions.
#Repeat these steps for each expression to be used in the data filtering rule. [image:UserGuide/Images/Using_Filters_onfiguring_filter.png|popup|Configuring the filter|400px]
#Click '''Apply''' to apply the changes.
#Click '''OK''' to save the changes and close the Schema Builder wizard, or '''Cancel''' to discard the changes.

Any defined expressions can be deleted. To delete an expression, click the relevant line in the grid, and press the DELETE key. On the '''Filters''' tab, you can add additional filtering conditions to be transformed to the SQL ''Where'' condition. 
==Using the Properties Tab==
The '''Properties''' tab allows you to define the data filters as well. To set a filter and define the data filtering criteria, perform the following steps: 
#Select the whole report as an object for which the properties will be set by clicking the [image:UserGuide/Images/Using_Filters_Using_FiltersReportSelectionIcon.PNG|Configuring the filter] icon in the top left corner of the Report Designer window. The '''Properties''' tab displays the report properties.
#On the '''Properties''' tab, click the [image:UserGuide/Images/Using_Filters_Using_Filtersselection_button.PNG|Configuring the filter] button next to the '''Filters''' collection. The '''FilterExp Collection Editor''' dialog appears, allowing you to edit the filter expressions. [image:UserGuide/Images/Using_Filters_iltersCollection.png|popup|Select Filters|400px]
#To add a new expression to the filter, click the '''Add''' button under the '''Members''' list. The new expression will be added to the list of filter expressions and selected for editing.
#In the '''Data Field''' field, select the data field or parameter name.
#In the '''Condition''' field, select the condition for the expression: ''Equal'', ''NotEqual'', ''Greater'', ''GreaterOrEqual'', ''Less'', ''LessOrEqual'', ''Like'', ''RLike'', ''LLike'', ''Between'', ''IsNull'', or ''IsNotNull''.
#In the '''Value''' and '''Value2''' fields, enter the value or values for the expression.
#If more than one data filtering expression will be used for filtering data, in the '''Operator''' field, select the operator: ''And'' or ''Or''.
#In the '''Open Braces''' field, enter the number of the opening braces to be added before the new expression.
#In the '''Close Braces''' field, enter the number of the closing braces to be added after the new expression.
#Repeat Steps 3–9 for each expression to be used in the data filtering rule.
#Click '''OK''' to save the changes and close the '''FilterExp Collection Editor''' dialog, or '''Cancel''' to discard the changes. [image:UserGuide/Images/Using_Filters_dding_filter_parameters.png|popup|Define the filtering rules|400px]

The defined expressions can be deleted. To delete an expression, click the relevant item in the '''Members''' list, and click the '''Remove''' button.]]></column>
			<column name="PlainText"><![CDATA[Using Filters Filters allow you to limit the volume of data selected for                                                 the reports, set more specific criteria for                                                 selecting data from data tables, and remove                                                 unnecessary data as a result of the table joining.                                                 The  Filters  tab of the Schema Builder wizard                                                 lists the data filtering rules defined for the                                                 current report, which you can modify. Data filtering                                                 rules can also be set on the  Properties  tab.                                      Using the Schema Builder Wizard Filter expressions use the data field names and parameters to set the criteria for data processing. To set a filter using the Schema Builder wizard, perform the following steps:  In the grid on the  Filters  tab, click the empty line to add a new expression to the filter. In the  Data Field  field, select a data field or parameter name. In the  Condition  field, select the appropriate condition for the expression:  Equal ,  NotEqual ,  Greater ,  GreaterOrEqual ,  Less ,  LessOrEqual ,  Like ,  RLike ,  LLike ,  Between ,  IsNull , or  IsNotNull . In the  Value1  and  Value2  fields, enter the value or values for the expression. If more than one data filtering expression will be used for filtering data, in the  Operator  field, select the operator:  And  or  Or . Select the braces in the  Braces  column if they are required in the data filtering expressions. Repeat these steps for each expression to be used in the data filtering rule.  Configuring the filter Click  Apply  to apply the changes. Click  OK  to save the changes and close the Schema Builder wizard, or  Cancel  to discard the changes. Any defined expressions can be deleted. To delete an expression, click the relevant line in the grid, and press the DELETE key. On the  Filters  tab, you can add additional filtering conditions to be transformed to the SQL  Where  condition.  Using the Properties Tab The  Properties  tab allows you to define the data filters as well. To set a filter and define the data filtering criteria, perform the following steps:  Select the whole report as an object for which the properties will be set by clicking the   icon in the top left corner of the Report Designer window. The  Properties  tab displays the report properties. On the  Properties  tab, click the   button next to the  Filters  collection. The  FilterExp Collection Editor  dialog appears, allowing you to edit the filter expressions.  Select Filters To add a new expression to the filter, click the  Add  button under the  Members  list. The new expression will be added to the list of filter expressions and selected for editing. In the  Data Field  field, select the data field or parameter name. In the  Condition  field, select the condition for the expression:  Equal ,  NotEqual ,  Greater ,  GreaterOrEqual ,  Less ,  LessOrEqual ,  Like ,  RLike ,  LLike ,  Between ,  IsNull , or  IsNotNull . In the  Value  and  Value2  fields, enter the value or values for the expression. If more than one data filtering expression will be used for filtering data, in the  Operator  field, select the operator:  And  or  Or . In the  Open Braces  field, enter the number of the opening braces to be added before the new expression. In the  Close Braces  field, enter the number of the closing braces to be added after the new expression. Repeat Steps 3–9 for each expression to be used in the data filtering rule. Click  OK  to save the changes and close the  FilterExp Collection Editor  dialog, or  Cancel  to discard the changes.  Define the filtering rules The defined expressions can be deleted. To delete an expression, click the relevant item in the  Members  list, and click the  Remove  button. ]]></column>
		</row>
		<row PageID="0637504a-8ffb-456f-88a4-47accc9976dd" Language="en-US" PageRevisionID="1" Content="&#xA;Expressions are used to define the data values to be displayed in the report or the internal variables used to set the report properties, including report visibility, the group description, and the parameter determining whether the empty lines will be printed in the report. {br}&#xA;&#xA;To help you define expressions, the Report Designer provides the '''Expression Editor''' dialog. &#xA;==In This Section==&#xA;This section includes the following articles: &#xA;*[HelpRoot_ReportingTools\Using_the_Expression_Editor|Using the Expression Editor]&#xA;*[HelpRoot_ReportingTools\Using_Globals__Parameters__and_Local_Variables|Using Globals, Parameters, and Local Variables]&#xA;*[HelpRoot_ReportingTools\Using_Operators_in_Expressions|Using Operators in Expressions]&#xA;*[HelpRoot_ReportingTools\Using_Functions_in_Expressions|Using Functions in Expressions]&#xA;" PlainText="Using Expressions Expressions are used to define the data values to be displayed in the report or the                 internal variables used to set the report properties, including report visibility,                 the group description, and the parameter determining whether the empty lines will be                 printed in the report.  To help you define expressions, the Report Designer provides the  Expression                     Editor  dialog.  In This Section This section includes the following articles:  Using the Expression                         Editor Using the Expression EditorUsing Globals, Parameters, and Local Variables Using Globals, Parameters, and Local VariablesUsing Operators                         in Expressions Using Operators in ExpressionsUsing Functions                         in Expressions Using Functions in Expressions" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8319dc87-2750-1d4d-f896-5fcf6a196846" RecordSourceID="22377" />
		<row PageID="489932dc-5c84-4fda-93c8-ff516822f4fb" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="39db0f83-c5f5-f567-6d7f-d6eb51bb99d0" RecordSourceID="22377">
			<column name="Content"><![CDATA[
To define an expression for a report parameter, you use the '''Expression Editor''' dialog, which you invoke by clicking the [anchor|#_4446b906-ee41-43f6-84e7-0a744d083719][image:UserGuide/Images/Using_the_Expression_Editor_Using_the_Expression_Editorselection_button.PNG|10px] button on the '''Properties''' tab for a property, as shown in the screenshot below. (The most common example is setting the '''Value''' property for a text box inserted in the report.) {br}

Using the '''Expression Editor''' dialog, you can enter the expression directly or compose it by selecting the appropriate values, global variables, report variables, parameters, operators, and functions. [anchor|#_e8c7f017-f828-4bb5-8fde-c0468cfbc397][anchor|#_d68af0ff-dbdb-4d13-b85a-d6d80374cbd4][image:UserGuide/Images/Using_the_Expression_Editor_nvoke_the_dialog.png|popup|Invoking the Expression Editor dialog|450px]((({S:Warn}When the report returns no data, formulas do not work by default because of the ''False'' value of the '''ProcessUnbound''' report parameter. If you need to calculate something even if the report has no data to display, you should select ''True'' as the '''ProcessUnbound'''. Some report formulas executed with no data may raise exceptions, so you should use this parameter very carefully.
)))
The '''Expression Editor''' dialog consists of four areas: [anchor|#_433edd1f-25b1-45e5-9c53-474095bc76d2]
*Report Attributes area (left area of the dialog) - This area displays the list of the attributes defined for this report by the data schema it uses.
*Parameters, Variables, Operators, and Functions area (middle area of the dialog) - This area lists the parameters, operators, functions, and variables available in the report.
*Parameter, Variable, Operator, and Function Selection area (right area of the dialog) - This area allows selecting the specific parameters, operators, and functions to be used in expressions.
*Expression Editing area (bottom area of the dialog) - This area displays the expression you have composed and allows you to edit it.
[anchor|#_836f8d7c-a054-44b8-a556-95a19f66a19a][anchor|#_1de4cc56-220e-4935-91aa-43900799a899][image:UserGuide/Images/Using_the_Expression_Editor_xpression_Editor_window.png|popup|The Expression Editor window|450px]
To enter the expression using the '''Expression Editor''' dialog, use the following steps: [anchor|#_297c4866-c0b0-4a80-b027-1a635a0fd233]
#In the Parameters, Variables, Operators, and Functions area, expand the hierarchical structure of the existing entities, and click the link of the group of parameters, variables, functions, or operators to display the list of available items in the selection area.
#In the Parameter, Variable, Operator, and Function Selection area, select the required item and double-click it to insert the item into the report.
#In the Expression Editing area, edit the expression.
#To validate the expression, click the '''Validate''' button in the lower left.
#Click '''OK''' to save the expression or '''Cancel''' to discard the changes.
]]></column>
			<column name="PlainText"><![CDATA[Using the Expression Editor To define an expression for a report parameter, you use the  Expression Editor                  dialog, which you invoke by clicking the   button on the  Properties  tab                 for a property, as shown in the screenshot below. (The most common example is                 setting the  Value  property for a text box inserted in the report.)  Using the  Expression Editor  dialog, you can enter the expression directly or                 compose it by selecting the appropriate values, global variables, report variables,                 parameters, operators, and functions.  Invoking the Expression Editor dialog When the report returns no data, formulas do not work by default because of the                      False  value of the  ProcessUnbound  report                 parameter. If you need to calculate something even if the report has no data to                 display, you should select  True  as the  ProcessUnbound .                 Some report formulas executed with no data may raise exceptions, so you should use                 this parameter very carefully. The  Expression Editor  dialog consists of four areas:  Report Attributes area (left area of the dialog) - This area displays the list                     of the attributes defined for this report by the data schema it uses. Parameters, Variables, Operators, and Functions area (middle area of the dialog)                     - This area lists the parameters, operators, functions, and variables available                     in the report. Parameter, Variable, Operator, and Function Selection area (right area of the                     dialog) - This area allows selecting the specific parameters, operators, and                     functions to be used in expressions. Expression Editing area (bottom area of the dialog) - This area displays the                     expression you have composed and allows you to edit it. The Expression Editor window To enter the expression using the  Expression Editor  dialog, use the following                 steps:  In the Parameters, Variables, Operators, and Functions area, expand the                     hierarchical structure of the existing entities, and click the link of the group                     of parameters, variables, functions, or operators to display the list of                     available items in the selection area. In the Parameter, Variable, Operator, and Function Selection area, select the                     required item and double-click it to insert the item into the report. In the Expression Editing area, edit the expression. To validate the expression, click the  Validate  button in the lower                     left. Click  OK  to save the expression or  Cancel  to discard the                     changes. ]]></column>
		</row>
		<row PageID="f94195e6-f7dc-404a-8dd0-04244bb17e98" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ccf201d8-00f6-f4d0-5ff1-e9df423a1cf9" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Expressions can use global variables, parameters, and local variables to define the data that will be used to calculate the values displayed in the report. These variables and parameters are links to the calculated data, selected from the available data set or defined in the report. {br}{TOC}
==Globals==
Global variables (sometimes referred to as ''globals'') are available in all reports. Globals can be inserted into a report as values or included in expressions. 
===Globals===
{| class="checklist" | width="100%" 
|- 
!width="15%" ! Global
!width="84%" ! Description 
|- 
| '''PageIndex'''
|  Substitutes into the expression the page index value selected in the current report data source definition.
|- 
| '''PageCount'''
|  Substitutes into the expression the page count value for the current report.
|- 
| '''PageOf'''
|  Substitutes into the expression the page number and total page count values for the current report.
|}
==Parameters==
The parameters defined in the report can be used to substitute values into the expression. Every report has its own set of parameters defined by the user creating or modifying the report. The parameters, defined on the report level, can be modified using the Schema Builder wizard. {br}

Parameters have the <tt>@param&#95;name</tt> format, where ''param&#95;name'' is the name of the parameter defined in the report. {br}

Here is an example of expressions that use the report parameters.{{{{([Categories.CategoryName]=[@CategoryName])
}}}}
In the above example, '''Categories.CategoryName''' is an attribute available from the data schema, and ''@CategoryName'' is a report parameter; this is the example of a simple condition. &#0125; Here, '''ARStatementCycle.AgeDays02''' is an attribute available from the data schema, and ''@AgeDate'' is a report parameter; this is the example of an arithmetic operation. {br}

 Acumatica ERP has the date-relative parameters predefined for the following reference points:[anchor|#ul_ozk_sw3_2s]
*''@Today'': The current day.
*''@WeekStart'' and ''@WeekEnd'': The start and end, respectively, of the current week. The start and end of the week are determined according to the default system locale or the locale the user has selected when signing in to Acumatica ERP. The system locales are specified and configured on the [HelpRoot_FormReference\SM_20_05_50|System Locales] ([~/?ScreenId=SM200550|SM200550]) form.
*''@MonthStart'' and ''@MonthEnd'': The start and end, respectively, of the current month.
*''@QuarterStart'' and ''@QuarterEnd'': The start and end, respectively, of the current quarter.
*''@PeriodStart'' and ''@PeriodEnd'': The start and end, respectively, of the current financial period. The financial periods are defined on the [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form. 
*:For more information on financial periods in Acumatica ERP, see [HelpRoot_Financials\Finance_ManagingPeriods_Mapref|Managing Financial Periods] in the Acumatica ERP Financial Management Guide.
*''@YearStart'' and ''@YearEnd'': The start and end, respectively, of the current calendar year.
((({S:Warn}All the date-relative parameters use the date (in UTC) of the server used to run the Acumatica ERP instance as the current date.
)))
==Variables==
The local variables you define for a report can be used to substitute values into the expression. Local variables are defined separately for each report data group, but the visibility of the variables is not limited by the group where the variable is defined. To define a new variable, use the '''Properties''' page of the report data group. {br}

The variables have the <tt>$variable&#95;name</tt> format, where ''variable&#95;name'' is the name of the variable defined in the report. 
==Examples==
See below for examples of expressions using local variables: {{{{=$Age02
}}}}
Here, ''$Age02'' is a local report variable. {{{{=Assign( '$RowNumber', $RowNumber + 1 )
}}}}
In this example, the row number is calculated; ''$RowNumber'' is a local report variable. ]]></column>
			<column name="PlainText"><![CDATA[Using Globals, Parameters, and Local Variables Expressions can use global variables, parameters, and local variables to define the 				data that will be used to calculate the values displayed in the report. These 				variables and parameters are links to the calculated data, selected from the 				available data set or defined in the report.  Globals Global variables (sometimes referred to as  globals ) are available in all 				reports. Globals can be inserted into a report as values or included in expressions.  Globals Global Description  PageIndex  Substitutes into the expression the page index value selected in 								the current report data source definition. PageCount  Substitutes into the expression the page count value for the 								current report. PageOf  Substitutes into the expression the page number and total page 								count values for the current report. Parameters The parameters defined in the report can be used to substitute values into the 				expression. Every report has its own set of parameters defined by the user creating 				or modifying the report. The parameters, defined on the report level, can be 				modified using the Schema Builder wizard.  Parameters have the  @param_name  format, where  param_name  is the name 				of the parameter defined in the report.  Here is an example of expressions that use the report parameters. ([Categories.CategoryName]=[@CategoryName]) In the above example,  Categories.CategoryName  is an attribute available from 				the data schema, and  @CategoryName  is a report parameter; this is the example 				of a simple condition. } Here,  ARStatementCycle.AgeDays02  is an attribute 				available from the data schema, and  @AgeDate  is a report parameter; this is 				the example of an arithmetic operation.   Acumatica ERP has the date-relative parameters predefined for the following reference 					points: @Today : The current day. @WeekStart  and  @WeekEnd : The start and end, respectively, of the                 current week. The start and end of the week are determined according to the default                 system locale or the locale the user has selected when signing in to  Acumatica ERP. The system locales are specified and configured on the   ([~/?ScreenId=SM200550|SM200550]) System Locales (SM200550) form. @MonthStart  and  @MonthEnd : The start and end, respectively, of the                 current month. @QuarterStart  and  @QuarterEnd : The start and end, respectively, of the                 current quarter. @PeriodStart  and  @PeriodEnd : The start and end, respectively, of the                 current financial period. The financial periods are defined on the   ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form.  For more information                     on financial periods in  Acumatica ERP, see  Managing Financial Periods in the                          Acumatica ERP Financial Management Guide. @YearStart  and  @YearEnd : The start and end, respectively, of the                 current calendar year. All the date-relative parameters use the date (in UTC) of the server used 					to run the  Acumatica ERP instance as the current date. Variables The local variables you define for a report can be used to substitute values into the 				expression. Local variables are defined separately for each report data group, but 				the visibility of the variables is not limited by the group where the variable is 				defined. To define a new variable, use the  Properties  page of the report data 				group.  The variables have the  $variable_name  format, where  variable_name  is 				the name of the variable defined in the report.  Examples See below for examples of expressions using local variables:  =$Age02 Here,  $Age02  is a local report variable.  =Assign( '$RowNumber', $RowNumber + 1 ) In this example, the row number is calculated;  $RowNumber  is a local report 				variable.  ]]></column>
		</row>
		<row PageID="bec5cd55-00bf-4fd1-9fe7-8090d7f23cfc" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="014630d4-8b3b-f2f3-e421-6bb464db25e2" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Operators are used to perform certain operations with the data attributes, globals, parameters, and variables or to modify the data before it is inserted into the report. {br}

To add operators in the expressions, you can enter them directly in the expression editing area or select them from the list of operators provided by the Expression Editor, described in the ''[HelpRoot_ReportingTools\Using_the_Expression_Editor|Using the Expression Editor]'' article. {br}

You can use the following groups of operators in the expressions. {br}{TOC}
==Arithmetic Operators==
Arithmetic operators are used to perform familiar arithmetic operations that involve the calculation of numeric values. The arithmetic operators group includes the following operators. 
===Arithmetic Operators===
{| class="checklist" | width="100%" 
|- 
!width="17%" ! Operator
!width="82%" ! Description and Examples
|- 
| '''+ (addition)'''
|  Adds the operands and returns the result. '''Example:'''{{Sum([OrderDetails.ExPrice]+[Orders.Freight]}} Here, '''OrderDetails.ExPrice''' and '''Orders.Freight''' are attributes from the database scheme.
|- 
| '''- (subtraction)'''
|  Subtracts the second operand from the first and returns the result. '''Example:'''{{[ARPayment.UnappliedBal]-$AgeBal00}} Here, '''ARPayment.UnappliedBal''' is an attribute from the database scheme, and <tt>$AgeBal00</tt> is a report variable.
|- 
| '''&#42; (multiplication)'''
|  Multiplies the two operands and returns the result. '''Example:'''{{[OrderDetails.Quantity]*[OrderDetails.UnitPrice]}} In this example, '''OrderDetails.Quantity''' and '''OrderDetails.UnitPrice''' are attributes from the database scheme.
|- 
| '''/ (division)'''
|  Yields the quotient of the operands, which is the first operand divided by the second. '''Example:''' StCycCustomerTot/$CustomerTot&#42;100&#0125;&#0125; Here, <tt>$StCycCustomerTot</tt> and <tt>$CustomerTot</tt> are the report variables.
|- 
| '''Mod (modulus)'''
|  Divides the first integer operand by the second integer operand and returns the remainder, rounded to the nearest integer. '''Example:'''{{[ARStatementCycle.AgeDays02]Mod(7)}} In this example, '''ARStatementCycle.AgeDays02''' is the attribute from the database scheme.
|}
==Logical operators==
Logical operators evaluate one or two Boolean expressions and return a Boolean result (<tt>True</tt> or <tt>False</tt>). Because these operators evaluate only Boolean expressions, you must use fields whose only values are <tt>True</tt> and <tt>False</tt> (typically check boxes and radio buttons). The logical operators are listed below. 
===Logical Operators===
{| class="checklist" | width="100%" 
|- 
!width="13%" ! Operator
!width="86%" ! Description and Examples
|- 
| '''And'''
|  Performs logical conjunction on two Boolean expressions: returns <tt>True</tt> if and only if both expressions evaluate to <tt>True</tt>; in other cases, returns <tt>False</tt>. '''Example:'''{{([ARStatementCycle.Day00]<>0)And([ARStatementCycle.Day01]<>0))}} In this example, '''ARStatementCycle.Day00''' and '''ARStatementCycle.Day01''' are attributes from the database scheme.
|- 
| '''Or '''
|  Performs logical disjunction on two Boolean expressions: returns <tt>True</tt> if at least one expression evaluates to <tt>True</tt>; returns <tt>False</tt> if neither expression evaluates to ''True''. '''Example:'''{{($CurrBal=0)Or([Terms.DayDue00]<[@AgeDate])}} Here, <tt>$CurrBal</tt> is a report variable and '''Terms.DayDue00''' is an attribute from the database scheme.
|- 
| '''Not '''
|  Performs logical negation on a Boolean expression: returns <tt>True</tt> if and only if the operand is <tt>False</tt>. Logical negation is an unary operator. '''Example:'''{{Not($CurrBal=0)}} In this example, <tt>$CurrBal</tt> is a report variable.
|}
==Comparison Operators==
Comparison operators compare two expressions and return a Boolean value (<tt>True</tt> or <tt>False</tt>) that represents the result of the comparison. This group of operators includes the following operators. 
===Comparison operators===
{| class="checklist" | width="100%" 
|- 
!width="13%" ! Operator
!width="86%" ! Description and Examples
|- 
| '''= '''
|  Returns <tt>True</tt> if operands are equal. '''Example:'''{{([Terms.DayDue00]=$DueDate))}} In this example, '''Terms.DayDue00''' is an attribute from the database scheme, and <tt>$DueDate</tt> is a report variable.
|- 
| '''&lt;&gt; '''
|  Returns <tt>True</tt> if operands are not equal. '''Example:'''{{([RowTerms.CreatedDateTime]<>DueDate)}} Here, '''RowTerms.CreatedDateTime''' is an attribute from the database scheme, and <tt>$DueDate</tt> is a report variable.
|- 
| '''&lt; '''
|  Returns <tt>True</tt> if the first operand is less than the second one. '''Example:'''{{([Terms.CreatedDateTime]<$DueDate)}} Here, '''Terms.CreatedDateTime''' is an attribute from the database scheme, and <tt>$DueDate</tt> is a report variable.
|- 
| '''&gt; '''
|  Returns <tt>True</tt> if the first operand is greater than the second one. '''Example:'''{{([Terms.CreatedDateTime]>$DueDate)}} In this example, '''Terms.CreatedDateTime''' is an attribute from the database scheme, and <tt>$DueDate</tt> is a report variable.
|- 
| '''&lt;= '''
|  Returns <tt>True</tt> if the first operand is less than or equal to the second operand. '''Example:'''{{([Terms.CreatedDateTime]<=$DueDate)}} Here, '''Terms.CreatedDateTime''' is an attribute from the database scheme, and <tt>$DueDate</tt> is a report variable.
|- 
| '''&gt;= '''
|  Returns <tt>True</tt> if the first operand is greater than or equal to the second operand. '''Example:'''{{([Terms.CreatedDateTime]>=$DueDate)}} Here, '''Terms.CreatedDateTime''' is an attribute from the database scheme, and <tt>$DueDate</tt> is the report variable.
|}
==Other Operators==
This miscellaneous group of operators includes the following operators and constants. 
===Other Operators===
{| class="checklist" | width="100%" 
|- 
!width="12%" ! Operator
!width="87%" ! Description and Examples
|- 
| '''In '''
|  A binary operator that returns <tt>True</tt> if the second operand (a string) contains the first operand (which is also a string). '''Example'''{{ $AgeTot01 In (100, 501, 579)}} In this example, <tt>$AgeTot01</tt> is a report variable.
|- 
| '''True '''
|  A binary constant used as an operand in logical expressions. '''Example'''{{ $AgeTot01 <>0=True}} Here, <tt>$AgeTot01</tt> is a report variable.
|- 
| '''False '''
|  A binary constant used as an operand in logical expressions. '''Example:'''{{ $AgeTot01 <>0=False}} Here, <tt>$AgeTot01</tt> is the report variable.
|- 
| '''Null '''
|  A special value, used as an operand in logical expressions, that designates an undefined value. '''Example:'''{{([Terms.Descr]=Null}} In this example, '''Terms.Descr''' is an attribute from the database scheme.
|}
==References==
*[HelpRoot_ReportingTools\Using_Globals__Parameters__and_Local_Variables|Using Globals, Parameters, and Variables]
*[HelpRoot_ReportingTools\Using_the_Expression_Editor|Using the Expression Editor]
]]></column>
			<column name="PlainText"><![CDATA[Using Operators in Expressions Operators are used to perform certain operations with the data attributes, globals,                 parameters, and variables or to modify the data before it is inserted into the                 report.  To add operators in the expressions, you can enter them directly in the expression                 editing area or select them from the list of operators provided by the Expression                 Editor, described in the  Using the Expression Editor Using the Expression Editor article.  You can use the following groups of operators in the expressions.  Arithmetic Operators Arithmetic operators are used to perform familiar arithmetic operations that involve the calculation of numeric values. The arithmetic operators group includes the following operators.  Arithmetic Operators Operator Description and Examples + (addition)  Adds the operands and returns the result.  Example: Sum([OrderDetails.ExPrice]+[Orders.Freight]  Here,  OrderDetails.ExPrice  and  Orders.Freight  are attributes from the database scheme. - (subtraction)  Subtracts the second operand from the first and returns the result.  Example: [ARPayment.UnappliedBal]-$AgeBal00  Here,  ARPayment.UnappliedBal  is an attribute from the database scheme, and  $AgeBal00  is a report variable. * (multiplication)  Multiplies the two operands and returns the result.  Example: [OrderDetails.Quantity]*[OrderDetails.UnitPrice]  In this example,  OrderDetails.Quantity  and  OrderDetails.UnitPrice  are attributes from the database scheme. / (division)  Yields the quotient of the operands, which is the first operand divided by the second.  Example:  StCycCustomerTot/$CustomerTot*100}} Here,  $StCycCustomerTot  and  $CustomerTot  are the report variables. Mod (modulus)  Divides the first integer operand by the second integer operand and returns the remainder, rounded to the nearest integer.  Example: [ARStatementCycle.AgeDays02]Mod(7)  In this example,  ARStatementCycle.AgeDays02  is the attribute from the database scheme. Logical operators Logical operators evaluate one or two Boolean expressions and return a Boolean result ( True  or  False ). Because these operators evaluate only Boolean expressions, you must use fields whose only values are  True  and  False  (typically check boxes and radio buttons). The logical operators are listed below.  Logical Operators Operator Description and Examples And  Performs logical conjunction on two Boolean expressions: returns  True  if and only if both expressions evaluate to  True ; in other cases, returns  False .  Example: ([ARStatementCycle.Day00]<>0)And([ARStatementCycle.Day01]<>0))  In this example,  ARStatementCycle.Day00  and  ARStatementCycle.Day01  are attributes from the database scheme. Or   Performs logical disjunction on two Boolean expressions: returns  True  if at least                                 one expression evaluates to  True ; returns  False  if                                 neither expression evaluates to  True .  Example: ($CurrBal=0)Or([Terms.DayDue00]<[@AgeDate])                                  Here,  $CurrBal  is a report variable and                                      Terms.DayDue00  is an attribute from the database                                 scheme. Not   Performs logical negation on a Boolean expression: returns                                      True  if and only if the operand is  False .                                 Logical negation is an unary operator.  Example: Not($CurrBal=0)  In this example,  $CurrBal                                  is a report variable. Comparison Operators Comparison operators compare two expressions and return a Boolean value ( True  or  False ) that represents the result of the comparison. This group of operators includes the following operators.  Comparison operators Operator Description and Examples =   Returns  True  if operands are equal.  Example: ([Terms.DayDue00]=$DueDate))  In this example,  Terms.DayDue00  is an attribute from the database scheme, and  $DueDate  is a report variable. <>   Returns  True  if operands are not equal.  Example: ([RowTerms.CreatedDateTime]<>DueDate)  Here,  RowTerms.CreatedDateTime  is an attribute from the database scheme, and  $DueDate  is a report variable. <   Returns  True  if the first operand is less than the second one.  Example: ([Terms.CreatedDateTime]<$DueDate)  Here,  Terms.CreatedDateTime  is an attribute from the database scheme, and  $DueDate  is a report variable. >   Returns  True  if the first operand is greater than the second one.  Example: ([Terms.CreatedDateTime]>$DueDate)  In this example,  Terms.CreatedDateTime  is an attribute from the database scheme, and  $DueDate  is a report variable. <=   Returns  True  if the first operand is less than or equal to the second operand.  Example: ([Terms.CreatedDateTime]<=$DueDate)  Here,  Terms.CreatedDateTime  is an attribute from the database scheme, and  $DueDate  is a report variable. >=   Returns  True  if the first operand is greater than or equal to the second operand.  Example: ([Terms.CreatedDateTime]>=$DueDate)  Here,  Terms.CreatedDateTime  is an attribute from the database scheme, and  $DueDate  is the report variable. Other Operators This miscellaneous group of operators includes the following operators and constants.  Other Operators Operator Description and Examples In   A binary operator that returns  True  if the second operand (a string) contains the first operand (which is also a string).  Example  $AgeTot01 In (100, 501, 579)  In this example,  $AgeTot01  is a report variable. True   A binary constant used as an operand in logical expressions.  Example  $AgeTot01 <>0=True  Here,  $AgeTot01  is a report variable. False   A binary constant used as an operand in logical expressions.  Example:  $AgeTot01 <>0=False  Here,  $AgeTot01  is the report variable. Null   A special value, used as an operand in logical expressions, that designates an undefined value.  Example: ([Terms.Descr]=Null  In this example,  Terms.Descr  is an attribute from the database scheme. References Using Globals, Parameters, and Variables Using Globals, Parameters, and VariablesUsing the Expression Editor Using the Expression Editor]]></column>
		</row>
		<row PageID="4eeba11c-b05d-4893-8d05-c377fb1824b6" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="6251c37c-8952-bcfe-2e29-36575cc2f4a1" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Functions enable you to perform specific tasks that facilitate the processing of data for the reports. Many functions available in the Expression Editor window process the data and return the values you can use in reports. {br}

To use functions in expressions, you can enter them manually in the expression editing area or select them from the list of functions provided by Expression Editor. You can use the following groups of functions in expressions.
==Type Conversion Functions==
The type conversion functions enable you to convert data from one data type to another. Listed below are the type conversion functions available in the ''Conversion'' subnode of the ''Functions'' node in Expression Editor.
{| class="checklist" | width="100%" 
|- 
!width="13%" ! Function
!width="86%" ! Description and Examples
|- 
| '''CBool(x)'''
| 
Converts the expression used as the function argument into a Boolean expression. Returns {{False}} if the Boolean value is 0; otherwise, returns {{True}}. {br}

'''Example:'''{{CBool($CurrCompanyTot - $CompanyTot)}}{br}

In this example, {{CurrCompanyTot}} and {{CompanyTot}} are report variables.
|- 
| '''CDate(x)'''
| 
Converts the expression used as the function argument into a value of the ''Date'' type. The argument should be a valid date expression according to the locale selected for the import or export scenario. {br}

'''Example:'''{{CDate($DueDate - 1)}}{br}

In this example, {{DueDate}} is a report variable.
|- 
| '''CStr(x)'''
| 
 Converts the expression used as the function argument into a string. If the argument is {{Null}}, the function returns a run-time error; otherwise, it returns a string. {br}

'''Example:'''{{CStr($PrintDoc)}}{br}

Here, {{PrintDoc}} is a report variable.
|- 
| '''CDbl(x)'''
| 
 Converts the expression defined in the function argument into a value of the ''Double'' type. {br}

'''Example:'''{{CDbl($CurrBal/$CurrTot)}}{br}

Here, {{CurrBal}} and {{CurrTot}} are report variables.
|- 
| '''CSng(x)'''
| 
 Converts the expression used as the function argument into a value of the ''Single'' type. If the expression has a value outside the acceptable range for the ''Single'' type, this function returns an error. {br}

'''Example:'''{{CSng($StCycCurrTot/$CompanyTot)}}{br}

In this example, {{StCycCurrTot}} and {{CompanyTot}} are report variables.
|- 
| '''CDec(x)'''
| 
 Converts the expression used as the function argument into a value of the ''Decimal'' type. {br}

'''Example:'''{{CDec($CompanyTot)}}{br}

In this example, {{CompanyTot}} is a report variable.
|- 
| '''CInt(x)'''
| 
 Converts the expression used as the function argument into a value of the ''Integer'' type. {br}

'''Example:'''{{CInt([ARPayment.ExtRefNbr])}}{br}

In this example, {{ARPayment.ExtRefNbr}} is an attribute from the database scheme.
|- 
| '''CShort(x)'''
| 
 Converts a numeric value to a value of the ''Short'' type. {br}

'''Example:'''{{CShort([ARPayment.ImpRefNbr])}}{br}

{{ARPayment.ImpRefNbr}} is an attribute from the database scheme.
|- 
| '''CLong(x)'''
| 
 Converts a numeric value to a value of the ''Long'' type. {br}

'''Example:'''{{CLong($CurrTot)}}{br}

In this example, {{CurrTot}} is a report variable.
|}
==Aggregate Functions==
Aggregate functions perform a calculation on a set of values and return a single value. Listed below are the aggregate functions available in the ''Aggregates'' subnode of the ''Functions'' node in Expression Editor.
{| class="checklist" | width="100%" 
|- 
!width="19%" ! Function
!width="80%" ! Description and Examples
|- 
| '''Avg(''expression'')'''
| 
 Returns the average of all non-null values of the specified expression. {br}

'''Example:'''{{Avg($StCycAgeTot00, $StCycAgeTot01)}}{br}

In this example, {{StCycAgeTot00}} and {{StCycAgeTot01}} are report variables.
|- 
| '''Sum(''expression'')'''
| 
 Returns a sum of the values of the specified expression. {br}

'''Example:'''{{Sum([ARInvoice.TaxTotal], $CurrTot)}}{br}

In this example, {{ARInvoice.TaxTotal}} is an attribute from the database scheme, and {{CurrTot}} is a report variable.
|- 
| '''Count(''expression'')'''
| 
 Returns a count of the values from the specified expression. {br}

'''Example:'''{{Count($AgeBal00, $AgeBal01)}}{br}

In this example, {{AgeBal00}} and {{AgeBal01}} are report variables.
|- 
| '''Max(''expression'')'''
| 
 Returns the maximum value from all non-null values of the specified expression. {br}

'''Example:'''{{Max($CurrCompanyTot, $CompanyTot)}}{br}

In this example, {{CurrCompanyTot}} and {{CompanyTot}} are report variables.
|- 
| '''Min(''expression'')'''
| 
 Returns the minimum value from all non-null values of the specified expression. {br}

'''Example:'''{{Min($CurrCompanyTot, $CompanyTot)}}{br}

In this example, {{CurrCompanyTot}} and {{CompanyTot}} are report variables.
|- 
| '''Next(''expression'')'''
| 
 Returns the next value (from the current one) in the specified expression. {br}

'''Example:'''{{Next([ARInvoice.LineTotal],[ARInvoice.TaxTotal])}}{br}

In this example, {{ARInvoice.LineTotal}} and {{ARInvoice.TaxTotal}} are attributes from the database scheme.
|- 
| '''Prev(''expression'')'''
| 
 Returns the previous value (from the current one) in the specified expression. {br}

'''Example:'''{{Prev([ARInvoice.LineTotal],[ARInvoice.TaxTotal])}}{{ARInvoice.LineTotal}} and {{ARInvoice.TaxTotal}} are attributes from the database scheme.
|- 
| '''First(''expression'')'''
| 
 Returns the first value in the specified expression. {br}

'''Example:'''{{First([ARInvoice.LineTotal],[ARInvoice.TaxTotal])}}{br}

In this example, {{ARInvoice.LineTotal}} and {{ARInvoice.TaxTotal}} are attributes from the database scheme.
|- 
| '''Last(''expression'')'''
| 
 Returns the last value in the specified expression. {br}

'''Example:'''{{Last([ARInvoice.LineTotal],[ARInvoice.TaxTotal])}}{br}

In this example, {{ARInvoice.LineTotal}} and {{ARInvoice.TaxTotal}} are attributes from the database scheme.
|}
==String Functions==
String functions, perform an operation on a string input value and return a string or numeric value. Listed below are the string functions available in the ''Text'' subnode of the ''Functions'' node in Expression Editor.
{| class="checklist" | width="100%" 
|- 
!width="22%" ! Function
!width="77%" ! Description and Examples
|- 
| '''LTrim(''string'')'''
| 
Removes all leading spaces or parsing characters from the specified character expression, or all leading 0 bytes from the specified binary expression. {br}

'''Example:'''{{LTrim(CStr([Contact.LastName]))}}{br}

In this example, {{Contact.LastName}} is an attribute from the database scheme.
|- 
| '''RTrim(''string'')'''
| 
 Removes all trailing spaces or parsing characters from the specified character expression, or all trailing 0 bytes from the specified binary expression. {br}

'''Example:'''{{RTrim(CStr([Contact.LastName]))}}{br}

In this example, {{Contact.LastName}} is an attribute from the database scheme.
|- 
| '''Trim(''string'')'''
| 
Removes all trailing spaces or parsing characters from the specified character expression, or all trailing 0 bytes from the specified binary expression. {br}

'''Example:'''{{Trim(CStr([Contact.FirstName]+[Contact.MidName]+[Contact.LastName]))}}{br}

In this example, {{Contact.FirstName}}, {{Contact.MidName}}, and {{Contact.LastName}} are attributes from the database scheme.
|- 
| '''Format(''format, argument(s)'')'''
| 
Replaces the format item in a specified formatting string (''format'') with the text equivalent of the arguments (''arguments''). {br}

'''Example:'''{{Format('Curr. Balance: . . . . . . . . {0:N}; Total Amount: . . . . . . . . {1:N}', $CurrBal, $CurrTot)}}{br}

In this example, {{CurrBal}} and {{CurrBal}} are report variables; 0 and 1 are specifiers indicating where the arguments will be inserted; C is the ''currency'' format specifier; and N is the ''number'' format specifier.
|- 
| '''UCase(''string'')'''
| 
Returns a string that has been converted to uppercase. The ''string'' argument is any valid string expression. If ''string'' contains ''Null'', ''Null'' is returned. {br}

'''Example:'''{{UCase(CStr([RowContact.MidName]))}}{br}

In this example, {{RowContact.MidName}} is an attribute from the database scheme.
|- 
| '''LCase(''string'')'''
| 
 Returns a string that has been converted to lowercase. The ''string'' argument is any valid string expression. If ''string'' contains ''Null'', ''Null'' is returned. {br}

'''Example:'''{{LCase(CStr([Contact.Email]))}}{br}

In this example, {{Contact.Email}} is an attribute from the database scheme.
|- 
| '''InStr(''string'', ''findString'')'''
| 
 Returns the position of the first occurrence of one string (''findString'') within another (''string''). {br}

'''Example:'''{{InStr(CStr([Contact.Email]), '@')}}{br}

In this example, {{Contact.Email}} is an attribute from the database scheme.
|- 
| '''InStrRev(''string'', ''findString'')'''
| 
 Returns the position of the last occurrence of one string (''findString'') within another (''string''), starting from the right side of the string. {br}

'''Example:'''{{InStrRev(CStr([Contact.Email]), '@')}}{br}

In this example, {{Contact.Email}} is an attribute from the database scheme.
|- 
| '''Len(''string'')'''
| 
 Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable. {br}

'''Example:'''{{Len(CStr([Contact.Email]))}}{br}

In this example, {{Contact.Email}} is an attribute from the database scheme.
|- 
| '''Left(''string'', ''length'')'''
| 
 Returns a string containing a specified number of characters from the left side of a string. If ''string'' contains ''Null'', ''Null'' is returned. {br}

'''Example:'''{{Left(CStr([Contact.Email]), 7)}}{br}

In this example, '''Contact.Email''' is an attribute from the database scheme.
|- 
| '''Right(''string'', ''length'')'''
| 
 Returns a string containing a specified number of characters from the right side of a string. If ''string'' contains ''Null'', ''Null'' is returned. {br}

'''Example:'''{{Right(CStr([Contact.Email]), 10)}}{br}

In this example, '''Contact.Email''' is an attribute from the database scheme.
|- 
| '''Replace(''string'', ''oldValue'', ''newValue'')'''
| 
 Returns a string in which a specified substring (''oldValue'') has been replaced with another substring (''newValue''). {br}

'''Example:'''{{Replace(CStr([Contact.Email]), '@.', '@')}}{br}

In this example, '''Contact.Email''' is an attribute from the database scheme.
|- 
| '''PadLeft(''string'', ''width'', ''paddingChar'')'''
| 
 Right-aligns the characters in a specified string (''string''), padding with the specified characters (''paddingChar'') on the left for a specified total width (''width''). {br}

'''Example:'''{{PadLeft(CStr([Contact.Email]), 7, '@')}}{br}

In this example, '''Contact.Email''' is an attribute from the database scheme.
|- 
| '''PadRight(''string'', ''width'', ''paddingChar'')'''
| 
 Left-aligns the characters in a specified string (''string''), padding with the specified characters (''paddingChar'') on the right for a specified total width (''width''). {br}

'''Example:'''{{PadRight(CStr([Contact.Email]), 10, '@')}}{br}

In this example, '''Contact.Email''' is an attribute from the data scheme.
|}
==Mathematical Functions==
Mathematical functions perform calculations, usually based on input values provided as arguments, and return numeric values. Listed below are the mathematical functions available in the ''Math'' subnode of the ''Functions'' node in Expression Editor.
{| class="checklist" | width="100%" 
|- 
!width="19%" ! Function
!width="80%" ! Description and Examples
|- 
| '''Abs(x)'''
| 
 Returns the absolute value of a number. {br}

'''Example:'''{{Abs($CurrBal - $CurrTot)}}{br}

In this example, {{CurrBal}} and {{CurrTot}} are the report variables.
|- 
| '''Floor(x)'''
| 
 Returns the largest integer that is not greater than the argument. {br}

'''Example:'''{{Floor([Contact.NoteID])}}{br}

In this example, {{Contact.NoteID}} is an attribute from the database scheme.
|- 
| '''Ceiling(x)'''
| 
 Returns the smallest integer that is not less than the argument. {br}

'''Example:'''{{Ceiling([Contact.NoteID])}}{br}

In this example, {{Contact.NoteID}} is an attribute from the database scheme.
|- 
| '''Round(x, ''decimals'')'''
| 
 Returns a numeric expression, rounded to the specified precision (''decimals''). {br}

'''Example:'''{{Round($CurrTot, 2)}}{br}

In this example, {{CurrTot}} is a report variable.
|- 
| '''Min(x, y)'''
| 
 Returns the smaller of two values. {br}

'''Example:'''{{Min($CurrTot, $CurrCompanyTot)}}{br}

In this example, {{CurrTot}} and {{CurrCompanyTot}} are report variables.
|- 
| '''Max(x, y)'''
| 
 Returns the greater of two values. {br}

'''Example:'''{{Max($CurrTot, $CurrCompanyTot)}}{br}

In this example, {{CurrTot}} and {{CurrCompanyTot}} are report variables
|- 
| '''Pow(x, ''power'')'''
| 
 Computes the value of x raised to the specified power (''power''). {br}

'''Example:'''{{Pow(([Contact.NoteID], 2))}}{br}

In this example, {{Contact.NoteID}} is an attribute from the database scheme.
|}
==Date and Time Functions==
The date and time functions, described below, perform operations on input values and return values of the following types: string, numeric, or date and time. Listed below are the string functions available in the ''Date/Time'' subnode of the ''Functions'' node in Expression Editor.
{| class="checklist" | width="100%" 
|- 
!width="27%" ! Function
!width="72%" ! Description and Examples
|- 
| '''DateAdd(''date'', ''interval'', ''number'')'''
| [anchor|#_1cb6b49b-825d-4dab-ab8e-cb70a77e8576]
Returns a new date that is calculated by adding the specified number (<tt>number</tt>) of time intervals (<tt>interval</tt>) to the date (<tt>date</tt>). The <tt>interval</tt> argument specifies the type of time interval and can be one of the following options: [anchor|#_8aed7987-e3e6-4475-ac95-5ad067fe5a43]
*''y'', ''yy'', ''yyyy'', or ''year'': The specified number (<tt>number</tt>) of years will be added to the specified date (<tt>date</tt>). 
*''m'', ''mm'', or ''month'': The specified number (<tt>number</tt>) of months will be added to the specified date (<tt>date</tt>).
*''d'', ''dd'', or ''day'': The specified number (<tt>number</tt>) of days will be added to the specified date (<tt>date</tt>).
*''h'', ''hh'', or ''hour'': The specified number (<tt>number</tt>) of hours will be added to the specified date (<tt>date</tt>).
*''n'', ''mi'', or ''minute'': The specified number (<tt>number</tt>) of minutes will be added to the specified date (<tt>date</tt>).
*''s'', ''ss'', or ''second'': The specified number (<tt>number</tt>) of seconds will be added to the specified date (<tt>date</tt>).
*''w'', ''ww'', ''wk'', or ''week'': The specified number (<tt>number</tt>) of weeks will be added to the specified date (<tt>date</tt>).
*''q'', ''qq'', or ''quarter'': The specified number (<tt>number</tt>) of quarters will be added to the specified date (<tt>date</tt>).
{br}

'''Examples:'''{br}

{{DateAdd($DueDate, 'm', -2)}}{br}

{{DateAdd(CDate('31/01/1995'), 'm', -2)}}{br}

{{DateAdd($DueDate, 'y', -2)}}{{DateAdd(Cdate($DueDate), 'd', -2)}}{br}

In these examples, {{DueDate}} is a report variable.
|- 
| '''DateDiff(''interval'', ''date1'', ''date2'')'''
| [anchor|#_3f3db95d-5a26-4aba-913a-7eec0388668e]
Returns the number of time intervals (<tt>interval</tt>) between the specified <tt>date1</tt> and <tt>date2</tt>. The number is an integer that can be positive or negative. (The description of the function also can be the following: returns the count (as a signed integer value) of the specified <tt>interval</tt> boundaries crossed between the specified <tt>date1</tt> and <tt>date2</tt>.) The <tt>interval</tt> argument, which specifies the type of time interval, can be one of the following options: [anchor|#_204624ea-70b9-4b16-9901-a618055cc84f]
*''y'', ''yy'', ''yyyy'', or ''year'': The specified number (<tt>number</tt>) of years will be added to the specified date (<tt>date</tt>). 
*''m'', ''mm'', or ''month'': The specified number (<tt>number</tt>) of months will be added to the specified date (<tt>date</tt>).
*''d'', ''dd'', or ''day'': The specified number (<tt>number</tt>) of days will be added to the specified date (<tt>date</tt>).
*''h'', ''hh'', or ''hour'': The specified number (<tt>number</tt>) of hours will be added to the specified date (<tt>date</tt>).
*''n'', ''mi'', or ''minute'': The specified number (<tt>number</tt>) of minutes will be added to the specified date (<tt>date</tt>).
*''s'', ''ss'', or ''second'': The specified number (<tt>number</tt>) of seconds will be added to the specified date (<tt>date</tt>).
*''w'', ''ww'', ''wk'', or ''week'': The specified number (<tt>number</tt>) of weeks will be added to the specified date (<tt>date</tt>).
*''q'', ''qq'', or ''quarter'': The specified number (<tt>number</tt>) of quarters will be added to the specified date (<tt>date</tt>).

|- 
| '''Day(''date'')'''
| 
Returns the day (as an integer) extracted from the specified date ({{date}}). {br}

'''Examples:'''{br}

{{Day([ARPayment.ClearDate])}}{br}

{{Day($DueDate)}}{{Day(Cdate($DueDate))}}{br}

{{Day(CDate('31/01/1995'))}}{br}

In these examples, {{DueDate}} is a report variable, and {{ARPayment.ClearDate}} is an attribute from the database scheme.
|- 
| '''DayOfWeek(''date'')'''
| 
Returns the day of the week associated with the specified date ({{date}}) as an integer. {br}

'''Examples:'''{br}

{{DayOfWeek([ARPayment.ClearDate])}}{br}

{{DayOfWeek($DueDate)}}{br}

{{DayOfWeek(Cdate($DueDate))}}{br}

{{DayOfWeek(CDate('31/01/1995'))}}{br}

In this example, {{DueDate}} is a report variable, and {{ARPayment.ClearDate}} is an attribute from the database scheme.
|- 
| '''DayOfYear(''date'')'''
| 
Returns the day of the year calculated for the specified date ({{date}}). {br}

'''Examples:'''{br}

{{DayOfYear([ARPayment.ClearDate])}}{br}

{{DayOfYear($DueDate)}}{br}

{{DayOfYear(Cdate($DueDate))}}{br}

{{DayOfYear(CDate('31/01/1995'))}}{br}

In these examples, {{DueDate}} is a report variable, and {{ARPayment.ClearDate}} is an attribute from the database scheme.
|- 
| '''DayOrdinal(''day'')'''
| [anchor|#_798ed2e0-61b3-4372-8219-34bad86e9d9f]
Converts the specified integer value (<tt>day</tt>) to a string that contains the ordinal number in the current locale. For example, for the English locale, the string contains the short form of the ordinal number, such as 1st or 2nd. For numbers that are less than 1 or greater than 31, the function returns an empty string.{br}

'''Example:'''{{DayOrdinal(1)}}
|- 
| '''Hour(''date'')'''
| 
Returns the number of hours extracted from the specified date ({{date}}). {br}

'''Examples:'''{br}

{{Hour([ARPayment.ClearDate])}}{br}

{{Hour($DueDate)}}{br}

{{Hour(Cdate($DueDate))}}{br}

In this example, {{DueDate}} is a report variable, and {{ARPayment.ClearDate}} is an attribute from the database scheme.
|- 
| '''Minute(''date'')'''
| 
Returns the number of minutes extracted from the specified date ({{date}}). {br}

'''Examples:'''{br}

{{Minute([ARPayment.ClearDate])}}{br}

{{Minute($DueDate)}}{br}

{{Minute(Cdate($DueDate))}}{br}

{{Minute(CDate('31/01/1995'))}}{br}

In this example, {{DueDate}} is a report variable, and {{ARPayment.ClearDate}} is an attribute from the database scheme.
|- 
| '''Month(''date'')'''
| 
Returns the month, as an integer, extracted from the specified date ({{date}}).{br}

'''Examples:'''{br}

{{=Month([ARPayment.ClearDate])}}{br}

{{=Month($DueDate)}}{{=Month(Cdate($DueDate))}}{br}

{{=Month(CDate('31/01/1995'))}}{br}

In this example, {{DueDate}} is a report variable, and {{ARPayment.ClearDate}} is an attribute from the database scheme.
|- 
| '''MonthName(''date'')'''
| [anchor|#_d106da1c-2e4b-47ae-9bea-c2656b2f4b5a]
Returns a string that contains the name of the month extracted from the specified date (<tt>date</tt>) in the current locale.{br}

'''Example:'''{{ <tt>MonthName(CDate('3/12/2018'))</tt>}}
|- 
|  '''Now()'''
| 
Returns the current date and time according to the system date and time settings on the local computer. {br}

'''Example:'''{{Now()}}
|- 
| '''NowUTC()'''
| [anchor|#_7c3fc25f-d5cb-4296-be58-73b0f6d9fe5d]
Returns the current date and time in the user&rsquo;s time zone. The system extracts the user&rsquo;s time zone from one of the following sources, which are ordered by priority from the highest to the lowest:[anchor|#_b0333391-7c97-4b64-98ef-b6cb42732b16]
#The time zone in the user&rsquo;s preferences, which is specified in the '''Time Zone''' box on the '''General Info''' tab of the [HelpRoot_GettingStarted\SM_20_30_10|User Profile] ([~/?ScreenId=SM203010|SM203010]) form.
#The employee calendar selected for the user in the '''Calendar''' box of the '''General Info''' tab of the [HelpRoot_FormReference\EP_20_30_00|Employees] ([~/?ScreenId=EP203000|EP203000]) form. (Work calendars are defined on the [HelpRoot_FormReference\CS_20_90_00|Work Calendar] ([~/?ScreenId=CS209000|CS209000]) form.)
#The time zone in the site preferences specified in the '''Login Time Zone''' box on the [HelpRoot_FormReference\SM_20_05_05|Site Preferences] ([~/?ScreenId=SM200505|SM200505]) form.
{br}

'''Example:'''{{NowUTC()}}
|- 
| '''Second(''date'')'''
| 
Returns the seconds extracted from the specified date ({{date}}) as an integer. {br}

'''Examples:'''{br}

{{Second([ARPayment.ClearDate])}}{br}

{{Second($DueDate)}}{{Second(Cdate($DueDate))}}{br}

{{Second(CDate('31/01/1995'))}}{br}

In this example, {{DueDate}} is a report variable, and {{ARPayment.ClearDate}} is an attribute from the database scheme.
|- 
| '''Today()'''
| 
Returns the current date according to the system date and time settings on the local computer.{br}

'''Example:'''{{Today()}}
|- 
| '''TodayUTC()'''
| [anchor|#_40703736-0a4b-40bc-be14-156391492cb9]
Returns the current date in the user&rsquo;s time zone. The system extracts the user&rsquo;s time zone from one of the following sources, which are ordered by priority from the highest to the lowest:[anchor|#_7ea55b0f-42fa-4e4e-bfbc-efa9eff61ee1]
#The time zone in the user&rsquo;s preferences, which is specified in the '''Time Zone''' box on the '''General Info''' tab of the [HelpRoot_GettingStarted\SM_20_30_10|User Profile] ([~/?ScreenId=SM203010|SM203010]) form.
#The employee calendar selected for the user in the '''Calendar''' box of the '''General Info''' tab of the [HelpRoot_FormReference\EP_20_30_00|Employees] ([~/?ScreenId=EP203000|EP203000]) form. (Work calendars are defined on the [HelpRoot_FormReference\CS_20_90_00|Work Calendar] ([~/?ScreenId=CS209000|CS209000]) form.)
#The time zone in the site preferences specified in the '''Login Time Zone''' box on the [HelpRoot_FormReference\SM_20_05_05|Site Preferences] ([~/?ScreenId=SM200505|SM200505]) form.
{br}

'''Example:'''{{TodayUTC()}}
|- 
| '''Year(''date'')'''
| 
Returns the year, as an integer, extracted from the specified date ({{date}}). {br}

'''Examples:'''{br}

{{Year([ARPayment.ClearDate])}}{br}

{{Year(Cdate($DueDate))}}{{Year($DueDate)}}{br}

{{Year(CDate('31/01/1995'))}}{br}

In these examples, {{DueDate}} is a report variable, and {{ARPayment.ClearDate}} is an attribute from the database scheme.
|}
==Shortcut Functions==
The shortcut functions perform miscellaneous operations. Listed below are the string functions available in the ''Math'' subnode of the ''Program Shortcut'' node in Expression Editor.
{| class="checklist" | width="100%" 
|- 
!width="28%" ! Function
!width="71%" ! Description and Examples
|- 
| '''Assign(''&rsquo;$name&rsquo;'', ''expression'')'''
| 
Assigns the result of the expression calculation to the variable specified as the parameter. The function can be used to assign a value to an existing variable, or a new variable can be created with the expression calculation value assigned to it.{br}

'''Example:'''{{Assign({{PrintDoc}}, (IsNull(&#91;RowARRegister.CustomerID&#93;)))}}{br}

In this example, {{PrintDoc}} is a report variable, and '''ARRegister.CustomerID''' is an attribute from the data scheme).
|- 
| '''Assign(''&rsquo;$name&rsquo;'', ''expression'', ''resetExpression'')'''
| 
 Assigns the result of the expression calculation to the variable specified as the parameter. The ''expression'' value is assigned to the variable when the variable is set, and the ''resetExpression'' defines when the variable value should be reset. The function can be used to assign a value to an existing variable, or a new variable can be created and the expression calculation value is assigned to it.{br}

'''Example:'''{{Assign(<nowiki>'PrintDoc'</nowiki>, (IsNull([ARRegister.CustomerID])), IsNull([APPayment.AdjFinPeriodID]))}}{br}

In this example, {{PrintDoc}} is a report variable, and '''ARRegister.CustomerID''' is an attribute from the database scheme).
|- 
| '''IIf(''expression'', ''truePart'', ''falsePart'')'''
| [anchor|#_0b285a56-9793-4b68-b8b4-81bf90192452]
Returns one of two values, depending on the evaluation of the expression: If the expression evaluates to <tt>True</tt>, the function returns the ''truePart'' value; otherwise, it returns the ''falsePart'' value.{br}

'''Example:'''{{IIf(($CurrTot-$CurrBal)<>0), CStr([ARRegister.DocBal]), 'No data available')}}{br}

In this example, {{CurrTot}} and {{CurrBal}} are report variables, and '''ARRegister.DocBal''' is an attribute from the database scheme.
|- 
| '''IsNull(''value'', ''nullValue'')'''
| [anchor|#_3e3ba6dc-dc94-4b2a-9f3d-5d7675285e75]
Returns ''nullValue'' if ''value'' is NULL; otherwise, returns ''value''. {br}

'''Example:'''{{IsNull($PrintDoc, 'NULL')}}{br}

In this example, {{PrintDoc}} is a report variable.
|- 
| '''NullIf(''value1'', ''value2'')'''
| [anchor|#_3002211b-d0f8-48f4-a3eb-a7136ac5d2fd]
Returns NULL if ''value1'' is equal to ''value2''.
|- 
| '''Switch(''expression&#95;1'', ''value&#95;1'', ''expression&#95;2'', ''value&#95;2'', ...)'''
| [anchor|#_addc4c8c-44b5-4c3e-87c1-6d5b53b459ca]
Returns the value (''value&#95;n'') that corresponds to the first expression (''expression&#95;n'') that evaluates to <tt>True</tt>. ''expression&#95;1'', ''expression&#95;2'', and so on are Boolean expressions. {br}

'''Example:'''{{Switch((($CurrTot-$CurrBal)<0), $CurrBal, (($CurrTot-$CurrBal)>0), $CurrTot)}}{br}

In this example, {{CurrTot}} and {{CurrBal}} are report variables.
|}
==Application-Specific Functions==
The application-specific functions are specific for the application in which you will run the report. That is why these functions are not listed the Expression Editor windows. You will need to enter these functions manually.{br}

The following table includes the application-specific functions available in Acumatica Report                         Designer.
{| class="checklist" | width="100%" 
|- 
!width="28%" ! Function
!width="71%" ! Description and Examples
|- 
| '''GetAPPaymentInfo(''accountCD, paymentMethodID, detailID, acctCD'')'''
| 
Returns the value of the specified AP payment attribute (''detailID'') for specific cash account (''accountCD''), payment method (''paymentMethodID''), and vendor (''acctCD''). The function returns the attribute value as it is specified in the '''Payment Instructions''' section on the '''Payment Settings''' tab of the [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000]) form.{br}

If the specified record is not available, the function returns an empty string.{br}

'''Example:'''{{Payments.GetAPPaymentInfo('102000','FEDWIRE','INSTRUCTIONS','V000213')}}
|- 
| '''GetARPaymentInfo(''accountCD, paymentMethodID, detailID, pMInstanceID'')'''
| 
 Returns the value of the specified AR payment attribute (''detailID'') for specific cash account (''accountCD''), payment method (''paymentMethodID''), and customer (''acctCD''). The function returns the attribute value as it is specified on the '''Payment Method Details''' tab of the [HelpRoot_FormReference\AR_30_30_10|Customer Payment Methods] ([~/?ScreenId=AR303010|AR303010]) form.{br}

If the specified record is not available, the function returns an empty string.{br}

'''Example:'''{{Payments.GetARPaymentInfo('102000','FEDWIRE','ACCOUNTNO','C0003163')}}
|- 
| '''GetRemitPaymentInfo(''accountCD, paymentMethodID, detailID'') '''
| 
 Returns the value of the specified payment attribute (''detailID'') for specific cash account (''accountCD''), payment method (''paymentMethodID''), and vendor or customer (''acctCD''). The function returns the attribute value as it is specified on the '''Remittance Settings''' tab of the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form.{br}

If the specified record is not available, the function returns an empty string.{br}

'''Example:'''{{Payments.GetRemitPaymentInfo('102000','FEDWIRE','ACCOUNTNO')}}
|}
==Related Articles==
*[HelpRoot_ReportingTools\Using_the_Expression_Editor|Using the Expression Editor]]]></column>
			<column name="PlainText"><![CDATA[Using Functions in Expressions Functions enable you to perform specific tasks that facilitate the processing of data 				for the reports. Many functions available in the Expression Editor window process 				the data and return the values you can use in reports.  To use functions in expressions, you can enter them manually in the expression 				editing area or select them from the list of functions provided by Expression 				Editor. You can use the following groups of functions in expressions. Type Conversion Functions The type conversion functions enable you to convert data from one data type to 				another. Listed below are the type conversion functions available in the 					 Conversion  subnode of the  Functions  node in Expression Editor. Function Description and Examples CBool(x) Converts the expression used as the function argument into a 									Boolean expression. Returns  False  if the 									Boolean value is 0; otherwise, returns  True .  Example: CBool($CurrCompanyTot - $CompanyTot) In this example,  CurrCompanyTot  and 										 CompanyTot  are report variables. CDate(x) Converts the expression used as the function argument into a 									value of the  Date  type. The argument should be a valid 									date expression according to the locale selected for the import 									or export scenario.  Example: CDate($DueDate - 1) In this example,  DueDate  is a report 									variable. CStr(x)  Converts the expression used as the function argument into a 									string. If the argument is  Null , the function 									returns a run-time error; otherwise, it returns a string.  Example: CStr($PrintDoc) Here,  PrintDoc  is a report variable. CDbl(x)  Converts the expression defined in the function argument into a 									value of the  Double  type.  Example: CDbl($CurrBal/$CurrTot) Here,  CurrBal  and  CurrTot  are 									report variables. CSng(x)  Converts the expression used as the function argument into a 									value of the  Single  type. If the expression has a value 									outside the acceptable range for the  Single  type, this 									function returns an error.  Example: CSng($StCycCurrTot/$CompanyTot) In this example,  StCycCurrTot  and 										 CompanyTot  are report variables. CDec(x)  Converts the expression used as the function argument into a 									value of the  Decimal  type.  Example: CDec($CompanyTot) In this example,  CompanyTot  is a report 									variable. CInt(x)  Converts the expression used as the function argument into a 									value of the  Integer  type.  Example: CInt([ARPayment.ExtRefNbr]) In this example,  ARPayment.ExtRefNbr  is an 									attribute from the database scheme. CShort(x)  Converts a numeric value to a value of the  Short  type.  Example: CShort([ARPayment.ImpRefNbr]) ARPayment.ImpRefNbr  is an attribute from the 									database scheme. CLong(x)  Converts a numeric value to a value of the  Long  type.  Example: CLong($CurrTot) In this example,  CurrTot  is a report 									variable. Aggregate Functions Aggregate functions perform a calculation on a set of values and return a single 				value. Listed below are the aggregate functions available in the  Aggregates  				subnode of the  Functions  node in Expression Editor. Function Description and Examples Avg( expression )  Returns the average of all non-null values of the specified 									expression.  Example: Avg($StCycAgeTot00, $StCycAgeTot01) In this example,  StCycAgeTot00  and 										 StCycAgeTot01  are report variables. Sum( expression )  Returns a sum of the values of the specified expression.  Example: Sum([ARInvoice.TaxTotal], $CurrTot) In this example,  ARInvoice.TaxTotal  is an 									attribute from the database scheme, and  CurrTot  									is a report variable. Count( expression )  Returns a count of the values from the specified expression.  Example: Count($AgeBal00, $AgeBal01) In this example,  AgeBal00  and 										 AgeBal01  are report variables. Max( expression )  Returns the maximum value from all non-null values of the 									specified expression.  Example: Max($CurrCompanyTot, $CompanyTot) In this example,  CurrCompanyTot  and 										 CompanyTot  are report variables. Min( expression )  Returns the minimum value from all non-null values of the 									specified expression.  Example: Min($CurrCompanyTot, $CompanyTot) In this example,  CurrCompanyTot  and 										 CompanyTot  are report variables. Next( expression )  Returns the next value (from the current one) in the specified 									expression.  Example: Next([ARInvoice.LineTotal],[ARInvoice.TaxTotal]) In this example,  ARInvoice.LineTotal  and 										 ARInvoice.TaxTotal  are attributes from the 									database scheme. Prev( expression )  Returns the previous value (from the current one) in the 									specified expression.  Example: Prev([ARInvoice.LineTotal],[ARInvoice.TaxTotal]) ARInvoice.LineTotal  and 										 ARInvoice.TaxTotal  are attributes from the 									database scheme. First( expression )  Returns the first value in the specified expression.  Example: First([ARInvoice.LineTotal],[ARInvoice.TaxTotal]) In this example,  ARInvoice.LineTotal  and 										 ARInvoice.TaxTotal  are attributes from the 									database scheme. Last( expression )  Returns the last value in the specified expression.  Example: Last([ARInvoice.LineTotal],[ARInvoice.TaxTotal]) In this example,  ARInvoice.LineTotal  and 										 ARInvoice.TaxTotal  are attributes from the 									database scheme. String Functions String functions, perform an operation on a string input value and return a string or 				numeric value. Listed below are the string functions available in the  Text  				subnode of the  Functions  node in Expression Editor. Function Description and Examples LTrim( string ) Removes all leading spaces or parsing characters from the 									specified character expression, or all leading 0 bytes from the 									specified binary expression.  Example: LTrim(CStr([Contact.LastName])) In this example,  Contact.LastName  is an 									attribute from the database scheme. RTrim( string )  Removes all trailing spaces or parsing characters from the 									specified character expression, or all trailing 0 bytes from the 									specified binary expression.  Example: RTrim(CStr([Contact.LastName])) In this example,  Contact.LastName  is an 									attribute from the database scheme. Trim( string ) Removes all trailing spaces or parsing characters from the 									specified character expression, or all trailing 0 bytes from the 									specified binary expression.  Example: Trim(CStr([Contact.FirstName]+[Contact.MidName]+[Contact.LastName])) In this example,  Contact.FirstName , 										 Contact.MidName , and 										 Contact.LastName  are attributes from the 									database scheme. Format( format, argument(s) ) Replaces the format item in a specified formatting string 										( format ) with the text equivalent of the arguments 										( arguments ).  Example: Format('Curr. Balance: . . . . . . . . {0:N}; Total 										Amount: . . . . . . . . {1:N}', $CurrBal, 										$CurrTot) In this example,  CurrBal  and 										 CurrBal  are report variables; 0 and 1 are 									specifiers indicating where the arguments will be inserted; C is 									the  currency  format specifier; and N is the  number  									format specifier. UCase( string ) Returns a string that has been converted to uppercase. The 										 string  argument is any valid string expression. If 										 string  contains  Null ,  Null  is returned.  Example: UCase(CStr([RowContact.MidName])) In this example,  RowContact.MidName  is an 									attribute from the database scheme. LCase( string )  Returns a string that has been converted to lowercase. The 										 string  argument is any valid string expression. If 										 string  contains  Null ,  Null  is returned.  Example: LCase(CStr([Contact.Email])) In this example,  Contact.Email  is an attribute 									from the database scheme. InStr( string ,  findString )  Returns the position of the first occurrence of one string 										( findString ) within another ( string ).  Example: InStr(CStr([Contact.Email]), '@') In this example,  Contact.Email  is an attribute 									from the database scheme. InStrRev( string ,  findString )  Returns the position of the last occurrence of one string 										( findString ) within another ( string ), starting 									from the right side of the string.  Example: InStrRev(CStr([Contact.Email]), '@') In this example,  Contact.Email  is an attribute 									from the database scheme. Len( string )  Returns an integer containing either the number of characters in 									a string or the nominal number of bytes required to store a 									variable.  Example: Len(CStr([Contact.Email])) In this example,  Contact.Email  is an attribute 									from the database scheme. Left( string ,  length )  Returns a string containing a specified number of characters 									from the left side of a string. If  string  contains 										 Null ,  Null  is returned.  Example: Left(CStr([Contact.Email]), 7) In this example,  Contact.Email  is an attribute from the 									database scheme. Right( string ,  length )  Returns a string containing a specified number of characters 									from the right side of a string. If  string  contains 										 Null ,  Null  is returned.  Example: Right(CStr([Contact.Email]), 10) In this example,  Contact.Email  is an attribute from the 									database scheme. Replace( string ,  oldValue , 								 newValue )  Returns a string in which a specified substring 									( oldValue ) has been replaced with another substring 										( newValue ).  Example: Replace(CStr([Contact.Email]), '@.', 										'@') In this example,  Contact.Email  is an attribute from the 									database scheme. PadLeft( string ,  width , 								 paddingChar )  Right-aligns the characters in a specified string 									( string ), padding with the specified characters 										( paddingChar ) on the left for a specified total width 										( width ).  Example: PadLeft(CStr([Contact.Email]), 7, '@') In this example,  Contact.Email  is an attribute from the 									database scheme. PadRight( string ,  width , 								 paddingChar )  Left-aligns the characters in a specified string 									( string ), padding with the specified characters 										( paddingChar ) on the right for a specified total 									width ( width ).  Example: PadRight(CStr([Contact.Email]), 10, 										'@') In this example,  Contact.Email  is an attribute from the 									data scheme. Mathematical Functions Mathematical functions perform calculations, usually based on input values provided 				as arguments, and return numeric values. Listed below are the mathematical functions 				available in the  Math  subnode of the  Functions  node in Expression 				Editor. Function Description and Examples Abs(x)  Returns the absolute value of a number.  Example: Abs($CurrBal - $CurrTot) In this example,  CurrBal  and 										 CurrTot  are the report variables. Floor(x)  Returns the largest integer that is not greater than the 									argument.  Example: Floor([Contact.NoteID]) In this example,  Contact.NoteID  is an attribute 									from the database scheme. Ceiling(x)  Returns the smallest integer that is not less than the argument.  Example: Ceiling([Contact.NoteID]) In this example,  Contact.NoteID  is an attribute 									from the database scheme. Round(x,  decimals )  Returns a numeric expression, rounded to the specified precision 										( decimals ).  Example: Round($CurrTot, 2) In this example,  CurrTot  is a report 									variable. Min(x, y)  Returns the smaller of two values.  Example: Min($CurrTot, $CurrCompanyTot) In this example,  CurrTot  and 										 CurrCompanyTot  are report variables. Max(x, y)  Returns the greater of two values.  Example: Max($CurrTot, $CurrCompanyTot) In this example,  CurrTot  and 										 CurrCompanyTot  are report variables Pow(x,  power )  Computes the value of x raised to the specified power 										( power ).  Example: Pow(([Contact.NoteID], 2)) In this example,  Contact.NoteID  is an attribute 									from the database scheme. Date and Time Functions The date and time functions, described below, perform operations on input values and return 				values of the following types: string, numeric, or date and time. Listed below are 				the string functions available in the  Date/Time  subnode of the 					 Functions  node in Expression Editor. Function Description and Examples DateAdd( date ,  interval ,  number ) Returns a new date that is calculated by adding the             specified number ( number ) of time intervals                 ( interval ) to the date ( date ). The                  interval  argument specifies the type of time interval and can be             one of the following options:  y ,  yy ,  yyyy , or  year : The specified number                         ( number ) of years will be added to the specified date                         ( date ).  m ,  mm , or  month : The specified number                         ( number ) of months will be added to the specified date                         ( date ). d ,  dd , or  day : The specified number                         ( number ) of days will be added to the specified date                         ( date ). h ,  hh , or  hour : The specified number                         ( number ) of hours will be added to the specified date                         ( date ). n ,  mi , or  minute : The specified number                         ( number ) of minutes will be added to the specified date                         ( date ). s ,  ss , or  second : The specified number                         ( number ) of seconds will be added to the specified date                         ( date ). w ,  ww ,  wk , or  week : The specified number                         ( number ) of weeks will be added to the specified date                         ( date ). q ,  qq , or  quarter : The specified number                         ( number ) of quarters will be added to the specified date                         ( date ). Examples: DateAdd($DueDate, 'm', -2) DateAdd(CDate('31/01/1995'), 'm', 										-2) DateAdd($DueDate, 'y', -2) DateAdd(Cdate($DueDate), 'd', -2) In these examples,  DueDate  is a report 									variable. DateDiff( interval ,  date1 , 								 date2 ) Returns the number of time intervals                 ( interval ) between the specified  date1  and                  date2 . The number is an integer that can be positive or negative.             (The description of the function also can be the following: returns the count (as a             signed integer value) of the specified  interval  boundaries crossed             between the specified  date1  and  date2 .) The                  interval  argument, which specifies the type of time interval, can             be one of the following options:  y ,  yy ,  yyyy , or  year : The specified number                         ( number ) of years will be added to the specified date                         ( date ).  m ,  mm , or  month : The specified number                         ( number ) of months will be added to the specified date                         ( date ). d ,  dd , or  day : The specified number                         ( number ) of days will be added to the specified date                         ( date ). h ,  hh , or  hour : The specified number                         ( number ) of hours will be added to the specified date                         ( date ). n ,  mi , or  minute : The specified number                         ( number ) of minutes will be added to the specified date                         ( date ). s ,  ss , or  second : The specified number                         ( number ) of seconds will be added to the specified date                         ( date ). w ,  ww ,  wk , or  week : The specified number                         ( number ) of weeks will be added to the specified date                         ( date ). q ,  qq , or  quarter : The specified number                         ( number ) of quarters will be added to the specified date                         ( date ). Day( date ) Returns the day (as an integer) extracted from the specified date 										( date ).  Examples: Day([ARPayment.ClearDate]) Day($DueDate) Day(Cdate($DueDate)) Day(CDate('31/01/1995')) In these examples,  DueDate  is a report variable, 									and  ARPayment.ClearDate  is an attribute from 									the database scheme. DayOfWeek( date ) Returns the day of the week associated with the specified date 										( date ) as an integer.  Examples: DayOfWeek([ARPayment.ClearDate]) DayOfWeek($DueDate) DayOfWeek(Cdate($DueDate)) DayOfWeek(CDate('31/01/1995')) In this example,  DueDate  is a report variable, 									and  ARPayment.ClearDate  is an attribute from 									the database scheme. DayOfYear( date ) Returns the day of the year calculated for the specified date 										( date ).  Examples: DayOfYear([ARPayment.ClearDate]) DayOfYear($DueDate) DayOfYear(Cdate($DueDate)) DayOfYear(CDate('31/01/1995')) In these examples,  DueDate  is a report variable, 									and  ARPayment.ClearDate  is an attribute from 									the database scheme. DayOrdinal( day ) Converts the specified integer value                 ( day ) to a string that contains the ordinal number in the current             locale. For example, for the English locale, the string contains the short form of the             ordinal number, such as 1st or 2nd. For numbers that are less than 1 or greater than 31,             the function returns an empty string. Example: DayOrdinal(1) Hour( date ) Returns the number of hours extracted from the specified date 										( date ).  Examples: Hour([ARPayment.ClearDate]) Hour($DueDate) Hour(Cdate($DueDate)) In this example,  DueDate  is a report variable, 									and  ARPayment.ClearDate  is an attribute from 									the database scheme. Minute( date ) Returns the number of minutes extracted from the specified date 										( date ).  Examples: Minute([ARPayment.ClearDate]) Minute($DueDate) Minute(Cdate($DueDate)) Minute(CDate('31/01/1995')) In this example,  DueDate  is a report variable, 									and  ARPayment.ClearDate  is an attribute from 									the database scheme. Month( date ) Returns the month, as an integer, extracted from the specified 									date ( date ). Examples: =Month([ARPayment.ClearDate]) =Month($DueDate) =Month(Cdate($DueDate)) =Month(CDate('31/01/1995')) In this example,  DueDate  is a report variable, 									and  ARPayment.ClearDate  is an attribute from 									the database scheme. MonthName( date ) Returns a string that contains the name of the month             extracted from the specified date ( date ) in the current locale. Example: MonthName(CDate('3/12/2018')) Now() Returns the current date and time according to the system date 									and time settings on the local computer.  Example: Now() NowUTC() Returns the current date and time in the user's time             zone. The system extracts the user's time zone from one of the following sources, which             are ordered by priority from the highest to the lowest: The time zone in the user's preferences, which is specified in the                          Time Zone  box on the  General                         Info  tab of the   ([~/?ScreenId=SM203010|SM203010]) User Profile                     (SP203010) form. The employee calendar selected for the user in the                          Calendar  box of the  General                         Info  tab of the   ([~/?ScreenId=EP203000|EP203000]) Employees (EP203000) form. (Work calendars are defined on the   ([~/?ScreenId=CS209000|CS209000]) Work Calendar (CS209000)                     form.) The time zone in the site preferences specified in the  Login Time                         Zone  box on the   ([~/?ScreenId=SM200505|SM200505]) Site Preferences                     (SM200505) form. Example: NowUTC() Second( date ) Returns the seconds extracted from the specified date 										( date ) as an integer.  Examples: Second([ARPayment.ClearDate]) Second($DueDate) Second(Cdate($DueDate)) Second(CDate('31/01/1995')) In this example,  DueDate  is a report variable, 									and  ARPayment.ClearDate  is an attribute from 									the database scheme. Today() Returns the current date according to the system date and time 									settings on the local computer. Example: Today() TodayUTC() Returns the current date in the user's time zone. The             system extracts the user's time zone from one of the following sources, which are             ordered by priority from the highest to the lowest: The time zone in the user's preferences, which is specified in the                          Time Zone  box on the  General                         Info  tab of the   ([~/?ScreenId=SM203010|SM203010]) User Profile                     (SP203010) form. The employee calendar selected for the user in the                          Calendar  box of the  General                         Info  tab of the   ([~/?ScreenId=EP203000|EP203000]) Employees (EP203000) form. (Work calendars are defined on the   ([~/?ScreenId=CS209000|CS209000]) Work Calendar (CS209000)                     form.) The time zone in the site preferences specified in the  Login Time                         Zone  box on the   ([~/?ScreenId=SM200505|SM200505]) Site Preferences                     (SM200505) form. Example: TodayUTC() Year( date ) Returns the year, as an integer, extracted from the specified date 									( date ).  Examples: Year([ARPayment.ClearDate]) Year(Cdate($DueDate)) Year($DueDate) Year(CDate('31/01/1995')) In these examples,  DueDate  is a report variable, 									and  ARPayment.ClearDate  is an attribute from 									the database scheme. Shortcut Functions The shortcut functions perform miscellaneous operations. Listed below are the string 				functions available in the  Math  subnode of the  Program Shortcut  node 				in Expression Editor. Function Description and Examples Assign( '$name' ,  expression ) Assigns the result of the expression calculation to the variable 									specified as the parameter. The function can be used to assign a 									value to an existing variable, or a new variable can be created 									with the expression calculation value assigned to it. Example: Assign( PrintDoc , 										(IsNull([RowARRegister.CustomerID]))) In this example,  PrintDoc  is a report variable, 									and  ARRegister.CustomerID  is an attribute from the data 									scheme). Assign( '$name' ,  expression , 									 resetExpression )  Assigns the result of the expression calculation to the variable 									specified as the parameter. The  expression  value is 									assigned to the variable when the variable is set, and the 										 resetExpression  defines when the variable value 									should be reset. The function can be used to assign a value to 									an existing variable, or a new variable can be created and the 									expression calculation value is assigned to it. Example: Assign(<nowiki>'PrintDoc'</nowiki>, 										(IsNull([ARRegister.CustomerID])), 										IsNull([APPayment.AdjFinPeriodID])) In this example,  PrintDoc  is a report variable, 									and  ARRegister.CustomerID  is an attribute from the 									database scheme). IIf( expression ,  truePart , 								 falsePart ) Returns one of two values, depending on the evaluation of the expression: If the expression evaluates to  True , the function returns the  truePart  value; otherwise, it returns the  falsePart  value. Example: IIf(($CurrTot-$CurrBal)<>0), 										CStr([ARRegister.DocBal]), 'No data 										available') In this example,  CurrTot  and 										 CurrBal  are report variables, and 										 ARRegister.DocBal  is an attribute from the database 									scheme. IsNull( value ,  nullValue ) Returns  nullValue  if  value  is NULL;             otherwise, returns  value .  Example: IsNull($PrintDoc, 'NULL') In this example,  PrintDoc  is a report 									variable. NullIf( value1 ,  value2 ) Returns NULL if  value1  is equal to  value2 . Switch( expression_1 ,  value_1 ,  expression_2 , 										 value_2 , ...) Returns the value ( value_n ) that corresponds to the first expression ( expression_n ) that evaluates to  True .  expression_1 ,  expression_2 , and so on are Boolean expressions.  Example: Switch((($CurrTot-$CurrBal)<0), $CurrBal, 										(($CurrTot-$CurrBal)>0), $CurrTot) In this example,  CurrTot  and 										 CurrBal  are report variables. Application-Specific Functions The application-specific functions are specific for the application in which you will 				run the report. That is why these functions are not listed the Expression Editor 				windows. You will need to enter these functions manually. The following table includes the application-specific functions available in  Acumatica Report                         Designer. Function Description and Examples GetAPPaymentInfo( accountCD, paymentMethodID, detailID, 										acctCD ) Returns the value of the specified AP payment attribute 										( detailID ) for specific cash account 										( accountCD ), payment method ( paymentMethodID ), 									and vendor ( acctCD ). The function returns the attribute 									value as it is specified in the  Payment 										Instructions  section on the  Payment 										Settings  tab of the   ([~/?ScreenId=AP303000|AP303000]) Vendors (AP303000) 									form. If the specified record is not available, the function returns an 									empty string. Example: Payments.GetAPPaymentInfo('102000','FEDWIRE','INSTRUCTIONS','V000213') GetARPaymentInfo( accountCD, paymentMethodID, detailID, 										pMInstanceID )  Returns the value of the specified AR payment attribute 										( detailID ) for specific cash account 										( accountCD ), payment method ( paymentMethodID ), 									and customer ( acctCD ). The function returns the attribute 									value as it is specified on the  Payment Method 										Details  tab of the   ([~/?ScreenId=AR303010|AR303010]) Customer Payment Methods (AR303010) 									form. If the specified record is not available, the function returns an 									empty string. Example: Payments.GetARPaymentInfo('102000','FEDWIRE','ACCOUNTNO','C0003163') GetRemitPaymentInfo( accountCD, paymentMethodID, 										detailID )   Returns the value of the specified payment attribute 										( detailID ) for specific cash account 										( accountCD ), payment method ( paymentMethodID ), 									and vendor or customer ( acctCD ). The function returns the 									attribute value as it is specified on the  Remittance 										Settings  tab of the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) 									form. If the specified record is not available, the function returns an 									empty string. Example: Payments.GetRemitPaymentInfo('102000','FEDWIRE','ACCOUNTNO') ]]></column>
		</row>
		<row PageID="ab1bd202-de70-456d-811c-4d3295f7e003" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="bc12ab21-af81-4938-787b-0835ddc2d78f" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The report content includes visual elements that can contain text, data, and graphics. The visual elements are placed within the report sections, and their appearance and behavior properties are determined by both the properties of the visual elements themselves and the properties of their report section. Adding content to the report generally involves three steps: adding visual elements to the report, linking them with the data to be displayed in the report, and setting the visual elements&rsquo; properties. 
==In This Section==
The following articles cover the types of content you can add: 
*[HelpRoot_ReportingTools\Adding_a_Text_Box_to_the_Report_Section|Adding a Text Box to the Report Section]
*[HelpRoot_ReportingTools\Adding_a_Picture_Box_to_the_Report_Section|Adding a Picture Box to the Report Section]
*[HelpRoot_ReportingTools\Adding_a_Panel_to_the_Report_Section|Adding a Panel to the Report Section]
*[HelpRoot_ReportingTools\Adding_a_Line_to_the_Report_Section|Adding a Line to the Report Section]
*[HelpRoot_ReportingTools\Adding_graphics_on_the_report|Adding Graphics on the Report]
*[HelpRoot_ReportingTools\Adding_a_Subreport_to_the_Report|Adding a Subreport to the Report]
]]></column>
			<column name="PlainText"><![CDATA[Creating the Report Content The report content includes visual elements that can contain text, data, and                 graphics. The visual elements are placed within the report sections, and their                 appearance and behavior properties are determined by both the properties of the                 visual elements themselves and the properties of their report section. Adding                 content to the report generally involves three steps: adding visual elements to the                 report, linking them with the data to be displayed in the report, and setting the                 visual elements' properties.  In This Section The following articles cover the types of content you can add:  Adding a                         Text Box to the Report Section Adding a Text Box to the Report SectionAdding a Picture Box to the Report Section Adding a Picture Box to the Report SectionAdding a                         Panel to the Report Section Adding a Panel to the Report SectionAdding a                         Line to the Report Section Adding a Line to the Report SectionAdding Graphics on                         the Report Adding Graphics on the ReportAdding a                         Subreport to the Report Adding a Subreport to the Report]]></column>
		</row>
		<row PageID="d7d899b9-ee0b-423f-907f-852d24176387" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="f510c0c3-1d54-216b-7cc6-f294d141a7ad" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Text boxes are used to display text or data in the report. Descriptive captions (labels) and data items are placed within the text boxes. The text to be displayed on the label and the data to be displayed in the text box are defined by the '''Value''' property of the ''TextBox'' visual element. To display a label in the text box, enter the label text in the '''Value''' property on the '''Properties''' tab. To retrieve data from the database, the text boxes use expressions that include the links to the data from the data scheme. (For more details, see [HelpRoot_ReportingTools\Using_Expressions|Using Expressions].) {br}

To add a text box to the report section and define it appropriately, perform the following steps: [anchor|#_f3192731-c6aa-4dd6-870f-89504d321ed5]
#Add the ''TextBox'' visual element to the report section, and position it in the desired location. [HelpRoot_ReportingTools\Adding_and_Removing_Visual_Elements_in_the_Report|Adding and Removing Visual Elements in the Report] describes how to add visual elements.
#Change the name of the text box if necessary ('''Name''' on the '''Properties''' tab).
#Define the text box&rsquo;s properties on the '''Properties''' tab, as described in the remainder of this article.
{br}{TOC}
==Defining the Appearance Properties of the Text Box==
Use the following properties, found in the '''Appearance''' group on the '''Properties''' tab, to define the appearance of the text box. 
===Appearance Properties===
{| class="checklist" | width="100%" 
|- 
!width="16%" ! Property
!width="83%" ! Description
|- 
| '''Format'''
|  The format of the data in the text box. You can use the '''Expression Editor''' dialog to define the data format; for more information, see [HelpRoot_ReportingTools\Using_the_Expression_Editor|Using the Expression Editor].
|- 
| rowspan="10" | '''Style'''
|  The printing style for the text box, set by the the following values:
|- 
| '''BackColor''': The background color for the text box.
|- 
| '''BackImage''': The background image settings for the text box. Enter desired values for the following: 
*'''BarCode Type''': The required bar code type, selected from the drop-down list with a restricted quantity of bar code types.
*'''Source '''- The source of the image.
*'''Image''': The specific image to be used as the background: 
**For an embedded image, select the image name.
**For an external image, enter the path to the image file.
**For an image retrieved from the database, in the '''Image''' box, enter the name of the data field where the image is stored. For example, <tt>=&#91;Branch.LogoName&#93;</tt> to display background image that can be defined separately for each branch.
*'''Repeat''': The appropriate value specifying the repeating pattern for the chosen image: 
**''NoRepeat'': Adds the specified image with no repeating
**''RepeatX'': Repeats the image horizontally to fill the width of the report section
**''RepeatY'': Repeats the image vertically to fill the height of the report section
**''Repeat'': Repeats the image horizontally and vertically to fill both the width and height of the report section

|- 
| '''BorderColor''': The border color of the text box. You can define the color for the bottom, left, right, and top border, and set the default border color, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderStyle''': The border line style for the text box. You can define the style for the bottom, left, right, and top border of the text box, and set the default border style, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderWidth''': The border line width for the text box (in pixels). You can define the width of the bottom, left, right, and top border of the text box, and set the default border width, which will be applied if no special settings are defined for the specific borders.
|- 
| '''Font''': The font settings for the text box. You can select the font name and size and specify whether the following font attributes are applied: bold, italic, strikeout, and underline.
|- 
| '''Padding''': The padding setting for the text box, which you can specify in pixels for the left side, right side, top, and bottom of the text box.
|- 
| '''TextAlign''': The text alignment for the text box: ''Left'', ''Center'', ''Right'', or ''Not Set''.
|- 
| '''VerticalAlign''': The content vertical alignment for the text box: ''Not Set'', ''Top'', ''Middle'', or ''Bottom''.
|- 
| '''StyleName'''
|  The name of the style defined for the text box. To assign a descriptive name to a style you have defined for a text box, enter the name. To apply an existing style to the text box, select its name.
|- 
| '''Value'''
|  The value to be displayed in the text box. Enter the text here if the text box will display a data label in the report, or use the '''Expression Editor''' dialog to define the value to be displayed in the text box.
|- 
| '''WrapText'''
|  The text wrapping for the text box. To wrap the text across a text box, set this value to ''True''.
|}
==Defining the Behavior Properties of the Text Box==
The following properties, found in the '''Behavior''' group on the '''Properties''' tab, let you define the data processing order, navigation settings, and visibility settings of the text box. 
===Behavior Properties===
{| class="checklist" | width="100%" 
|- 
!width="24%" ! Property
!width="75%" ! Description
|- 
| '''ConvertHtmlToText'''
|  A setting that defines whether the data within the text box must be converted to the plain text format. This property is used if a field value may contain formulas with tags.
|- 
| '''ExcelCaption'''
|  A setting that is used to export a report to Excel when an original report&rsquo;s structure is rather complicated. In such cases, distortions of the Excel format report can take place. Export to Excel becomes simpler if both this and the '''ExcelColumn''' property is defined (see the next item below) for each data field that is to be exported; the other data fields are not exported to Excel. The '''ExcelCaption''' property defines column&rsquo;s caption.
|- 
| '''ExcelColumn'''
|  A setting that is used to export a report to Excel when an original report&rsquo;s structure is rather complicated. Export to Excel becomes simpler if both this and the '''ExcelCaption''' property is defined (see the previous item) for each data field that is to be exported; the other data fields are not exported to Excel. The '''ExcelColumn''' property defines the Excel column to which data from the field is to be entered after the export process is done.
|- 
| '''Multiline'''
|  A setting that defines whether the data within the text box can be displayed in multiple lines.
|- 
| '''NavigateMethod'''
|  The navigation method for the text box. This setting is used if navigation to a URL should be performed when the user clicks the value displayed in the text box. To use the client for navigation, select ''Client''. To use the server for navigation, select ''Server''.
|- 
| '''NavigateParams'''
|  The navigation parameters for the text box, which are used if navigation to a different URL should be performed. To define these parameters, click the button in the box displaying the parameter collection name, and use the External Parameter Collection Editor to define the set of parameters and their values. (For more details, see [HelpRoot_ReportingTools\Using_the_External_Parameter_Collection_Editor|Using the External Parameter Collection Editor].)((({S:Warn}You can add navigation link to another report by selecting the name of the external report file in the '''NavigateReport''' field. To set up this navigation, use parameters, selected in the '''NavigateMethod''' and '''NavigateParams''' collection. All parameters of the linked report should be properly selected or filled in manually. Be careful, the names and types of parameters in this collection must match the names and types of parameters of the selected report. For more information, see: [HelpRoot_ReportingTools\Using_the_External_Parameter_Collection_Editor|Example: Adding Link to Another Report].
)))
|- 
| '''NavigateURL'''
|  The URL for navigation, used if navigation should be performed when the user clicks the value displayed in the text box of the report in browser view, the report exported to Excel or PDF file.((({S:Warn}The exported PDF and Excel files can only support external links, such as [https://www.google.com/|https://www.google.com/], and the '''NavigateMethod''' should be set to ''Client''.
)))
|- 
| '''ProcessOrder'''
|  The processing order for the data associated with the text box, which defines when the expression value is calculated: 
*To process the data while reading, select ''WhileRead''.
*To process the data while printing, select ''WhilePrint''.
*To process the data while reading and printing, select ''Always''.

|- 
| '''Target'''
|  The command or application to be invoked when the user clicks the value within the text box.
|- 
| '''Visible'''
|  The text box&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) visual elements are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the text box visibility property. This value overrides the '''Visible''' property value if it was set explicitly.
|}
==Defining the Layout Properties of the Text Box==
Use the following group of properties to define the position of the text box on the report page. 
===Layout Properties===
{| class="checklist" | width="100%" 
|- 
!width="15%" ! Property
!width="84%" ! Description
|- 
| '''CanGrow'''
|  An option that defines whether the text box size can grow if the text or data does not fit into its current size.
|- 
| '''CanShrink'''
|  An option that defines whether the text box size can shrink to fit the size of the text box content.
|- 
| '''Location'''
|  The position of the text box on the report page (in pixels). The '''Location''' values include the horizontal (''x'') and vertical (''y'') coordinates of the text box on the page.
|- 
| '''Size'''
|  The size of the text box (in pixels). The '''Size''' values include the width and height of the text box.
|}]]></column>
			<column name="PlainText"><![CDATA[Adding a Text Box to the Report Section Text boxes are used to display text or data in the report. Descriptive captions 				(labels) and data items are placed within the text boxes. The text to be displayed 				on the label and the data to be displayed in the text box are defined by the 					 Value  property of the  TextBox  visual element. To display a label 				in the text box, enter the label text in the  Value  property on the 					 Properties  tab. To retrieve data from the database, the text boxes use 				expressions that include the links to the data from the data scheme. (For more 				details, see  Using 					Expressions Using Expressions.)  To add a text box to the report section and define it appropriately, perform the 				following steps:  Add the  TextBox  visual element to the report section, and position it in 					the desired location.  Adding and Removing Visual Elements in the Report Adding and Removing Visual Elements in the Report describes how to 					add visual elements. Change the name of the text box if necessary ( Name  on the 						 Properties  tab). Define the text box's properties on the  Properties  tab, as described in 					the remainder of this article. Defining the Appearance Properties of the Text Box Use the following properties, found in the  Appearance  group on the  Properties  				tab, to define the appearance of the text box.  Appearance Properties Property Description Format  The format of the data in the text box. You can use the  Expression Editor  								dialog to define the data format; for more information, see  Using the 									Expression Editor Using the Expression Editor. Style  The printing style for the text box, set by the the following values: BackColor : The background color for the text box. BackImage : The background image settings for the text box. 								Enter desired values for the following:  BarCode Type : The required bar code type, selected 										from the drop-down list with a restricted quantity of bar 										code types. Source  - The source of the image. Image : The specific image to be used as the 										background:  For an embedded image, select the image name. For an external image, enter the path to the image 												file. For an image retrieved from the database, in the  Image  box, 												enter the name of the data field where the image is 												stored. For example, 												 =[Branch.LogoName]  to 												display background image that can be defined 												separately for each branch. Repeat : The appropriate value specifying the 										repeating pattern for the chosen image:  NoRepeat : Adds the specified image with no 												repeating RepeatX : Repeats the image horizontally to 												fill the width of the report section RepeatY : Repeats the image vertically to fill 												the height of the report section Repeat : Repeats the image horizontally and 												vertically to fill both the width and height of the 												report section BorderColor : The border color of the text box. You can define 								the color for the bottom, left, right, and top border, and set the 								default border color, which will be applied if no special settings 								are defined for the specific borders. BorderStyle : The border line style for the text box. You can 								define the style for the bottom, left, right, and top border of the 								text box, and set the default border style, which will be applied if 								no special settings are defined for the specific borders. BorderWidth : The border line width for the text box (in 								pixels). You can define the width of the bottom, left, right, and 								top border of the text box, and set the default border width, which 								will be applied if no special settings are defined for the specific 								borders. Font : The font settings for the text box. You can select the 								font name and size and specify whether the following font attributes 								are applied: bold, italic, strikeout, and underline. Padding : The padding setting for the text box, which you can 								specify in pixels for the left side, right side, top, and bottom of 								the text box. TextAlign : The text alignment for the text box:  Left , 									 Center ,  Right , or  Not Set . VerticalAlign : The content vertical alignment for the text 								box:  Not Set ,  Top ,  Middle , or 								 Bottom . StyleName  The name of the style defined for the text box. To assign a 								descriptive name to a style you have defined for a text box, enter 								the name. To apply an existing style to the text box, select its 								name. Value  The value to be displayed in the text box. Enter the text here 								if the text box will display a data label in the report, or use the 									 Expression Editor  dialog to define the value to be 								displayed in the text box. WrapText  The text wrapping for the text box. To wrap the text across a 								text box, set this value to  True . Defining the Behavior Properties of the Text Box The following properties, found in the  Behavior  group on the  Properties  tab, let 				you define the data processing order, navigation settings, and visibility settings 				of the text box.  Behavior Properties Property Description ConvertHtmlToText  A setting that defines whether the data within the text box must 								be converted to the plain text format. This property is used if a 								field value may contain formulas with tags. ExcelCaption  A setting that is used to export a report to Excel when an 								original report's structure is rather complicated. In such cases, 								distortions of the Excel format report can take place. Export to 								Excel becomes simpler if both this and the  ExcelColumn  								property is defined (see the next item below) for each data field 								that is to be exported; the other data fields are not exported to 								Excel. The  ExcelCaption  property defines column's 								caption. ExcelColumn  A setting that is used to export a report to Excel when an 								original report's structure is rather complicated. Export to Excel 								becomes simpler if both this and the  ExcelCaption  property is 								defined (see the previous item) for each data field that is to be 								exported; the other data fields are not exported to Excel. The 									 ExcelColumn  property defines the Excel column to which 								data from the field is to be entered after the export process is 								done. Multiline  A setting that defines whether the data within the text box can 								be displayed in multiple lines. NavigateMethod  The navigation method for the text box. This setting is used if 								navigation to a URL should be performed when the user clicks the 								value displayed in the text box. To use the client for navigation, 								select  Client . To use the server for navigation, select 									 Server . NavigateParams  The navigation parameters for the text box, which are used if navigation to a 								different URL should be performed. To define these parameters, click 								the button in the box displaying the parameter collection name, and 								use the External Parameter Collection Editor to define the set of 								parameters and their values. (For more details, see  Using the External Parameter Collection 									Editor Using the External Parameter Collection Editor.) You can add navigation link to another 									report by selecting the name of the external report file in the 										 NavigateReport  field. To set up this 									navigation, use parameters, selected in the 										 NavigateMethod  and 										 NavigateParams  collection. All 									parameters of the linked report should be properly selected or 									filled in manually. Be careful, the names and types of 									parameters in this collection must match the names and types of 									parameters of the selected report. For more information, see: 										 Example: Adding Link to Another 								Report Example: Adding Link to Another Report. NavigateURL  The URL for navigation, used if navigation should be performed when the user clicks 								the value displayed in the text box of the report in browser view, 								the report exported to Excel or PDF file. The exported PDF and 									Excel files can only support external links, such as  https://www.google.com/ https://www.google.com/, and the 										 NavigateMethod  should be set to 										 Client . ProcessOrder  The processing order for the data associated with the text box, 								which defines when the expression value is calculated:  To process the data while reading, select 										 WhileRead . To process the data while printing, select 										 WhilePrint . To process the data while reading and printing, select 											 Always . Target  The command or application to be invoked when the user clicks 								the value within the text box. Visible  The text box's visibility property ( False  or 								 True ). The invisible (hidden) visual elements are not printed 								in the report. VisibleExpr  The expression that calculates the text box visibility property. 								This value overrides the  Visible  property value if it was set 								explicitly. Defining the Layout Properties of the Text Box Use the following group of properties to define the position of the text box on the 				report page.  Layout Properties Property Description CanGrow  An option that defines whether the text box size can grow if the 								text or data does not fit into its current size. CanShrink  An option that defines whether the text box size can shrink to 								fit the size of the text box content. Location  The position of the text box on the report page (in pixels). The 									 Location  values include the horizontal ( x ) and 								vertical ( y ) coordinates of the text box on the page. Size  The size of the text box (in pixels). The  Size  values 								include the width and height of the text box. ]]></column>
		</row>
		<row PageID="9d8fd42e-67aa-4ab1-b03f-d089be8c9dbe" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="28f8ec2c-1c07-aa8a-5651-76381b393ac7" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Picture boxes are used to display graphical elements in the report. These graphics can be selected from the set of embedded images, retrieved from the external sources, or selected from the database. {br}

To add a picture box to the report section and define it appropriately, proceed as follows: [anchor|#_60ef9cad-0633-4166-9783-d1bec11c91db]
#Add the ''PictureBox'' visual element to the report section, and position it in the desired location. The ''[HelpRoot_ReportingTools\Adding_and_Removing_Visual_Elements_in_the_Report|Adding and Removing Visual Elements in the Report]'' article describes how to add visual elements.
#Change the name of the picture box if necessary ('''Name''' on the '''Properties''' tab).
#Define the picture box&rsquo;s properties on the '''Properties''' tab, as described in this article. 
{br}{TOC}
==Defining the Appearance Properties of a Picture Box==
Use the following properties, found in the '''Appearance''' group on the '''Properties''' tab, to define the appearance of the picture box. 
===Appearance Properties===
{| class="checklist" | width="100%" 
|- 
!width="12%" ! Property
!width="87%" ! Description
|- 
| rowspan="10" | '''Style'''
|  The printing style for the picture box, set by the following values: 
|- 
| '''BackColor''': The background color for the picture box.
|- 
| '''BackImage''': The background image settings for the picture box. Enter desired values for: 
*'''Source''': The source of the image.
*'''Image''': The specific image to be used as the background: 
**For an embedded image, select the image name.
**For an external image, enter the path to the image file.
**For an image retrieved from the database, in the '''Image''' box, enter the name of the data field where the image is stored. For example, <tt>=&#91;Branch.LogoName&#93;</tt> to display background image that can be defined separately for each branch.
*'''Repeat''': The appropriate value specifying the repeating pattern for the chosen image: 
**''NoRepeat'': Adds the specified image with no repeating
**''RepeatX'': Repeats the image horizontally to fill the width of the report section
**''RepeatY'': Repeats the image vertically to fill the height of the report section
**''Repeat'': Repeats the image horizontally and vertically to fill both the width and height of the report section

|- 
| '''BorderColor''': The border color for the picture box. You can define the color for the bottom, left, right, and top border of the section, and set the default border color, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderStyle''': The border line style for the picture box. You can define the style for the bottom, left, right, and top border of the picture box, and set the default border style, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderWidth''': The border line width for the picture box (in pixels). You can define the width of the bottom, left, right, and top border of the picture box, and set the default border width, which will be applied if no special settings are defined for the specific borders.
|- 
| '''Font''': The font settings of the picture box. You can select the font name and size and specify whether the following font attributes are applied: bold, italic, strikeout, and underline.
|- 
| '''Padding''': The padding setting for the picture box, which you can specify in pixels for the left side, right side, top, and bottom of the report section.
|- 
| '''TextAlign''': The text alignment for the picture box: ''Left'', ''Center'', ''Right'', or ''Not Set''.
|- 
| '''VerticalAlign''': The content vertical alignment for the picture box: ''Not Set'', ''Top'', ''Middle'', or ''Bottom''.
|- 
| '''StyleName'''
|  The name of the style defined for the picture box. To assign a descriptive name to a style you have defined, enter the name. To apply an existing style, select its name.
|}
==Defining the Behavior Properties of the Picture Box==
The following properties, found in the '''Behavior''' group on the '''Properties''' tab, let you define the data processing order, navigation settings, and visibility settings of the picture box. 
===Behavior Properties===
{| class="checklist" | width="100%" 
|- 
!width="21%" ! Property
!width="78%" ! Description
|- 
| '''BarcodeSettings'''
| The barcode settings for the picture box. Enter desired values for the following: 
*'''AddCheckDigit''': By setting this property to ''True'', you allow to print the check digit for the barcode.
*'''BarHeight''': The barcode height.
*'''BarWidth''': The barcode width.
*'''LeftMargin''': The barcode left margin.
*'''TextMargin''': The barcode text margin.
*'''TopMargin''':The barcode top margin.
*'''With ratio''': The value of a bar code ration.

|- 
| '''ProcessOrder'''
|  The processing order for the data associated with the picture box, which defines when the expression value is calculated: 
*To process the data while reading, select ''WhileRead''.
*To process the data while printing, select ''WhilePrint''.
*To process the data while reading and printing, select ''Always''.

|- 
| '''Visible'''
|  The picture box&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) visual elements are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the picture box visibility property. This value overrides the '''Visible''' property value if it was set explicitly.
|}
==Defining the Data Properties of the Picture Box==
These properties allow you to define the source and type of the data for the picture box and to select what image will be displayed. 
===Data Properties===
{| class="checklist" | width="100%" 
|- 
!width="15%" ! Property
!width="84%" ! Description
|- 
| '''BarCode Type'''
|  The required barcode type, selected from the drop-down list with a restricted quantity of types. 
|- 
| '''MimeType'''
|  The type of media data for the picture box.
|- 
| '''Source'''
|  The type of data source of the image to be displayed in the picture box. Select one of the available values: 
*''Embedded'': An embedded image
*''External'': An external image
*''Database'': A data field

|- 
| '''Value'''
|  The actual source of data for the picture box: 
*To define the source of data for an embedded image, select the embedded image name.
*To define the source of data for an external image, enter the path to the external image file (with the file name included).
*To define the source of data for an image stored in the database, enter the data field name.

|}
==Defining the Layout Properties of the Picture Box==
Use these properties to define the size and location of the picture box. 
===Layout Properties===
{| class="checklist" | width="100%" 
|- 
!width="12%" ! Property
!width="87%" ! Description
|- 
| '''Location'''
|  The position of the picture box on the report page (in pixels). The '''Location''' values include the horizontal (''x'') and vertical (''y'') coordinates of the picture box on the page.
|- 
| '''Size'''
|  The size of the picture box (in pixels). The '''Size''' values include the width and height of the picture box.
|- 
| '''Sizing'''
|  The method of placing and fitting the selected image in the picture box. Select one of the available options: 
*''AutoSize'': Automatically selects the image size as the size of the picture to be placed in the picture box
*''Center'': Places the image in the center of the picture box
*''Normal'': Places the image in the left top corner of the picture box
*''Fit'': Stretches or shrinks the image to completely fit into the picture box size
*''Scale'': Scales the image to fit the picture box size

|}]]></column>
			<column name="PlainText"><![CDATA[Adding a Picture Box to the Report Section Picture boxes are used to display graphical elements in the report. These graphics 				can be selected from the set of embedded images, retrieved from the external 				sources, or selected from the database.  To add a picture box to the report section and define it appropriately, proceed as 				follows:  Add the  PictureBox  visual element to the report section, and position it 					in the desired location. The  Adding and Removing Visual Elements in the 						Report Adding and Removing Visual Elements in the Report article describes how to add visual elements. Change the name of the picture box if necessary ( Name  on the 						 Properties  tab). Define the picture box's properties on the  Properties  tab, as described 					in this article.  Defining the Appearance Properties of a Picture Box Use the following properties, found in the  Appearance  group on the  Properties  				tab, to define the appearance of the picture box.  Appearance Properties Property Description Style  The printing style for the picture box, set by the following values:  BackColor : The background color for the picture box. BackImage : The background image settings for the picture box. 								Enter desired values for:  Source : The source of the image. Image : The specific image to be used as the 										background:  For an embedded image, select the image name. For an external image, enter the path to the image 												file. For an image retrieved from the database, in the  Image  box, 												enter the name of the data field where the image is 												stored. For example, 												 =[Branch.LogoName]  to 												display background image that can be defined 												separately for each branch. Repeat : The appropriate value specifying the 										repeating pattern for the chosen image:  NoRepeat : Adds the specified image with no 												repeating RepeatX : Repeats the image horizontally to 												fill the width of the report section RepeatY : Repeats the image vertically to fill 												the height of the report section Repeat : Repeats the image horizontally and 												vertically to fill both the width and height of the 												report section BorderColor : The border color for the picture box. You can 								define the color for the bottom, left, right, and top border of the 								section, and set the default border color, which will be applied if 								no special settings are defined for the specific borders. BorderStyle : The border line style for the picture box. You 								can define the style for the bottom, left, right, and top border of 								the picture box, and set the default border style, which will be 								applied if no special settings are defined for the specific 								borders. BorderWidth : The border line width for the picture box (in 								pixels). You can define the width of the bottom, left, right, and 								top border of the picture box, and set the default border width, 								which will be applied if no special settings are defined for the 								specific borders. Font : The font settings of the picture box. You can select 								the font name and size and specify whether the following font 								attributes are applied: bold, italic, strikeout, and 								underline. Padding : The padding setting for the picture box, which you 								can specify in pixels for the left side, right side, top, and bottom 								of the report section. TextAlign : The text alignment for the picture box: 									 Left ,  Center ,  Right , or  Not 								Set . VerticalAlign : The content vertical alignment for the picture 								box:  Not Set ,  Top ,  Middle , or 								 Bottom . StyleName  The name of the style defined for the picture box. To assign a 								descriptive name to a style you have defined, enter the name. To 								apply an existing style, select its name. Defining the Behavior Properties of the Picture Box The following properties, found in the  Behavior  group on the  Properties  tab, let 				you define the data processing order, navigation settings, and visibility settings 				of the picture box.  Behavior Properties Property Description BarcodeSettings The barcode settings for the picture box. Enter desired values for the following:  AddCheckDigit : By setting this property to 											 True , you allow to print the check digit for the 										barcode. BarHeight : The barcode height. BarWidth : The barcode width. LeftMargin : The barcode left margin. TextMargin : The barcode text margin. TopMargin :The barcode top margin. With ratio : The value of a bar code ration. ProcessOrder  The processing order for the data associated with the picture 								box, which defines when the expression value is calculated:  To process the data while reading, select 										 WhileRead . To process the data while printing, select 										 WhilePrint . To process the data while reading and printing, select 											 Always . Visible  The picture box's visibility property ( False  or 									 True ). The invisible (hidden) visual elements are not 								printed in the report. VisibleExpr  The expression that calculates the picture box visibility 								property. This value overrides the  Visible  property value if 								it was set explicitly. Defining the Data Properties of the Picture Box These properties allow you to define the source and type of the data for the picture 				box and to select what image will be displayed.  Data Properties Property Description BarCode Type  The required barcode type, selected from the drop-down list with 								a restricted quantity of types.  MimeType  The type of media data for the picture box. Source  The type of data source of the image to be displayed in the 								picture box. Select one of the available values:  Embedded : An embedded image External : An external image Database : A data field Value  The actual source of data for the picture box:  To define the source of data for an embedded image, select 										the embedded image name. To define the source of data for an external image, enter 										the path to the external image file (with the file name 										included). To define the source of data for an image stored in the 										database, enter the data field name. Defining the Layout Properties of the Picture Box Use these properties to define the size and location of the picture box.  Layout Properties Property Description Location  The position of the picture box on the report page (in pixels). 								The  Location  values include the horizontal ( x ) and 								vertical ( y ) coordinates of the picture box on the 								page. Size  The size of the picture box (in pixels). The  Size  values 								include the width and height of the picture box. Sizing  The method of placing and fitting the selected image in the 								picture box. Select one of the available options:  AutoSize : Automatically selects the image size as the 										size of the picture to be placed in the picture box Center : Places the image in the center of the picture 										box Normal : Places the image in the left top corner of 										the picture box Fit : Stretches or shrinks the image to completely fit 										into the picture box size Scale : Scales the image to fit the picture box 										size ]]></column>
		</row>
		<row PageID="70902102-97a3-4c04-9c18-0154d73245aa" Language="en-US" PageRevisionID="1" Content="&#xA;To add a QR barcode, you should do the following:[anchor|#ul_gtt_qbg_zm]&#xA;#Add the ''PictureBox'' visual element to the report.&#xA;#Specify the following data properties for the ''PictureBox'' visual element (see the screenshot below):&#xA;#*'''Source''': ''Barcode''&#xA;#* '''BarcodeType''': ''QRCode''&#xA;#* '''Value''': a string value to display as a QR code[anchor|#image_kyq_mdg_zm][image:UserGuide/Images/Adding_QR_code.png|popup|Adding a QR barcode to the report|250px]&#xA;#Save the report.&#xA;((({S:Warn}To add a barcode of a different type, set the '''BarcodeType''' property to a different value. &#xA;)))&#xA;You can set the '''Value''' property to a static string or an expression calculated at runtime (for example, to a data field).{br}&#xA;&#xA;You can specify additional properties in the '''QRCodeSettings''' group of properties. Notice that the size of the QR barcode may change when you change the value, because a different pixel resolution may be required to display the value." PlainText="Adding a QR Barcode to the Report To add a QR barcode, you should do the following: Add the  PictureBox  visual element to the report. Specify the following data properties for the  PictureBox  visual element (see the           screenshot below): Source :  Barcode BarcodeType :  QRCode Value : a string value to display as a QR code Adding a QR barcode to the report Save the report. To add a barcode of a different type, set the  BarcodeType          property to a different value.  You can set the  Value  property to a static string or an expression         calculated at runtime (for example, to a data field). You can specify additional properties in the  QRCodeSettings  group of         properties. Notice that the size of the QR barcode may change when you change the value,         because a different pixel resolution may be required to display the value. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8346302b-1220-ca78-ddc3-d15efa765e8c" RecordSourceID="22377" />
		<row PageID="0b7ca1ba-afc7-4442-8bd1-08f8c00bbd15" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="89c4c58c-e392-5dd3-8827-e9339f32b94b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Visual elements are placed on a ''panel'' to make a new group of elements located and processed together. {br}

To add a panel to a report section and define it appropriately, proceed as follows: [anchor|#_2b8e1b2c-2262-4153-bb07-eaf7fae1c84e]
#Add the ''Panel'' visual element, and position it in the desired location. The ''[HelpRoot_ReportingTools\Adding_and_Removing_Visual_Elements_in_the_Report|Adding and Removing Visual Elements in the Report]'' article describes how to add visual elements.
#Change the name of the panel if necessary ('''Name''' on the '''Properties''' tab).
#Define the panel&rsquo;s properties on the '''Properties''' tab, as described in the rest of this article.
{br}{TOC}
==Defining the Appearance Properties of the Panel==
Use the following properties, found in the '''Appearance''' group on the '''Properties''' tab, to define the appearance of the panel. 
===Appearance Properties===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Property
!width="85%" ! Description
|- 
| rowspan="10" | '''Style'''
|  The printing style for the panel, set by the following values: 
|- 
| '''BackColor''': The background color for the panel.
|- 
| '''BackImage''': The background image settings for the panel. Enter desired values for the following: 
*'''Source''': The source of the image.
*'''Image''': The image to be used as the background: 
**For an embedded image, select the image name.
**For an external image, enter the path to the image file.
**For an image retrieved from the database, in the '''Image''' box, enter the name of the data field where the image is stored. For example, <tt>=&#91;Branch.LogoName&#93;</tt> to display background image that can be defined separately for each branch.
*'''Repeat''': The appropriate value specifying the repeating pattern for the chosen image: 
**''NoRepeat'': Adds the specified image with no repeating
**''RepeatX'': Repeats the image horizontally to fill the width of the report section
**''RepeatY'': Repeats the image vertically to fill the height of the report section
**''Repeat'': Repeats the image horizontally and vertically to fill both the width and height of the report section

|- 
| '''BorderColor''': The border color of the panel. You can define the color for the bottom, left, right, and top border, and set the default border color, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderStyle''': The border line style for the panel. You can define the style for the bottom, left, right, and top border of the panel, and set the default border style, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderWidth''': The border line width for the panel (in pixels). You can define the width of the bottom, left, right, and top border of the panel, and set the default border width, which will be applied if no special settings are defined for the specific borders.
|- 
| '''Font''': The font settings of the panel; definition of this setting does not change the panel. 
|- 
| '''Padding''': The padding setting for the panel, which you can specify in pixels for the left side, right side, top, and bottom of the panel.
|- 
| '''TextAlign''': The text alignment of the panel; definition of this setting does not affect the panel.
|- 
| '''VerticalAlign''': The text alignment of the panel; defining this setting does not affect the panel.
|- 
| '''StyleName'''
|  The name of the style defined for the panel. To assign a descriptive name to a style you have defined for a text, enter the name. To apply an existing style to the panel, select its name.
|}
==Defining the Behavior Properties of the Panel==
These properties, found under the '''Behavior''' group on the '''Properties''' tab, let you define the data processing order and visibility properties of the panel. 
===Behavior Properties===
{| class="checklist" | width="100%" 
|- 
!width="16%" ! Property
!width="84%" ! Description
|- 
| '''ProcessOrder'''
|  The processing order for the data associated with the panel, which defines when the expression value is calculated: 
*To process the data while reading, select ''WhileRead''.
*To process the data while printing, select ''WhilePrint''.
*To process the data while reading and printing, select ''Always''.

|- 
| '''Visible'''
|  The panel&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) visual elements are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the panel&rsquo;s visibility property. This value overrides the '''Visible''' property value if it was set explicitly.
|}
==Defining the Layout Properties of the Panel==
Use these properties to define the panel&rsquo;s size and location properties. 
===Layout Properties===
{| class="checklist" | width="100%" 
|- 
!width="12%" ! Property
!width="87%" ! Description
|- 
| '''Location'''
|  The position of the panel on the report page (in pixels). The '''Location''' values include the horizontal (''x'') and vertical (''y'') coordinates of the panel on the page.
|- 
| '''Size'''
|  The size of the panel (in pixels). The '''Size''' values include the width and height of the panel.
|}]]></column>
			<column name="PlainText"><![CDATA[Adding a Panel to the Report Section Visual elements are placed on a  panel  to make a new group of elements located and         processed together.  To add a panel to a report section and define it appropriately, proceed as follows:  Add the  Panel  visual element, and position it in the desired location. The                Adding and Removing Visual Elements in the Report Adding and Removing Visual Elements in the Report article describes how to           add visual elements. Change the name of the panel if necessary ( Name  on the  Properties            tab). Define the panel's properties on the  Properties  tab, as described in the rest of           this article. Defining the Appearance Properties of the Panel Use the following properties, found in the  Appearance  group on the  Properties  tab, to define the appearance of the panel.  Appearance Properties Property Description Style  The printing style for the panel, set by the following values:  BackColor : The background color for the panel. BackImage : The background image settings for the panel. Enter desired values for the following:  Source : The source of the image. Image : The image to be used as the background:  For an embedded image, select the image name. For an external image, enter the path to the image file. For an image retrieved from the database, in the  Image  box, enter the                                                 name of the data field where the image is stored.                                                 For example,                                                    =[Branch.LogoName]  to                                                 display background image that can be defined                                                 separately for each branch. Repeat : The appropriate value specifying the repeating pattern for the chosen image:  NoRepeat : Adds the specified image with no repeating RepeatX : Repeats the image horizontally to fill the width of the report section RepeatY : Repeats the image vertically to fill the height of the report section Repeat : Repeats the image horizontally and vertically to fill both the width and height of the report section BorderColor : The border color of the panel. You can define the color for the bottom, left, right, and top border, and set the default border color, which will be applied if no special settings are defined for the specific borders. BorderStyle : The border line style for the panel. You can define the style for the bottom, left, right, and top border of the panel, and set the default border style, which will be applied if no special settings are defined for the specific borders. BorderWidth : The border line width for the panel (in pixels). You can define the width of the bottom, left, right, and top border of the panel, and set the default border width, which will be applied if no special settings are defined for the specific borders. Font : The font settings of the panel; definition of this setting does not change the panel.  Padding : The padding setting for the panel, which you can specify in pixels for the left side, right side, top, and bottom of the panel. TextAlign : The text alignment of the panel; definition of this setting does not affect the panel. VerticalAlign : The text alignment of the panel; defining this setting does not affect the panel. StyleName  The name of the style defined for the panel. To assign a descriptive name to a style you have defined for a text, enter the name. To apply an existing style to the panel, select its name. Defining the Behavior Properties of the Panel These properties, found under the  Behavior  group on the  Properties  tab, let you define the data processing order and visibility properties of the panel.  Behavior Properties Property Description ProcessOrder  The processing order for the data associated with the panel, which defines when the expression value is calculated:  To process the data while reading, select  WhileRead . To process the data while printing, select  WhilePrint . To process the data while reading and printing, select  Always . Visible  The panel's visibility property ( False  or  True ). The invisible (hidden) visual elements are not printed in the report. VisibleExpr  The expression that calculates the panel's visibility property. This value overrides the  Visible  property value if it was set explicitly. Defining the Layout Properties of the Panel Use these properties to define the panel's size and location properties.  Layout Properties Property Description Location  The position of the panel on the report page (in pixels). The  Location  values include the horizontal ( x ) and vertical ( y ) coordinates of the panel on the page. Size  The size of the panel (in pixels). The  Size  values include the width and height of the panel. ]]></column>
		</row>
		<row PageID="ba80f40f-f668-4f2f-ae84-d8aaad0b9f05" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b87524ce-4b40-9899-98f1-32183174dcee" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Lines are used to divide the report space, direct the eye, or visually separate elements in the report. You can add lines to improve the look and readability of the report. {br}

To add a line to a report section, perform the following steps: [anchor|#_8917e965-4dee-4a0d-9799-fb6b968dfedb]
#Add the ''Line'' visual element, and position it in the desired location. The ''[HelpRoot_ReportingTools\Adding_and_Removing_Visual_Elements_in_the_Report|Adding and Removing Visual Elements in the Report]'' article describes how to add visual elements.
#Change the name of the line if necessary: Enter it as the '''Name''' on the '''Properties''' tab.
#Define the line&rsquo;s properties, described in this article, on the '''Properties''' tab.
{br}{TOC}
==Defining the Appearance Properties of the Line==
Use the following properties, found in the '''Appearance''' section on the '''Properties''' tab, to define the appearance of the line. 
===Appearance Properties===
{| class="checklist" | width="100%" 
|- 
!width="13%" ! Property
!width="86%" ! Description
|- 
| '''Direction'''
|  The direction of the line on the screen: ''Horizontal'', ''Vertical'', or ''Diagonal''.
|- 
| '''LineColor'''
|  The color of the line. 
|- 
| '''LineStyle'''
|  The style of the line: ''Solid'', ''Dashed'', or ''Dotted''.
|- 
| '''LineWidth'''
|  The width of the line (in pixels).
|- 
| rowspan="10" | '''Style'''
|  The printing style for the line, set by the following:
|- 
| '''BackColor''' The background color; this setting does not apply to the line.
|- 
| '''BackImage''' The background image; this setting does not affect the line.
|- 
| '''BorderColor''' The border color; this setting does not apply to the line.
|- 
| '''BorderStyle''' The border style; this setting does not affect the line.
|- 
| '''BorderWidth''' The border width; this setting does not apply to the line.
|- 
| '''Font''' The font; this setting does not affect the line.
|- 
| '''Padding''' The padding setting for the line, which you can specify in pixels for the left side, right side, top, and bottom of the line.
|- 
| '''TextAlign''' The text alignment; this setting does not apply to the line.
|- 
| '''VerticalAlign''' The vertical alignment; this setting does not apply to the line.
|- 
| '''StyleName'''
|  The name of the style defined for the line. To assign a descriptive name to a style you have defined for a line, enter the name. To apply an existing style to the line, select its name.
|}
==Defining the Behavior Properties of the Line==
The following properties, found in the '''Behavior''' section on the '''Properties''' tab, let you define the data processing order and visibility properties of the line. 
===Behavior Properties===
{| class="checklist" | width="100%" 
|- 
!width="22%" ! Property
!width="77%" ! Description
|- 
| '''ProcessOrder'''
|  The processing order for the data associated with the line, which defines when the expression value is calculated: 
*To process the data while reading, select ''WhileRead''.
*To process the data while printing, select ''WhilePrint''.
*To process the data while reading and printing, select ''Always''.

|- 
| '''Visible'''
|  The line&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) visual elements are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the line&rsquo;s visibility property. This value overrides the '''Visible''' property value if it was set explicitly.
|}
==Defining the Layout Properties of the Line==
Use these properties to define the line&rsquo;s size and location. 
===Layout Properties===
{| class="checklist" | width="100%" 
|- 
!width="28%" ! Property
!width="71%" ! Description
|- 
| '''Location'''
|  The position of the line on the report page (in pixels). The '''Location''' parameter values include the horizontal (''x'') and vertical (''y'') coordinates of the line on the page.
|- 
| '''Size'''
|  The size of the line (in pixels). The '''Size''' parameter values include the width and height of the line.
|}]]></column>
			<column name="PlainText"><![CDATA[Adding a Line to the Report Section Lines are used to divide the report space, direct the eye, or visually separate                 elements in the report. You can add lines to improve the look and readability of the                 report.  To add a line to a report section, perform the following steps:  Add the  Line  visual element, and position it in the desired location. The                              Adding and Removing Visual Elements in the                         Report Adding and Removing Visual Elements in the Report article describes how to add visual elements. Change the name of the line if necessary: Enter it as the  Name  on the                          Properties  tab. Define the line's properties, described in this article, on the                          Properties  tab. Defining the Appearance Properties of the Line Use the following properties, found in the  Appearance  section on the  Properties  tab, to define the appearance of the line.  Appearance Properties Property Description Direction  The direction of the line on the screen:  Horizontal ,  Vertical , or  Diagonal . LineColor  The color of the line.  LineStyle  The style of the line:  Solid ,  Dashed , or  Dotted . LineWidth  The width of the line (in pixels). Style  The printing style for the line, set by the following: BackColor  The background color; this setting does not apply to the line. BackImage  The background image; this setting does not affect the line. BorderColor  The border color; this setting does not apply to the line. BorderStyle  The border style; this setting does not affect the line. BorderWidth  The border width; this setting does not apply to the line. Font  The font; this setting does not affect the line. Padding  The padding setting for the line, which you can specify in pixels for the left side, right side, top, and bottom of the line. TextAlign  The text alignment; this setting does not apply to the line. VerticalAlign  The vertical alignment; this setting does not apply to the line. StyleName  The name of the style defined for the line. To assign a descriptive name to a style you have defined for a line, enter the name. To apply an existing style to the line, select its name. Defining the Behavior Properties of the Line The following properties, found in the  Behavior  section on the  Properties  tab, let you define the data processing order and visibility properties of the line.  Behavior Properties Property Description ProcessOrder  The processing order for the data associated with the line, which defines when the expression value is calculated:  To process the data while reading, select  WhileRead . To process the data while printing, select  WhilePrint . To process the data while reading and printing, select  Always . Visible  The line's visibility property ( False  or  True ). The invisible (hidden) visual elements are not printed in the report. VisibleExpr  The expression that calculates the line's visibility property. This value overrides the  Visible  property value if it was set explicitly. Defining the Layout Properties of the Line Use these properties to define the line's size and location.  Layout Properties Property Description Location  The position of the line on the report page (in pixels). The  Location  parameter values include the horizontal ( x ) and vertical ( y ) coordinates of the line on the page. Size  The size of the line (in pixels). The  Size  parameter values include the width and height of the line. ]]></column>
		</row>
		<row PageID="eee67b42-d857-44e3-a4ae-2b4df9f20939" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="91d909d0-59ce-e57f-6f2e-00d860065552" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The graphics in the report can be used as background images or illustrations to catch the user&rsquo;s attention or organize information. {br}

To add a graphic to an Acumatica ERP report, you can embed the image file into the report, select the image from an external file, or select a data field and load an image from it. External files are stored on external resources, such as websites or local hosts, accessible from the Acumatica ERP application site where the reports are published; the report stores only the link to the external file where the image file is located. Embedded images, conversely, are stored together with the report file, and are included in the report as its inner elements. 
==Embedding an Image in the Report==
To embed an image in the report, perform the following steps: 
#Select the whole report as an object for which the properties will be set by clicking the [image:UserGuide/Images/Adding_graphics_on_the_report_Using_FiltersReportSelectionIcon.PNG|10px] icon in the left top corner of the Acumatica Report                         Designer window.
#On the '''Properties''' tab, which displays the report properties, click the [image:UserGuide/Images/Adding_graphics_on_the_report_Using_Filtersselection_button.PNG|10px] button next to the '''EmbeddedImages''' collection. The '''Embedded Images''' dialog box appears, which you can use to add or remove the embedded images for the report. [image:UserGuide/Images/Adding_graphics_on_the_report_mbedding_a_new_image.png|popup|Embedding a new image|400px][image:UserGuide/Images/Adding_graphics_on_the_report_aving_the_embedded_images.png|popup|Saving the embedded images|400px]
#To add a new image, on the '''Embedded Images''' dialog, click the '''New Image''' button, or click the [image:UserGuide/Images/Adding_graphics_on_the_report_Using_Filtersselection_button.PNG|Saving the embedded images|10px] button in the empty line of the embedded images list. Select the image to be imported into the report, and add it to the report. To replace the existing image in the report with a new one, click the [image:UserGuide/Images/Adding_graphics_on_the_report_Using_Filtersselection_button.PNG|Saving the embedded images|10px] button next to the image to be replaced, and select a new image to be embedded into the report.
#To delete an embedded image from the report, click the image in the '''Image''' list, and click '''Delete'''.
#Click '''OK''' to save your changes.
]]></column>
			<column name="PlainText"><![CDATA[Adding Graphics to a Report The graphics in the report can be used as background images or illustrations to catch                 the user's attention or organize information.  To add a graphic to an  Acumatica ERP report, you can embed the image file into the report, select the image from an                 external file, or select a data field and load an image from it. External files are                 stored on external resources, such as websites or local hosts, accessible from the                      Acumatica ERP application site where the reports are published; the report stores only the link                 to the external file where the image file is located. Embedded images, conversely,                 are stored together with the report file, and are included in the report as its                 inner elements.  Embedding an Image in the Report To embed an image in the report, perform the following steps:  Select the whole report as an object for which the properties will be set by                     clicking the   icon in the left top corner of the  Acumatica Report                         Designer window. On the  Properties  tab, which displays the report properties, click the                           button next to the  EmbeddedImages  collection. The  Embedded                         Images  dialog box appears, which you can use to add or remove the                     embedded images for the report.  Embedding a new image Saving the embedded images To add a new image, on the  Embedded Images  dialog, click the  New                         Image  button, or click the   button in the empty line of the embedded images list. Select the image to be                     imported into the report, and add it to the report. To replace the existing                     image in the report with a new one, click the   button next to the image to be replaced, and select a new image to be                     embedded into the report. To delete an embedded image from the report, click the image in the                          Image  list, and click  Delete . Click  OK  to save your changes. ]]></column>
		</row>
		<row PageID="da5f4cca-6435-4400-a814-8d74ae813986" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a064fb39-25f8-0035-621a-d9a830d4de83" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Subreports allow you to include data from other reports in the current report. You can add one report or multiple subreports to a single master report. {br}{TOC}
==Adding a Subreport to the Master Report==
To include a subreport in the master report, you use the ''SubReport'' visual element. You can link the subreport to the master report and define the subreport&rsquo;s appearance, behavior, design, and layout properties. {br}

The name of the subreport to be included in the master report is defined by the '''ReportName''' property of the ''Subreport'' visual element. If the subreport uses parameters, you need to define them in the master report to pass the parameters&rsquo; values from the master report to the linked report you add to the master report. {br}

To add a subreport to the master report section and define it appropriately, perform the following steps: 
#Add the ''SubReport'' visual element to the report section, and position it within the report section. ([HelpRoot_ReportingTools\Adding_and_Removing_Visual_Elements_in_the_Report|Adding and Removing Visual Elements in the Report] describes how to add visual elements.) You can add a ''SubReport'' visual element to any report section.
#Change the name of the subreport if necessary ('''Name''' on the '''Properties''' tab).
#Define the subreport&rsquo;s properties on the '''Properties''' tab.

==Defining the Appearance Properties for the Subreport==
Use the following properties, found in the '''Appearance''' group on the '''Properties''' tab, to define the appearance of the subreport to be included in the master report. 
===Appearance Properties===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Property
!width="85%" ! Description
|- 
| rowspan="10" | '''Style'''
|  The printing style for the subreport, set by the following values:
|- 
| '''BackColor''': The background color for the subreport.
|- 
| '''BackImage''': The background image settings for the subreport. Enter desired values for the following: 
*'''Source '''- The source of the image.
*'''Image''': The image to be used as the background: 
**For an embedded image, select the image name.
**For an external image, enter the path to the image file.
**For an image retrieved from the database, in the '''Image''' box, enter the name of the data field where the image is stored. For example, <tt>=&#91;Branch.LogoName&#93;</tt> to display background image that can be defined separately for each branch.
*'''Repeat''': The repeating pattern for the chosen image: 
**''NoRepeat'': Adds the specified image with no repeating
**''RepeatX'': Repeats the image horizontally to fill the width of the report section
**''RepeatY'': Repeats the image vertically to fill the height of the report section
**''Repeat'': Repeats the image horizontally and vertically to fill both the width and height of the report section

|- 
| '''BorderColor''' The border color of the subreport. You can define the color for the bottom, left, right, and top border, and set the default border color, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderStyle''': The border line style for the subreport. You can define the style for the bottom, left, right, and top border, and set the default border style, which will be applied if no special settings are defined for the specific borders.
|- 
| '''BorderWidth''': The border line width for the subreport (in pixels). You can define the width of the bottom, left, right, and top border of the subreport, and set the default border width, which will be applied if no special settings are defined for the specific borders.
|- 
| '''Font''': The font settings for the subreport. You can select the font name and size and specify whether the following font attributes are applied: bold, italic, strikeout, and underline.
|- 
| '''Padding''': The padding setting for the subreport, which you can specify in pixels for the left side, right side, top, and bottom of the subreport.
|- 
| '''TextAlign''': The text alignment for the subreport: ''Left'', ''Center'', ''Right'', or ''Not Set''.
|- 
| '''VerticalAlign''': The content vertical alignment for the subreport: ''Not Set'', ''Top'', ''Middle'', or ''Bottom''.
|- 
| '''StyleName'''
|  The name of the style defined for the subreport. To assign a descriptive name to a style you have defined for a subreport, enter the name. To apply an existing style to the subreport, select its name.
|}
==Defining the Behavior Properties of the Subreport==
The following properties, found in the '''Behavior''' group on the '''Properties''' tab, let you define the parameters to be passed from the master report to the subreport, specify the data processing order, set the link to subreport in the master report, and define the visibility properties for the subreport. 
===Behavior Properties===
{| class="checklist" | width="100%" 
|- 
!width="15%" ! Property
!width="84%" ! Description
|- 
| '''Parameters'''
|  The collection of parameters to be used in both master report and the subreport. To add a parameter to the collection, use the External Parameter Collection Editor; for details, see [HelpRoot_ReportingTools\Using_the_External_Parameter_Collection_Editor|Using the External Parameter Collection Editor]. ((({S:Hint}If any parameters are defined for the subreport, the number of parameters defined for the master report and subreport must be equal. The names of the parameters used in the master report and subreport should also be the same.
)))
|- 
| '''Process Order'''
|  The data processing method for the subreport. Choose one of the following options: 
*''WhileRead'': The subreport data is processed when the subreport is invoked from the master report.
*''WhilePrint'': The subreport data is processed when the master report is printed.
*''Always'': The subreport data is processed when the master report is active.

|- 
| '''ReportName'''
|  The subreport name. To select the subreport for inserting it into the master report, click the button in the box where the subreport name is displayed, and select the file of the report to be used as a subreport. ((({S:Hint}The subreport file and the master report file should be located in the same folder.
)))
|- 
| '''Visible'''
|  The subreport&rsquo;s visibility property (''False'' or ''True''). The invisible (hidden) visual elements are not printed in the report.
|- 
| '''VisibleExpr'''
|  The expression that calculates the text box visibility property. This value overrides the '''Visible''' property value if it was set explicitly.
|}
==Defining the Layout Properties of the Subreport ==
Use the following group of properties to define the position of the subreport on the report page. 
===Layout Properties===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Property
!width="85%" ! Description
|- 
| '''Location'''
|  The position of the subreport on the report page (in pixels). The '''Location''' parameter values include the horizontal (''x'') and vertical (''y'') coordinates of the subreport area on the master report page.
|- 
| '''Size'''
|  The size of the subreport area (in pixels). The '''Size''' parameter values include the width and height of the subreport.
|}]]></column>
			<column name="PlainText"><![CDATA[Adding a Subreport to the Report Subreports allow you to include data from other                                                   reports in the current report. You can add one                                                   report or multiple subreports to a single master                                                   report.  Adding a Subreport to the Master Report To include a subreport in the master report, you use the  SubReport  visual element. You can link the subreport to the master report and define the subreport's appearance, behavior, design, and layout properties.  The name of the subreport to be included in the master report is defined by the  ReportName                  property of the  Subreport  visual element. If the subreport uses parameters,                 you need to define them in the master report to pass the parameters' values from the                 master report to the linked report you add to the master report.  To add a subreport to the master report section and define it appropriately, perform the following steps:  Add the  SubReport  visual element to the report section, and position it within the report                                                   section. ( Adding and Removing Visual Elements                                                   in the Report Adding and Removing Visual Elements in the Report describes how to add visual                                                   elements.) You can add a  SubReport  visual                                                   element to any report section. Change the name of the subreport if necessary ( Name  on the  Properties  tab). Define the subreport's properties on the  Properties  tab. Defining the Appearance Properties for the Subreport Use the following properties, found in the  Appearance  group on the  Properties  tab, to define the appearance of the subreport to be included in the master report.  Appearance Properties Property Description Style  The printing style for the subreport, set by the following values: BackColor : The background color for the subreport. BackImage : The background image settings for the subreport. Enter desired values for the following:  Source  - The source of the image. Image : The image to be used as the background:  For an embedded image, select the image name. For an external image, enter the path to the image file. For an image retrieved from the database, in the  Image  box, enter the                                                   name of the data field where the image is stored.                                                   For example,                                                    =[Branch.LogoName]  to                                                   display background image that can be defined                                                   separately for each branch. Repeat : The repeating pattern for the chosen image:  NoRepeat : Adds the specified image with no repeating RepeatX : Repeats the image horizontally to fill the width of the report section RepeatY : Repeats the image vertically to fill the height of the report section Repeat : Repeats the image horizontally and vertically to fill both the width and height of the report section BorderColor  The border color of the subreport. You can define the color for the bottom, left, right, and top border, and set the default border color, which will be applied if no special settings are defined for the specific borders. BorderStyle : The border line style for the subreport. You can define the style for the bottom, left, right, and top border, and set the default border style, which will be applied if no special settings are defined for the specific borders. BorderWidth : The border line width for the subreport (in pixels). You can define the width of the bottom, left, right, and top border of the subreport, and set the default border width, which will be applied if no special settings are defined for the specific borders. Font : The font settings for the subreport. You can select the font name and size and specify whether the following font attributes are applied: bold, italic, strikeout, and underline. Padding : The padding setting for the subreport, which you can specify in pixels for the left side, right side, top, and bottom of the subreport. TextAlign : The text alignment for the subreport:  Left ,  Center ,  Right , or  Not Set . VerticalAlign : The content vertical alignment for the subreport:  Not Set ,  Top ,  Middle , or  Bottom . StyleName  The name of the style defined for the subreport. To assign a descriptive name to a style you have defined for a subreport, enter the name. To apply an existing style to the subreport, select its name. Defining the Behavior Properties of the Subreport The following properties, found in the  Behavior  group on the  Properties  tab, let you define the parameters to be passed from the master report to the subreport, specify the data processing order, set the link to subreport in the master report, and define the visibility properties for the subreport.  Behavior Properties Property Description Parameters  The collection of parameters to be used in both master report and the subreport. To add a parameter to the collection, use the External Parameter Collection Editor; for details, see  Using the External Parameter Collection Editor Using the External Parameter Collection Editor.  If any parameters are defined for the subreport, the number of parameters defined for the master report and subreport must be equal. The names of the parameters used in the master report and subreport should also be the same. Process Order  The data processing method for the subreport. Choose one of the following options:  WhileRead : The subreport data is processed when the subreport is invoked from the master report. WhilePrint : The subreport data is processed when the master report is printed. Always : The subreport data is processed when the master report is active. ReportName  The subreport name. To select the subreport for inserting it into the master report, click the button in the box where the subreport name is displayed, and select the file of the report to be used as a subreport.  The subreport file and the master report file should be located in the same folder. Visible  The subreport's visibility property ( False  or  True ). The invisible (hidden) visual elements are not printed in the report. VisibleExpr  The expression that calculates the text box visibility property. This value overrides the  Visible  property value if it was set explicitly. Defining the Layout Properties of the Subreport  Use the following group of properties to define the position of the subreport on the report page.  Layout Properties Property Description Location  The position of the subreport on the report page (in pixels). The  Location  parameter values include the horizontal ( x ) and vertical ( y ) coordinates of the subreport area on the master report page. Size  The size of the subreport area (in pixels). The  Size  parameter values include the width and height of the subreport. ]]></column>
		</row>
		<row PageID="666ae5be-83e4-4ceb-9e67-d55961b251b1" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="6270f751-069a-8ee8-f514-b4166e1fe480" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Variables are used in reports to calculate values based on the expressions defined for them, store these values, and make them available in all sections of the report. {br}{TOC}
==Adding a Variable to the Report Section==
To add a variable to the report section, perform the following steps: 
#Select the report section where you want to add the variable.
#Click within the '''Variables''' edit box on the '''Properties''' tab (shown left of the red 1 in the screenshot below), and the '''ReportVariable Collection Editor''' window appears. You can use this window to add variables to the report and define their properties.
#Click '''Add''' (item 2 in the screenshot). The new variable will be displayed in the '''Members''' list of the '''ReportVariable Collection Editor''' dialog.
#In the '''Name''' field in the '''Misc''' section of the '''ReportVariable Collection Editor''' window, enter the name of the variable (item 3).
#:((({S:Warn}If you do not need to localize the value of a variable, for example, if the value is a string, you should select ''False'' in the '''Localizable''' field of the variable. By default, '''Localizable''' is ''True''.
)))
#In the '''ProcessOrder''' field, select the process order for the variable, which defines how it is processed: Choose ''While Read'' to direct the system to process the values of the variables while reading, ''While Print'' to direct the system to process the values of the variables while printing, and ''Always'' to direct the system to process the values of the variables while reading and printing.
#In the '''ResetExpr''' field, define the reset expression for the variable, if it is required.
#In the '''ResetGroup''' field, select the group where the variable value, if it is required.
#:In the <tt>ResetGroup</tt> property, you can specify the id of the group, in which the variable should be calculated locally. If you have set this property, for each instance of the specified group the variable has an independent value. At the end of each group, the variable is reset. If you have two or more nested groups, you can calculate variables individually for each group by setting the <tt>ResetGroup</tt> property.
#:Use this property to calculate some values within a group. For instance, if you have the {{Vendor}} group inside the {{Account}} group and you want to calculate the account balance and each vendor balance within the account. For the {{VendorBalance}} variable, set <tt>ResetGroup</tt> to the {{Vendor}} group. For the {{AccountBalance}} variable set <tt>ResetGroup</tt> to the {{Account}} group. If the <tt>ResetGroup</tt> property is not set, the value will be accumulated from one vendor to another.
#In the '''ValueExpr''' field, define the expression used to set the variable value, if it is required. 
#:((({S:Hint}To delete a variable from the list of existing variables, invoke the '''ReportVariable Collection Editor''' dialog, click this variable in the '''Members''' list, and click the '''Remove''' button.
)))
#Click '''OK''' (item 4) to save the changes and close the window.
[image:UserGuide/Images/Using_Variables_dding_a_variable.png|popup|400px]
==References==
*[HelpRoot_ReportingTools\Using_Expressions|Using Expressions]
]]></column>
			<column name="PlainText"><![CDATA[Using Variables Variables are used in reports to calculate values based on the expressions defined                 for them, store these values, and make them available in all sections of the report.              Adding a Variable to the Report Section To add a variable to the report section, perform the following steps:  Select the report section where you want to add the variable. Click within the  Variables  edit box on the  Properties  tab (shown                     left of the red 1 in the screenshot below), and the  ReportVariable Collection                         Editor  window appears. You can use this window to add variables to the                     report and define their properties. Click  Add  (item 2 in the screenshot). The new variable will be displayed                     in the  Members  list of the  ReportVariable Collection Editor                      dialog. In the  Name  field in the  Misc  section of the  ReportVariable                         Collection Editor  window, enter the name of the variable (item                         3). If you do not need to localize the value of a variable, for                         example, if the value is a string, you should select  False  in the                              Localizable  field of the variable. By default,                              Localizable  is  True . In the  ProcessOrder  field, select the process order for the variable,                     which defines how it is processed: Choose  While Read  to direct the system                     to process the values of the variables while reading,  While Print  to                     direct the system to process the values of the variables while printing, and                          Always  to direct the system to process the values of the variables                     while reading and printing. In the  ResetExpr  field, define the reset expression for the variable, if                     it is required. In the  ResetGroup  field, select the group where the variable value, if it                     is required. In the  ResetGroup  property, you can specify                         the id of the group, in which the variable should be calculated locally. If                         you have set this property, for each instance of the specified group the                         variable has an independent value. At the end of each group, the variable is                         reset. If you have two or more nested groups, you can calculate variables                         individually for each group by setting the  ResetGroup                          property. Use this property to calculate some values within a group.                         For instance, if you have the  Vendor  group inside the                              Account  group and you want to calculate the account                         balance and each vendor balance within the account. For the                              VendorBalance  variable, set                              ResetGroup  to the  Vendor  group. For                         the  AccountBalance  variable set                              ResetGroup  to the  Account  group. If                         the  ResetGroup  property is not set, the value will be                         accumulated from one vendor to another. In the  ValueExpr  field, define the expression used to set the variable                     value, if it is required.  To delete a variable from the list                         of existing variables, invoke the  ReportVariable Collection Editor                          dialog, click this variable in the  Members  list, and click the                              Remove  button. Click  OK  (item 4) to save the changes and close the window. References Using Expressions Using Expressions]]></column>
		</row>
		<row PageID="e33c8fe1-18e2-4c5c-bdfc-e8eff5a5821b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="973e2dee-c637-fa88-7191-f9ed9eb8b45f" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The External Parameter Collection Editor lets you define the parameters for a text box or subreport visual object. {br}

For a text box, you can add navigation parameters by invoking the '''ExternalParameter Collection Editor''' dialog from the '''NavigateParams''' field on the '''Properties''' tab, and for a subreport, you can define the external parameters shared by the master report and the subreport from the '''Parameters''' field on the '''Properties''' tab. The existing parameters are listed in the '''Members''' list in the left area of the dialog. {br}

To add a new parameter or change the properties of the existing one, perform the following steps (a text box is used as an example): [anchor|#_831a4ecf-cd4c-4158-9a61-3cbea75a705f]
#Select the text box and click the [image:UserGuide/Images/Using_the_External_Parameter_Collection_Editor_Using_Filtersselection_button.PNG|10px] button for the '''NavigateParams (Collection)''' in the '''Properties''' tab (shown left of the red 1 in the screenshot below).
#Click the '''Add''' button in the bottom left of the dialog, or click the existing parameter&rsquo;s name in the '''Members''' list (item 2 in the screenshot below). [anchor|#_33aac5fe-b429-4ae7-b2c7-dc586b7284ab][image:UserGuide/Images/Using_the_External_Parameter_Collection_Editor_xternalParameter.png|popup|The ExternalParameter Collection Editor window|320px]
#In the '''Name''' field in the parameter&rsquo;s properties table (located on the right side of the dialog), enter the parameter&rsquo;s name (item 3).
#In the '''Nullable''' field, set the nullability property for the parameter: ''True'' or ''False''. If the parameter&rsquo;s nullability property is set to ''True'', the parameter can accept null values.
#In the '''Type''' field, select the parameter&rsquo;s data type, which can be ''Boolean'', ''DateTime'', ''Float'' , ''Integer'', or ''String''.
#In the '''ValueExpr''' field, define the expression to be used to calculate the parameter&rsquo;s value. Use the '''Expression Editor''' dialog to define the expression.
#Click '''OK''' (item 4) to save the changes made to the external parameters, or click '''Cancel''' to discard the changes.
[anchor|#_b2b81a2a-b7a5-46eb-98fe-be6c3b8694ed]
==Example: Adding Link to Another Report==
For a text box, you can set up navigation parameters, so that clicking it will open another report.{br}

In this example, a link to Customer Profiles report (AR651000) will be added to a text box. {br}

To add a link perform the following steps:[anchor|#_8775e37e-994e-4287-b306-82c49a261045]
#Select a text box and in the '''NavigateMethod''' property, select ''Server''.
#In the '''NavigateReport''' property, select the ''AR651000.rpx'' file. To select a report from the server, you can just enter the name of the report file as the value of the NavigateReport property.
#:((({S:Warn}To find out the name of a report file, in Acumatica ERP, you can open the [HelpRoot_FormReference\SM_20_05_20|Site Map] ([~/?ScreenId=SM200520|SM200520]) form. In the table in the right pane, find the report. The Url column holds the URL to the report form, such as: ''~/Frames/ReportLauncher.aspx?ID=AR651000.rpx''. The report file name is at the end of this URL. In the '''NavigateParams''' property, you have to specify the appropriate external parameter to be transferred to the report selected in the '''NavigateReport''' property, which is the Customer Details report. The names and types of these external parameters have to match the names and types of the Customer Details report parameters. To find out the names and types of report parameters, you can open the report in Acumatica Report                         Designer, open the '''Schema Builder''' wizard, and review the '''Parameters''' tab.
)))
#Select the '''NavigateParams''' property and click the [image:UserGuide/Images/Using_the_External_Parameter_Collection_Editor_Using_Filtersselection_button.PNG|The ExternalParameter Collection Editor window|10px] button to open the '''ExternalParameter Collection Editor''' dialog box.
#In the dialog box, click '''Add''' to add a new external parameter, and specify the following settings:
#*'''Name''': ''CustomerID''
#* '''ValueExpr''': ''=&#91;Customer.AcctCD&#93;''
#Click '''OK''' to apply the settings you made and close the '''ExternalParameter Collection Editor''' dialog box.
#:((({S:Warn}You can define whether clicking a link causes the system to navigate to the page in the same window or to open a new one. You can specify one of the following settings in the '''Target''' property of the text boxes that hold the links:[anchor|#_1002103b-ddce-476c-9555-a438651a1e25]
*To navigate in the same window: ''main''
*To navigate in a new window: ''&#95;blank''
)))
#Save your changes to the report.

==References==
*[HelpRoot_ReportingTools\Using_the_Expression_Editor|Using the Expression Editor]
]]></column>
			<column name="PlainText"><![CDATA[Using the External Parameter Collection Editor The External Parameter Collection Editor lets you define the parameters for a text                 box or subreport visual object.  For a text box, you can add navigation parameters by invoking the                      ExternalParameter Collection Editor  dialog from the  NavigateParams                  field on the  Properties  tab, and for a subreport, you can define the external                 parameters shared by the master report and the subreport from the  Parameters                  field on the  Properties  tab. The existing parameters are listed in the                      Members  list in the left area of the dialog.  To add a new parameter or change the properties of the existing one, perform the                 following steps (a text box is used as an example):  Select the text box and click the   button for the                          NavigateParams (Collection)  in the  Properties  tab (shown left                     of the red 1 in the screenshot below). Click the  Add  button in the bottom left of the dialog, or click the                     existing parameter's name in the  Members  list (item 2 in the screenshot                     below).  The ExternalParameter Collection Editor window In the  Name  field in the parameter's properties table (located on the                     right side of the dialog), enter the parameter's name (item 3). In the  Nullable  field, set the nullability property for the parameter:                          True  or  False . If the parameter's nullability property is set                     to  True , the parameter can accept null values. In the  Type  field, select the parameter's data type, which can be                          Boolean ,  DateTime ,  Float  ,  Integer , or                          String . In the  ValueExpr  field, define the expression to be used to calculate the                     parameter's value. Use the  Expression Editor  dialog to define the                     expression. Click  OK  (item 4) to save the changes made to the external parameters, or                     click  Cancel  to discard the changes. Example: Adding Link to Another                 Report For a text box, you can set up navigation parameters, so that clicking it will open                 another report. In this example, a link to Customer Profiles report (AR651000) will be added to a                 text box.  To add a link perform the following steps: Select a text box and in the  NavigateMethod  property, select                              Server . In the  NavigateReport  property, select the  AR651000.rpx  file.                         To select a report from the server, you can just enter the name of the                         report file as the value of the NavigateReport property. To find out                             the name of a report file, in  Acumatica ERP, you can open the   ([~/?ScreenId=SM200520|SM200520]) Site Map (SM200520) form. In the table in the right pane,                             find the report. The Url column holds the URL to the report form, such                             as:  ~/Frames/ReportLauncher.aspx?ID=AR651000.rpx . The report file                             name is at the end of this URL. In the  NavigateParams  property,                             you have to specify the appropriate external parameter to be transferred                             to the report selected in the  NavigateReport  property, which is                             the Customer Details report. The names and types of these external                             parameters have to match the names and types of the Customer Details                             report parameters. To find out the names and types of report parameters,                             you can open the report in  Acumatica Report                         Designer, open the  Schema Builder  wizard, and review the                                  Parameters  tab. Select the  NavigateParams  property and click the   button to open the                              ExternalParameter Collection Editor  dialog box. In the dialog box, click  Add  to add a new external parameter, and                         specify the following settings: Name :  CustomerID ValueExpr :  =[Customer.AcctCD] Click  OK  to apply the settings you made and close the                              ExternalParameter Collection Editor  dialog box. You can                             define whether clicking a link causes the system to navigate to the page                             in the same window or to open a new one. You can specify one of the                             following settings in the  Target  property of the text boxes that                             hold the links: To navigate in the same window:  main To navigate in a new window:  _blank Save your changes to the report. References Using the Expression                         Editor Using the Expression Editor]]></column>
		</row>
		<row PageID="adb12145-bf0c-4b8e-9aca-b3a48b0c1636" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="248bdfca-9464-5514-b37f-86361143d781" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A custom report you design can be saved on your system or network drive. To make the report available for other Acumatica ERP users, you need to publish the report on the Acumatica ERP server. {br}{TOC}
==Saving a Report==
You can save custom reports locally or on the server. The decision about where to save the reports depends on various factors, including the stage of the report designing process, the Internet connection bandwidth, and the desired availability of the report to other users participating in the report development and review process. 
*'''Saving a Report Locally''': To save the designed report locally, use the ''Save'' or ''Save As'' command on the '''File''' menu, with a folder on a local system or network drive specified as the destination folder.
*'''Saving a Report on the Server''': To save the designed report on the server, select the ''Save on Server'' command on the '''File''' menu, and provide the following information in the '''Save Report on Server''' dialog box: 
*#'''Specify Web Site URL''':The connection string to the server where the designed report will be stored
*#'''Select report to load''': The locally stored custom report to be uploaded on the server
*#'''Login''': The login to connect to the server
*#'''Password''': The password to connect to the server

==Publishing a Report==
You must publish the designed custom report on the Acumatica ERP site to make it available to other Acumatica ERP application users. To publish a report on the site, use the [HelpRoot_FormReference\SM_20_05_20|Site Map] ([~/?ScreenId=SM200520|SM200520]) form. {br}

To publish a report, take the following steps: 
#Upload or copy the created report file to the appropriate folder on the Acumatica ERP website. By default, the <tt>Reports/</tt> folder, located in the root of the appropriate module on the Acumatica ERP website, is used.
#In Acumatica ERP, open the [HelpRoot_FormReference\SM_20_05_20|Site Map] ([~/?ScreenId=SM200520|SM200520]) form.
#Add a new row to the list and specify the following information: 
#*'''Screen ID''': The unique identifier of the report form.
#*'''Title''': The title of the custom report.
#*'''Icon''': The path to the icon for the custom report (optional).
#*'''URL''': The URL of the custom report on the site. Use the following format for the URL specification: 
#*:{{~/Frames/ReportLauncher.aspx?ID=ReportName.rpx}}
#*'''Workspaces''': The workspace or workspaces from which the report can be accessed.
#*'''Category''': The category under wich the report will be displayed in a workspace.
#Click '''Save''' to save your changes. The added report will become visible with the site map. 

For more information about the site management procedures, see [HelpRoot_Administration\SM__con_Site_Map_Management|Managing the Site Map].{br}

After the report is published, users who will generate the report must be granted access rights to this report. 
==References==
*[HelpRoot_FormReference\SM_20_05_20|Site Map] ([~/?ScreenId=SM200520|SM200520])
]]></column>
			<column name="PlainText"><![CDATA[Saving and Publishing the Reports A custom report you design can be saved on your system or network drive. To make the report         available for other  Acumatica ERP users, you need to publish the report on the  Acumatica ERP server.  Saving a Report You can save custom reports locally or on the server. The decision about where to save the reports depends on various factors, including the stage of the report designing process, the Internet connection bandwidth, and the desired availability of the report to other users participating in the report development and review process.  Saving a Report Locally : To save the designed report locally, use the  Save  or  Save As  command on the  File  menu, with a folder on a local system or network drive specified as the destination folder. Saving a Report on the Server : To save the designed report on the server, select the  Save on Server  command on the  File  menu, and provide the following information in the  Save Report on Server  dialog box:  Specify Web Site URL :The connection string to the server where the designed report will be stored Select report to load : The locally stored custom report to be uploaded on the server Login : The login to connect to the server Password : The password to connect to the server Publishing a Report You must publish the designed custom report on the  Acumatica ERP site to make it available to other  Acumatica ERP application users. To publish a report on the site, use the   ([~/?ScreenId=SM200520|SM200520]) Site Map (SM200520) form.  To publish a report, take the following steps:  Upload or copy the created report file to the appropriate folder on the  Acumatica ERP website. By default, the  Reports/  folder, located in the root of the appropriate module on the  Acumatica ERP website, is used. In  Acumatica ERP, open the   ([~/?ScreenId=SM200520|SM200520]) Site Map (SM200520)           form. Add a new row to the list and specify the following information:  Screen ID : The unique identifier of the report form. Title : The title of the custom report. Icon : The path to the icon for the custom report (optional). URL : The URL of the custom report on the site. Use the following format for the               URL specification:  ~/Frames/ReportLauncher.aspx?ID=ReportName.rpx Workspaces : The workspace or workspaces from which the report               can be accessed. Category : The category under wich the report will be               displayed in a workspace. Click  Save  to save your changes. The added report will become visible with the site map.  For more information about the site management procedures, see  Managing the Site Map. After the report is published, users who will generate the report must be granted access rights to this report.  References  ([~/?ScreenId=SM200520|SM200520]) Site Map (SM200520) ]]></column>
		</row>
		<row PageID="10c0a76d-0bb5-47dd-89b3-2e4c16c5c073" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1f8681dd-e40b-e614-06c1-da6402962341" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 Acumatica ERP provides built-in localization functionality. You can translate any report so that the user can execute this report and view the result in the language selected during the login to Acumatica ERP.{br}

The value of the '''Localizable''' property determines the multiple language support of a report. You can specify this property for the whole report, as well as for each element, such as a text box. The default value of this property is ''True''. This means that by default, multiple languages are supported for reports and report elements.{br}

To localize a report, you have to translate its source strings. Source strings include form names, element labels, parameters, predefined values of parameters, and constant strings of variables and formulas. On the [HelpRoot_FormReference\SM_20_05_40|Translation Dictionaries] ([~/?ScreenId=SM200540|SM200540]) form, you can collect, filter, and then translate any strings of the Acumatica ERP forms, including reports.{br}

To translate a report into a language, do the following:[anchor|#ol_rnw_kzx_gv]
#Collect the report strings to be translated.
#:When you localize the system for the first time, or after you update or publish the report, you should collect the strings to be translated. You can collect the report strings in one of the following ways:
#*On the toolbar of the [HelpRoot_FormReference\SM_20_05_40|Translation Dictionaries] ([~/?ScreenId=SM200540|SM200540]) form, click '''Collect Strings''' to collect all the strings used in the system including the report strings. This operation may take a significant amount of time.
#*On the [HelpRoot_FormReference\SM_21_15_00|Translation Sets] ([~/?ScreenId=SM211500|SM211500]) form, create a new translation set with the following settings, save the translation set, and on the form toolbar, click '''Collect''' to collect all the strings of the translation set.
#**'''Unbound Recourse To Collect''':
#***''Chart Name'': Selected
#***''Constant in Formula'': Selected
#***''Prompt'': Selected
#***''Text Box Value'': Selected
#***''Valid Value'': Selected
#*:In Acumatica ERP, reports are considered as unbound resources. You cannot select a particular report in the site map when you create a translation set. Instead, you can collect particular unbound resources used in reports. This operation may also take a significant but less amount of time than the collection of strings on the [HelpRoot_FormReference\SM_20_05_40|Translation Dictionaries] ([~/?ScreenId=SM200540|SM200540]) form.
#:When you collect strings, you can translate the collected strings on the [HelpRoot_FormReference\SM_20_05_40|Translation Dictionaries] ([~/?ScreenId=SM200540|SM200540]) form. On this form, you can translate only the strings that have been already collected on any of the [HelpRoot_FormReference\SM_20_05_40|Translation Dictionaries] ([~/?ScreenId=SM200540|SM200540]) or [HelpRoot_FormReference\SM_21_15_00|Translation Sets] ([~/?ScreenId=SM211500|SM211500]) form.
#On the [HelpRoot_FormReference\SM_20_05_40|Translation Dictionaries] ([~/?ScreenId=SM200540|SM200540]) form, in the '''Language''' box, select the language you are going to translate the report into.
#:((({S:Warn}You can select two or more languages if you want to translate the report into multiple languages simultaneously.
)))
#Select the '''Show Only Unbound''' check box. Based on this selection, all unbound strings, including report strings, will be shown on the '''Collected''' tab.
#In the '''Default Values''' area of the '''Collected''' tab, filter the list of unbound strings to find the particular string of your report.
#In the column with the language name as its header, type your translation.
#Save your translation.
#Repeat Steps 4 to 6 to find and translate all the needed report strings.

After you have translated the report into the language, users that selected the language during the login to Acumatica ERP will see the translated strings of this report in this language.{br}

You can also configure a report to show its strings in the particular language, regardless of the user&rsquo;s choice of the language, by using the '''Locale''' property of this report.{br}

Suppose that an American user creates invoices for both American customers and Russian customers, and you need to print the invoice in the customer&rsquo;s language. You can specify the following value for the '''Locale''' property of the Invoice/Memo (AR641000) report: <tt>=IIf(&#91;BillingAddress.CountryID&#93;=&rsquo;RU&rsquo;, &rsquo;ru-RU&rsquo;, &rsquo;en-US&rsquo;)</tt>. You also have to translate the report strings into Russian (the ''ru-RU'' locale). Based on the expression specified for the '''Locale''', the translated report strings will be automatically printed in Russian for the ''RU'' country where the invoice should be sent.
==Related Articles==
*[HelpRoot_FormReference\SM_20_05_40|Translation Dictionaries] ([~/?ScreenId=SM200540|SM200540])
*[HelpRoot_Administration\SM__con_Translation_Process|Translation Process]
*[HelpRoot_Administration\SM__mng_Locales|Managing Locales and Languages]]]></column>
			<column name="PlainText"><![CDATA[Translating Reports  Acumatica ERP     provides built-in localization functionality. You can translate any report so that the user can     execute this report and view the result in the language selected during the login to  Acumatica ERP. The value of the  Localizable  property determines the multiple language     support of a report. You can specify this property for the whole report, as well as for each     element, such as a text box. The default value of this property is  True . This means that     by default, multiple languages are supported for reports and report elements. To localize a report, you have to translate its source strings. Source strings include form     names, element labels, parameters, predefined values of parameters, and constant strings of     variables and formulas. On the   ([~/?ScreenId=SM200540|SM200540]) Translation Dictionaries (SM200540) form, you     can collect, filter, and then translate any strings of the  Acumatica ERP     forms, including reports. To translate a report into a language, do the following: Collect the report strings to be translated. When you localize the system for the first       time, or after you update or publish the report, you should collect the strings to be       translated. You can collect the report strings in one of the following ways: On the toolbar of the   ([~/?ScreenId=SM200540|SM200540]) Translation Dictionaries (SM200540) form, click          Collect Strings  to collect all the strings used in the system        including the report strings. This operation may take a significant amount of time. On the   ([~/?ScreenId=SM211500|SM211500]) Translation Sets (SM211500) form, create a new        translation set with the following settings, save the translation set, and on the form        toolbar, click  Collect  to collect all the strings of the translation         set. Unbound Recourse To Collect : Chart Name : Selected Constant in Formula : Selected Prompt : Selected Text Box Value : Selected Valid Value : Selected In  Acumatica ERP, reports are considered as unbound resources. You cannot select a particular report in         the site map when you create a translation set. Instead, you can collect particular unbound         resources used in reports. This operation may also take a significant but less amount of         time than the collection of strings on the   ([~/?ScreenId=SM200540|SM200540]) Translation Dictionaries         (SM200540) form. When you collect strings, you can translate the collected strings on the   ([~/?ScreenId=SM200540|SM200540]) Translation Dictionaries (SM200540) form. On this form, you can translate only       the strings that have been already collected on any of the   ([~/?ScreenId=SM200540|SM200540]) Translation Dictionaries (SM200540) or   ([~/?ScreenId=SM211500|SM211500]) Translation Sets (SM211500) form. On the   ([~/?ScreenId=SM200540|SM200540]) Translation Dictionaries (SM200540) form, in the        Language  box, select the language you are going to translate the report       into. You can select two or more languages if you want to translate the report into       multiple languages simultaneously. Select the  Show Only Unbound  check box. Based on this selection, all      unbound strings, including report strings, will be shown on the        Collected  tab. In the  Default Values  area of the  Collected       tab, filter the list of unbound strings to find the particular string of your report. In the column with the language name as its header, type your translation. Save your translation. Repeat Steps 4 to 6 to find and translate all the needed report strings. After you have translated the report into the language, users that selected the language     during the login to  Acumatica ERP     will see the translated strings of this report in this language. You can also configure a report to show its strings in the particular language, regardless of     the user's choice of the language, by using the  Locale  property of this     report. Suppose that an American user creates invoices for both American customers and Russian     customers, and you need to print the invoice in the customer's language. You can specify the     following value for the  Locale  property of the Invoice/Memo (AR641000)     report:  =IIf([BillingAddress.CountryID]='RU', 'ru-RU', 'en-US') . You also     have to translate the report strings into Russian (the  ru-RU  locale). Based on the     expression specified for the  Locale , the translated report strings will     be automatically printed in Russian for the  RU  country where the invoice should be     sent.  ([~/?ScreenId=SM200540|SM200540]) ]]></column>
		</row>
		<row PageID="4e99e9b0-7de4-4bdc-bd3b-88bd18622dca" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="53996a75-bebb-fa5a-cc6c-08a983eb7693" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Any report of Acumatica ERP or an Acumatica Framework-based application contains a database schema. The database schema of a report can be changed without the report being updated in some cases, such as the following:[anchor|#ul_jyg_1th_3s]
*You have installed a new version of Acumatica ERP or Acumatica Framework.
* Acumatica ERP has been customized—for example, with the addition of a custom bound field.
{br}

To make new fields and database columns available in a report, you need to update the database schema in the report. You can update each report manually, or you can use the ''ReportUpdater.exe'' command-line tool to update the database schema for multiple reports at once.
==To Update the Database Schema for a Report==
In the Schema Builder of Acumatica Report                         Designer, update the database schema of a currently opened report by clicking one of the following buttons (see the screenshot below):[anchor|#ul_okk_b5h_3s]
*'''Refresh''': To update the table you have selected (by clicking it in the list of tables) in the database schema for the report
*'''Refresh All''': To update all the tables used in the database schema for the report
[anchor|#fig_tdb_3wh_3s][anchor|#image_ccm_rwh_3s][image:UserGuide/Images/SF_ReportUpdater_1.png|popup|The buttons to refresh the report schema|410px]
==To Update the Database Schema for Multiple Reports==
To update the database schema for multiple reports at once, launch the report updater in the command prompt, by typing the following.{br}

{{{{&gt;ReportUpdater src=&lt;srcFolder&gt; dest=&lt;dstFolder&gt; url=&lt;url&gt; 
   log=&lt;logName&gt; login=&lt;login&gt; password=&lt;password&gt;
}}}}{br}

((({S:Warn}The ''ReportUpdater.exe'' tool, the command line utility included in Acumatica Report                         Designer, is located in the same folder as the Report Designer.
When you launch the Report Updater, it performs the following actions:[anchor|#ol_s1y_wml_js]
#On the specified site, loads the database schema
#For each report from the specified source folder:
##Reads the report
##Refreshes all the tables used in the report, based on the database schema
##Writes the updated report file to the specified destination folder
##Outputs the result of the report update to either the system console or the specified log file
))){br}

The parameters of the report updater are described in the table below.[anchor|#table_jjy_lp3_3s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Parameter
!width="80%" ! Description
|- 
| <tt>src</tt>
| The absolute path to the folder from which the utility loads the source reports.
|- 
| <tt>dest</tt>
| The absolute path to the destination folder to which the utility saves the updated reports.
|- 
| <tt>url</tt>
| The URL of the site used to load the database schema.
|- 
| <tt>log</tt>
| The log file name (optional). If you specify a name, the entire log is output to the file. Otherwise, the system outputs the log information to the console window.
|- 
| <tt>login</tt>
| The login for the site used to load the database schema.
|- 
| <tt>password</tt>
| The password for the site used to load the database schema.
|}((({S:Warn}[anchor|#ol_csh_lvk_ls]
#If a parameter contains spaces, use quotation marks around the parameter.
#If you need to override existing reports, use the same path for the source and destination folders.
#To get the ''ReportUpdater.exe'' help information, launch the utility in the Command Prompt without parameters, as the screenshot below shows.[anchor|#image_bg5_2p3_3s][image:UserGuide/Images/SF_ReportUpdater_2.png|popup|The Report Updater help information|420px]
))){br}

The following example shows the use of the ''ReportUpdater.exe'' utility for the <tt>Test</tt> application (see the screenshot below).{{{{&gt;ReportUpdater.exe src=c:\aaa dest="c:\bbb dest" url=http://localhost/Test login=admin password=123
}}}}[anchor|#fig_ivk_y1k_js][anchor|#image_tx2_2bk_js][image:UserGuide/Images/SF_ReportUpdater_3.png|popup|An example of the ReportUpdater.exe utility in use|420px]{br}

In the example, the command line does not contain the <tt>log</tt> parameter; therefore, the '' ReportUpdater.exe'' utility outputs the log information to the Command Prompt window.]]></column>
			<column name="PlainText"><![CDATA[Updating the Database Schema for Reports Any report of  Acumatica ERP or an  Acumatica Framework-based application contains a database schema. The database schema of a report can be         changed without the report being updated in some cases, such as the following: You have installed a new version of  Acumatica ERP or  Acumatica Framework.  Acumatica ERP has been customized—for example, with the addition of a custom bound             field. To make new fields and database columns available in a report, you need to update the         database schema in the report. You can update each report manually, or you can use the            ReportUpdater.exe  command-line tool to update the database schema for multiple         reports at once. To Update the Database Schema for a Report In the Schema Builder of  Acumatica Report                         Designer, update the database schema of a currently opened report by clicking one of the following         buttons (see the screenshot below): Refresh : To update the table you have selected (by clicking it             in the list of tables) in the database schema for the report Refresh All : To update all the tables used in the database             schema for the report The buttons to refresh the report schema To Update the Database Schema for Multiple Reports To update the database schema for multiple reports at once, launch the report updater in         the command prompt, by typing the following. >ReportUpdater src=<srcFolder> dest=<dstFolder> url=<url> 
   log=<logName> login=<login> password=<password> The  ReportUpdater.exe  tool, the command line utility included in  Acumatica Report                         Designer, is located in the same folder as the Report Designer. When you launch the Report             Updater, it performs the following actions: On the specified site, loads the database schema For each report from the specified source folder: Reads the report Refreshes all the tables used in the report, based on the database schema Writes the updated report file to the specified destination folder Outputs the result of the report update to either the system console or the                     specified log file The parameters of the report updater are described in the table below. Parameter Description src The absolute path to the folder from which the utility loads the source                   reports. dest The absolute path to the destination folder to which the utility saves the                   updated reports. url The URL of the site used to load the database schema. log The log file name (optional). If you specify a name, the entire log is output                   to the file. Otherwise, the system outputs the log information to the console                   window. login The login for the site used to load the database schema. password The password for the site used to load the database schema. If a parameter contains spaces, use quotation marks around the parameter. If you need to override existing reports, use the same path for the source and               destination folders. To get the  ReportUpdater.exe  help information, launch the utility in the               Command Prompt without parameters, as the screenshot below shows. The Report Updater help information The following example shows the use of the  ReportUpdater.exe  utility for the            Test  application (see the screenshot           below). >ReportUpdater.exe src=c:\aaa dest="c:\bbb dest" url=http://localhost/Test login=admin password=123 An example of the ReportUpdater.exe utility in use In the example, the command line does not contain the  log  parameter;         therefore, the   ReportUpdater.exe  utility outputs the log information to the Command         Prompt window. ]]></column>
		</row>
		<row PageID="913256d7-7e7d-45b3-995b-e413055fb954" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="694d69cb-99b1-804b-5560-221caacd4d27" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes some recommendations and best practices of report design for the Acumatica ERP application. These recommendations focus on the creation of visually consistent and easy-to-comprehend reports. You can also refer to an [HelpRoot_ReportingTools\ReportGuidelines_Example|example] of a simple report that illustrates the best practices described here.[anchor|#header_layout]
==Header Layout==
A report can include two types of headers: The ''report header'' appears on the first page of the report, and the ''page header'' appears on the pages of the report. By default, the page header appears on all pages of the report, but you can configure it to appear on pages starting from the second one. You should always insert both the report header and the page header into your report. If either of them is absent, you can right-click the report area outside of any section and select '''Report Header''' or '''Page Header'''.((({S:Warn}On printing, the report header is placed right after the page header.
)))
The report header and the page header should each consist of two sections. To split any section into two sections, right-click the section and select '''Duplicate section'''.{br}

To make the page header appear on pages starting from the second one (rather than on all pages), you should set the '''PrintOnFirstPage''' property to ''False'' on all sections that represent the page header and footer.{br}

The first section of the report header should have the following layout:[anchor|#ul_srz_vdt_rl]
*On the left side of the report header, you should place the name of the report and the following mandatory fields below it, with each field represented by two text boxes:
**''Company''
** ''Ledger'' (if it is included in your report parameters)
**''Branch'' (if it is included in your report parameters)
*On the right side of the report header, you should place the following mandatory fields, with each field represented by two text boxes:
**''User''
** ''Date''
** ''Page''
*If additional fields from the report parameters should be printed on the report header, put the fields in the middle part of the header in one column or two columns.

For information about how to set the values of the mandatory fields, see the [[#param_values|Parameter Values] section of this topic.{br}

The figure below shows an example of the layout of a report header.[image:UserGuide/Images/ReportGuidelines_1.png|popup|Example of a report header|450px]
The first section of the page header should have the following layout:[anchor|#ul_lsn_12t_rl]
*On the left side of the report, you should put the name of the report.
*On the right side of the report, you should put the ''Page'' field.
*No report parameters are displayed on the page header.

The second section of both the report header and page header should contain text boxes with labels for columns.{br}

The following screenshot shows the view of the report header in the Acumatica Report                         Designer.[anchor|#image_n2l_zh1_sl][image:UserGuide/Images/ReportGuidelines_2.png|popup|Example of the report header in the Report Designer|450px]
==General Layout Properties==
The table below shows the recommended properties for the layout of the whole report and all controls the report includes.[anchor|#table_nfq_2sj_tl]
{| class="checklist" | width="100%" 
|- 
!width="58%" ! Description
!width="41%" ! Value
|- 
| '''StylesTemplate''' property of the report
| TemplateReport.rpx<sup>1</sup>
|- 
| '''NavigationTree''' property of the report
| False
|- 
| '''LayoutUnit''' property of the report
| Pixel
|- 
| '''Width''' property of the report
| 1026px
|- 
| Margin from the left border of the report
| 4px
|- 
| Margin from the right border of the report
| 4px
|- 
| Vertical margin between two text boxes
| 4px
|- 
| Horizontal margin between the text box with the label and the text box with the value
| 0px
|- 
| Height of the text box with the report name
| 16px
|- 
| Height of the other text boxes
| 14px
|}
<sup>1</sup>The template file should reside in the same directory as the report.
==Recommended Predefined Styles==
For any visual element of the report, you can set one of the predefined styles. You should assign specific predefined styles to the elements listed in the following table. To use the predefined styles, you should specify the template for the report by setting the '''StylesTemplate''' property to ''TemplateReport.rpx''. This file is located in the same folder that contains the default reports provided with Acumatica ERP. To display report properties in the '''Properties''' view, click the little square in the upper left corner of the designer area.[anchor|#table_rnn_bg1_sl]
{| class="checklist" | width="100%" 
|- 
!width="50%" ! Element
!width="50%" ! Style name
|- 
| Text box with the report name
| Report Name
|- 
| Text boxes for both labels and values of report parameters in the header 
| Report Params
|- 
| The report or page header section with column names
| ColumnsHeaderSection
|- 
| The group header sections with information on the grouping item
| GroupHighlight
|- 
| The group header section with column names for the display of detail records
| GroupL1Highlight
|- 
| Text boxes for column names
| Heading 1
|- 
| Text boxes for total amounts of a group
| Heading 1
|- 
| Text boxes for displaying regular data
| Normal
|}
==Abbreviations for Column Names==
The following table shows the recommended abbreviations for column names.[anchor|#table_xwx_52s_rl]
{| class="checklist" | width="100%" 
|- 
!width="50%" ! Full column name
!width="50%" ! Short column name
|- 
| Beginning Balance
| Beg. Balance
|- 
| Ending Balance
| End. Balance
|- 
| Financial Period
| Fin. Period
|- 
| Subaccount
| Sub.
|- 
| Reference Number
| Ref. Nbr.
|- 
| Batch Number
| Batch Nbr.
|- 
| Document
| Doc.
|- 
| Currency
| Cur.
|- 
| Original
| Orig.
|- 
| Transaction
| Tran.
|}
==Currency Column Before an Amount Column==
In any details view, any column representing an amount should be preceded with the currency column. If a column representing an amount immediately follows another such column and the two columns have the same currency (such as debit amount and credit amount in journal transactions), you should insert only one currency column—before the first of these two columns.
==Parameter Names==
When any of the following fields is used as a report parameter to specify a range of values, the name should start with ''From'' or ''To''.((({S:Warn}The name of a report parameter is set on the '''Parameters''' tab of '''Schema Builder''' in the '''Prompt''' field. If you don&rsquo;t specify the name in the '''Prompt''' field, the parameter won&rsquo;t be shown on the report webpage.
)))[anchor|#table_glp_n3s_rl]
{| class="checklist" | width="100%" 
|- 
!width="33%" ! Field
!width="33%" ! Display name of the parameter
!width="33%" ! Display name of the parameter
|- 
| Period
| From Period
| To Period
|- 
| Date
| From Date
| To Date
|- 
| Account
| From Account
| To Account
|- 
| Subaccount
| From Subaccount
| To Subaccount
|}
When the name of a field ends with ''ID'', the name of the corresponding parameters should not include ''ID''. The fields to which this rule is applied are listed in the table below.[anchor|#table_wgg_33s_rl]
{| class="checklist" | width="100%" 
|- 
!width="50%" ! Field
!width="50%" ! Display name of the parameter
|- 
| Vendor ID
| Vendor
|- 
| Customer ID
| Customer
|- 
| Branch ID
| Branch
|- 
| Tax Agency ID
| Tax Agency
|- 
| Account ID
| Account
|}[anchor|#param_values]
==Parameter Values==
The table below describes the recommended way to display the values of the mandatory fields displayed in the header.[anchor|#table_fvn_15j_tl]
{| class="checklist" | width="100%" 
|- 
!width="40%" ! First text box—Value
!width="60%" ! Second text box—Value
|- 
| Company:
| =Report.GetDefUI(&rsquo;RowCompanyBAccount.AcctName&rsquo;)
|- 
| Ledger:
| =&#91;@LedgerID&#93;<sup>1</sup>
|- 
| Branch:
| =&#91;@BranchID&#93;<sup>1</sup>
|- 
| User:
| =Report.GetDefUI(&rsquo;RowAccessInfo.DisplayName&rsquo;)
|- 
| Date:
| =Today()
|- 
| Page:
| =PageOf()
|}
<sup>1</sup>Insert the actual name of the parameter that you specified in the '''Schema Builder'''.]]></column>
			<column name="PlainText"><![CDATA[Recommendations This document describes some recommendations and best practices of report design for the            Acumatica ERP application. These recommendations focus on the creation of visually consistent and         easy-to-comprehend reports. You can also refer to an  example example of a simple report that illustrates         the best practices described here. Header Layout A report can include two types of headers: The  report header  appears on the first         page of the report, and the  page header  appears on the pages of the report. By         default, the page header appears on all pages of the report, but you can configure it to         appear on pages starting from the second one. You should always insert both the report         header and the page header into your report. If either of them is absent, you can         right-click the report area outside of any section and select  Report           Header  or  Page Header . On printing, the report header is placed right after the page         header. The report header and the page header should each consist of two sections. To split any         section into two sections, right-click the section and select  Duplicate           section . To make the page header appear on pages starting from the second one (rather than on all         pages), you should set the  PrintOnFirstPage  property to  False          on all sections that represent the page header and footer. The first section of the report header should have the following layout: On the left side of the report header, you should place the name of the report and the           following mandatory fields below it, with each field represented by two text boxes: Company Ledger  (if it is included in your report parameters) Branch  (if it is included in your report parameters) On the right side of the report header, you should place the following mandatory fields,           with each field represented by two text boxes: User Date Page If additional fields from the report parameters should be printed on the report header,           put the fields in the middle part of the header in one column or two columns. For information about how to set the values of the mandatory fields, see the  Parameter           Values Parameter Values section of this topic. The figure below shows an example of the layout of a report header. Example of a report header The first section of the page header should have the following layout: On the left side of the report, you should put the name of the report. On the right side of the report, you should put the  Page  field. No report parameters are displayed on the page header. The second section of both the report header and page header should contain text boxes with         labels for columns. The following screenshot shows the view of the report header in the  Acumatica Report                         Designer. Example of the report header in the Report Designer General Layout Properties The table below shows the recommended properties for the layout of the whole report and all         controls the report includes. Description Value StylesTemplate  property of the report TemplateReport.rpx 1 NavigationTree  property of the report False LayoutUnit  property of the report Pixel Width  property of the report 1026px Margin from the left border of the report 4px Margin from the right border of the report 4px Vertical margin between two text boxes 4px Horizontal margin between the text box with the label and the text box with the                 value 0px Height of the text box with the report name 16px Height of the other text boxes 14px 1 The template file should reside in the same directory as the report. Recommended Predefined Styles For any visual element of the report, you can set one of the predefined styles. You should         assign specific predefined styles to the elements listed in the following table. To use the         predefined styles, you should specify the template for the report by setting the            StylesTemplate  property to  TemplateReport.rpx . This file is         located in the same folder that contains the default reports provided with  Acumatica ERP. To display report properties in the  Properties  view, click the         little square in the upper left corner of the designer area. Element Style name Text box with the report name Report Name Text boxes for both labels and values of report parameters in the header  Report Params The report or page header section with column names ColumnsHeaderSection The group header sections with information on the grouping item GroupHighlight The group header section with column names for the display of detail                 records GroupL1Highlight Text boxes for column names Heading 1 Text boxes for total amounts of a group Heading 1 Text boxes for displaying regular data Normal Abbreviations for Column Names The following table shows the recommended abbreviations for column names. Full column name Short column name Beginning Balance Beg. Balance Ending Balance End. Balance Financial Period Fin. Period Subaccount Sub. Reference Number Ref. Nbr. Batch Number Batch Nbr. Document Doc. Currency Cur. Original Orig. Transaction Tran. Currency Column Before an Amount Column In any details view, any column representing an amount should be preceded with the currency         column. If a column representing an amount immediately follows another such column and the         two columns have the same currency (such as debit amount and credit amount in journal         transactions), you should insert only one currency column—before the first of these         two columns. Parameter Names When any of the following fields is used as a report parameter to specify a range of         values, the name should start with  From  or  To . The name of a report parameter is set on the  Parameters  tab of            Schema Builder  in the  Prompt  field. If you         don't specify the name in the  Prompt  field, the parameter won't be         shown on the report webpage. Field Display name of the parameter Display name of the parameter Period From Period To Period Date From Date To Date Account From Account To Account Subaccount From Subaccount To Subaccount When the name of a field ends with  ID , the name of the corresponding parameters         should not include  ID . The fields to which this rule is applied are listed in the         table below. Field Display name of the parameter Vendor ID Vendor Customer ID Customer Branch ID Branch Tax Agency ID Tax Agency Account ID Account Parameter Values The table below describes the recommended way to display the values of the mandatory fields         displayed in the header. First text box—Value Second text box—Value Company: =Report.GetDefUI('RowCompanyBAccount.AcctName') Ledger: =[@LedgerID] 1 Branch: =[@BranchID] 1 User: =Report.GetDefUI('RowAccessInfo.DisplayName') Date: =Today() Page: =PageOf() 1 Insert the actual name of the parameter that you specified in the            Schema Builder . ]]></column>
		</row>
		<row PageID="1ebc9a69-e048-4f6e-aa68-a3fc88605df0" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="bfda626c-b3b2-46d3-8882-da08c41bc1dc" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This example illustrates best practices in report design for the Acumatica ERP application. To implement the sample report, you need to have the Acumatica Report                         Designer and an instance of the Acumatica ERP application installed.{br}

The report will display data records of a scheduled batch with their details—journal transactions. By ''scheduled batch'', we mean a batch that is processed according to the related schedule. The report will select batches by the '''Scheduled''' field, which equals ''true'' when a schedule is associated with the batch. By using the parameters of the report, you can filter batches by a ledger, branch, or batch number (to display details of a specific batch).
==Building the Data Schema for the Report==
#In the '''Schema Builder''' window, load the schema of the website by specifying the URL of the application and valid credentials, and add the Batch table and GLTran (PX.Objects.GL.GLTran) table to the report (see the screenshot below). [anchor|#image_kcr_hsc_tl][image:UserGuide/Images/ReportGuidelines_3.png|popup|Loading schema and selecting tables for the report|450px]
#Configure the relationship between two tables with the following propeties: 
#*'''Parent Table''': ''Batch''
#* '''Join Type''': ''Left''
#* '''Child Table''': ''GLTran''
#* '''Parent Field''': ''BatchNbr''
#* '''Link Condition''': ''Equal''
#* '''Child Field''': ''BatchNbr''
#On the '''Parameters''' tab, add three parameters (Branch, Ledger, and Batch) with the following properties.
#:{| class="checklist" | width="100%" 
|- 
!width="25%" ! Property
!width="25%" ! Branch parameter
!width="25%" ! Ledger parameter
!width="25%" ! Batch parameter
|- 
| Name
| BranchID
| LedgerID
| BatchID
|- 
| Data Type
| String
| String
| String
|- 
| View Name
| =&#91;Batch.BranchID&#93;
| =&#91;Batch.LedgerID&#93;
| =&#91;Batch.BatchNbr&#93;
|- 
| Prompt
| Batch
| Ledger
| Batch
|- 
| Column Span
| 2
| 2
| 2
|- 
| Allow Null
| True
| True
| True
|- 
| Visible
| True
| True
| True
|}
#:((({S:Warn}In the '''View Name''' property, you specify the data field from which the report should take the display options for the parameter (such as the type of the control for entering a value).
)))
#Specify filtering conditions to restrict the set of data (selecting only scheduled batches) and use the report parameters.
#:{| class="checklist" | width="100%" 
|- 
!width="11%" ! Braces
!width="19%" ! Data Field
!width="19%" ! Condition
!width="19%" ! Value1
!width="11%" ! Braces
!width="19%" ! Operator
|- 
| 
| Batch.Scheduled
| Equal
| True
| 
| And
|- 
| (
| Batch.BranchID
| Equal
| @BranchID
| 
| Or
|- 
| 
| @BranchID
| IsNull
| 
| )
| And
|- 
| (
| Batch.LedgerID
| Equal
| @LedgerID
| 
| Or
|- 
| 
| @LedgerID
| IsNull
| 
| )
| And
|- 
| (
| Batch.BatchNbr
| Equal
| @BatchID
| 
| Or
|- 
| 
| @BatchID
| IsNull
| 
| )
| And
|}
#:((({S:Warn}You can use the parameters of your report to build filtering conditions in any way you need. Typically, as the example above shows, you check whether some field value equals the parameter value or the parameter value is null (not specified).
)))

==Specifying General Settings for the Report==
To specify general report settings, click the square button at the upper left corner of the designer and set the following properties for the report:[anchor|#ul_hf2_vyd_tl]
*'''StylesTemplate''': ''TemplateReport.rpx''
* '''NavigationTree''': ''False''
* '''GridSize''': ''4px''; ''4px''
* '''Excel Mode''': ''Manual''
* '''LayoutUnit''': ''Pixel''
* '''Width''': ''1026px''

==Preparing the Header==[anchor|#ol_y5b_2xj_tl]
#Add the report header and page header to the report, and split each header into two sections by using the '''Duplicate Section''' command.
#Set the following properties for the sections that represent the report header and footer and the page header and footer.
#:{| class="checklist" | width="100%" 
|- 
!width="25%" ! Section
!width="25%" ! StyleName
!width="25%" ! PrintOnFirstPage
!width="25%" ! Height
|- 
| reportHeaderSection1
| 
| 
| 56px
|- 
| reportHeaderSection2
| ColumnsHeaderSection
| 
| 24px
|- 
| pageHeaderSection1
| 
| False
| 20px
|- 
| pageHeaderSection2
| ColumnsHeaderSection
| False
| 24px
|}
#Add and align the text boxes for the report name, mandatory parameters, and other report parameters as described in the [HelpRoot_ReportingTools\ReportGuidelines#header_layout|recommendations]. The table below gives an example of the settings for the text boxes.
#:{| class="checklist" | width="100%" 
|- 
!width="50%" ! Value
!width="16%" ! StyleName
!width="16%" ! Location
!width="16%" ! Size
|- 
| Scheduled Batches
| Report Name
| 4px; 0px
| 244px; 16px
|- 
| Company:
| Report Params
| 4px; 20px
| 76px; 14px
|- 
| =Report.GetDefUI(&rsquo;RowCompanyBAccount.{br}

AcctName&rsquo;)
| Report Params
| 80px; 20px
| 168px; 14px
|- 
| Ledger:
| Report Params
| 4px; 38px
| 76px; 14px
|- 
| =&#91;@LedgerID&#93;
| Report Params
| 80px; 38px
| 168px; 14px
|- 
| Branch:
| Report Params
| 4px; 56px
| 76px; 14px
|- 
| =&#91;@BranchID&#93;
| Report Params
| 80px; 56px
| 168px; 14px
|- 
| Batch:
| Report Params
| 340px; 20px
| 76px; 14px
|- 
| =&#91;@BatchID&#93;
| Report Params
| 76px;14px
| 168px; 14px
|- 
| User:
| Report Params
| 916px; 20px
| 32px; 14px
|- 
| =Report.GetDefUI(&rsquo;RowAccessInfo.DisplayName&rsquo;)
| Report Params
| 948px; 20px
| 76px; 14px
|- 
| Date:
| Report Params
| 916px; 38px
| 32px; 14px
|- 
| =Today()
| Report Params
| 948px; 38px
| 76px; 14px
|- 
| Page:
| Report Params
| 916px; 56px
| 32px; 14px
|- 
| =PageOf
| Report Params
| 948px; 56px
| 76px; 14px
|}
#:((({S:Warn}You can copy a group of controls and paste them into the same section or another section. To select multiple controls, click them one by one while pressing the Shift key. You can also set a property for all selected controls at once.
)))
#:For the label text boxes of the Ledger, Branch, and Batch parameters, set the '''VisibleExpr''' property to the following values:
#*''=(&#91;@LedgerID&#93;&lt;&gt;Null)''
#* ''=(&#91;@BranchID&#93;&lt;&gt;Null)''
#* ''=(&#91;@BatchID&#93;&lt;&gt;Null)''
#:As a result, these text boxes will be displayed only when a user specifies parameter values for the report and runs it.
#Add text boxes with the properties shown in the following table to the section named ''reportHeaderSection2''. The text boxes will represent column headers for batch records.
#:{| class="checklist" | width="100%" 
|- 
!width="21%" ! Value
!width="21%" ! StyleName
!width="21%" ! Style—Text Align
!width="17%" ! Location
!width="17%" ! Size
|- 
| Batch Nbr.
| Heading 1
| 
| 4px; 4px
| 68px; 14px
|- 
| Ledger
| Heading 1
| 
| 72px; 4px
| 72px; 14px
|- 
| Description
| Heading 1
| 
| 144px; 4px
| 272px; 14px
|- 
| Created By
| Heading 1
| 
| 616px; 4px
| 112px; 14px
|- 
| Last Modified By
| Heading 1
| 
| 728px; 4px
| 112px; 14px
|- 
| Currency
| Heading 1
| Right
| 840px; 4px
| 64px; 14px
|- 
| Control Total
| Heading 1
| Right
| 904px; 4px
| 116px; 14px
|}
#:((({S:Warn}You can use a predefined style and specify additional display properties in the '''Style''' group of properties.
)))
#:The same column headers should be placed in ''pageHeaderSection2''. To copy column headers from the report header, select all text boxes in ''reportHeaderSection2'', right-click them, select '''Copy''', right-click ''pageHeaderSection2'', and click '''Paste'''.

==Preparing the Main Part of the Report==[anchor|#ol_isx_yyj_tl]
#Add one group by right-clicking the report outside of any section and selecting '''Add New Group'''. Duplicate the group header and the group footer. Open the '''Schema Builder''', open the '''Sorting and Grouping''' tab, select ''group1'', and specify the following properties for the grouping:
#*'''Data Field''': ''Batch.BatchNbr''
#* '''Sort Direction''': ''Ascending''
#:((({S:Warn}You can duplicate group headers and footers any number of times. You can use additional group headers and footers to add spacing between rows. The numbers of headers and footers doesn&rsquo;t have to be the same. However, you add a new group only to add a new level of grouping data.
)))
#Set the following properties for the group headers, footers, and detail section.
#:{| class="checklist" | width="100%" 
|- 
!width="33%" ! Section
!width="33%" ! StyleName
!width="33%" ! Height
|- 
| groupHeaderSection1
| GroupHighlight
| 16px
|- 
| groupHeaderSection2
| GroupL1Highlight
| 20px
|- 
| groupFooterSection1
| 
| 20px
|- 
| groupFooterSection2
| 
| 16px
|- 
| detailSection1
| 
| 16px
|}
#Copy the text boxes with column names from the report or page header to ''groupHeaderSection1'', shift them to the top of the section, and set the '''StyleName''' property to ''Normal''. Set '''Value''' to the corresponding Batch data fields:
#*''=&#91;Batch.BatchNbr&#93;''
#* ''=&#91;Batch.LedgerID&#93;''
#* ''=&#91;Batch.Description&#93;''
#* ''=&#91;Batch.CreatedByID&#93;''
#* ''=&#91;Batch.LastModifiedByID&#93;''
#* ''=&#91;Batch.CuryID&#93;''
#* ''=&#91;Batch.CuryControlTotal&#93;''
#Add text boxes with the following properties to ''groupHeaderSection2'' to represent the column headers for journal transaction records.
#:{| class="checklist" | width="100%" 
|- 
!width="21%" ! Value
!width="21%" ! StyleName
!width="21%" ! Style—Text Align
!width="17%" ! Location
!width="17%" ! Size
|- 
| Branch
| Heading 1
| 
| 4px; 4px
| 68px; 14px
|- 
| Account
| Heading 1
| 
| 72px; 4px
| 72px; 14px
|- 
| Sub.
| Heading 1
| 
| 144px; 4px
| 136px; 14px
|- 
| Ref. Nbr.
| Heading 1
| 
| 280px; 4px
| 116px; 14px
|- 
| Description
| Heading 1
| 
| 396px; 4px
| 332px; 14px
|- 
| Currency
| Heading 1
| Left
| 728px; 4px
| 60px; 14px
|- 
| Debit
| Heading 1
| Right
| 788px; 4px
| 116px; 14px
|- 
| Credit
| Heading 1
| Right
| 904px; 4px
| 116px; 14px
|}
#Copy the text boxes with column names from ''groupHeaderSection2'' to ''detailSection1'', shift them to the top of the section, and set the '''StyleName''' property to ''Normal'' for all of them. Set '''Value''' to the corresponding GLTran data fields:
#*''=&#91;GLTran.BranchID&#93;''
#* ''=&#91;GLTran.AccountID&#93;''
#* ''=&#91;GLTran.SubID&#93;''
#* ''=&#91;GLTran.RefNbr&#93;''
#* ''=&#91;GLTran.TranDesc&#93;''
#* ''=&#91;GLTran.CuryID&#93;''
#* ''=&#91;GLTran.CuryDebitAmt&#93;''
#* ''=&#91;GLTran.CuryCreditAmt&#93;''
#In the first group footer, add four text boxes to ''groupFooterSection1'' and set the following properties for them. These text boxes will be used to display total amounts for a batch right under the '''Debit''' and '''Credit''' columns in the first group footer. 
#:{| class="checklist" | width="100%" 
|- 
!width="27%" ! Value
!width="18%" ! StyleName
!width="18%" ! Style—Text Align
!width="18%" ! Location
!width="18%" ! Size
|- 
| Batch Total:
| Heading 1
| 
| 616px; 4px
| 112px; 14px
|- 
| =&#91;Batch.CuryID&#93;
| Heading 1
| Left
| 728px; 4px
| 60px; 14px
|- 
| =&#91;Batch.CuryDebitTotal&#93;
| Heading 1
| Right
| 788px; 4px
| 116px; 14px
|- 
| =&#91;Batch.CuryCreditTotal&#93;
| Heading 1
| Right
| 904px; 4px
| 116px; 14px
|}
#:((({S:Warn}You can use aggregation functions to perform calculations over grouped items. For example, you could replace ''=&#91;Batch.CuryDebitTotal&#93;'' with ''=Sum(&#91;GLTran.CuryDebitAmt&#93;)'', which would calculate a sum over all child journal transactions for each parent batch. However, here we use the data field of the parent, because it already contains the sum.
)))
#:To draw a line above the total amounts, add a line to the ''groupFooterSection1'' and properly align it. You can set the following properties for the line:
#*'''Location''': ''612px; 2px''
#* '''Size''': ''414px; 2px''
#:The X coordinate of the location added to the width should be less or equal to the overall width of the report for the line to not extend beyond the report.

==Publishing the Report==
To make the report accessible through the website, you should add it to the Site Map ('''System''' > '''Customization''' > '''Manage''' > '''Site Map''') of your Acumatica ERP application. For example, you can add this report to the '''Finance''' > '''General Ledger''' > '''Reports''' > '''Audit''' section of the site. You can add a new node with the following properties:[anchor|#ul_ypb_zjk_tl]
*'''ScreenID''': ''GL690011''
* '''Title''': ''Scheduled Batches''
* '''Url''': ''~/Frames/ReportLauncher.aspx?ID=&lt;YouReportName&gt;.rpx''
]]></column>
			<column name="PlainText"><![CDATA[Sample Report This example illustrates best practices in report design for the  Acumatica ERP application. To implement the sample report, you need to have the  Acumatica Report                         Designer and an instance of the  Acumatica ERP application installed. The report will display data records of a scheduled batch with their details—journal         transactions. By  scheduled batch , we mean a batch that is processed according to the         related schedule. The report will select batches by the  Scheduled          field, which equals  true  when a schedule is associated with the batch. By using the         parameters of the report, you can filter batches by a ledger, branch, or batch number (to         display details of a specific batch). Building the Data Schema for the Report In the  Schema Builder  window, load the schema of the website by           specifying the URL of the application and valid credentials, and add the Batch table and           GLTran (PX.Objects.GL.GLTran) table to the report (see the screenshot below).  Loading schema and selecting tables for the report Configure the relationship between two tables with the following propeties:  Parent Table :  Batch Join Type :  Left Child Table :  GLTran Parent Field :  BatchNbr Link Condition :  Equal Child Field :  BatchNbr On the  Parameters  tab, add three parameters (Branch, Ledger, and           Batch) with the following properties. Property Branch parameter Ledger parameter Batch parameter Name BranchID LedgerID BatchID Data Type String String String View Name =[Batch.BranchID] =[Batch.LedgerID] =[Batch.BatchNbr] Prompt Batch Ledger Batch Column Span 2 2 2 Allow Null True True True Visible True True True In the  View Name  property, you specify the data field             from which the report should take the display options for the parameter (such as the             type of the control for entering a value). Specify filtering conditions to restrict the set of data (selecting only scheduled           batches) and use the report parameters. Braces Data Field Condition Value1 Braces Operator Batch.Scheduled Equal True And ( Batch.BranchID Equal @BranchID Or @BranchID IsNull ) And ( Batch.LedgerID Equal @LedgerID Or @LedgerID IsNull ) And ( Batch.BatchNbr Equal @BatchID Or @BatchID IsNull ) And You can use the parameters of your report to build filtering conditions in             any way you need. Typically, as the example above shows, you check whether some field             value equals the parameter value or the parameter value is null (not           specified). Specifying General Settings for the Report To specify general report settings, click the square button at the upper left corner of the         designer and set the following properties for the report: StylesTemplate :  TemplateReport.rpx NavigationTree :  False GridSize :  4px ;  4px Excel Mode :  Manual LayoutUnit :  Pixel Width :  1026px Preparing the Header Add the report header and page header to the report, and split each header into two           sections by using the  Duplicate Section  command. Set the following properties for the sections that represent the report header and           footer and the page header and footer. Section StyleName PrintOnFirstPage Height reportHeaderSection1 56px reportHeaderSection2 ColumnsHeaderSection 24px pageHeaderSection1 False 20px pageHeaderSection2 ColumnsHeaderSection False 24px Add and align the text boxes for the report name, mandatory parameters, and other report           parameters as described in the  recommendations recommendations. The table below gives an example of the settings for the text             boxes. Value StyleName Location Size Scheduled Batches Report Name 4px; 0px 244px; 16px Company: Report Params 4px; 20px 76px; 14px =Report.GetDefUI('RowCompanyBAccount. AcctName') Report Params 80px; 20px 168px; 14px Ledger: Report Params 4px; 38px 76px; 14px =[@LedgerID] Report Params 80px; 38px 168px; 14px Branch: Report Params 4px; 56px 76px; 14px =[@BranchID] Report Params 80px; 56px 168px; 14px Batch: Report Params 340px; 20px 76px; 14px =[@BatchID] Report Params 76px;14px 168px; 14px User: Report Params 916px; 20px 32px; 14px =Report.GetDefUI('RowAccessInfo.DisplayName') Report Params 948px; 20px 76px; 14px Date: Report Params 916px; 38px 32px; 14px =Today() Report Params 948px; 38px 76px; 14px Page: Report Params 916px; 56px 32px; 14px =PageOf Report Params 948px; 56px 76px; 14px You can copy a group of controls and paste them into the same section or             another section. To select multiple controls, click them one by one while pressing the             Shift key. You can also set a property for all selected controls at once. For             the label text boxes of the Ledger, Branch, and Batch parameters, set the                VisibleExpr  property to the following values: =([@LedgerID]<>Null) =([@BranchID]<>Null) =([@BatchID]<>Null) As a result, these text boxes will be displayed only when a user specifies             parameter values for the report and runs it. Add text boxes with the properties shown in the following table to the section named              reportHeaderSection2 . The text boxes will represent column headers for batch             records. Value StyleName Style—Text Align Location Size Batch Nbr. Heading 1 4px; 4px 68px; 14px Ledger Heading 1 72px; 4px 72px; 14px Description Heading 1 144px; 4px 272px; 14px Created By Heading 1 616px; 4px 112px; 14px Last Modified By Heading 1 728px; 4px 112px; 14px Currency Heading 1 Right 840px; 4px 64px; 14px Control Total Heading 1 Right 904px; 4px 116px; 14px You can use a predefined style and specify additional display properties in             the  Style  group of properties. The same column headers             should be placed in  pageHeaderSection2 . To copy column headers from the report             header, select all text boxes in  reportHeaderSection2 , right-click them, select                Copy , right-click  pageHeaderSection2 , and click                Paste . Preparing the Main Part of the Report Add one group by right-clicking the report outside of any section and selecting              Add New Group . Duplicate the group header and the group footer.           Open the  Schema Builder , open the  Sorting and             Grouping  tab, select  group1 , and specify the following properties for           the grouping: Data Field :  Batch.BatchNbr Sort Direction :  Ascending You can duplicate group headers and footers any number of times. You can use             additional group headers and footers to add spacing between rows. The numbers of headers             and footers doesn't have to be the same. However, you add a new group only to add a new             level of grouping data. Set the following properties for the group headers, footers, and detail section. Section StyleName Height groupHeaderSection1 GroupHighlight 16px groupHeaderSection2 GroupL1Highlight 20px groupFooterSection1 20px groupFooterSection2 16px detailSection1 16px Copy the text boxes with column names from the report or page header to              groupHeaderSection1 , shift them to the top of the section, and set the              StyleName  property to  Normal . Set              Value  to the corresponding Batch data fields: =[Batch.BatchNbr] =[Batch.LedgerID] =[Batch.Description] =[Batch.CreatedByID] =[Batch.LastModifiedByID] =[Batch.CuryID] =[Batch.CuryControlTotal] Add text boxes with the following properties to  groupHeaderSection2  to represent           the column headers for journal transaction records. Value StyleName Style—Text Align Location Size Branch Heading 1 4px; 4px 68px; 14px Account Heading 1 72px; 4px 72px; 14px Sub. Heading 1 144px; 4px 136px; 14px Ref. Nbr. Heading 1 280px; 4px 116px; 14px Description Heading 1 396px; 4px 332px; 14px Currency Heading 1 Left 728px; 4px 60px; 14px Debit Heading 1 Right 788px; 4px 116px; 14px Credit Heading 1 Right 904px; 4px 116px; 14px Copy the text boxes with column names from  groupHeaderSection2  to              detailSection1 , shift them to the top of the section, and set the              StyleName  property to  Normal  for all of them. Set              Value  to the corresponding GLTran data fields: =[GLTran.BranchID] =[GLTran.AccountID] =[GLTran.SubID] =[GLTran.RefNbr] =[GLTran.TranDesc] =[GLTran.CuryID] =[GLTran.CuryDebitAmt] =[GLTran.CuryCreditAmt] In the first group footer, add four text boxes to  groupFooterSection1  and set the           following properties for them. These text boxes will be used to display total amounts for           a batch right under the  Debit  and  Credit            columns in the first group footer.  Value StyleName Style—Text Align Location Size Batch Total: Heading 1 616px; 4px 112px; 14px =[Batch.CuryID] Heading 1 Left 728px; 4px 60px; 14px =[Batch.CuryDebitTotal] Heading 1 Right 788px; 4px 116px; 14px =[Batch.CuryCreditTotal] Heading 1 Right 904px; 4px 116px; 14px You can use aggregation functions to perform calculations over grouped             items. For example, you could replace  =[Batch.CuryDebitTotal]  with                =Sum([GLTran.CuryDebitAmt]) , which would calculate a sum over all child journal             transactions for each parent batch. However, here we use the data field of the parent,             because it already contains the sum. To draw a line above the total amounts,             add a line to the  groupFooterSection1  and properly align it. You can set the             following properties for the line: Location :  612px; 2px Size :  414px; 2px The X coordinate of the location added to the width should be less or equal to the             overall width of the report for the line to not extend beyond the report. Publishing the Report To make the report accessible through the website, you should add it to the Site Map ( System Customization Manage Site Map ) of your  Acumatica ERP application. For example, you can add this report to the  Finance General Ledger Reports Audit  section of the site. You can add a new node with the following         properties: ScreenID :  GL690011 Title :  Scheduled Batches Url :              ~/Frames/ReportLauncher.aspx?ID=<YouReportName>.rpx ]]></column>
		</row>
		<row PageID="92ad4ccd-b6fc-4770-8b74-bf0330bf133d" Language="en-US" PageRevisionID="1" PlainText="Third-Party Reporting Solutions This part of the guide contains data about third-party independent software vendor (ISV)         reporting solutions. For more information about the third-party products and ISV contacts,         see  Extentions Extentions section of the  Acumatica ERP website.  Acumatica ERP third-party solutions are intended to assist business customers and generally not used         for individual consumer needs.  Acumatica Inc.  has         no responsibility or liability of any kind for the third-party software, solutions,         services, and training listed on the site.  Acumatica Inc.  International         does not warrant third-party software applications. You are solely responsible for         selecting, using, and evaluating any third-party offerings. In This Part BI360DexSplicityFYIsoftNetStockBizNetVelixo Reports" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="cba6d793-0eb0-2d1b-da8d-13cf188f08c8" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#section_imb_31l_5mb]
This part of the guide contains data about third-party independent software vendor (ISV) reporting solutions. For more information about the third-party products and ISV contacts, see [https://www.acumatica.com/extensions/|Extentions] section of the Acumatica ERP website.((({S:Warn} Acumatica ERP third-party solutions are intended to assist business customers and generally not used for individual consumer needs. [anchor|#full_company_name]Acumatica Inc. has no responsibility or liability of any kind for the third-party software, solutions, services, and training listed on the site. Acumatica Inc. International does not warrant third-party software applications. You are solely responsible for selecting, using, and evaluating any third-party offerings.
)))[anchor|#section_jmb_31l_5mb]
==In This Part==[anchor|#_f78e6674-dd2f-4c1f-8bdf-5b47616f22fa]
*[HelpRoot_ReportingTools\RP_3rdParty_BI360|BI360]
*[HelpRoot_ReportingTools\RP_3rdParty_DexSplicity|DexSplicity]
*[HelpRoot_ReportingTools\RP_3rdParty_FYISoft|FYIsoft]
*[HelpRoot_ReportingTools\RP_3rdParty_NetStock|NetStock]
*[HelpRoot_ReportingTools\RP_3rdParty_BizNet|BizNet]
*[HelpRoot_ReportingTools\RP_3rdParty_VelixoReports|Velixo Reports]
]]></column>
		</row>
		<row PageID="8c49c13b-134a-4505-9644-789e4838ae69" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1a8944a4-7e81-1b0e-eac9-62d6c8b194a3" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#section_tct_k1l_5mb]
BI360 is a corporate performance management independent software vendor (ISV) solution certified by Acumatica ERP.{br}

Solver provides BI360, the leading corporate performance management (CPM) software suite for companies of all sizes. Solver specializes in providing world-class financial reporting, budgeting, and analysis with push-button access to all data sources that drive company-wide profitability. BI360 is available for cloud and on-premise deployment, focusing on four key areas of analytics:[anchor|#_2a223072-9689-496b-8267-b60df4e2e4f9]
*Reporting and consolidations (Excel- and web-based)
*Budgeting and forecasting (Excel- and web-based)
*Dashboards (web-based)
*Data warehouse (including the ability to combine Acumatica ERP data with data from other sources)
{br}

BI360 enables world-class decisions across your organization and extends the value of your Acumatica ERP deployment. BI360 supports both cloud-based and on-premise deployments of Acumatica ERP.{br}

The key features of BI360 include the following:[anchor|#_aa88bc7e-0d47-495d-b09f-7d2a880900ad]
*Ability to design reports and budget forms in a powerful Excel add-in
*Access to reports and budgets through Excel, web, mobile devices, and email
*Ability to create both general ledger and subledger reports and dashboards for Acumatica ERP
*Ability to drill down to details
*Modern and detailed user security
*Trees (for easy company or account roll-ups)
*Currency conversion
*Allocations
*Both direct (live) and data warehouse-based integration to Acumatica ERP
*Cloud or on-premises options
*FRx conversion (for Acumatica ERP customers migrating from Dynamics SL and GP)
]]></column>
			<column name="PlainText"><![CDATA[BI360 BI360 is a corporate performance management independent software vendor (ISV) solution         certified by  Acumatica ERP. Solver provides BI360, the leading corporate performance management (CPM) software suite         for companies of all sizes. Solver specializes in providing world-class financial reporting,         budgeting, and analysis with push-button access to all data sources that drive company-wide         profitability. BI360 is available for cloud and on-premise deployment, focusing on four key         areas of analytics: Reporting and consolidations (Excel- and web-based) Budgeting and forecasting (Excel- and web-based) Dashboards (web-based) Data warehouse (including the ability to combine  Acumatica ERP data with data from other sources) BI360 enables world-class decisions across your organization and extends the value of your            Acumatica ERP deployment. BI360 supports both cloud-based and on-premise deployments of  Acumatica ERP. The key features of BI360 include the following: Ability to design reports and budget forms in a powerful Excel add-in Access to reports and budgets through Excel, web, mobile devices, and email Ability to create both general ledger and subledger reports and dashboards for  Acumatica ERPAbility to drill down to details Modern and detailed user security Trees (for easy company or account roll-ups) Currency conversion Allocations Both direct (live) and data warehouse-based integration to  Acumatica ERPCloud or on-premises options FRx conversion (for  Acumatica ERP customers migrating from Dynamics SL and GP) ]]></column>
		</row>
		<row PageID="07c45880-cf46-4e34-a2b0-396bba91140d" Language="en-US" PageRevisionID="1" Content="[anchor|#section_asm_w1l_5mb]&#xA;DexSplicity is a powerful yet simplified Excel Add-in reporting tool. It is easy to use and intended to provide the ability to access any data, such as GL, ERP, CRM, HR, and product. The tool combines drag-and-drop report design with one-click data refresh in reports that can include any formula, format, or graph available with Excel features.{br}&#xA;&#xA;The key features of DexSplicity include the following:[anchor|#_cf68d3d5-f450-43ab-838a-60a2b741ea82]&#xA;*One-click data refresh&#xA;*Ability to access a variety of data&#xA;*Ability to combine data from multiple sources&#xA;*Drag-and-drop report design&#xA;*Custom drill-down capabilities&#xA;*Slicers for data analysis&#xA;*Ability to apply and publish hierarchies&#xA;*Any custom formatting available in Excel&#xA;*Any formula available in Excel&#xA;*Ability to create dashboards using Excel graphing&#xA;" PlainText="DexSplicity DexSplicity is a powerful yet simplified Excel Add-in reporting tool. It is easy to                 use and intended to provide the ability to access any data, such as GL, ERP, CRM,                 HR, and product. The tool combines drag-and-drop report design with one-click data                 refresh in reports that can include any formula, format, or graph available with                 Excel features. The key features of DexSplicity include the following: One-click data refresh Ability to access a variety of data Ability to combine data from multiple sources Drag-and-drop report design Custom drill-down capabilities Slicers for data analysis Ability to apply and publish hierarchies Any custom formatting available in Excel Any formula available in Excel Ability to create dashboards using Excel graphing " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e0859dbb-6cdc-1567-d037-331cd5ae6508" RecordSourceID="22377" />
		<row PageID="9c88ffc8-357c-4b2f-a21a-d5bccd0edf6c" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="163485c5-9ad9-6675-83dd-d417a4c78486" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#section_jp2_cbl_5mb]
FYIsoft is a cloud financial reporting tool that works easily with Acumatica ERP and is ideal for companies with complex consolidation and reporting requirements. It gives administrators the ability to migrate reports from an ERP system and use FRx or Management Reporter, saving many hours spent on recreating reports manually. {br}

FYIsoft greatly enhances the ability to produce fast, accurate financial reports and has been proven to cut more than 10 days off the period-close process. With a faster period close, finance teams spend less time generating and manually correcting reports, and more time analyzing data and making sound business decisions.{br}

The key features of FYIsoft include the following:[anchor|#_ed22278f-0543-472f-8f8e-5358ad14eacc]
*Multicompany consolidations
*Global currency conversion
*Superior interactive drill-down capabilities on the account or transaction level
*Easy, flexible reporting setup with a unique “one and done” approach
*Advanced, automated report distribution, accessible 24/7 from any device
*The ability to merge non-financial data into reports to calculate KPIs
*The ability to email or distribute reports easily to individual users or to a distribution group in Excel or PDF format
*Security settings at the report organization (tree) level, so that you can restrict users to certain departments or subaccounts
*Report scheduling, allowing you to schedule reports to run at a certain time of day automatically
*User-friendly interface with a very easy learning curve
]]></column>
			<column name="PlainText"><![CDATA[FYIsoft FYIsoft is a cloud financial reporting tool that works easily with  Acumatica ERP and is ideal for companies with complex consolidation and reporting requirements. It         gives administrators the ability to migrate reports from an ERP system and use FRx or         Management Reporter, saving many hours spent on recreating reports manually.  FYIsoft greatly enhances the ability to produce fast, accurate financial reports and has         been proven to cut more than 10 days off the period-close process. With a faster period         close, finance teams spend less time generating and manually correcting reports, and more         time analyzing data and making sound business decisions. The key features of FYIsoft include the following: Multicompany consolidations Global currency conversion Superior interactive drill-down capabilities on the account or transaction level Easy, flexible reporting setup with a unique “one and done” approach Advanced, automated report distribution, accessible 24/7 from any device The ability to merge non-financial data into reports to calculate KPIs The ability to email or distribute reports easily to individual users or to a             distribution group in Excel or PDF format Security settings at the report organization (tree) level, so that you can restrict             users to certain departments or subaccounts Report scheduling, allowing you to schedule reports to run at a certain time of day             automatically User-friendly interface with a very easy learning curve ]]></column>
		</row>
		<row PageID="4f046a9b-3c56-4c85-9be5-beaad90053a5" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ed131da7-4688-ff52-0457-3c8a66527a89" RecordSourceID="22377">
			<column name="Content"><![CDATA[
NetStock is an affordable, cloud-based application that can be deployed quickly and easily. It offers inventory-based companies a sophisticated yet easy-to-use tool for the optimization of their inventory.{br}

The benefits include a reduction in excess inventory, minimized stock-outs, and optimal purchase orders produced in minutes. This results in increased profits by freeing working capital, reducing carrying costs, increasing sales, and improving productivity.{br}

Through an intuitive dashboard design, companies gain amazing visibility into their inventory health; focus on the most impactful areas of improvement; improved decision-making and much more. All accessible on the web from any device, anytime, anywhere.{br}

The key features of NetStock include the following:[anchor|#_0ce2acf4-eb45-409d-b550-f08ee78874bf]
*Dashboard for quick health check of inventory
*Item classification based on both value and velocity
*Sophisticated forecasting algorithms automatically assigned to each item or location
*Recommended order schedules with easy upload to Acumatica ERP
*Stocking policies and measurement against goals
*Component demand based on bill of materials
*Supplier performance and forecast risk assessments
]]></column>
			<column name="PlainText"><![CDATA[NetStock NetStock is an affordable, cloud-based application that can be deployed quickly and easily.         It offers inventory-based companies a sophisticated yet easy-to-use tool for the         optimization of their inventory. The benefits include a reduction in excess inventory, minimized stock-outs, and optimal         purchase orders produced in minutes. This results in increased profits by freeing working         capital, reducing carrying costs, increasing sales, and improving productivity. Through an intuitive dashboard design, companies gain amazing visibility into their         inventory health; focus on the most impactful areas of improvement; improved decision-making         and much more. All accessible on the web from any device, anytime, anywhere. The key features of NetStock include the following: Dashboard for quick health check of inventory Item classification based on both value and velocity Sophisticated forecasting algorithms automatically assigned to each item or             location Recommended order schedules with easy upload to  Acumatica ERPStocking policies and measurement against goals Component demand based on bill of materials Supplier performance and forecast risk assessments ]]></column>
		</row>
		<row PageID="6b4a4363-dab9-4002-a367-f2f12c689a79" Language="en-US" PageRevisionID="1" Content="&#xA;BizNet Excel Suite is an innovative and intuitive reporting solution built for Acumatica ERP. It provides a user-friendly, drag-and-drop environment with real-time access to the most accurate and current data. Built upon fundamental business disciplines and controls, BizNet solutions reduce the time spent on updating spreadsheets and make it easy for Microsoft Excel users to connect, analyze, and share real-time information.{br}&#xA;&#xA;The key features of BizNet include the following:[anchor|#_4241dfb0-c8e9-42b7-9b04-f7b3cecae3b0]&#xA;*Fully Excel-based solution&#xA;*Real-time business data&#xA;*Ability to drill down to transaction-level details&#xA;*Drag-and-drop reporting and analysis&#xA;*No additional hardware requirements&#xA;*Full implementation within a day&#xA;*Ability to build reports within minutes for even novice users&#xA;" PlainText="BizNet BizNet Excel Suite is an innovative and intuitive reporting solution built for  Acumatica ERP. It provides a user-friendly, drag-and-drop environment with real-time access to the most         accurate and current data. Built upon fundamental business disciplines and controls, BizNet         solutions reduce the time spent on updating spreadsheets and make it easy for Microsoft         Excel users to connect, analyze, and share real-time information. The key features of BizNet include the following: Fully Excel-based solution Real-time business data Ability to drill down to transaction-level details Drag-and-drop reporting and analysis No additional hardware requirements Full implementation within a day Ability to build reports within minutes for even novice users " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b3ab5d7b-84a1-2f4d-d2a8-9e338651965a" RecordSourceID="22377" />
		<row PageID="0a28bb99-8818-4c01-b7b0-49209a38218a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="0e9b7fa6-bc52-d83a-d134-75c656f0e79b" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#section_vrp_tbl_5mb]
Velixo Reports is an open-source Microsoft Excel based Financial Report Writer alternative to the Analytical Report Manager (ARM) in Acumatica ERP. It is designed specifically for Acumatica ERP to take advantage of the modern technology platform that Acumatica offers.{br}

The key features of Velixo Reports include the following:[anchor|#_f498a5c7-0e97-4187-975b-2483ecf872bf]
*Velixo Reports was designed for Acumatica ERP with the cloud in mind.
*The tool uses the OData protocol, which is natively supported by Acumatica, and no direct connection to the database is needed.
* To ensure the best possible performance and to minimize round trips to the Acumatica ERP server, Velixo Reports caches frequently used data locally to a SQLite database that is updated incrementally.
*This database is managed by the add-in and is transparent to the user — no configuration is needed. 
*The add-in also builds on the expertise that its developer acquired while optimizing the ARM calculation engine in Acumatica ERP for a company with 200 branches, 16,000 general ledger accounts, and more than 10 million general ledger entries in its database. Performance is the top priority.
]]></column>
			<column name="PlainText"><![CDATA[Velixo Reports Velixo Reports is an open-source Microsoft Excel based Financial Report Writer alternative         to the Analytical Report Manager (ARM) in  Acumatica ERP. It is designed specifically for  Acumatica ERP to take advantage of the modern technology platform that  Acumatica offers. The key features of Velixo Reports include the following: Velixo Reports was designed for  Acumatica ERP with the cloud in mind. The tool uses the OData protocol, which is natively supported by Acumatica, and no           direct connection to the database is needed.  To ensure the best possible performance and to minimize round trips to the  Acumatica ERP server, Velixo Reports caches frequently used data locally to a SQLite database that is           updated incrementally. This database is managed by the add-in and is transparent to the user — no configuration           is needed.  The add-in also builds on the expertise that its developer acquired while optimizing the           ARM calculation engine in  Acumatica ERP for a company with 200 branches, 16,000 general ledger accounts, and more than 10           million general ledger entries in its database. Performance is the top priority. ]]></column>
		</row>
	</rows>
</data>