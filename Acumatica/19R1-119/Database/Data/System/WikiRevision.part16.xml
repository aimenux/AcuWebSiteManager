<?xml version="1.0" encoding="utf-8"?>
<data>
	<table name="WikiRevision">
		<col name="CompanyID" type="Int" default="Zero" />
		<col name="PageID" type="UniqueIdentifier" />
		<col name="Language" type="VarChar(50)" />
		<col name="PageRevisionID" type="Int" />
		<col name="Content" type="NVarChar(MAX)" />
		<col name="ContentHtml" type="NVarChar(MAX)" nullable="true" />
		<col name="PlainText" type="NVarChar(MAX)" />
		<col name="ApprovalByID" type="UniqueIdentifier" nullable="true" />
		<col name="ApprovalDateTime" type="DateTime" nullable="true" />
		<col name="CreatedByID" type="UniqueIdentifier" />
		<col name="CreatedDateTime" type="DateTime" />
		<col name="CompanyMask" type="VarBinary(32)" default="CompanyMaskReadOnly" />
		<col name="UID" type="UniqueIdentifier" />
		<col name="RecordSourceID" type="SmallInt" nullable="true" />
	</table>
	<rows>
		<row PageID="a4be22b4-ae3b-43e0-a004-150a98b7cda8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8ebd2f04-5af8-8d5e-4666-370084b5ac48" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 New implementation can be a challenging task because it requires significant time and resources. There are many known approaches to implementing a complex ERP system, each with its own advantages and drawbacks.{br}

This guide takes a moderate approach that, on one hand, does not require thorough planning performed in advance and on the other hand does not assume that configuring will be performed without any planning at all. This approach outlines the preparation and planning work that should be performed before you implement each module or capability. However, this approach assumes that you had performed extensive analysis of your business processes at the time when you were evaluating which ERP solution would fit your business best.
==The Structure of the Guide==
Implementation Guide includes a chapter that contains an overview of the Acumatica ERP functionality and add-on features. Each of other chapters is focused on the implementation of a particular module or capability and contains a list of tasks. Generally, the order of chapters follows the order in which the respective modules or capabilities should be implemented. However, specific modules or capabilities can be implemented earlier in the process if the prerequisite tasks are completed.{br}

Most chapters include topics of the following types: [anchor|#ul_qjq_5rf_gl]
*'''Preparation''': A topic of this type describes information to be collected, decisions to be made, and other considerations you should take into account before actually configuring the module or capability. It also lists the prerequisites and dependencies that you should consider before you proceed with implementation.
*'''Configuration''': A topic of this type describes the actual configuration of the module or capability.
*'''Initialization''': A topic of this type describes how to enter initial balances and the historical data for the module.

==Implementation Tools==
 Acumatica ERP provides import scenarios, which are important tools that may significantly reduce the time you otherwise would spend on entering the data. Import scenarios can be used to import the customer and vendor accounts, stock and non-stock items, sales orders, and purchase orders. The Implementation Guide recommends using import scenarios for all tasks where it is possible. {br}

 Acumatica ERP is installed with a number of predefined import scenarios. You can modify the predefined import scenarios as needed or create new import scenarios from scratch.
==In This Guide==[anchor|#ul_p12_lql_ms]
*[HelpRoot_Implement\Impl_Features_Overview|Overview of the Acumatica ERP Features ]
*[HelpRoot_Implement\Impl_INIT|Performing Initial Configuration]
*[HelpRoot_Implement\Impl_GL|Implementing General Ledger]
*[HelpRoot_Implement\Impl_CM|Implementing Currency Management]
*[HelpRoot_Implement\Impl_CA|Implementing Cash Management]
*[HelpRoot_Implement\Impl_AP|Implementing Accounts Payable]
*[HelpRoot_Implement\Impl_TX|Implementing Taxes]
*[HelpRoot_Implement\Impl_AR|Implementing Accounts Receivable]
*[HelpRoot_ImplementChecklists\Implementation_Checklists|Implementation Checklists]
]]></column>
			<column name="PlainText"><![CDATA[ Acumatica ERP     Implementation Guide  New implementation can be a challenging task because it requires significant time and         resources. There are many known approaches to implementing a complex ERP system, each with         its own advantages and drawbacks. This guide takes a moderate approach that, on one hand, does not require thorough planning         performed in advance and on the other hand does not assume that configuring will be         performed without any planning at all. This approach outlines the preparation and planning         work that should be performed before you implement each module or capability. However, this         approach assumes that you had performed extensive analysis of your business processes at the         time when you were evaluating which ERP solution would fit your business best. The Structure of the Guide Implementation Guide includes a chapter that contains an overview of the  Acumatica ERP functionality and add-on features. Each of other chapters   is focused on the         implementation of a particular module or capability and contains a list of tasks. Generally,         the order of chapters follows the order in which the respective modules or capabilities         should be implemented. However, specific modules or capabilities can be implemented earlier         in the process if the prerequisite tasks are completed. Most chapters include topics of the following types:  Preparation : A topic of this type describes information to be collected, decisions           to be made, and other considerations you should take into account before actually           configuring the module or capability. It also lists the prerequisites and dependencies           that you should consider before you proceed with implementation. Configuration : A topic of this type describes the actual configuration of the           module or capability. Initialization : A topic of this type describes how to enter initial balances and           the historical data for the module. Implementation Tools  Acumatica ERP provides import scenarios, which are important tools that may significantly reduce the         time you otherwise would spend on entering the data. Import scenarios can be used to import         the customer and vendor accounts, stock and non-stock items, sales orders, and purchase         orders. The Implementation Guide recommends using import scenarios for all tasks where it is         possible.   Acumatica ERP is installed with a number of predefined import scenarios. You can modify the predefined         import scenarios as needed or create new import scenarios from scratch. In This Guide Overview of the Acumatica ERP Features Performing Initial ConfigurationImplementing General LedgerImplementing Currency ManagementImplementing Cash ManagementImplementing Accounts PayableImplementing TaxesImplementing Accounts ReceivableImplementation Checklists]]></column>
		</row>
		<row PageID="97edb8e5-f4e6-48d2-a895-8e961988c664" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="225c99d8-9624-7b21-bc08-154c3b06dd07" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 Acumatica ERP provides a scalable core system functionality and includes a range of add-on features. {br}

 Before you start implementing Acumatica ERP, you may find it helpful to become familiar with the functionality of the modules to be implemented and the add-on features your organization has included in the license. 
==Core Functionality==
 Acumatica ERP includes the following suites and modules, whose core functionality is briefly described in the table below.[anchor|#table_tkk_1j1_yv]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Suite/Module
!width="80%" ! Overview
|- 
| colspan="2" | '''Organization'''
|- 
|  '''Communication'''
| 
Provides users with access to such means of communication as email, notifications, announcements, activities, and tasks. The module also includes a special feature—a preconfigured Communications dashboard. 
|- 
| '''Time and Expenses'''
| 
Supports the processing of expense claims.
|- 
| '''Organization Structure'''
| Supports the configuration of the company, employee accounts, company tree, departments, positions, workgroups, and assignment maps, all of which are used across other modules.
|- 
| colspan="2" | '''Finance'''
|- 
|  '''General Ledger'''
| 
Supports the chart of accounts shared by all the branches (if any), as well as ledgers, budgets, analytical reports, recurring transactions, document batches, and various configurations of the financial year and periods, including custom financial year and periods.
|- 
| '''Cash Management'''
| 
Provides support for cash accounts, payment methods, reconciliation statements, bank deposits, funds transfers, cash flow forecasts, and credit card processing.
|- 
| '''Accounts Payable'''
| 
Provides support for vendor accounts (including those for tax agencies), credit terms, documents of multiple types, configurable approval of documents for payment, recurring transactions, ACH payments, and the 1099 form (for the United States).
|- 
| '''Accounts Receivable'''
| 
Provides support for customer accounts, documents of multiple types, recurring transactions, credit card processing, tracking of card expiration dates, configurable rules of payment auto-application, aging of credits, statements, credit management, and write-offs.
|- 
| '''Taxes'''
| Gives you the ability to create and maintain taxes (of multiple types), tax zones, and tax categories; supports automatic tax calculation and tax reporting.
|- 
| colspan="2" | '''Configuration'''
|- 
|  '''Common Settings'''
| 
Enables the use of segmented keys (for GL accounts, subaccounts, and inventory items, and for customer, vendor, and employee accounts) and the creation of numbering sequences, which are used for automatic generation of reference numbers for batches and for documents of various types. {br}

Also, this module supports attributes—optional and required UI elements to be used in many modules for entering and storing additional properties of various objects including leads and stock items.
|- 
| '''User Security'''
| 
Supports roles, which control user access to suites, modules, forms, UI elements, and records. Also, this module provides the means for managing local user accounts, password policies for local users, security audit options, and encryption certificates.
|- 
| '''Document Management'''
| 
Supports internal wikis and synchronization with external files. Also, this module supports storing files internally and externally and routing imported files between the storage locations.
|- 
| '''Email'''
| 
Supports configuration and management of the system email accounts for incoming and outgoing emails. This module also supports built-in incoming mail processing, which can be adjusted for the business needs of your company.
|- 
| colspan="2" | '''System'''
|- 
|  '''Management'''
| 
Supports snapshots, locales, and the management of application updates.
|- 
| '''Integration'''
| 
Enables the import and export of data in accordance with user-defined scenarios.
|- 
| '''Customization'''
| 
Provides a means for application customization and management of the site map.
|- 
| colspan="2" | '''Dashboards'''
|- 
|  '''Dashboards'''
| 
Supports user-configurable dashboards, which display exactly the information the user needs in the preferred presentation form. For more information, see [HelpRoot_Interface\DB__mng_UIG_Dashboards|Dashboards] in the '''''Getting Started Guide'''''.
|}
==Features for the Finance Suite==[anchor|#table_i1l_1j1_yv]The features available for the Finance suite are briefly described below.
{| class="checklist" | width="100%" 
|- 
!width="9%" ! Feature
!width="18%" ! Related Feature
!width="72%" ! Overview
|- 
| colspan="2" | '''Standard Financials'''
| This group of features is available in all editions of Acumatica ERP. You can enable any of the features in this group—they are included in any license. 
|- 
| 
| '''Multi-Branch Support'''
| 
Provides support for multiple branches. Branches can be configured for points of sale (locations) as well as for separate legal entities within your organization, to ensure better visibility into various layers of financial operations. For details, see [HelpRoot_Organization\CS__con_Multiple_Branch_Support|Multiple Branch Support] and [HelpRoot_Organization\CS__con_Basic_Models_for_Multi-Branch_Organization|Basic Models for Multi-Branch Organization].
|- 
| 
| '''Business Account Locations'''
| Supports multiple locations for vendor and customer accounts. 
|- 
| 
| '''Multi-Currency Accounting'''
| 
Adds the Currency Management module and support of the following: multiple currencies across the modules; automatic calculation of the realized gains and losses and rounding amounts on foreign currency transactions; revaluation of foreign currency accounts; and translation of the base currency accounts into any foreign currency for reporting. For more information, see the [HelpRoot_Financials\CM_00_00_00|Currency Management] chapter. 
|- 
| 
| '''Volume Pricing'''
| Gives you the ability to define price tiers for item quantities. 
|- 
| 
| '''Expense Reclassification'''
| 
Supports the two-stage release of AP documents: ''pre-release'', when a data entry clerk enters a bill or a quick check; and ''release'', when an authorized accountant reviews a pre-released document, specifies the correct expense accounts (and subaccounts), and releases the document. For details, see [HelpRoot_Financials\AP__con_Expense_Reclassification_Pending|Reclassifying Expenses].
|- 
| 
| '''Tax Entry From GL Module'''
| Gives users the ability to specify taxes for documents entered in the General Ledger module.
|- 
| 
| '''VAT Reporting'''
| 
Enables accounting and reporting for any value-added tax (VAT) in the system: in the Taxes module, enables the ''VAT'' tax type option; and in the Accounts Payable and Accounts Receivable modules, adds UI elements that can be used for automatic calculation of tax amounts and for VAT reporting. For details, see [HelpRoot_Financials\TX__con_VAT_and_Its_Modifications|Value-Added Tax and Its Variations].
|- 
| 
| '''Invoice Rounding'''
| 
Provides automatic rounding of bill amounts in the Accounts Payable module and invoice amounts in the Accounts Receivable module. For details, see [HelpRoot_Financials\AP__con_Rounding|Rounding of Document Amounts].
|- 
| 
| '''ROT and RUT Deduction'''
| 
Adds a form and multiple UI elements in the Accounts Receivables module that you can use to create and process documents eligible for ROT and RUT deductions.
|- 
| colspan="2" | '''Advanced Financials'''
| This group of features is not available in the standard edition of Acumatica ERP. You can enable any of the features in this group if the group of features is available in your system. 
|- 
| 
| '''Subaccounts'''
| 
Gives you the ability to use subaccounts in addition to accounts. The subaccounts, which are configurable in the Common Settings module, are used to detail account balances, for more granular financial analysis. For details, see [HelpRoot_Financials\GL__con_Example_of_Subaccount_Definition|Example of Subaccount Definition]. 
|- 
| 
| '''General Ledger Allocation Templates'''
| Enables the creation and maintenance of allocation templates (which define how the allocations are to be performed) and the automatic application of allocations according to your definitions.
|- 
| 
| '''Inter-Branch Transactions'''
| 
Makes possible the automatic generation of inter-branch transactions. For details, see [HelpRoot_Financials\GL__MNG_Inter-Branch_Transactions|Processing Inter-Branch Transactions].
|- 
| 
| '''General Ledger Consolidation'''
| Provides consolidating data from specific branches of subsidiaries (or consolidation units) into specific branch of the parent company. You can configure which data should be consolidated and how exactly the data should be consolidated. After that, you can consolidate the data as often as you need within each financial period. 
|- 
| 
| '''Translation of Financial Statements'''
| 
Gives you the ability to translate amounts from the base currency to another currency at the account balance level. Translation can be used for reporting purposes in any foreign currency. For details, see [HelpRoot_Financials\CM__con_Overview_of_Translations|Translation Processing Workflow].
|- 
| 
| '''Customer Discounts'''
| 
Gives you the ability to maintain customer discounts in your system: import them or enter them manually, and update them. The system automatically applies the customer discounts to sales orders (or invoices if the ''Inventory and Order Management'' group of features is not enabled) when a user saves the document. [anchor|#_e042f54a-ea99-4b17-a6e5-5555f9f6b789]{br}

When the feature is disabled, you can enter the discount percent or amount on a line and document level on data entry forms, but the discount amounts are not posted separately to a discount account.{br}

For more information, see [HelpRoot_Financials\SO__MNG_Discounts_Prices|Managing Customer Discounts].
|- 
| 
| '''Vendor Discounts'''
| 
Gives you the ability to maintain vendor discounts in your system: import them or enter them manually, and update them. The system automatically applies the vendor discounts to purchase orders (or bills if the ''Inventory and Order Management'' group of features is not enabled) when a user saves the document.[anchor|#_703fa963-4d41-4ed4-92df-e767b7efe1da]{br}

When the feature is disabled, you can enter the discount percent or amount on a line and document level on data entry forms, but the discount amounts are not posted separately to a discount account.{br}

For more information, see [HelpRoot_Financials\PO__MNG_Vendor_Pricing|Managing Vendor Discounts].
|- 
| 
| '''Commissions'''
| Makes it possible to configure commission calculations that support your company&rsquo;s policies. 
|- 
| 
| '''Overdue Charges'''
| Gives you the ability to configure additional charges to be applied to the outstanding balances of customers who are consistently paying too late or not paying in full. 
|- 
| 
| '''Dunning Letter Management'''
| 
Provides you with the ability to generate dunning letters to notify customers about their overdue documents. You can select how you want to manage a level of dunning letter: by customer or by overdue document. For details, see [HelpRoot_Financials\AR__MNG_DunningLetters|Managing Dunning Letters].
|- 
| 
| '''Deferred Revenue Management'''
| 
Adds the Deferred Revenue module and integrates it with the Accounts Payable and Accounts Receivable modules, so that the users can assign various documents to deferral schedules for recognizing portions of the deferred amounts. For more information, see [HelpRoot_Financials\DR_00_00_00|Deferred Revenue].
|- 
| 
| '''Parent-Child Customer Relationship'''
| 
Makes it possible to configure parent-child relationships between business accounts of the ''Customer'' and ''Customer & Vendor'' types. A parent-child relationship includes the ability for the parent account to pay invoices of the child account, to generate consolidated statements and reports, and to view a consolidated balance for a parent account that includes the balances of its child accounts. The relationship can be removed at any time. For details, see [HelpRoot_Financials\AR__MNG_Customers|Managing Customers].
|- 
| colspan="2" | '''Contract Management'''
| 
This feature provides the support of contracts, including case processing and contract billing. It adds forms related to contract processing to the Accounts Receivable module and enables integration of the Accounts Receivable and the Time and Expenses modules. For more information, see [HelpRoot_Financials\AR__MNG_Contracts|Managing Contracts].
|- 
| colspan="2" | '''Fixed Asset Management'''
| 
This feature adds the Fixed Assets module, which can be used to create and manage fixed assets through their useful life, from acquisition to disposal. The Fixed Assets module integrates with the Requisitions and Purchase Orders modules to facilitate converting purchases into fixed assets without the need to re-enter data. For more information, see the [HelpRoot_Financials\FA_00_00_00|Fixed Assets] chapter. 
|- 
| colspan="2" | '''Payroll'''
| 
This feature activates the Payroll module.
|- 
| 
| '''Multiple Workshifts'''
| 
Can be selected only if the ''Payroll'' feature is selected. Enables shift codes that can be used by users to report time they spent on activities when working on a particular shift.
|}
==Monitoring and Automation Group of Features==[anchor|#table_inl_1j1_yv] The features in this group enable the monitoring of user activities and the automation of workflows. This group of features is not available in the standard edition of Acumatica ERP.
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Feature
!width="80%" ! Overview
|- 
| '''Time Reporting on Activity'''
| Extends the functionality of the Time and Expenses module by making it possible to track the time your organization&rsquo;s employees spend on activities that can be included in time cards. For details, see [HelpRoot_Organization\EP__con_Time_Tracking|Time Activities].
|- 
| '''Approval Workflow'''
| Provides the ability to configure and use approval maps for the automatic assignment of various documents to particular employees for approval. If this feature is not enabled, approval maps cannot be used in the system, but the approval for expense claims still can be configured and performed by using a different method. For details, see [HelpRoot_GettingStarted\CO__con_Centralized_Approvals|Approving Documents] and [HelpRoot_Organization\EP__con_Claim_Approval|Expense Claim Approval].
|- 
| '''Field-Level Audit'''
| 
Gives your organization the ability to track user activities in the system. This feature, which is configurable in the Management module, provides complete information on who did what and when on the form. For more information, see [HelpRoot_Administration\SM__con_Field_Level_Audit|Field-Level Auditing].
|- 
| '''Row-Level Security'''
| 
Adds the Row-Level Security module, which enables the management and administration of user access (through restriction groups) to particular system records and objects to which users have access by their roles. For details, see [HelpRoot_Administration\SM__con_Overview_of_Restriction_Groups|Restriction Groups in Acumatica ERP].
|- 
| '''Scheduled Processing'''
| 
Makes it possible for you to configure automatic processing of documents that require significant time and system resources. You can define a schedule for such automatic processing—for instance, at times when there are no employees at work, such as weekends or nights. For more information, see [HelpRoot_Administration\SM__con_Scheduled_Processing|Scheduled Processing].
|- 
| '''Change Notifications'''
| 
Gives you the ability to configure notifications about specific changes in documents so that users of the system can sign up to receive emails sent by the system when specific changes are made to particular documents. For more information, see [HelpRoot_Administration\SM__con_Notifications_About_Changes|Notifications About Changes on Data Entry Forms].
|- 
| '''Workflow Automation'''
| 
Provides the ability to customize workflows by means of automation steps, and gives you the ability to back up and store automation definitions that include all the automation steps defined in the application. For more information, see [HelpRoot_Administration\SM__con_Automation_Maintenance|Automation Maintenance].
|}
==Inventory and Order Management Group of Features==[anchor|#table_bvp_3dt_mr]
The Inventory and Order Management group of features, once enabled, includes the basic functionality of the following modules: [anchor|#ul_rrq_5j5_mr]
*Inventory module: The basic functionality of the Inventory module includes only non-stock items that can be processed in the Sales Orders and Purchase Orders modules. For more information, see [HelpRoot_InvMgmt\IN_00_00_00|Inventory Management].
*Sales Orders module: The basic functionality of the Sales Orders module includes predefined order types, flexible order processing workflows (which include sending orders by email or printing them and sending them by postal mail), generation of pick lists, and shipment processing. For more information, see [HelpRoot_OrderMgmt\SO_00_00_00|Order Management].
*Purchase Orders module: The basic functionality of the Purchase Orders module includes purchase orders of multiple types, vendor catalogs, default prices that are updated from current documents, landed cost tracking, and barcode support. For more information, see [HelpRoot_OrderMgmt\PO__PO_Features|Purchase Orders Processes].

The Purchase Requisitions module is enabled by a separate feature of the Inventory and Order Management group of features, ''Purchase Requisitions''. The other features of the Inventory and Order Management group of features are divided into two groups, ''Standard Inventory'' and ''Advanced Inventory''. The features are briefly described below.
{| class="checklist" | width="100%" 
|- 
!width="9%" ! Feature
!width="18%" ! Related Feature
!width="72%" ! Overview
|- 
| colspan="2" | '''Standard Inventory'''
| This group of features includes the features associated with the standard functionality of inventory and order management. You can enable any of the features in this group and disable the features that will not be used in your implementation if this group is included in your license.
|- 
| 
| '''Inventory'''
| 
Gives you the ability to maintain stock items in the Inventory module and use the Sales Orders, Purchase Orders, and Purchase Requisitions modules of the Inventory and Order Management functionality for creating and processing documents that include stock items.{br}

If this feature is not included in your license, you can use the modules of the Inventory and Order Management functionality only for creating and processing documents that include non-stock items and services.
|- 
| 
| '''Multiple Units of Measure'''
| Gives you the ability to define for each stock item multiple units of measure (UOMs) and the rules for conversion between them. With this feature not enabled, for each stock item, you can define only the base unit of measure that is used for purchasing the item, selling it, and calculating the available quantity of it. For more information, see [HelpRoot_InvMgmt\IN__con_Units_of_Measure_and_Conversions|Units of Measure and Conversions].
|- 
| 
| '''Blanket and Standard Purchase Orders'''
| Makes possible the processing of blanket purchase orders—orders that can be fulfilled through multiple normal orders. Also, adds the standard purchase orders—orders that include the products purchased regularly in the same quantities and that can be processed repeatedly. For more information, see [HelpRoot_OrderMgmt\PO__con_Types_of_Purchase_Orders|Types of Purchase Orders].
|- 
| 
| '''Drop Shipments'''
| Gives you the ability to create and track orders for goods that should be delivered directly to a customer location. For more information, see [HelpRoot_OrderMgmt\PO__con_Drop-Ship_Order_Flow|Drop-Ship Purchase Orders].
|- 
| colspan="2" | '''Advanced Inventory'''
| This group of features includes those that are associated with the advanced functionality of inventory and order management. You can enable any of the features in this group if the group of features is included in your license.
|- 
| 
| '''Lot and Serial Tracking'''
| Gives you an ability to track stock items by lot or serial numbers and by expiration dates. Acumatica ERP provides flexible numbering schemes for lot and serial numbers and the ability to track different products differently. For more information, see [HelpRoot_InvMgmt\IN__con_Lot_and_Serial_Number_Tracking|Lot and Serial Number Tracking].
|- 
| 
| '''Multiple Warehouses'''
| Adds the ability to configure multiple warehouses. For more information, see [HelpRoot_InvMgmt\IN__con_Multiple_Warehouses|Multiple Warehouses].
|- 
| 
| '''Multiple Warehouse Locations'''
| Supports multiple locations for each warehouse. Some of these locations can be reserved for specific inventory transactions, such as receipts, issues, and returns. For more information, see [HelpRoot_InvMgmt\IN__con_Warehouse_Locations|Warehouse Locations].
|- 
| 
| '''Inventory Replenishment'''
| Automates the generation of purchase and transfer orders for replenishment of stock items for your warehouse or warehouses. This feature can be enabled only if the ''Multiple Warehouses'' feature is enabled. For more information, see [HelpRoot_InvMgmt\IN__con_Automated_Replenishment|Automated Replenishment].
|- 
| 
| '''Inventory Subitems'''
| Makes possible the use of subitems in your system. With subitems enabled, under the same inventory ID, there can be a number of products that share all the settings of the inventory item record but have additional properties that differ, such as size, color, and material. For details, see [HelpRoot_InvMgmt\IN__con_Inventory_IDs_and_Subitem_Codes|Inventory Subitems].
|- 
| 
| '''Automatic Packaging'''
| Makes it possible for the system to calculate the optimal set of boxes for each sales order or a consolidated shipment. The system selects the boxes based on the list of carrier boxes, the item packaging options, and the item quantities on the document. If the items will be shipped through an integrated carrier, the system calculates the shipping costs for each carrier, so that you can select the best shipping option. For more information, see [HelpRoot_OrderMgmt\SO__con_Automated_Shipments|Automatic Packaging for Integrated Carriers].
|- 
| 
| '''Kit Assembly'''
| Makes possible the creation of kit specifications and kit assembly and disassembly according to specifications. For more information on kits, see [HelpRoot_InvMgmt\IN__con_Accounting_for_Kits|Inventory Item Kits].
|- 
| 
| '''Advanced Physical Count'''
| Supports physical counts by inventory IDs, item classes, user-defined cycles, movement classes, or ABC codes. For information, see [HelpRoot_InvMgmt\IN__con_Planning_for_Physical_Inventory|Configuration of Physical Inventory].
|- 
| 
| '''Sales Order to Purchase Order Link'''
| Supports sales order fulfillment by back ordering. For details, see [HelpRoot_OrderMgmt\SO__con_Purchase_for_Sale|Processing Purchased Items for Sale].
|- 
| 
| '''Custom Order Types'''
| Enables the creation of custom types of sales orders. For more information, see [HelpRoot_OrderMgmt\SO__con_Custom_Order_Types|Custom Sales Order Types].
|- 
| 
| '''Advanced SO Invoices'''
| Gives you the ability to add stock items directly to Sales Orders invoices without creating and processing an associated sales order and shipment. For more information, see [HelpRoot_OrderMgmt\SO__con_scn_Direct_Sale|Processing Direct Sales and Returns].
|- 
| 
| '''Vendor Relations'''
| Enables a capability of configuring and managing vendor relations. For more information, see [HelpRoot_Financials\AP__MNG_Managing_Vendor_Relations|Managing Vendor Relations].
|- 
| colspan="2" | '''Purchase Requisitions'''
| Enables the Purchase Requisitions module in the system. You can use this module to create requisition requests and requisitions, perform bidding to find the best prices, and control budget compliance. For more information, see [HelpRoot_OrderMgmt\RQ__RQ_Features|Purchase Requisitions Processes].
|}
==Third-Party Integrations==[anchor|#table_m3m_1j1_yv]The features in the '''Third-Party Integrations''' group of features are available for all the editions, although the number of features is different in different editions of Acumatica ERP.
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Feature
!width="80%" ! Overview
|- 
| '''Shipping Carrier Integration'''
| 
Enables you to configure integration with carriers, such as FedEx, or UPS. With this integration, you can apply real-time rates to shipments and track their delivery. ((({S:Hint}Integration with any of the carriers does not support international shipments.
))) For details, see [HelpRoot_OrderMgmt\CS__con_Integration_with_Carriers|Integration with Carriers].
|- 
| '''Exchange Integration'''
| 
Gives you the ability to integrate Acumatica ERP with Microsoft Exchange Server. You will be able to configure synchronization, and then synchronize users&rsquo; contacts, emails, tasks, and events in Acumatica ERP with their Exchange mailboxes. For more information, see [HelpRoot_Integration\EM__mng_Exchange_server|Synchronizing Acumatica ERP with Microsoft Exchange Server].
|- 
| '''External Tax Calculation Integration'''
| 
Enables integration with external tax providers, such as the AvaTax service by Avalara for automatic calculation of sales and use taxes online. This feature, which is configurable in the Taxes module, adds related forms to the following modules: Taxes, Accounts Payable, Accounts Receivable, Sales Orders, Purchase Orders, and Cash Management. For details, see [HelpRoot_Integration\TX__con_Avalara_Integration|Integrating Acumatica ERP with External Tax Providers].
|- 
| '''Address Validation Integration'''
| 
Provides validation of customer addresses through integrated specialized services, such as AvaTax by Avalara. The feature can be used with the '' External Tax Calculation Integration'' feature or without it. For details, see [HelpRoot_Integration\TX__con_Avalara_Integration|Integrating Acumatica ERP with External Tax Providers].
|}
==Other Features==[anchor|#table_zsm_1j1_yv]These features are available as add-on features.
{| class="checklist" | width="100%" 
|- 
!width="9%" ! Feature
!width="18%" ! Related Feature
!width="72%" ! Overview
|- 
| colspan="2" | '''Customer Management'''
| 
This feature adds the Customer Management module: lead and customer tracking, business opportunities, case management, marketing lists, and campaign management. For more information, see [HelpRoot_CRM\CR__CR_Features|Overview of CRM Processes].
|- 
| colspan="2" | '''Lead/Contact Duplicate Validation'''
| 
This feature provides functionality you can use to configure and perform automatic validation of lead and contact records for duplicates.
|- 
| colspan="2" | '''Project Accounting'''
| 
This feature adds the Projects module, which can be integrated with certain basic modules (General Ledger, Accounts Receivable, Accounts Payable, Cash Management, and Time and Expenses) and add-on modules (Customer Management, Purchase Orders, Inventory, and Sales Orders). The Projects module includes project costing and project billing. For more information, see [HelpRoot_Projects\PM_00_00_00|Projects].
|- 
| colspan="2" | '''Customer Portal'''
| 
The Acumatica Self-Service                         Portal provides a solution for you to more efficiently work and communicate with your customers. Self-Service Portal is specifically designed to be the site where your customers can view all the relevant information about their interactions with you as a vendor and perform needed activities.{br}

 Self-Service Portal is an additional application that can be installed separately. For more information, see [HelpRoot_SS_Portal_Admin\SP_SP_00_00| Self-Service Portal]. 
|- 
| 
| '''B2B Ordering'''
| 
Makes it possible for your customers to view the online catalog and place orders themselves through Self-Service Portal. This feature can be enabled only if the ''Advanced Inventory'' group of features is enabled. For more information, see [HelpRoot_SS_Portal_Admin\SP__mng_Online_Ordering|Managing Online Orders].
|- 
| 
| '''Case Management on Portal'''
| 
Gives your customers the ability to add cases and track case processing through Self-Service Portal. This feature can be enabled only if the ''Customer Management'' feature is enabled. For more information, see [HelpRoot_SS_Portal_Admin\SP__mng_Portal_Cases|Managing Cases with Self-Service Portal].
|- 
| 
| '''Financials on Portal '''
| 
Provides a means for your customers to view the documents associated with their company accounts in Acumatica ERP.
|}]]></column>
			<column name="PlainText"><![CDATA[Overview of the  Acumatica ERP   Features   Acumatica ERP provides a scalable core system functionality and includes a range of add-on features.   Before you start implementing  Acumatica ERP,     you may find it helpful to become familiar with the functionality of the modules to be     implemented and the add-on features your organization has included in the license.  Core Functionality  Acumatica ERP     includes the following suites and modules, whose core functionality is briefly described in the     table below. Suite/Module Overview Organization Communication Provides users with access to such means of communication as email, notifications,          announcements, activities, and tasks. The module also includes a special feature—a          preconfigured Communications dashboard.  Time and Expenses Supports the processing of expense claims. Organization Structure Supports the configuration of the company, employee accounts, company tree,         departments, positions, workgroups, and assignment maps, all of which are used across other         modules. Finance General Ledger Supports the chart of accounts shared by all the branches (if any), as well as ledgers,          budgets, analytical reports, recurring transactions, document batches, and various          configurations of the financial year and periods, including custom financial year and          periods. Cash Management Provides support for cash accounts, payment methods, reconciliation statements, bank          deposits, funds transfers, cash flow forecasts, and credit card processing. Accounts Payable Provides support for vendor accounts (including those for tax agencies), credit terms,          documents of multiple types, configurable approval of documents for payment, recurring          transactions, ACH payments, and the 1099 form (for the United States). Accounts Receivable Provides support for customer accounts, documents of multiple types, recurring          transactions, credit card processing, tracking of card expiration dates, configurable rules          of payment auto-application, aging of credits, statements, credit management, and          write-offs. Taxes Gives you the ability to create and maintain taxes (of multiple types), tax zones, and         tax categories; supports automatic tax calculation and tax reporting. Configuration Common Settings Enables the use of segmented keys (for GL accounts, subaccounts, and inventory items, and          for customer, vendor, and employee accounts) and the creation of numbering sequences, which          are used for automatic generation of reference numbers for batches and for documents of          various types.  Also, this module supports attributes—optional and required UI elements to be used          in many modules for entering and storing additional properties of various objects including          leads and stock items. User Security Supports roles, which control user access to suites, modules, forms, UI elements, and          records. Also, this module provides the means for managing local user accounts, password          policies for local users, security audit options, and encryption certificates. Document Management Supports internal wikis and synchronization with external files. Also, this module          supports storing files internally and externally and routing imported files between the          storage locations. Email Supports configuration and management of the system email accounts for incoming and          outgoing emails. This module also supports built-in incoming mail processing, which can be          adjusted for the business needs of your company. System Management Supports snapshots, locales, and the management of application updates. Integration Enables the import and export of data in accordance with user-defined scenarios. Customization Provides a means for application customization and management of the site          map . Dashboards Dashboards Supports user-configurable dashboards, which display exactly the information the user          needs in the preferred presentation form. For more information, see  Dashboards in the  Getting Started            Guide . Features for the Finance Suite The features available for the Finance suite are briefly described below. Feature Related Feature Overview Standard Financials This group of features is available in all editions of  Acumatica ERP. You can enable any of the features in this group—they are included in any license.         Multi-Branch Support Provides support for multiple branches. Branches can be configured for points of sale          (locations) as well as for separate legal entities within your organization, to ensure          better visibility into various layers of financial operations. For details, see  Multiple Branch Support and  Basic Models for Multi-Branch Organization. Business Account Locations Supports multiple locations for vendor and customer accounts.  Multi-Currency Accounting Adds the Currency Management module and support of the following: multiple currencies          across the modules; automatic calculation of the realized gains and losses and rounding          amounts on foreign currency transactions; revaluation of foreign currency accounts; and          translation of the base currency accounts into any foreign currency for reporting. For more          information, see the   ([~/?ScreenId=CM000000|CM000000]) Currency Management chapter.  Volume Pricing Gives you the ability to define price tiers for item quantities.  Expense Reclassification Supports the two-stage release of AP documents:  pre-release , when a data entry          clerk enters a bill or a quick check; and  release , when an authorized accountant          reviews a pre-released document, specifies the correct expense accounts (and subaccounts),          and releases the document. For details, see  Reclassifying Expenses. Tax Entry From GL Module Gives users the ability to specify taxes for documents entered in the General Ledger         module. VAT Reporting Enables accounting and reporting for any value-added tax (VAT) in the system: in the          Taxes module, enables the  VAT  tax type option; and in the Accounts Payable and          Accounts Receivable modules, adds UI elements that can be used for automatic calculation of          tax amounts and for VAT reporting. For details, see  Value-Added Tax and Its Variations. Invoice Rounding Provides automatic rounding of bill amounts in the Accounts Payable module and invoice          amounts in the Accounts Receivable module. For details, see  Rounding of Document Amounts. ROT and RUT Deduction Adds a form and multiple UI elements in the Accounts Receivables module that you can use          to create and process documents eligible for ROT and RUT deductions. Advanced Financials This group of features is not available in the standard edition of  Acumatica ERP. You can enable any of the features in this group if the group of features is available         in your system.  Subaccounts Gives you the ability to use subaccounts in addition to accounts. The subaccounts, which          are configurable in the Common Settings module, are used to detail account balances, for          more granular financial analysis. For details, see  Example of Subaccount Definition.  General Ledger Allocation Templates Enables the creation and maintenance of allocation templates (which define how the         allocations are to be performed) and the automatic application of allocations according to         your definitions. Inter-Branch Transactions Makes possible the automatic generation of inter-branch transactions. For details, see            Processing Inter-Branch Transactions. General Ledger Consolidation Provides consolidating data from specific branches of subsidiaries (or consolidation         units) into specific branch of the parent company. You can configure which data should be         consolidated and how exactly the data should be consolidated. After that, you can         consolidate the data as often as you need within each financial period.  Translation of Financial Statements Gives you the ability to translate amounts from the base currency to another currency at          the account balance level. Translation can be used for reporting purposes in any foreign          currency. For details, see  Translation Processing Workflow. Customer Discounts Gives you the ability to maintain customer discounts in your system: import them or enter          them manually, and update them. The system automatically applies the customer discounts to          sales orders (or invoices if the  Inventory and Order Management  group of features is          not enabled) when a user saves the document.  When the feature is disabled, you can enter the discount percent or amount on a line and document level on data entry forms, but the discount amounts are not posted separately to a discount account. For more information, see  Managing Customer Discounts. Vendor Discounts Gives you the ability to maintain vendor discounts in your system: import them or enter          them manually, and update them. The system automatically applies the vendor discounts to          purchase orders (or bills if the  Inventory and Order Management  group of features is          not enabled) when a user saves the document. When the feature is disabled, you can enter the discount percent or amount on a line and document level on data entry forms, but the discount amounts are not posted separately to a discount account. For more information, see  Managing Vendor Discounts. Commissions Makes it possible to configure commission calculations that support your company's         policies.  Overdue Charges Gives you the ability to configure additional charges to be applied to the outstanding         balances of customers who are consistently paying too late or not paying in full.  Dunning Letter Management Provides you with the ability to generate dunning letters to notify customers about their          overdue documents. You can select how you want to manage a level of dunning letter: by          customer or by overdue document. For details, see  Managing Dunning Letters. Deferred Revenue Management Adds the Deferred Revenue module and integrates it with the Accounts Payable and Accounts          Receivable modules, so that the users can assign various documents to deferral schedules          for recognizing portions of the deferred amounts. For more information, see   ([~/?ScreenId=DR000000|DR000000]) Deferred Revenue. Parent-Child Customer Relationship Makes it possible to configure parent-child relationships between business accounts of          the  Customer  and  Customer & Vendor  types. A parent-child relationship          includes the ability for the parent account to pay invoices of the child account, to          generate consolidated statements and reports, and to view a consolidated balance for a          parent account that includes the balances of its child accounts. The relationship can be          removed at any time. For details, see  Managing Customers. Contract Management This feature provides the support of contracts, including case processing and contract          billing. It adds forms related to contract processing to the Accounts Receivable module and          enables integration of the Accounts Receivable and the Time and Expenses modules. For more          information, see  Managing Contracts. Fixed Asset Management This feature adds the Fixed Assets module, which can be used to create and manage fixed          assets through their useful life, from acquisition to disposal. The Fixed Assets module          integrates with the Requisitions and Purchase Orders modules to facilitate converting          purchases into fixed assets without the need to re-enter data. For more information, see          the   ([~/?ScreenId=FA000000|FA000000]) Fixed Assets chapter.  Payroll This feature activates the Payroll module. Multiple Workshifts Can be selected only if the  Payroll  feature is selected. Enables shift codes that          can be used by users to report time they spent on activities when working on a particular          shift. Monitoring and Automation Group of Features  The features in this group enable the monitoring of user activities and the automation of      workflows. This group of features is not available in the standard edition of  Acumatica ERP. Feature Overview Time Reporting on Activity Extends the functionality of the Time and Expenses module by making it possible to         track the time your organization's employees spend on activities that can be included in         time cards. For details, see  Time Activities. Approval Workflow Provides the ability to configure and use approval maps for the automatic assignment         of various documents to particular employees for approval. If this feature is not enabled,         approval maps cannot be used in the system, but the approval for expense claims still can be         configured and performed by using a different method. For details, see  Approving Documents and  Expense Claim Approval. Field-Level Audit Gives your organization the ability to track user activities in the system. This feature,          which is configurable in the Management module, provides complete information on who did          what and when on the form. For more information, see  Field-Level Auditing. Row-Level Security Adds the Row-Level Security module, which enables the management and administration of          user access (through restriction groups) to particular system records and objects to which          users have access by their roles. For details, see  Restriction Groups in Acumatica ERP. Scheduled Processing Makes it possible for you to configure automatic processing of documents that require          significant time and system resources. You can define a schedule for such automatic          processing—for instance, at times when there are no employees at work, such as weekends or          nights. For more information, see  Scheduled Processing. Change Notifications Gives you the ability to configure notifications about specific changes in documents so          that users of the system can sign up to receive emails sent by the system when specific          changes are made to particular documents. For more information, see  Notifications About Changes on Data Entry Forms. Workflow Automation Provides the ability to customize workflows by means of automation steps, and gives you          the ability to back up and store automation definitions that include all the automation          steps defined in the application. For more information, see  Automation Maintenance. Inventory and Order Management Group of Features The Inventory and Order Management group of features, once enabled, includes the basic       functionality of the following modules:  Inventory module: The basic functionality of the Inventory module includes only non-stock        items that can be processed in the Sales Orders and Purchase Orders modules. For more        information, see   ([~/?ScreenId=IN000000|IN000000]) Inventory Management. Sales Orders module: The basic functionality of the Sales Orders module includes        predefined order types, flexible order processing workflows (which include sending orders by        email or printing them and sending them by postal mail), generation of pick lists, and        shipment processing. For more information, see   ([~/?ScreenId=SO000000|SO000000]) Order Management. Purchase Orders module: The basic functionality of the Purchase Orders module includes        purchase orders of multiple types, vendor catalogs, default prices that are updated from        current documents, landed cost tracking, and barcode support. For more information, see  Purchase Orders Processes. The Purchase Requisitions module is enabled by a separate feature of the Inventory and Order       Management group of features,  Purchase Requisitions . The other features of the       Inventory and Order Management group of features are divided into two groups,  Standard        Inventory  and  Advanced Inventory . The features are briefly described below. Feature Related Feature Overview Standard Inventory This group of features includes the features associated with the standard         functionality of inventory and order management. You can enable any of the features in this         group and disable the features that will not be used in your implementation if this group is         included in your license. Inventory Gives you the ability to maintain stock items in the Inventory module and use the Sales          Orders, Purchase Orders, and Purchase Requisitions modules of the Inventory and Order          Management functionality for creating and processing documents that include stock          items. If this feature is not included in your license, you can use the modules of the Inventory          and Order Management functionality only for creating and processing documents that include          non-stock items and services. Multiple Units of Measure Gives you the ability to define for each stock item multiple units of measure (UOMs)         and the rules for conversion between them. With this feature not enabled, for each stock         item, you can define only the base unit of measure that is used for purchasing the item,         selling it, and calculating the available quantity of it. For more information, see  Units of Measure and Conversions. Blanket and Standard Purchase Orders Makes possible the processing of blanket purchase orders—orders that can be fulfilled         through multiple normal orders. Also, adds the standard purchase orders—orders that include         the products purchased regularly in the same quantities and that can be processed         repeatedly. For more information, see  Types of Purchase Orders. Drop Shipments Gives you the ability to create and track orders for goods that should be delivered         directly to a customer location. For more information, see  Drop-Ship Purchase Orders. Advanced Inventory This group of features includes those that are associated with the advanced         functionality of inventory and order management. You can enable any of the features in this         group if the group of features is included in your license. Lot and Serial Tracking Gives you an ability to track stock items by lot or serial numbers and by expiration         dates.  Acumatica ERP provides flexible numbering schemes for lot and serial numbers and the ability to track         different products differently. For more information, see  Lot and Serial Number Tracking. Multiple Warehouses Adds the ability to configure multiple warehouses. For more information, see  Multiple Warehouses. Multiple Warehouse Locations Supports multiple locations for each warehouse. Some of these locations can be         reserved for specific inventory transactions, such as receipts, issues, and returns. For         more information, see  Warehouse Locations. Inventory Replenishment Automates the generation of purchase and transfer orders for replenishment of stock         items for your warehouse or warehouses. This feature can be enabled only if the  Multiple          Warehouses  feature is enabled. For more information, see  Automated Replenishment. Inventory Subitems Makes possible the use of subitems in your system. With subitems enabled, under the         same inventory ID, there can be a number of products that share all the settings of the         inventory item record but have additional properties that differ, such as size, color, and         material. For details, see  Inventory Subitems. Automatic Packaging Makes it possible for the system to calculate the optimal set of boxes for each sales         order or a consolidated shipment. The system selects the boxes based on the list of carrier         boxes, the item packaging options, and the item quantities on the document. If the items         will be shipped through an integrated carrier, the system calculates the shipping costs for         each carrier, so that you can select the best shipping option. For more information, see          Automatic Packaging for Integrated Carriers. Kit Assembly Makes possible the creation of kit specifications and kit assembly and disassembly         according to specifications. For more information on kits, see  Inventory Item Kits. Advanced Physical Count Supports physical counts by inventory IDs, item classes, user-defined cycles, movement         classes, or ABC codes. For information, see  Configuration of Physical Inventory. Sales Order to Purchase Order Link Supports sales order fulfillment by back ordering. For details, see  Processing Purchased Items for Sale. Custom Order Types Enables the creation of custom types of sales orders. For more information, see  Custom Sales Order Types. Advanced SO Invoices Gives you the ability to add stock items directly to Sales Orders invoices without         creating and processing an associated sales order and shipment. For more information, see          Processing Direct Sales and Returns. Vendor Relations Enables a capability of configuring and managing vendor relations. For more         information, see  Managing Vendor Relations. Purchase Requisitions Enables the Purchase Requisitions module in the system. You can use this module to         create requisition requests and requisitions, perform bidding to find the best prices, and         control budget compliance. For more information, see  Purchase Requisitions Processes. Third-Party Integrations The features in the  Third-Party Integrations  group of features are      available for all the editions, although the number of features is different in different      editions of  Acumatica ERP. Feature Overview Shipping Carrier Integration Enables you to configure integration with carriers, such as FedEx, or UPS. With this          integration, you can apply real-time rates to shipments and track their delivery.            Integration with any of the carriers does not support international           shipments.  For details, see  Integration with Carriers. Exchange Integration Gives you the ability to integrate  Acumatica ERP with Microsoft Exchange Server. You will be able to configure synchronization, and then          synchronize users' contacts, emails, tasks, and events in  Acumatica ERP with their Exchange mailboxes. For more information, see  Synchronizing Acumatica ERP with Microsoft Exchange Server. External Tax Calculation Integration Enables integration with external tax providers, such as the AvaTax service by Avalara          for automatic calculation of sales and use taxes online. This feature, which is          configurable in the Taxes module, adds related forms to the following modules: Taxes,          Accounts Payable, Accounts Receivable, Sales Orders, Purchase Orders, and Cash Management.          For details, see  Integrating Acumatica ERP with External Tax Providers. Address Validation Integration Provides validation of customer addresses through integrated specialized services, such          as AvaTax by Avalara. The feature can be used with the   External Tax Calculation           Integration  feature or without it. For details, see  Integrating Acumatica ERP with External Tax Providers. Other Features These features are available as add-on features. Feature Related Feature Overview Customer Management This feature adds the Customer Management module: lead and customer tracking, business          opportunities, case management, marketing lists, and campaign management. For more          information, see  Overview of CRM Processes. Lead/Contact Duplicate Validation This feature provides functionality you can use to configure and perform automatic          validation of lead and contact records for duplicates. Project Accounting This feature adds the Projects module, which can be integrated with certain basic modules          (General Ledger, Accounts Receivable, Accounts Payable, Cash Management, and Time and          Expenses) and add-on modules (Customer Management, Purchase Orders, Inventory, and Sales          Orders). The Projects module includes project costing and project billing. For more          information, see   ([~/?ScreenId=PM000000|PM000000]) Projects. Customer Portal The  Acumatica Self-Service                         Portal provides a solution for you to more efficiently work and communicate with your          customers.  Self-Service Portal is          specifically designed to be the site where your customers can view all the relevant          information about their interactions with you as a vendor and perform needed          activities.  Self-Service Portal          is an additional application that can be installed separately. For more information, see            Self-Service Portal.  B2B Ordering Makes it possible for your customers to view the online catalog and place orders          themselves through  Self-Service Portal. This          feature can be enabled only if the  Advanced Inventory  group of features is enabled.          For more information, see  Managing Online Orders. Case Management on Portal Gives your customers the ability to add cases and track case processing through  Self-Service Portal. This          feature can be enabled only if the  Customer Management  feature is enabled. For more          information, see  Managing Cases with Self-Service Portal. Financials on Portal  Provides a means for your customers to view the documents associated with their company          accounts in  Acumatica ERP. ]]></column>
		</row>
		<row PageID="6d07ee72-aad0-46f2-8398-d151c5e2ac45" Language="en-US" PageRevisionID="1" Content="&#xA;This chapter describes the process of initial Acumatica ERP configuration. &#xA;==Overview==&#xA;During the initial system configuring, you should make important decisions on the number and structure of your organization&amp;rsquo;s branches and the currency to be used as the base currency for financials in Acumatica ERP. Also, you need to specify the site management and security preferences. For users who will perform implementation, you have to create user accounts and set up the security policies.&#xA;==Prerequisites and Dependencies==&#xA;There are no prerequisites for initial system configuration.&#xA;==In This Chapter==[anchor|#ul_ksj_lsp_bs]&#xA;*[HelpRoot_Implement\INIT_Preparation|Preparation for Initial Configuration]: Describes what data should be collected, arranged, and analyzed before you start the implementation process.&#xA;*[HelpRoot_Implement\INIT_Configuration|Initial Configuration]: Guides you through the actual configuration of the system.&#xA;" PlainText="Performing Initial Configuration This chapter describes the process of initial  Acumatica ERP     configuration.  Overview During the initial system configuring, you should make important decisions on the number and     structure of your organization's branches and the currency to be used as the base currency for     financials in  Acumatica ERP.     Also, you need to specify the site management and security preferences. For users who will     perform implementation, you have to create user accounts and set up the security policies. Prerequisites and Dependencies There are no prerequisites for initial system configuration. In This Chapter Preparation for Initial Configuration: Describes what data should be collected, arranged, and      analyzed before you start the implementation process. Initial Configuration: Guides you through the actual configuration of the      system. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="44756b21-bc6e-9ba8-3e48-5d3144c9f195" RecordSourceID="22377" />
		<row PageID="e56149c7-4e28-4e63-8337-60df5bf052ca" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="464af14a-23b0-a98a-723b-1b3389acd53f" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This topic covers the preparation tasks that you have to perform before you begin configuring any modules in Acumatica ERP. Most of these tasks involve collecting and analyzing data and making decisions that will affect the system as a whole. ((({S:Warn} Because this is the preparation phase of implementation, you enter no data into the system at this time.
)))[anchor|#table_zdd_yrp_bs]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Decide on the features to be enabled'''
| Review the core functionality and the list of add-on features included in your edition of Acumatica ERP. For more information, see [HelpRoot_Implement\Impl_Features_Overview|Overview of the Acumatica ERP Features ]. Decide which features to enable. Some of the features (such as ''Multi-Branch Support'' or ''Subaccounts'') should be enabled and configured at this time in the implementation process, while other features (such as ''Allocation Templates'' and ''Volume Pricing'') can be enabled and configured after you initialize the system.((({S:Warn} Think thoroughly before you enable any feature. If you enable a feature you won&rsquo;t need, the users will need to enter additional data that won&rsquo;t be used. On the other hand, disabling some of the features for which some data was entered, may cause unexpected results. 
)))
|- 
| '''Choose the base currency'''
| 
Choose the main currency used by all branches of your organization as the ''base currency''. The base currency is the default currency for recording transactions, budgets, and other GL data, and it is used for reporting, income statements, and balance sheets. The base currency can be the only currency used in the system or one of multiple currencies that are used in operations with customers and vendors.{br}

 Plan the identifier to be used for the base currency (up to five characters in length), the currency symbol, and the required decimal precision.((({S:Hint}To comply with international standards, refer to ISO 4217 when you are specifying foreign currency identifiers and currency symbols.
)))
|- 
| '''Decide how many branches you need'''
| 
In Acumatica ERP, you must define at least one branch to represent your organization. If the ''Multi-Branch Support'' feature is activated, you can create multiple branches. Branches can be configured for points of sale (locations) as well as for separate legal entities within your organization. This multi-branch functionality can be used for organizations with branches that share the following settings:[anchor|#ul_ugd_yrp_bs]
*The base currency
*The chart of accounts (if your real-life branches use similar charts of accounts, consider merging the charts into one chart of accounts that will be used by all branches)
*The financial year and periods
Create a list of branches and specify the following:[anchor|#ul_kzn_l4h_wr]
*Which branches are legal entities and file individual tax reports
*Which branches do not file individual tax reports
*Which branches file consolidated tax reports and which branches are included

 For details, see [HelpRoot_Organization\CS__con_Multiple_Branch_Support|Multiple Branch Support] and [HelpRoot_Organization\CS__con_Basic_Models_for_Multi-Branch_Organization|Basic Models for Multi-Branch Organization].
|- 
| '''Plan the identifiers for branches based on the ''BIZACCT'' segmented key'''
| 
Plan the identifiers that you will use for branches. Decide whether the identifier will consist of segments, and what segment values may be used. In Acumatica ERP, the structure of identifiers for business accounts—that is, identifiers of branches, vendors, customers, and employees—is defined by the structure of the ''BIZACCT'' segmented key. Define the number, length, and type of each of its segments, as well as the list of values for each segment to be able to create the planned identifiers for branches. For additional information, see [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers].{br}

 The ''BIZACCT'' key will be used for the accounts that represent branches, as well as for all types of business accounts (including identifiers of vendors, customers, and employees), unless you configure specific ''VENDOR'', ''CUSTOMER'' and ''EMPLOYEE'' keys that inherit the general structure of the ''BIZACCT'' key but can have different sets of values for their segments (specific for each key). For more details, see [HelpRoot_Administration\CS__con_Business_Accounts_Identifiers|Business Account Identifiers].
|- 
| '''Prepare country and province or state information'''
| Review the lists of countries on the [HelpRoot_FormReference\CS_20_40_00|Countries/States] ([~/?ScreenId=CS204000|CS204000]) form. Acumatica ERP is installed with a preloaded list of countries and, for certain countries, states or provinces. If no states or provinces are specified for a country in which your organization has operations, prepare a list of states or provinces with the following information for each: [anchor|#ul_gjd_yrp_bs]
*The standard (commonly used) abbreviated name, which will be used as its ID
*Its full name
*Whether tax registration is required in the state or province

You should also plan the mask and regular expression to be used for validation of each country&rsquo;s postal codes and input masks for phone numbers. See [HelpRoot_Administration\CS__con_Examples_Mask_and_RegExp_Usage|Examples of Masks and Regular Expressions Usage ] and [HelpRoot_Administration\CS__con_CountryStatePostalCode_Validation|Country, State and Postal Code Validation].
|- 
| '''Decide which security certificates will be used'''
| 
 The data stored in the database should be encrypted, which requires a security certificate. Another certificate (or certificates) may be needed if you want the employees to sign PDF documents generated in Acumatica ERP. You can purchase certificates from any certification authority. {br}

For more information, see [HelpRoot_Administration\SM__con_Digital_Certificates|Data Encryption in Acumatica ERP].
|- 
| '''Plan site preferences'''
| 
 Decide upon the following other optional global settings of the system: [anchor|#ul_fnd_yrp_bs]
*'''Map viewer''': Choose an Internet map engine to show location of customers and vendors (optional).
*'''Export to Microsoft Excel settings''': Decide how data exported from reports to Microsoft Excel should be formatted, including the following factors: 
**Whether hidden fields should be exported.
**Whether each cell in the Excel worksheet should have a border, and what its color should be.
**What the font, size, style (bold, italic, etc.), font color, and fill color of the report header should be, as well as what these selections should be for the report data rows.
**What background color should be used for the headers, as well as for the data rows.

|- 
| '''Prepare a list of users participating in implementation'''
| 
To sign in to Acumatica ERP, a person must have a user account in the system. Prepare a list of individuals (employees and possibly external staff) who need to access and use the system through its implementation period, with the following information for each user:[anchor|#ul_mkd_yrp_bs]
*Login
*First name
*Last name
*Email address (each user can also specify personal email in his or her profile to be used to restore the user&rsquo;s login or password)
*Password settings, including whether to allow the user to change the password and whether to force the user to change the password on next login
((({S:Warn} Creating user accounts for all users before roles are established and other security restrictions are configured poses a security risk. Plan to configure the integration of Acumatica ERP with Active Directory or create user accounts for employees and users not participating in the implementation process just before live operations begin in Acumatica ERP. 
)))
|- 
| '''Develop security and audit policies for these users'''
| 
 Decide upon the following security and audit options, which will affect the users involved in implementation (later, during the configuration of all other users and employees, you may want to change these policies): [anchor|#ul_tkd_yrp_bs]
* Whether to require password complexity. 
* Whether to use an additional password validation mask, and if so, what mask. This mask can be applied in addition to other password restrictions. This option is used to exclude characters that may not be supported by involved systems. Note that any regularity in passwords greatly diminishes the security level. Use this option only when it&rsquo;s absolutely necessary. If you decide to use this mask, develop a message text to be displayed to the user when the password violates the validation mask.
*Whether to set up an account lock time and what number of unsuccessful login attempts will cause the user to be locked out of the account.

For more information, see [HelpRoot_Administration\SM__con_Site_Security_Options|Security Policies in Acumatica ERP].
|}
 You can print the [HelpRoot_ImplementChecklists\INIT_Preparation_Checklist|Initial Preparation Checklist] and refer to it when you perform the initial preparation tasks. ]]></column>
			<column name="PlainText"><![CDATA[Preparation for Initial Configuration This topic covers the preparation tasks that you have to perform before you begin configuring     any modules in  Acumatica ERP.     Most of these tasks involve collecting and analyzing data and making decisions that will affect     the system as a whole.    Because this is the preparation phase of implementation, you enter no data     into the system at this time. Task  Description Decide on the features to be enabled Review the core functionality and the list of add-on features included in your edition         of  Acumatica ERP. For more information, see  Overview of the Acumatica ERP Features . Decide which         features to enable. Some of the features (such as  Multi-Branch Support  or           Subaccounts ) should be enabled and configured at this time in the implementation         process, while other features (such as  Allocation Templates  and  Volume         Pricing ) can be enabled and configured after you initialize the system.  Think thoroughly before you enable any feature. If you enable a feature you          won't need, the users will need to enter additional data that won't be used. On the other          hand, disabling some of the features for which some data was entered, may cause unexpected          results.  Choose the base currency Choose the main currency used by all branches of your organization as the  base           currency . The base currency is the default currency for recording transactions,          budgets, and other GL data, and it is used for reporting, income statements, and balance          sheets. The base currency can be the only currency used in the system or one of multiple          currencies that are used in operations with customers and vendors.  Plan the identifier to be used for the base currency (up to five characters in length),          the currency symbol, and the required decimal precision. To comply with international standards, refer to ISO 4217 when you are specifying          foreign currency identifiers and currency symbols. Decide how many branches you need In  Acumatica ERP, you must define at least one branch to represent your organization. If the            Multi-Branch Support  feature is activated, you can create multiple branches.          Branches can be configured for points of sale (locations) as well as for separate legal          entities within your organization. This multi-branch functionality can be used for          organizations with branches that share the following settings: The base currency The chart of accounts (if your real-life branches use similar charts of accounts,            consider merging the charts into one chart of accounts that will be used by all            branches) The financial year and periods Create a list of branches and specify the following: Which branches are legal entities and file individual tax reports Which branches do not file individual tax reports Which branches file consolidated tax reports and which branches are included  For details, see  Multiple Branch Support          and  Basic Models for Multi-Branch Organization. Plan the identifiers for branches based on the  BIZACCT  segmented key Plan the identifiers that you will use for branches. Decide whether the identifier will          consist of segments, and what segment values may be used. In  Acumatica ERP, the structure of  identifiers for business accounts—that is, identifiers of branches,          vendors, customers, and employees—is defined by the structure of the  BIZACCT           segmented key. Define the number, length, and type of each of its segments, as well as the          list of values for each segment to be able to create the planned identifiers for branches.          For additional information, see  Segmented Identifiers.  The  BIZACCT  key will be used for the accounts that represent branches, as well as          for all types of business accounts (including identifiers of vendors, customers, and          employees), unless you configure specific  VENDOR ,  CUSTOMER  and            EMPLOYEE  keys that inherit the general structure of the  BIZACCT  key but can          have different sets of values for their segments (specific for each key). For more details,          see  Business Account Identifiers. Prepare country and province or state information Review the lists of countries on the   ([~/?ScreenId=CS204000|CS204000]) Countries/States (CS204000) form.  Acumatica ERP is installed with a preloaded list of countries and, for certain countries, states or         provinces.  If no states or provinces are specified for a country in which your organization         has operations, prepare a list of states or provinces with the following information for         each:  The standard (commonly used) abbreviated name, which will be used as its ID Its full name Whether tax registration is required in the state or province You should also plan the mask and regular expression to be used for validation of          each country's postal codes and input masks for phone numbers. See  Examples of Masks and Regular Expressions Usage  and  Country, State and Postal Code Validation. Decide which security certificates will be used  The data stored in the database should be encrypted, which requires a security          certificate. Another certificate (or certificates) may be needed if you want the employees          to sign PDF documents generated in  Acumatica ERP. You can purchase certificates from any certification authority.  For more information, see  Data Encryption in Acumatica ERP. Plan site preferences  Decide upon the following other optional global settings of the system:  Map viewer : Choose an Internet map engine to show location of customers and           vendors (optional). Export to Microsoft Excel settings : Decide how data exported from reports to           Microsoft Excel should be formatted, including the following factors:  Whether hidden fields should be exported. Whether each cell in the Excel worksheet should have a border, and what its color             should be. What the font, size, style (bold, italic, etc.), font color, and fill color of the             report header should be, as well as what these selections should be for the report data             rows. What background color should be used for the headers, as well as for the data             rows. Prepare a list of users participating in implementation To sign in to Acumatica ERP, a person must have a user account in the system. Prepare a          list of individuals (employees and possibly external staff) who need to access and use the          system through its implementation period, with the following information for each user: Login First name Last name Email address (each user can also specify personal email in his or her profile to be           used to restore the user's login or password) Password settings, including whether to allow the user to change the password and           whether to force the user to change the password on next login  Creating user accounts for all users before roles are established and          other security restrictions are configured poses a security risk. Plan to configure the          integration of  Acumatica ERP with Active Directory or create user accounts for employees and users not participating          in the implementation process just before live operations begin in  Acumatica ERP.  Develop security and audit policies for these users  Decide upon the following security and audit options, which will affect the users          involved in implementation (later, during the configuration of all other users and          employees, you may want to change these policies):   Whether to require password complexity.   Whether to use an additional password validation mask, and if so, what mask. This mask           can be applied in addition to other password restrictions. This option is used to exclude           characters that may not be supported by involved systems. Note that any regularity in           passwords greatly diminishes the security level. Use this option only when it's absolutely           necessary. If you decide to use this mask, develop a message text to be displayed to the           user when the password violates the validation mask. Whether to set up an account lock time and what number of unsuccessful login attempts           will cause the user to be locked out of the account. For more information, see  Security Policies in Acumatica ERP.  You can print the  Initial Preparation Checklist and refer to it when you     perform the initial preparation tasks.  ]]></column>
		</row>
		<row PageID="26e94e85-6a05-4c4b-8b08-f6161bfc7e3f" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3435ba1b-cd88-537f-2ffd-73158e0ca290" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will help you perform the initial configuration of Acumatica ERP. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform the tasks listed in this topic in the order in which they are listed. ((({S:Hint}The person who performs the initial configuration uses the ''admin'' login and the initial password only until the accounts for the persons participating in implementation are created (in the last task of initial configuration). We recommend that after initial configuration, the users use their personal logins and passwords to access the system.
)))[anchor|#table_rsn_hsp_bs]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Enable the selected features'''{br}

 [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000])
| Enable the features you plan to use in the implementation. Click '''Modify''' on the form toolbar, select the check boxes for the features to be enabled, and click '''Enable'''.((({S:Hint}After you install a new blank instance of Acumatica ERP, most of the product features are disabled and the only form you can access when you sign in is the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] form. 
)))
See [HelpRoot_Administration\CS__con_Managing_Features|Managing Features].
|- 
| '''2'''
| 
 '''Populate the lists of states or provinces'''{br}

 [HelpRoot_FormReference\CS_20_40_00|Countries/States] ([~/?ScreenId=CS204000|CS204000])
| For each country on your list, enter the provinces or states, type an input mask for the postal codes or a regular expression.
|- 
| '''3'''
| 
 '''Create an auto-numbering sequence for the ''BIZACCT'' key'''{br}

 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
|  If you have decided to use auto-numbering in the identifiers of customers and vendors, review the ''CUSTOMER'' numbering sequence for customers and ''VENDOR'' numbering sequence for vendors. These are the preconfigured numbering sequences for use with the ''BIZACCT'' segmented key. If needed, modify the sequence or create a new custom numbering sequence.
|- 
| '''4'''
| 
 '''Configure the ''BIZACCT'' key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| Configure the ''BIZACCT'' segmented key by specifying the following:[anchor|#ul_hdx_wr2_1s]
*The number of segments the key has
*The length of each segment
*The type of each segment and whether it requires validation
*The list of values for each segment

Also, if ''BIZACCT'' will contain an auto-numbering segment, select the '''Auto Number''' option for the segment, and in the '''Numbering ID''' box, select the predefined sequence (''CUSTOMER'' or ''VENDOR'') or the custom sequence you have created.
|- 
| '''5'''
| 
 '''Add segment values for the ''BIZACCT'' key'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| For each segment that requires validation, enter the allowed values that will be used in the identifiers for your organization&rsquo;s branches and other business accounts.
|- 
| '''6'''
| 
 '''Create the first branch'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| Enter the following information about the first branch (which represents your organization):[anchor|#ul_pvy_xlt_1s]
*The identifier (which should comply with the ''BIZACCT ''segmented key) and name
*The default country and the input mask for phone numbers
*The address and the tax registration number
*The base currency to be used by all the branches. Specify the base currency identifier (which is up to five characters in length), the currency symbol, and the required decimal precision.
*:((({S:Hint}To comply with international standards, refer to ISO 4217 when you are specifying foreign currency identifiers and currency symbols.
)))

|- 
| '''7'''
| 
 '''Create other branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
This task is needed only if the ''Multi-Branch Support'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] form. {br}

Enter the following general information about each branch:[anchor|#ul_vqt_cnt_1s]
*Branch identifier (which should comply with the ''BIZACCT ''segmented key)
*Name of the branch
*Address
*Tax registration information

|- 
| '''8'''
| 
 '''Specify the site preferences'''{br}

 [HelpRoot_FormReference\SM_20_05_05|Site Preferences] ([~/?ScreenId=SM200505|SM200505])
| 
Specify the following settings:[anchor|#ul_x3m_4lt_1s]
*The map viewer, to enable the users to view branch, customer, and vendor locations on a map
*The default login time zone as the time zone from which most users will log in to Acumatica ERP
*The interface theme that is most appropriate for your organization
*The options to be used by default when the users export data to Excel

|- 
| '''9'''
| 
 '''Import security certificates'''{br}

 [HelpRoot_FormReference\SM_20_05_30|Encryption Certificates] (SM200530
| 
Import and register the certificates in Acumatica ERP (one for the encryption of the database and one or more for PDF signing). For each certificate: [anchor|#ul_tcn_21f_1s]
*Enter a brief descriptive name.
*Enter the password of the certificate, which is provided by a certification authority.
*Upload the certificate to the system.

See [HelpRoot_Administration\US__How_to_Import_Digital_Certificate|To Import Certificates].
|- 
| '''10'''
| 
 '''Specify security preferences'''{br}

 [HelpRoot_FormReference\SM_20_10_60|Security Preferences] ([~/?ScreenId=SM201060|SM201060])
| 
Specify the security preferences you decided on during the preparation stage for the Acumatica ERP site: [anchor|#ul_hh3_typ_bs]
*'''Password Policy''': Specify the maximum lifetime for user passwords, minimum password length, whether password complexity is required, additional validation mask, and a tip that the user will see if a new password doesn&rsquo;t meet the complexity requirements.
*'''Account Lockout Policy''': Specify the maximum number of unsuccessful attempts, lockout time, and lockout counter reset time. 
*'''Audit policy''': Specify the audited operations and the time to keep the audit history 
*'''Security Certificates:''' Specify the certificates (the default one for PDF signing and another for encryption of database).

|- 
| '''11'''
| 
 '''Apply the security certificate'''{br}

 [HelpRoot_FormReference\SM_20_05_35|Certificate Replacement] (SM200535
| 
Encrypt the data in the database by using the imported certificate. The table on the form shows the types of data that will be stored encrypted.{br}

See [HelpRoot_Administration\US__How_to_Encrypt_Database|To Encrypt the Database].
|- 
| '''12'''
| 
 '''Create user accounts'''{br}

 [HelpRoot_FormReference\SM_20_10_10|Users] ([~/?ScreenId=SM201010|SM201010])
| 
For each user participating in implementation, do the following:[anchor|#ul_uyh_y42_1s]
*Enter a login (username) to be used to sign in the system.
*Clear the '''Generate Password''' check box and enter the password.
*Type the first and last name.
*Enter the email address.
*Specify the following password policies, if appropriate:
**Permit the user to have a never-expiring password. 
**Force the user to change the password on the next login. This option is normally selected for new users.
*Optionally, use the '''Comment''' box to add any relevant information about the user account.
*Assign the ''Administrator'' role. 
*:((({S:Hint}At this implementation stage, when only a few users are involved in the process and they all should have access to all the functionality, this assignment is necessary. Later, once implementation of the financial modules is complete, you can configure user roles and assign them to users. 
)))
*Activate the account.

|}
 You can print the [HelpRoot_ImplementChecklists\INIT_Conf_Checklist|Initial Configuration Checklist] and refer to it when you perform the initial configuration tasks. ]]></column>
			<column name="PlainText"><![CDATA[Initial Configuration This topic will help you perform the initial configuration of  Acumatica ERP. Due to dependencies between the forms, the sequence of actions during configuration is       critical, so you need to perform the tasks listed in this topic in the order in which they are       listed.  The person who performs the initial configuration uses the  admin  login         and the initial password only until the accounts for the persons participating in         implementation are created (in the last task of initial configuration). We recommend that         after initial configuration, the users use their personal logins and passwords to access the         system. No. Task  Description 1 Enable the selected features  ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) Enable the features you plan to use in the implementation. Click  Modify                  on the form toolbar, select the check boxes for the features to be enabled, and                 click  Enable . After you install a new blank instance of  Acumatica ERP, most of the product features are disabled and the only form you can access                   when you sign in is the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features form.                    See  Managing Features. 2 Populate the lists of states or provinces  ([~/?ScreenId=CS204000|CS204000]) Countries/States (CS204000) For each country on your list, enter the provinces or states, type an input                 mask for the postal codes or a regular expression. 3 Create an auto-numbering sequence for the  BIZACCT  key  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201000)  If you have decided to use auto-numbering in the identifiers of customers and                 vendors, review the  CUSTOMER  numbering sequence for customers and                    VENDOR  numbering sequence for vendors. These are the preconfigured                 numbering sequences for use with the  BIZACCT  segmented key. If needed, modify                 the sequence or create a new custom numbering sequence. 4 Configure the  BIZACCT  key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Configure the  BIZACCT  segmented key by specifying the following: The number of segments the key has The length of each segment The type of each segment and whether it requires validation The list of values for each segment Also, if  BIZACCT  will contain an auto-numbering segment, select the                      Auto Number  option for the segment, and in the  Numbering ID  box,                   select the predefined sequence ( CUSTOMER  or  VENDOR ) or the custom                   sequence you have created. 5 Add segment values for the  BIZACCT  key  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) For each segment that requires validation, enter the allowed values  that will                 be used in the identifiers for your organization's branches and other business                 accounts. 6 Create the first branch  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) Enter the following information about the first branch (which represents your                   organization): The identifier (which should comply with the  BIZACCT  segmented key) and                     name The default country and the input mask for phone numbers The address and the tax registration number The base currency to be used by all the branches. Specify the base currency                     identifier (which is up to five characters in length), the currency symbol, and                     the required decimal precision. To comply with international standards,                       refer to ISO 4217 when you are specifying foreign currency identifiers and                       currency symbols. 7 Create other branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) This task is needed only if the  Multi-Branch Support  feature is enabled on                   the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features form.  Enter the following general information about each branch: Branch identifier (which should comply with the  BIZACCT  segmented                     key) Name of the branch Address Tax registration information 8 Specify the site preferences  ([~/?ScreenId=SM200505|SM200505]) Site Preferences (SM200505) Specify the following settings: The map viewer, to enable the users to view branch, customer, and vendor                     locations on a map The default login time zone as the time zone from which most users will log in                     to  Acumatica ERPThe interface theme that is most appropriate for your organization The options to be used by default when the users export data to Excel 9 Import security certificates  ([~/?ScreenId=SM200530|SM200530]) Encryption Certificates (SM200530 Import and register the certificates in  Acumatica ERP (one for the encryption of the database and one or more for PDF signing). For                   each certificate:  Enter a brief descriptive name. Enter the password of the certificate, which is provided by a certification                     authority. Upload the certificate to the system. See  To Import Certificates. 10 Specify security preferences  ([~/?ScreenId=SM201060|SM201060]) Security Preferences (SM201060) Specify the security preferences you decided on during the preparation stage for                   the  Acumatica ERP site:  Password Policy : Specify the maximum lifetime for user passwords,                     minimum password length, whether password complexity is required, additional                     validation mask, and a tip that the user will see if a new password doesn't meet                     the complexity requirements. Account Lockout Policy : Specify the maximum number of unsuccessful                     attempts, lockout time, and lockout counter reset time.  Audit policy : Specify the audited operations and the time to keep the                     audit history  Security Certificates:  Specify the certificates (the default one for                     PDF signing and another for encryption of database). 11 Apply the security certificate  ([~/?ScreenId=SM200535|SM200535]) Certificate Replacement (SM200535 Encrypt the data in the database by using the imported certificate. The table on                   the form shows the types of data that will be stored encrypted. See  To Encrypt the Database. 12 Create user accounts  ([~/?ScreenId=SM201010|SM201010]) Users(SM201010) For each user participating in implementation, do the following: Enter a login (username) to be used to sign in the system. Clear the  Generate Password  check box and enter the                     password. Type the first and last name. Enter the email address. Specify the following password policies, if appropriate: Permit the user to have a never-expiring password.  Force the user to change the password on the next login. This option is                         normally selected for new users. Optionally, use the  Comment  box to add any relevant information about                     the user account. Assign the  Administrator  role.  At this implementation stage, when                       only a few users are involved in the process and they all should have access                       to all the functionality, this assignment is necessary. Later, once                       implementation of the financial modules is complete, you can configure user                       roles and assign them to users.  Activate the account.  You can print the  Initial Configuration Checklist and refer to it when you         perform the initial configuration tasks.  ]]></column>
		</row>
		<row PageID="83cc2c93-5f6a-48a9-a31a-034ca9edefe2" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="4433316f-ac6a-bd8b-0d44-405c9c39fbf8" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter describes the process of implementing the General Ledger module of Acumatica ERP. 
==Overview==
 The General Ledger module is the core of Acumatica ERP. This chapter covers only the implementation process for the General Ledger module. For detailed descriptions of General Ledger forms and capabilities, see the [HelpRoot_Financials\GL_00_00_00|General Ledger] chapters of the Financial Management guide.[anchor|#1][anchor|#_rnb_xnt_gj]
==Prerequisites and Dependencies==
You have to perform initial system configuration, as described in the [HelpRoot_Implement\Impl_INIT|Performing Initial Configuration] chapter, before performing the configuration of the General Ledger module.
==Other Considerations==
This guide currently does not cover creating templates for general ledger allocations, setting up the processing of vouchers (document batches), and entering taxes from the General Ledger module; these tasks can be performed later in the implementation process. Also, you can configure the budget after you initialize the GL module. 
==In This Chapter==[anchor|#ul_e5m_2s4_bs]
*[HelpRoot_Implement\GL_Preparation|General Ledger: Preparation]: Describes what data should be collected, arranged, and analyzed before you start with actual configuration.
*[HelpRoot_Implement\GL_Configuration|General Ledger: Configuration]: Guides you through the actual configuration of the General Ledger module.
]]></column>
			<column name="PlainText"><![CDATA[Implementing General Ledger This chapter describes the process of implementing the General Ledger module of  Acumatica ERP.     Overview  The General Ledger module is the core of  Acumatica ERP. This chapter covers only the implementation process for the General Ledger module. For         detailed descriptions of General Ledger forms and capabilities, see the   ([~/?ScreenId=GL000000|GL000000]) General Ledger chapters of the Financial Management         guide. Prerequisites and Dependencies You have to perform initial system configuration, as described in the  Performing Initial Configuration chapter, before performing the configuration of the General Ledger         module. Other Considerations This guide currently does not cover creating templates for general ledger allocations,         setting up the processing of vouchers (document batches), and entering taxes from the         General Ledger module; these tasks can be performed later in the implementation process.         Also, you can configure the budget after you initialize the GL module.  In This Chapter General Ledger: Preparation: Describes what data should be collected, arranged, and           analyzed before you start with actual configuration. General Ledger: Configuration: Guides you through the actual configuration of the           General Ledger module. ]]></column>
		</row>
		<row PageID="6934cb7c-2c66-4cd4-82f1-ee5becf7efbd" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7306d746-4c68-445a-4c1f-12533404f487" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
This topic covers the preparation that you have to perform before you begin configuring the General Ledger module. This preparation primarily consists of collecting and analyzing the necessary information. [anchor|#table_g3m_5t4_bs]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="66%" ! Description
!width="13%" ! Feature
|- 
| '''Determine the financial year and periods'''
| 
Decide upon the first financial year: the year when the organization starts processing its operations in Acumatica ERP. If you need to migrate historical balances or transactions, the first financial year should be the earliest year of this history. You should also do the following:[anchor|#ul_q2r_1x4_bs]
*Choose the type of periods. Periods can be based on quarters, months, or weeks, or they can be custom periods.
*Specify the start date of each period.
*Decide whether to use an ''adjustment period'': Adjustment period must be the last period of the year and its start date must be the same as its end date.

See [HelpRoot_Financials\GL__CON_Financial_Year_Definition|Financial Year Configuration] for more information.
| 
|- 
| '''Decide how many posting ledgers you need'''
| 
If your organization is represented by a single branch, you need only one ledger of the ''Actual'' type that uses the base currency.{br}

Decide how many ledgers of this type you need if there are multiple branches. You can use the same posting ledger for multiple branches in either of the following cases:[anchor|#ul_lxq_hy4_bs]
*These branches are separate legal entities without subordinate branches.
*Among these branches, only one branch is a legal entity, while other branches are its subordinate branches, such as points of sales. To file a joint tax report on behalf of the legal entity, you need to create an additional consolidating branch that will be used for reporting only.
((({S:Hint}Ledgers of types other than ''Actual'' can be created after the system is implemented and live operations are started.
)))
 For more details, see [HelpRoot_Organization\CS__con_Basic_Models_for_Multi-Branch_Organization|Basic Models for Multi-Branch Organization] and [HelpRoot_Financials\GL__CON_Actual_Ledger|Actual Ledgers].
| Multi-Branch Support
|- 
| '''Plan ledger identifiers'''
| 
Plan ledger identifiers and descriptions for ledgers of the ''Actual'' type. The same naming convention may be used for ledgers of other types (''Reporting'' and ''Statistical'') that will be created later. For a ledger identifier, you can use an alphanumeric string of up to 10 characters.
| 
|- 
| '''Review the account classes'''
| 
Acumatica ERP provides a list of predefined account classes. Account classes are used to group General Ledger accounts of the same type (''Expense'', ''Asset'', ''Income'', or ''Liability'') in reports and inquiries and have no impact on transaction processing. Review the list, add the classes you will use and remove the classes you don&rsquo;t need. {br}

See [HelpRoot_Financials\GL__CON_Modification_of_Cart_of_Accounts|Modification of the Chart of Accounts]. 
| 
|- 
| '''Plan the chart of accounts'''
| 
Plan the chart of accounts with descriptions and account classes specified for each account. ((({S:Warn} The chart of accounts must include the ''Year-to-Date Net Income'' and ''Retained Earnings'' liability accounts. See [HelpRoot_Financials\GL__con_YTD_Net_Income_and_Retained_Earnings_Accounts|YTD Net Income and Retained Earnings Accounts] for more information.
)))
You should also decide upon the order of accounts in the chart of accounts.
| 
|- 
| '''Plan the account identifiers'''
| 
The account identifiers are defined by the ''ACCOUNT'' segmented key.((({S:Hint}We recommend that you define account identifiers as one-segment identifiers. 
)))
Consider giving accounts of the same nature numbers from the same range. For example, all bank accounts can start with 10, all short-term assets can start with 11, all long-term assets can start with 12, all sales revenue accounts can start with 30, and so on. {br}

See [HelpRoot_Financials\GL__con_Account_and_Subaccount_Identifiers|Account Identification] for details.
| 
|- 
| '''Plan subaccounts'''
| 
The structure of subaccounts should support your reporting needs. Decide how many segments and of what length subaccounts should have—these decisions will be reflected in the configuration of the ''SUBACCOUNT'' segmented key. You should also do the following:((({S:Hint}Keep the subaccount identifiers conveniently short. The subaccount must be provided for every transaction, and longer subaccounts take more time.
)))[anchor|#ul_edg_wdp_bs]
*Decide whether segment values should be validated
*Prepare a list of valid entries for segments that should be validated
*Decide whether to allow users to enter subaccounts on the fly
*Prepare the list of subaccounts to create during implementation

For more information, see [HelpRoot_Financials\GL__con_Subaccount_Identifiers|Defining Subaccount Identifiers] and [HelpRoot_Financials\GL__con_Example_of_Subaccount_Definition|Example of Subaccount Definition].
| Subaccounts
|- 
| '''Review auto-numbering sequences'''
| 
 Acumatica ERP uses numbering sequences to automatically generate identifiers for new objects of a specific type (batches of transactions, General ledger allocations, and imports of trial balances) when they are created. Review the following predefined numbering sequences available for the General Ledger module on the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form:[anchor|#ul_q5y_5ff_1s]
*''BATCH'': The numbering sequence assigned to batches
*''TBIMPORT'': The numbering sequence assigned to imports of trial balances
*''SCHEDULE'': The numbering sequence assigned to schedules
*''ALLOCATION'': The numbering sequence assigned to allocations

Decide whether to use the predefined numbering sequences or create new ones. If your organization has branches, numbering sequences for documents associated with branches can be split into subsequences that have different prefixes or you can specify different ranges of numbers for these branches.{br}

 For additional information, see [HelpRoot_Administration\CS__con_Multiple_Numbering_Sequences|Numbering Sequence Usage].
| 
|- 
| '''Decide on other General Ledger preferences'''
| 
 Decide on General Ledger preferences: [anchor|#ul_jlm_5t4_bs]
*When auto-reversing entries should be generated
*Whether transactions should be posted immediately after they are released
*Whether batch totals should be validated on entry
*Whether new batches should be put on hold by default
*Whether transactions may be posted to closed periods
*Which accounts and subaccounts should be used for rounding gains and losses for the base currency
*Which subaccount can be used as the default subaccount for general ledger transactions 

For more information, see [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences].
| 
|- 
| '''Plan the default subaccounts for branches'''
| For each branch you will need the following subaccounts to be used by default for the transactions associated with the branch: sales, expense, freight, discount, and currency gain loss subaccounts. 
| Subaccounts
|- 
| '''Plan inter-branch account mapping'''
| Define inter-branch account mapping to provide the rules for the automatic generation of balancing entries (to be used to eliminate inter-branch balances). For each branch, write down the accounts to be used when this branch initiates transactions with every other branch and accounts to be used when this branch is the destination for transactions initiated in other branches. If the ''Subaccounts'' feature is enabled, plan also offset subaccounts for transactions of both types. For more details, see [HelpRoot_Financials\GL__MNG_Inter-Branch_Transactions|Processing Inter-Branch Transactions].
| Inter-Branch Transactions; Subaccounts
|}
 You can print the [HelpRoot_ImplementChecklists\GL_Preparation_Checklist|General Ledger Preparation Checklist] and refer to it when you prepare to implement the General Ledger module. ]]></column>
			<column name="PlainText"><![CDATA[General Ledger: Preparation This topic covers the preparation that you have to perform before you begin     configuring the General Ledger module. This preparation primarily consists of collecting and     analyzing the necessary information.  Task  Description Feature Determine the financial year and periods Decide upon the first financial year: the year when the organization starts processing          its operations in  Acumatica ERP. If you need to migrate historical balances or transactions, the first financial year          should be the earliest year of this history. You should also do the following: Choose the type of periods. Periods can be based on quarters, months, or weeks, or they           can be custom periods. Specify the start date of each period. Decide whether to use an  adjustment period : Adjustment period must be the last           period of the year and its start date must be the same as its end date. See  Financial Year Configuration for more          information. Decide how many posting ledgers you need If your organization is represented by a single branch, you need only one ledger of the            Actual  type that uses the base currency. Decide how many ledgers of this type you need if there are multiple branches. You can use          the same posting ledger for multiple branches in either of the following cases: These branches are separate legal entities without subordinate branches. Among these branches, only one branch is a legal entity, while other branches are its           subordinate branches, such as points of sales. To file a joint tax report on behalf of the           legal entity, you need to create an additional consolidating branch that will be used for           reporting only. Ledgers of types other than  Actual  can be created after the system is          implemented and live operations are started.  For more details, see  Basic Models for Multi-Branch Organization and  Actual Ledgers. Multi-Branch Support Plan ledger identifiers Plan ledger identifiers and descriptions for ledgers of the  Actual  type. The same          naming convention may be used for ledgers of other types ( Reporting  and            Statistical ) that will be created later. For a ledger identifier, you can use an          alphanumeric string of up to 10 characters. Review the account classes Acumatica ERP provides a list of predefined account classes. Account classes are used to          group General Ledger accounts of the same type ( Expense ,  Asset ,           Income , or  Liability ) in reports and inquiries and have no impact on          transaction processing. Review the list, add the classes you will use and remove the          classes you don't need.  See  Modification of the Chart of Accounts.          Plan the chart of accounts Plan the chart of accounts with descriptions and account classes specified for each          account.   The chart of accounts must include the  Year-to-Date Net Income           and  Retained Earnings  liability accounts. See  YTD Net Income and Retained Earnings Accounts for more information. You should also decide upon the order of accounts in the chart of accounts. Plan the account identifiers The account identifiers are defined by the  ACCOUNT  segmented key. We recommend that you define account identifiers as one-segment identifiers.  Consider giving accounts of the same nature numbers from the same range. For example, all          bank accounts can start with 10, all short-term assets can start with 11, all long-term          assets can start with 12, all sales revenue accounts can start with 30, and so on.  See  Account Identification for details. Plan subaccounts The structure of subaccounts should support your reporting needs. Decide how many          segments and of what length subaccounts should have—these decisions will be reflected in          the configuration of the  SUBACCOUNT  segmented key. You should also do the          following: Keep the subaccount identifiers conveniently short. The subaccount must be provided          for every transaction, and longer subaccounts take more time. Decide whether segment values should be validated Prepare a list of valid entries for segments that should be validated Decide whether to allow users to enter subaccounts on the fly Prepare the list of subaccounts to create during implementation For more information, see  Defining Subaccount Identifiers          and  Example of Subaccount Definition. Subaccounts Review auto-numbering sequences  Acumatica ERP uses numbering sequences to automatically generate identifiers for new objects of a          specific type (batches of transactions, General ledger allocations, and imports of trial          balances) when they are created. Review the following predefined numbering sequences          available for the General Ledger module on the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences          (CS201010) form: BATCH : The numbering sequence assigned to batches TBIMPORT : The numbering sequence assigned to imports of trial balances SCHEDULE : The numbering sequence assigned to schedules ALLOCATION : The numbering sequence assigned to allocations Decide whether to use the predefined numbering sequences or create new ones. If your          organization has branches, numbering sequences for documents associated with branches can          be split into subsequences that have different prefixes or you can specify different ranges          of numbers for these branches.  For additional information, see  Numbering Sequence Usage. Decide on other General Ledger preferences  Decide on General Ledger preferences:  When auto-reversing entries should be generated Whether transactions should be posted immediately after they are released Whether batch totals should be validated on entry Whether new batches should be put on hold by default Whether transactions may be posted to closed periods Which accounts and subaccounts should be used for rounding gains and losses for the           base currency Which subaccount can be used as the default subaccount for general ledger transactions           For more information, see   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences. Plan the default subaccounts for branches For each branch you will need the following subaccounts to be used by default for the         transactions associated with the branch: sales, expense, freight, discount, and currency         gain loss subaccounts.  Subaccounts Plan inter-branch account mapping Define inter-branch account mapping to provide the rules for the automatic generation         of balancing entries (to be used to eliminate inter-branch balances). For each branch, write         down the accounts to be used when this branch initiates transactions with every other branch         and accounts to be used when this branch is the destination for transactions initiated in         other branches. If the  Subaccounts  feature is enabled, plan also offset subaccounts         for transactions of both types. For more details, see  Processing Inter-Branch Transactions. Inter-Branch Transactions; Subaccounts  You can print the  General Ledger Preparation Checklist and refer to it when you     prepare to implement the General Ledger module.  ]]></column>
		</row>
		<row PageID="c8150188-1159-4415-b705-4931d5dd2d84" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7afc8ef2-8abd-ddc1-c8ce-3b9f8c44eb13" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will guide you through the process of configuring the General Ledger module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform the tasks in the order in which they are listed.[anchor|#1][anchor|#_rnb_xnt_gj]
==Prerequisites and Dependencies==
Make sure you have enabled all the features for the planned configuration and that you have performed initial configuration (as described in [HelpRoot_Implement\INIT_Configuration|Initial Configuration])[anchor|#table_ywp_wt4_bs]
{| class="checklist" | width="100%" 
|- 
!width="3%" ! '''No.'''
!width="22%" ! Task 
!width="59%" ! Description
!width="14%" ! Feature
|- 
| '''1'''
| 
 '''Define the financial year'''{br}

 [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000])
| 
Specify the start date of the first financial year and the number and type of periods, as well as whether to add an adjustment period. Define and generate the templates for financial periods. {br}

See [HelpRoot_Financials\GL__MNG_Setting_Up_Financial_Year|Setting Up the Financial Year].
| 
|- 
| '''2'''
| 
 '''Generate financial periods'''{br}

 [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000])
| 
Generate periods starting the first year to the first operational year.((({S:Hint}Do not generate financial periods far into the future, because this limits and complicates any changes to the configuration of the financial year that might be needed.
)))
See [HelpRoot_Financials\GL__Generating_Periods_for_a_New_Financial_Year|To Generate Periods for New Financial Years in Master Calendar]. 
| 
|- 
| '''3'''
| 
 '''Create a posting ledger'''{br}

 [HelpRoot_FormReference\GL_20_15_00|Ledgers] ([~/?ScreenId=GL201500|GL201500])
| 
If the ''Multi-Branch Support'' feature is not enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, create a posting ledger of the ''Actual'' type to be used for the branch that represents your organization. Select the base currency as the ledger currency.{br}

See [HelpRoot_Financials\GL__HOW_To_Add_a_Ledger|To Add an Actual Ledger]. 
| 
|- 
| '''4'''
| 
 '''Create ledgers'''{br}

 [HelpRoot_FormReference\GL_20_15_00|Ledgers] ([~/?ScreenId=GL201500|GL201500])
| 
Create multiple posting ledgers if you need more than one (these ledgers must be of the ''Actual'' type and use the base currency). Specify the consolidating branch for each ledger.{br}

See also the [HelpRoot_Financials\GL__HOW_To_Add_a_Ledger|To Add an Actual Ledger] article. 
| Multi-Branch Support
|- 
| '''5'''
| 
 '''Assign ledgers to branches'''{br}

 [HelpRoot_FormReference\GL_10_10_10|Inter-Branch Account Mapping] ([~/?ScreenId=GL101010|GL101010])
| 
For each branch, select the posting ledger. Each branch posts transactions to a single ledger; however, the same ledger can be used by multiple branches.
| Multi-Branch Support
|- 
| '''6'''
| 
 '''Define account classes'''{br}

 [HelpRoot_FormReference\GL_20_20_00|Account Classes] ([~/?ScreenId=GL202000|GL202000])
| 
 Add account classes as planned (you need at least one class to proceed with the implementation). {br}

See [HelpRoot_Financials\GL__HOW_To_Create_an_Account_Class|To Create an Account Class]. 
| 
|- 
| '''7'''
| 
 '''Configure the ''ACCOUNT'' segmented key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
 Define the structure of the ''ACCOUNT'' segmented key. Generally, the ''ACCOUNT'' key is defined with one segment.
| 
|- 
| '''8'''
| 
 '''Populate the segments for the ACCOUNT key'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| 
 If you have defined the ''ACCOUNT'' key with multiple segments, enter segment values for account segments that require validation; do not specify the values for segments that do not require validation. 
| 
|- 
| '''9'''
| 
 '''Define the chart of accounts'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| 
Create the following liability accounts manually: ''YTD Net Income'' and ''Retained Earnings''. Import the chart of accounts from an Excel file or a file in CSV format. Make sure that for each account, the following information is available:[anchor|#ul_dty_3td_cs]
*Account number 
*Description 
*Type
*Account class 
 See [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts]. 
| 
|- 
| '''10'''
| 
 '''Define auto-numbering sequences'''{br}

 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) 
| 
Create or modify the numbering sequences for General Ledger documents as you planned. 
| 
|- 
| '''11'''
| 
 '''Configure the ''SUBACCOUNT'' segmented key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
Use the ''SUBACCOUNT ''segmented key to configure the subaccount identifiers as follows:[anchor|#ul_c4h_jpp_bs]
*Specify the number of segments and the separator.
* For each segment, provide the description, length, edit mask, and validation setting (yes/no).
*Change the lookup mode in the '''Lookup Mode''' box if needed.

| Subaccounts
|- 
| '''12'''
| 
 '''Populate the segments for ''SUBACCOUNT'''''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| 
Enter segment values for subaccount segments that require validation; do not enter the values for segments that do not require validation. 
| Subaccounts
|- 
| '''13'''
| 
 '''Enter subaccounts'''{br}

 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| 
 Create the planned subaccounts. If you have selected the ''By Segment: All Avail. Segment Values'' mode in the '''Lookup Mode''' box for the SUBACCOUNT segmented key, you don’t have to create a complete list of subaccounts in advance.{br}

See [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount].
| Subaccounts
|- 
| '''14'''
| 
 '''Assign default subaccounts to branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
On the '''GL Accounts''' tab, for each branch, select the default sales, expense, freight, discount, and gain/loss subaccounts.
| Subaccounts
|- 
| '''15'''
| 
 '''Specify whether branch accounting is needed'''{br}

 [HelpRoot_FormReference\GL_20_15_00|Ledgers] ([~/?ScreenId=GL201500|GL201500])
| 
For each ledger, specify whether branch accounting is needed. Select the '''Branch Accounting''' check box to indicate that balancing entries are required when multiple branches within the same posting ledger are involved in one transaction.
| Inter-Branch Transactions
|- 
| '''16'''
| 
 '''Specify General Ledger preferences'''{br}

 [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000])
| Specify the following settings: [anchor|#ul_mpw_hlp_bs]
*What the default posting ledger is
*Which accounts are the YTD Net Income and Retained Earnings accounts
*What rounding gain and loss accounts are used for the base currency
*What numbering sequences are used for General Ledger batches, schedules, allocations, and import of trial balance
*When to generate auto-reversing entries
*Whether batch totals should be validated
*Whether to hold batches on entry
*Whether to allow posting to closed periods
*Which order of accounts on the chart of accounts will be used
*Whether to use the normal sign of the balance
*Whether to generate consolidated batch on release of multiple documents in the Accounts Payable, Accounts Receivable, Cash Management, and Inventory modules

| 
|- 
| '''17'''
|  '''Define inter-branch account mapping'''
 [HelpRoot_FormReference\GL_10_10_10|Inter-Branch Account Mapping] ([~/?ScreenId=GL101010|GL101010])
| For each branch, perform the following:[anchor|#ul_ltd_mnp_bs]
*Map inter-branch accounts to be used if the branch initiates transactions
*Map inter-branch accounts to be used if the branch is the destination branch for transactions

| Inter-Branch Transactions
|}
 You can print the [HelpRoot_ImplementChecklists\GL_Conf_Checklist|General Ledger Configuration Checklist] and refer to it when you configure the General Ledger module. ]]></column>
			<column name="PlainText"><![CDATA[General Ledger: Configuration This topic will guide you through the process of configuring the General Ledger    module. Due to dependencies between the forms, the sequence of actions during configuration is    critical, so you need to perform the tasks in the order in which they are listed. Prerequisites and Dependencies Make sure you have enabled all the features for the planned configuration and that you have     performed initial configuration (as described in  Initial Configuration) No. Task  Description Feature 1 Define the financial year  ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) Specify the start date of the first financial year and the number and type of periods, as          well as whether to add an adjustment period. Define and generate the templates for          financial periods.  See  Setting Up the Financial Year. 2 Generate financial periods  ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar (GL201000) Generate periods starting the first year to the first operational year. Do not generate financial periods far into the future, because this limits and          complicates any changes to the configuration of the financial year that might be          needed. See  To Generate Periods for New Financial Years in Master Calendar.          3 Create a posting ledger  ([~/?ScreenId=GL201500|GL201500]) Ledgers (GL201500) If the  Multi-Branch Support  feature is not enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form, create a posting ledger of the            Actual  type to be used for the branch that represents your organization. Select the          base currency as the ledger currency. See  To Add an Actual Ledger.  4 Create ledgers  ([~/?ScreenId=GL201500|GL201500]) Ledgers (GL201500) Create multiple posting ledgers if you need more than one (these ledgers must be of the            Actual  type and use the base currency). Specify the consolidating branch for each          ledger. See also the  To Add an Actual Ledger article.  Multi-Branch Support 5 Assign ledgers to branches  ([~/?ScreenId=GL101010|GL101010]) Inter-Branch Account Mapping (GL101010) For each branch, select the posting ledger. Each branch posts transactions to a single          ledger; however, the same ledger can be used by multiple branches. Multi-Branch Support 6 Define account classes  ([~/?ScreenId=GL202000|GL202000]) Account Classes (GL202000)  Add account classes as planned (you need at least one class to proceed with the          implementation).  See  To Create an Account Class.  7 Configure the  ACCOUNT  segmented key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000)  Define the structure of the  ACCOUNT  segmented key. Generally, the  ACCOUNT           key is defined with one segment. 8 Populate the segments for the ACCOUNT key  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000)  If you have defined the  ACCOUNT  key with multiple segments, enter segment values          for account segments that require validation; do not specify the values for segments that          do not require validation.  9 Define the chart of accounts  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) Create the following liability accounts manually:  YTD Net Income  and            Retained Earnings . Import the chart of accounts from an Excel file or a file in CSV          format. Make sure that for each account, the following information is available: Account number  Description  Type Account class   See  To Add an Account to the Chart of Accounts.  10 Define auto-numbering sequences  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010)  Create or modify the numbering sequences for General Ledger documents as you planned.          11 Configure the  SUBACCOUNT  segmented key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Use the  SUBACCOUNT  segmented key to configure the subaccount identifiers as          follows: Specify the number of segments and the separator.  For each segment, provide the description, length, edit mask, and validation setting           (yes/no). Change the lookup mode in the  Lookup Mode  box if needed. Subaccounts 12 Populate the segments for  SUBACCOUNT  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) Enter segment values for subaccount segments that require validation; do not enter the          values for segments that do not require validation.  Subaccounts 13 Enter subaccounts  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000)  Create the planned subaccounts. If you have selected the  By Segment: All Avail.           Segment Values  mode in the  Lookup Mode  box for the SUBACCOUNT          segmented key, you don’t have to create a complete list of subaccounts in advance. See  To Add a Subaccount. Subaccounts 14 Assign default subaccounts to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) On the  GL Accounts  tab, for each branch, select the default sales, expense,          freight, discount, and gain/loss subaccounts. Subaccounts 15 Specify whether branch accounting is needed  ([~/?ScreenId=GL201500|GL201500]) Ledgers (GL201500) For each ledger, specify whether branch accounting is needed. Select the  Branch           Accounting  check box to indicate that balancing entries are required when multiple          branches within the same posting ledger are involved in one transaction. Inter-Branch Transactions 16 Specify General Ledger preferences  ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) Specify the following settings:  What the default posting ledger is Which accounts are the YTD Net Income and Retained Earnings accounts What rounding gain and loss accounts are used for the base currency What numbering sequences are used for General Ledger batches, schedules, allocations,           and import of trial balance When to generate auto-reversing entries Whether batch totals should be validated Whether to hold batches on entry Whether to allow posting to closed periods Which order of accounts on the chart of accounts will be used Whether to use the normal sign of the balance Whether to generate consolidated batch on release of multiple documents in the Accounts           Payable, Accounts Receivable, Cash Management, and Inventory modules 17 Define inter-branch account mapping  ([~/?ScreenId=GL101010|GL101010]) Inter-Branch Account Mapping (GL101010) For each branch, perform the following: Map inter-branch accounts to be used if the branch initiates transactions Map inter-branch accounts to be used if the branch is the destination branch for           transactions Inter-Branch Transactions  You can print the  General Ledger Configuration Checklist and refer to it when you configure     the General Ledger module.  ]]></column>
		</row>
		<row PageID="d2c84446-9419-47ef-8a58-5d70c39b673e" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="bc8f6854-e81b-d434-d832-7288112964b3" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter describes the process of implementing the Currency Management module of Acumatica ERP. This module appears in the Finance suite only if the ''Multi-Currency Accounting'' feature in Acumatica ERP is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. This feature also enables the currency-related UI elements across other modules of the system. {br}

With multicurrency functionality enabled in your instance of Acumatica ERP, you can invoice your customers and receive vendors&rsquo; bills in a foreign currency and maintain bank accounts denominated in a foreign currency. By implementing this module, you can translate statements of your organization to other currencies, or import and consolidate (for corporate reporting) statements of subsidiaries of your organization that operate in different currencies. {br}

((({S:Warn}Enable this feature and implement the Currency Management module only if your organization needs to use multiple currencies for Gl accounts (without this feature you can enter foreign currencies on the fly and cross rates for expense claims). Once you have enabled the feature, disabling it may cause unexpected results. 
))){br}

For more information on using multiple currencies in Acumatica ERP, see [HelpRoot_Financials\CM_00_00_00|Currency Management].[anchor|#1]
==Prerequisites and Dependencies==
The General Ledger and Currency Management modules are highly interdependent. General Ledger must be set up before you enable multiple currencies; however, the General Ledger accounts denominated in foreign currencies can be configured only after the Currency Management module is implemented. 
==In This Chapter==[anchor|#ul_qbm_f32_cs]
*[HelpRoot_Implement\CM_Preparation|Currency Management: Preparation]: Describes what data should be collected, arranged, and analyzed before you take action.
*[HelpRoot_Implement\CM_Configuration|Currency Management: Configuration]: Guides you through actually setting up multiple currencies in Acumatica ERP.
]]></column>
			<column name="PlainText"><![CDATA[Implementing Currency Management This chapter describes the process of implementing the Currency Management module of  Acumatica ERP. This module appears in the Finance suite only if the  Multi-Currency Accounting          feature in  Acumatica ERP is enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form. This         feature also enables the currency-related UI elements across other modules of the system.  With multicurrency functionality enabled in your instance of  Acumatica ERP, you can invoice your customers and receive vendors' bills in a foreign currency and         maintain bank accounts denominated in a foreign currency. By implementing this module, you         can translate statements of your organization to other currencies, or import and consolidate         (for corporate reporting) statements of subsidiaries of your organization that operate in         different currencies.  Enable this feature and implement the Currency Management module only           if your organization needs to use multiple currencies for Gl accounts (without this           feature you can enter foreign currencies on the fly and cross rates for expense claims).           Once you have enabled the feature, disabling it may cause unexpected results.  For more information on using multiple currencies in  Acumatica ERP, see   ([~/?ScreenId=CM000000|CM000000]) Currency Management. Prerequisites and Dependencies The General Ledger and Currency Management modules are highly interdependent. General Ledger         must be set up before you enable multiple currencies; however, the General Ledger accounts         denominated in foreign currencies can be configured only after the Currency Management         module is implemented.  In This Chapter Currency Management: Preparation: Describes what data should be collected, arranged, and      analyzed before you take action. Currency Management: Configuration: Guides you through actually setting up multiple      currencies in  Acumatica ERP. ]]></column>
		</row>
		<row PageID="90669852-2917-45d6-ad27-8bcb45201908" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="935ffe43-4b65-b5ce-0291-5a483152d698" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This topic covers the preparation that you have to perform before you begin configuring the Currency Management module in Acumatica ERP. [anchor|#table_in2_1j2_cs]((({S:Hint}The links in the table are the links to topics in the Financial Management Guide and System Administration Guide.
)))
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="66%" ! Description
!width="13%" ! Feature
|- 
| '''Prepare the list of currencies'''
| 
Prepare the list of currencies that are used in transactions with vendors and customers. Add the currencies of bank accounts. Also, add the currency of the headquarters or the currencies of subsidiaries which one is applicable (for the ''General Ledger Consolidation ''feature).{br}

For each currency, decide upon its identifier, description, symbol, and decimal precision (the number of digits following the decimal point that are used in operations with the currency). ((({S:Hint}We recommend that you refer to the ISO 4217 standard when assigning IDs to the currencies.
)))
| 
|- 
| '''Plan GL accounts for the currencies'''
| 
For the base currency, plan the GL accounts you will use for the following:[anchor|#ul_vtg_2t2_cs]
*Realized gain account
*Realized loss account
*Translation gain account
*Translation loss account

For foreign currencies, plan the GL accounts you will use for the following:: [anchor|#ul_ip2_1j2_cs]
*Realized gain account
*Realized loss account
*Unrealized gain account
*Unrealized loss account
*AP provisioning account
*AR provisioning account
*Revaluation gain account
*Revaluation loss account
*Translation gain account
*Translation loss account
*Rounding gain account
*Rounding loss account
{br}

You can use one set of accounts for all foreign currencies, or you can create a set of accounts for each foreign currency. write down the accounts you will need to create.
| 
|- 
| '''Plan subaccounts for the currencies'''
| (This task is performed only if the ''Subaccounts'' feature is enabled.)
For the base currency, decide on the following subaccounts:[anchor|#ul_sk1_kt2_cs]
*Realized gain subaccount
*Realized loss subaccount
*Translation gain subaccount
*Translation loss subaccount

For each currency, decide which subaccounts to use for the following: [anchor|#ul_vp2_1j2_cs]
*Realized gain subaccount
*Realized loss subaccount
*Unrealized gain subaccount
*Unrealized loss subaccount
*AP provisioning subaccount
*AR provisioning subaccount
*Revaluation gain subaccount
*Revaluation loss subaccount
*Translation gain subaccount
*Translation loss subaccount
*Rounding gain subaccount
*Rounding loss subaccount
{br}

Decide whether you need to combine subaccounts for gains and losses from segment values of subaccounts associated with currencies and branches. 
| Subaccounts
|- 
| '''Define rate types'''
| 
Prepare a list of the required exchange rate types. This list should include the rates used in daily operations with customers and vendors and the rates needed for revaluation and translation. Choose which of the rates should be default rates for General Ledger, Accounts Payable, Accounts Receivable, and Cash Management transactions, General Ledger, Accounts Payable, and Accounts Receivable revaluations. {br}

With Acumatica ERP, you can set up automatic updating of the exchange rates by using the [https://openexchangerates.org/|''Open Exchange Rates API''] online service. You can choose the rates for updating by this service and specify the adjustment percent if needed. Decide on the frequency of updating the rates—you can set up a schedule for automatic updating of the rates through this online service.{br}

 By default, an identifier for a rate type may include up to six alphanumeric characters. {br}

 For more information, see [HelpRoot_Financials\CM__con_Currency_Rate_Type_Setup|Currency Rate Type Creation] and [HelpRoot_Financials\CM__Refreshing_Currency_Rates|Ability to Refresh Currency Rates]. 
| 
|- 
| '''Decide on the allowed rate variance'''
|  Decide if the user should be warned when an exchange rate manually entered for a transaction differs too much from the rate maintained in the rate table, and what should be the maximum allowed variance should be. 
| 
|- 
| '''Plan the numbering sequences'''
| 
Plan the numbering sequence for unrealized gain/loss batches generated for Accounts Payable or Accounts Receivable revaluation; you can reuse an existing numbering sequence. For example, unrealized gain/loss batches can share a numbering sequence with General Ledger batches. {br}

For more information, see [HelpRoot_Administration\CS__con_Multiple_Numbering_Sequences|Numbering Sequence Usage]. 
| 
|- 
| '''Decide on auto-posting of Currency Management batches'''
|  Decide whether Currency Management batches generated for revaluations should be posted automatically to general ledger. 
| 
|- 
| '''Identify denominated accounts'''
| 
Prepare a list of General Ledger accounts to be denominated in foreign currencies with their account numbers and the currencies. Balances of denominated accounts are maintained in both the base currency and in the currency of denomination.{br}

For each account that is not listed on the chart of accounts yet, also indicate the description, account class, and account type.{br}

See [HelpRoot_Financials\GL__con_Denominated_Accounts|Denominated Accounts].
| 
|- 
| '''Plan translations of financial statements'''
| 
 For the translation from the base currency to a reporting currency, plan a destination ledger of the ''Reporting'' type, rate types, and the rules that include the ranges of accounts, each translated by using a specific rate type.{br}

Prepare a list of accounts (and subaccounts) to be used to record translation gains and losses. {br}

For more information, see [HelpRoot_Financials\CM__con_Overview_of_Translations|Translation Processing Workflow].
| Translation of Fin. Statements
|}
 You can print the [HelpRoot_ImplementChecklists\CM_Preparation_Checklist|Currency Management Preparation Checklist] and refer to it when you prepare to implement the Currency Management module. ]]></column>
			<column name="PlainText"><![CDATA[Currency Management: Preparation This topic covers the preparation that you have to perform before you begin configuring the         Currency Management module in  Acumatica ERP.  The links in the table are the links to topics in the Financial Management Guide and             System Administration Guide. Task  Description Feature Prepare the list of currencies Prepare the list of currencies that are used in transactions with vendors and                   customers. Add the currencies of bank accounts. Also, add the currency of the                   headquarters or the currencies of subsidiaries which one is applicable (for the                      General Ledger Consolidation  feature). For each currency, decide upon its identifier, description, symbol, and decimal                   precision (the number of digits following the decimal point that are used in                   operations with the currency).  We recommend that you refer to the ISO 4217 standard when                   assigning IDs to the currencies. Plan GL accounts for the currencies For the base currency, plan the GL accounts you will use for the following: Realized gain account Realized loss account Translation gain account Translation loss account For foreign currencies, plan the GL accounts you will use for the following::  Realized gain account Realized loss account Unrealized gain account Unrealized loss account AP provisioning account AR provisioning account Revaluation gain account Revaluation loss account Translation gain account Translation loss account Rounding gain account Rounding loss account You can use one set of accounts for all foreign currencies, or you can create a                   set of accounts for each foreign currency. write down the accounts you will need                   to create. Plan subaccounts for the currencies (This task is performed only if the  Subaccounts  feature is enabled.) For                   the base currency, decide on the following subaccounts: Realized gain subaccount Realized loss subaccount Translation gain subaccount Translation loss subaccount For each currency, decide which subaccounts to use for the following:  Realized gain subaccount Realized loss subaccount Unrealized gain subaccount Unrealized loss subaccount AP provisioning subaccount AR provisioning  subaccount Revaluation gain subaccount Revaluation loss subaccount Translation gain subaccount Translation loss subaccount Rounding gain subaccount Rounding loss subaccount Decide whether you need to combine subaccounts for gains and losses                   from segment values of subaccounts associated with currencies and branches.                  Subaccounts Define rate types Prepare a list of the required exchange rate types. This list should include the                   rates used in daily operations with customers and vendors and the rates needed for                   revaluation and translation. Choose which of the rates should be default rates for                   General Ledger, Accounts Payable, Accounts Receivable, and Cash Management                   transactions, General Ledger, Accounts Payable, and Accounts Receivable                   revaluations.  With  Acumatica ERP, you can set up automatic updating of the exchange rates by using the  Open                       Exchange Rates API ''Open Exchange Rates API'' online service. You can choose the rates for                   updating by this service and specify the adjustment percent if needed. Decide on                   the frequency of updating the rates—you can set up a schedule for automatic                   updating of the rates through this online service.  By default, an identifier for a rate type may include up to six alphanumeric                   characters.   For more information, see  Currency Rate Type Creation and  Ability to Refresh Currency Rates.  Decide on the allowed rate variance  Decide if the user should be warned when an exchange rate manually entered for                 a transaction differs too much from the rate maintained in the rate table, and what                 should be the maximum allowed variance should be.  Plan the numbering sequences Plan the numbering sequence for unrealized gain/loss batches generated for                   Accounts Payable or Accounts Receivable revaluation; you can reuse an existing                   numbering sequence. For example, unrealized gain/loss batches can share a                   numbering sequence with General Ledger batches.  For more information, see  Numbering Sequence Usage.                  Decide on auto-posting of Currency Management batches  Decide whether Currency Management batches generated for revaluations should                 be posted automatically to general ledger.  Identify denominated accounts Prepare a list of General Ledger accounts to be denominated in foreign currencies                   with their account numbers and the currencies. Balances of denominated accounts                   are maintained in both the base currency and in the currency of denomination. For each account that is not listed on the chart of accounts yet, also indicate                   the description, account class, and account type. See  Denominated Accounts. Plan translations of financial statements  For the translation from the base currency to a reporting currency, plan a                   destination ledger of the  Reporting  type, rate types, and the rules that                   include the ranges of accounts, each translated by using a specific rate type. Prepare a list of accounts (and subaccounts) to be used to record  translation                   gains and losses.  For more information, see  Translation Processing Workflow. Translation of Fin. Statements  You can print the  Currency Management Preparation Checklist and refer to it when you         prepare to implement the Currency Management module.  ]]></column>
		</row>
		<row PageID="bbbd3ec8-14c1-4f92-b4bd-7634fd70d2ae" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="578b240a-a7cb-1190-e0fa-26c8a7b397cb" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will guide you through the process of configuring the Currency Management module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform these tasks in the order in which they are presented.[anchor|#table_v2f_nk2_cs]
{| class="checklist" | width="100%" 
|- 
!width="3%" ! '''No.'''
!width="22%" ! Task 
!width="59%" ! Description
!width="14%" ! Feature
|- 
| '''1'''
| 
 '''Create GL accounts for the currencies'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| Create the accounts you have planned for foreign currencies:[anchor|#ul_ip2_1j2_cs]
*Realized gain account
*Realized loss account
*Unrealized gain account
*Unrealized loss account
*AP provisioning account
*AR provisioning account
*Revaluation gain account
*Revaluation loss account
*Rounding gain account
*Rounding loss account

For the base currency, create the following GL accounts:[anchor|#ul_vtg_2t2_cs]
*Realized gain account
*Realized loss account

See also [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts]. 
| 
|- 
| '''2'''
| 
 '''Create GL accounts for translations'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| 
 Create the following gain and loss accounts for translations to be performed from a foreign currency to the base currency or to another foreign currency:[anchor|#ul_mjb_pgc_2s]
*Translation gain account
*Translation loss account

See also [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts].
| Translation of Fin. Statements
|- 
| '''3'''
| 
 '''Create subaccounts for foreign currencies'''{br}

 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| 
Create all identified subaccounts to be used for exchange gains and losses: [anchor|#ul_ow2_rfc_2s]
* Realized Gain 
* Realized Loss 
* Unrealized Gain 
* Unrealized Loss 
* AP Provisioning
* AR Provisioning 
* Revaluation Gain 
* Revaluation Loss 
* Rounding Gain 
* Rounding Loss 

See also [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount]. 
| Subaccounts
|- 
| '''4'''
| 
 '''Create subaccounts for translations'''{br}

 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| Create all planned subaccounts to be used for translation gains and losses: [anchor|#ul_y11_mhc_2s]
* Translation Gain 
* Translation Loss 

See also [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount]. 
| Subaccounts, Translation of Fin. Statements
|- 
| '''5'''
| 
 '''Create rate types'''{br}

 [HelpRoot_FormReference\CM_20_10_00|Currency Rate Types] ([~/?ScreenId=CM201000|CM201000])
| 
Create each of the planned rate types as follows:[anchor|#ul_ztb_qfy_js]
*Type the rate type identifier and the description.
*Select the '''Refresh Online''' check box if the exchange rates of the type should be updated through the ''Open Exchange Rates API'' online service.
*To automatically adjust the rates of the type, specify the percent of change to the online value.

| 
|- 
| '''6'''
| 
 '''Set up a schedule for updating the exchange rates'''{br}

 [HelpRoot_FormReference\SM_20_50_20|Automation Schedules] ([~/?ScreenId=SM205020|SM205020]) 
| 
Create a schedule for updating the exchange rates by using the online service as follows:[anchor|#ol_cbn_hky_js]
#Select the [HelpRoot_FormReference\CM_20_10_00|Currency Rate Types] ([~/?ScreenId=CM201000|CM201000]) form in the '''Screen ID''' box.
#Provide a description of the schedule.
#Select the start and expiration dates for the schedule, or specify the maximum number of executions.
#Specify how often updates should be performed.

For details, see [HelpRoot_Administration\SM__con_Scheduled_Processing|Scheduled Processing] and [HelpRoot_Administration\SM__how_Scheduling_the_Desired_Processing|To Schedule Processing].
| 
|- 
| '''7'''
| 
 '''Specify the Currency Management preferences'''{br}

 [HelpRoot_FormReference\CM_10_10_00|Currency Management Preferences] ([~/?ScreenId=CM101000|CM101000])
| 
Do the following on this form:[anchor|#ul_bhf_nk2_cs]
* Enter the planned '''Rate Variance Allowed'''. 
* Select the '''Warn About Rate Variance''' check box if a warning should be displayed when the variance is exceeded. 
* Select the '''Automatically Post to GL on Release''' check box if Currency Management batches should be posted automatically. 
* Enter the applicable '''Default Rate Types'''. 
*Select the rate types to be used as the default rate types in the General Ledger, Cash Management, Accounts Payable, and Accounts Receivable modules, and for revaluations in the General Ledger, Accounts Payable, and Accounts Receivable modules.

| 
|- 
| '''8'''
| 
 '''Create currencies'''{br}

 [HelpRoot_FormReference\CM_20_20_00|Currencies] ([~/?ScreenId=CM202000|CM202000])
| 
Create all planned foreign currencies. For each currency, enter the following: [anchor|#ul_zhf_nk2_cs]
*Currency ID 
*Description 
*Decimal precision 
*Currency symbol 
((({S:Hint} You create only foreign currencies using this form. The base currency was defined on the [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form.
)))
| 
|- 
| '''9'''
| 
 '''Configure denominated accounts'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
|  For each account to be denominated in a foreign currency, select the currency and the rate type. 
| 
|- 
| '''10'''
| 
 '''Create ledgers of the Reporting type'''{br}

 [HelpRoot_FormReference\GL_20_15_00|Ledgers] ([~/?ScreenId=GL201500|GL201500])
| 
Create a ledger with a ''Reporting''-type balance to store the account balances that have been converted (translated) from the base currency into a reporting currency. Alternatively, if you have to perform multi-step translations from one reporting currency to another, create multiple ledgers of the ''Reporting'' type. For each ledger, select the currency. {br}

For details, see [HelpRoot_Financials\GL__HOW_To_Add_Reporting_Ledger|To Add a Reporting Ledger].
| Translation of Fin. Statements
|- 
| '''11'''
| 
 '''Create translation definitions'''{br}

 [HelpRoot_FormReference\CM_20_30_00|Translation Definition] ([~/?ScreenId=CM203000|CM203000])
| For each required translation definition, specify the following settings:[anchor|#ul_tgx_h3c_2s]
*Identifier and description
*Source ledger (of the ''Reporting'' type)
*Destination ledger (of the ''Reporting'' type)
*Branch

| Translation of Fin. Statements
|- 
| '''12'''
| 
 '''Select the default translation definition'''{br}

 [HelpRoot_FormReference\CM_10_10_00|Currency Management Preferences] ([~/?ScreenId=CM101000|CM101000])
| Set as the default translation definition the one that you expect will be used more often than the others.
| Translation of Fin. Statements
|}
 You can print the [HelpRoot_ImplementChecklists\CM_Conf_Checklist|Currency Management Configuration Checklist] and refer to it when you configure the Currency Management module. ]]></column>
			<column name="PlainText"><![CDATA[Currency Management: Configuration This topic will guide you through the process of configuring the Currency       Management module. Due to dependencies between the forms, the sequence of actions during       configuration is critical, so you need to perform these tasks in the order in which they are         presented. No. Task  Description Feature 1 Create GL accounts for the currencies  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) Create the accounts you have planned for foreign currencies: Realized gain account Realized loss account Unrealized gain account Unrealized loss account AP provisioning account AR provisioning account Revaluation gain account Revaluation loss account Rounding gain account Rounding loss account For the base currency, create the following GL accounts: Realized gain account Realized loss account See also  To Add an Account to the Chart of Accounts.                  2 Create GL accounts for translations  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500)  Create the following gain and loss accounts for translations to be performed                   from a foreign currency to the base currency or to another foreign currency: Translation gain account Translation loss account See also  To Add an Account to the Chart of Accounts. Translation of Fin. Statements 3 Create subaccounts for foreign currencies  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) Create all identified subaccounts to be used for exchange gains and losses:   Realized Gain   Realized Loss   Unrealized Gain   Unrealized Loss   AP Provisioning  AR Provisioning   Revaluation Gain   Revaluation Loss   Rounding Gain   Rounding Loss  See also  To Add a Subaccount.  Subaccounts 4 Create subaccounts for translations  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) Create all planned subaccounts to be used for translation gains and losses:   Translation Gain   Translation Loss  See also  To Add a Subaccount.                  Subaccounts, Translation of Fin. Statements 5 Create rate types  ([~/?ScreenId=CM201000|CM201000]) Currency Rate Types (CM201000) Create each of the planned rate types as follows: Type the rate type identifier and the description. Select the  Refresh Online  check box if the exchange rates of the type                     should be updated through the  Open Exchange Rates API  online                     service. To automatically adjust the rates of the type, specify the percent of change                     to the online value. 6 Set up a schedule for updating the exchange rates  ([~/?ScreenId=SM205020|SM205020]) Automation Schedules (SM205020)  Create a schedule for updating the exchange rates by using the online service as                   follows: Select the   ([~/?ScreenId=CM201000|CM201000]) Currency Rate Types                     (CM201000) form in the  Screen ID  box. Provide a description of the schedule. Select the start and expiration dates for the schedule, or specify the maximum                     number of executions. Specify how often updates should be performed. For details, see  Scheduled Processing                   and  To Schedule Processing. 7 Specify the Currency Management preferences  ([~/?ScreenId=CM101000|CM101000]) Currency Management Preferences (CM101000) Do the following on this form:  Enter the planned  Rate Variance Allowed .   Select the  Warn About Rate Variance  check box if a warning should be                     displayed when the variance is exceeded.   Select the  Automatically Post to GL on Release  check box if Currency                     Management batches should be posted automatically.   Enter the applicable  Default Rate Types .  Select the rate types to be used as the default rate types in the General                     Ledger, Cash Management, Accounts Payable, and Accounts Receivable modules, and                     for revaluations in the General Ledger, Accounts Payable, and Accounts                     Receivable modules. 8 Create currencies  ([~/?ScreenId=CM202000|CM202000]) Currencies (CM202000) Create all planned foreign currencies. For each currency, enter the following:  Currency ID  Description  Decimal precision  Currency symbol   You create only foreign currencies using this form. The base                   currency was defined on the   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) form. 9 Configure denominated accounts  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500)  For each account to be denominated in a foreign currency, select the currency                 and the rate type.  10 Create ledgers of the Reporting type  ([~/?ScreenId=GL201500|GL201500]) Ledgers (GL201500) Create a ledger with a  Reporting -type balance to store the account                   balances that have been converted (translated) from the base currency into a                   reporting currency. Alternatively, if you have to perform multi-step translations                   from one reporting currency to another, create multiple ledgers of the                      Reporting  type. For each ledger, select the currency.  For details, see  To Add a Reporting Ledger. Translation of Fin. Statements 11 Create translation definitions  ([~/?ScreenId=CM203000|CM203000]) Translation Definition (CM203000) For each required translation definition, specify the following settings: Identifier and description Source ledger (of the  Reporting  type) Destination ledger (of the  Reporting  type) Branch Translation of Fin. Statements 12 Select the default translation definition  ([~/?ScreenId=CM101000|CM101000]) Currency Management Preferences (CM101000) Set as the default translation definition the one that you expect will be used                 more often than the others. Translation of Fin. Statements  You can print the  Currency Management Configuration Checklist and refer to it when you         configure the Currency Management module.  ]]></column>
		</row>
		<row PageID="e96f9a52-69a0-475c-9ff9-031e4dd7f808" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="6a7a6ebc-173d-099a-5b19-0b7c3ce26189" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter describes the process of implementing the Cash Management module in Acumatica ERP. 
==Overview==
The Cash Management module, which is a part of the Finance suite, provides the functionality that helps you manage cash flows and forecast your cash position at any time and in multiple currencies. {br}

For more information about the Cash Management capabilities and processes, see [HelpRoot_Financials\CA_00_00_00|Cash Management]. [anchor|#1]
==Prerequisites and Dependencies==
The General Ledger module must be configured before the implementation of the Cash Management module starts. If your company uses multiple currencies in its operations, the Currency Management module must be implemented first as well. 
==Other Considerations==
Payment reclassification can be configured after you initialize the system. The rules for bank statement reconciliations can also be set after initialization of the system is performed.{br}

If the ''Approval Workflow'' feature is enabled in your system, you can configure the approval of cash transactions at a later stage in the implementation process, after you configure employees and users. For details, see [HelpRoot_Financials\CA__con_Cash_Transaction_Approval|Cash Transaction Approval]. 
==In This Chapter==[anchor|#ul_cmz_hj2_cs]
*[HelpRoot_Implement\CA_Preparation|Cash Management: Preparation]: Describes what data should be collected, arranged, and analyzed before you take action.
*[HelpRoot_Implement\CA_Configuration|Cash Management: Configuration]: Guides you through the actual configuration of the Cash Management module.
]]></column>
			<column name="PlainText"><![CDATA[Implementing Cash Management This chapter describes the process of implementing the Cash Management module in  Acumatica ERP.     Overview The Cash Management module, which is a part of the Finance suite, provides the functionality         that helps you manage cash flows and forecast your cash position at any time and in multiple         currencies.  For more information about the Cash Management capabilities and processes, see   ([~/?ScreenId=CA000000|CA000000]) Cash Management.  Prerequisites and Dependencies The General Ledger module must be configured before the implementation of the Cash Management         module starts. If your company uses multiple currencies in its operations, the Currency         Management module must be implemented first as well.  Other Considerations Payment reclassification can be configured after you initialize the system. The rules for         bank statement reconciliations can also be set after initialization of the system is         performed. If the  Approval Workflow  feature is enabled in your system, you can configure the         approval of cash transactions at a later stage in the implementation process, after you         configure employees and users. For details, see  Cash Transaction Approval.  In This Chapter Cash Management: Preparation: Describes what data should be collected, arranged, and      analyzed before you take action. Cash Management: Configuration: Guides you through the actual configuration of the      Cash Management module. ]]></column>
		</row>
		<row PageID="de9af557-c7c9-4ad4-a5c3-f7ab93503a27" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="efeff3f1-50e4-d4fc-2829-56e736af26e0" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
This topic covers the preparation that you have to perform before you begin configuring the Cash Management module. ((({S:Warn} Because this is the preparation phase of implementation, enter no data into the system at this time. 
)))[anchor|#table_cqz_hj2_cs]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Design entry types'''
| 
Design the entry types (the types of receipts and disbursements) to be used for Accounts Payable and Accounts Receivable payments in Acumatica ERP, as well as for Cash Management transactions. Some of the entry types can be specific to customers or vendors or used by specific branches only. Write down the GL accounts (and subaccounts) to be used as offset accounts (and subaccounts) for each entry type that you will use in the Cash Management module.{br}

For more information, see [HelpRoot_Financials\CA__CON_EntryTypes|Entry Types].
|- 
| '''List cash accounts and their details'''
| 
In Acumatica ERP, cash accounts are a special type of accounts that are not listed on the chart of accounts and are defined separately from general ledger accounts. However, each cash account is ''based on ''a specific GL account and differs by either branch or subaccount from other cash accounts based on the same GL account.{br}

For more information, see [HelpRoot_Financials\CA__CON_CashAccount_Definition|Cash Account Configuration].Prepare a list of the organization&rsquo;s cash accounts, including bank accounts, cash-on-hand accounts, and credit card accounts. Generally, an organization has cash accounts of the following types: [anchor|#ul_nc2_tdl_cs]
*General-purpose cash accounts to record petty cash or other cash on hand. You should create at least one general-purpose cash account for each currency.
*Bank accounts. 
*Clearing accounts to be used for deposits. A clearing account is used to temporarily accumulate customer payments, such as checks (including postdated checks) and cash (coins), for a specific bank account before the payments are actually deposited into the bank account.
For each cash account, write down the following details:[anchor|#ul_sh1_3j2_cs]
* General Ledger account. 
* Subaccount and branch.
* Description (up to 30 characters). 
*Currency of the account and the default exchange rate type. 
*entry types to be used with this cash account
* Whether the cash account should be reconciled. Normally, most cash accounts should be reconciled against the bank statements or other documents. 

|- 
| '''Plan bank accounts'''
| 
 List the organization&rsquo;s bank accounts. For each bank account, write down the following details:[anchor|#ul_hbp_3sh_gs]
*Information about the bank that is associated with the bank account. In Acumatica ERP, banks are defined as vendor accounts. 
*The currency of the bank account and the default exchange rate type (if the account is denominated in a foreign currency).
* An indication of whether the bank account should be reconciled. Normally, all bank accounts should be reconciled against the bank statement. 
*An indication of whether deposits are used.
*The clearing accounts to be used for deposits.
* A list of the entry types that denote various transactions in the account. 

For more information, see [HelpRoot_Financials\CA__CON_CashAccountsTypes|Cash Account Types].
|- 
| '''Plan identifiers for cash accounts'''
| 
By default, the ''CASHACCOUNT'' segmented key defines cash account identifiers as one-segment, 10-character identifiers. The ''CASHACCOUNT'' segmented key is not related to the ''ACCOUNT'' key; you can configure the identifiers for cash accounts and for GL accounts similarly or differently. {br}

If the ''Multiple Branch Support'' feature is enabled, you can define the ''CASHACCOUNT'' key as having one more segment than the ''ACCOUNT'' key, to designate the branch that is the owner of the cash account. For instance, for the GL account ''10101'', you could have cash account ''10101-MN'' in the Main branch and cash account ''10101-NR'' in the North branch, both of which are linked to the GL account ''10101''. 
|- 
| '''Plan cash balance calculations'''
| 
Plan how the system should calculate the balances of cash accounts—that is, whether it should include the following: [anchor|#ul_hxz_hj2_cs]
*Receipts that are unreleased and not cleared 
*Receipts that are unreleased but cleared 
*Receipts that are released but not cleared 
*Disbursements that are unreleased and not cleared 
*Disbursements that are unreleased but cleared 
*Disbursements that are released but not cleared 

Released and cleared transactions are always included in the calculation of cash account balances.
|- 
| '''Decide on processing centers'''
| 
If you want to automatically collect customer payments made by using credit cards, apply for a payment gateway account and a merchant account with ''Authorize.Net''—the processing center supported by Acumatica ERP. Decide which cash account will be used for credit card payments.{br}

For more information, see [HelpRoot_Integration\CA__CON_AuthorizeNet|Means of Integration with Authorize.Net].
|- 
| '''List payment methods and their details'''
| 
 Payment methods are assigned to particular vendors and customers and are used in other modules of Acumatica ERP. For each payment method, decide on the following: [anchor|#ul_pzz_hj2_cs]
* Payment method identifier (up to 10 characters) 
* Description (up to 30 characters) 
* Payment instrument: cash/check, credit card, or direct deposit 
* Allowed cash accounts for this payment method (also, note which of them is the default cash account) 

If the payment method will be used in the Accounts Receivable module, note the following: [anchor|#ul_z11_3j2_cs]
* Whether processing for the payment method should be done through a processing center (see [HelpRoot_Financials\AR__con_Automatic_Payment_Collection|Automatic Payment Collection]). 
* Whether the payment method requires a card number or another unique identifier for each instance of the method. For example, methods like cash or check do not require any identifiers, while a credit card method requires particular card numbers for each instance. 
* Whether a payment should be voided on the clearing account, rather than the bank account, after the respective deposit containing the payment is released. 
* Whether customer remittance information is required for this payment method. 
* Optionally, what custom elements you&rsquo;ll use to hold additional payment information. For each element, plan the following: 
** Element name 
** An input mask or &ldquo;regular expression&ldquo; for validation
If a payment method will be used in the Accounts Payable module, decide on the following: [anchor|#ul_j21_3j2_cs]
* Whether checks should be printed, which report should be used for this, and how many detail lines the check stub should have. 
* Whether a check remittance report should be printed, and which report should be used for this. 
* Whether the payment method involves creating batch payments to multiple vendors. 
* Optionally, what custom elements you&rsquo;ll use to hold additional payment information. For each element, plan the following: 
** Element name 
** Validation, which can be a simple input mask or a special &ldquo;regular expression&ldquo; 
 See [HelpRoot_Financials\CA__CON_PMs_for_Customers|Payment Methods for Customers] and [HelpRoot_Financials\CA__CON_PMs_for_Vendors|Payment Methods for Vendors]. 
|- 
| '''Decide whether you need to configure funds transfers'''
| 
Decide which of the General Ledger accounts will be used to hold cash-in-transit amounts. This account is used when the receipt date is earlier or later than the transfer date or when the funds are sent in one currency and received in another. If the ''Subaccounts'' feature is enabled in your system, decide on the subaccounts to be used for funds transfers. {br}

For details, see [HelpRoot_FormReference\CA_30_10_00|Funds Transfers].
|- 
| '''Plan GL accounts for the module'''
| For the Cash Management module, you will need the following GL accounts:[anchor|#ul_gfg_rg3_ps]
*Asset accounts to be used as the base accounts for cash accounts (money-on-hand and bank accounts)
*Liability accounts to be used as the base accounts for clearing cash accounts

|- 
| '''Plan subaccounts for the module'''
| (This task is needed only if the ''Subaccounts'' feature is enabled in your system.) Prepare a list of subaccounts to be used for cash transactions.
|- 
| '''Decide on processing options'''
| 
Decide on the policies for transaction entry and processing in the Cash Management module: [anchor|#ul_ewz_hj2_cs]
*Should transaction totals be validated on data entry or only during the release of the transactions?
*Should transactions be automatically held on entry, or should it be possible to immediately release them?
*Should Accounts Payable payments be released only in Accounts Payable, or can they also be released in Cash Management?
*Should Accounts Receivable payments be released only in Accounts Receivable, or can also they be released in Cash Management?
*Should Cash Management batches be posted in General Ledger immediately upon release?
*Should control totals be validated for Cash Management transaction?
*Should the external reference numbers be required for the Cash Management transactions?

|- 
| '''Decide on numbering sequences'''
| 
Decide on the numbering sequences to be used to generate identifiers for documents and transactions. You can create new numbering sequences or review multiple predefined sequences on the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form. You will need numbering sequences for the following:[anchor|#ul_v3m_cwk_cs]
*Cash Management transactions (you can use the pre-defined ''CATRAN'' or a custom sequence)
*Cash Management transfers (you can use the pre-defined ''CATRANSFER'' sequence or create a custom one)
*Batches generated for Cash Management transactions and transfers
*Payment batches (use ''CABATCH'' or a custom sequence)
*Bank statements (use ''CABANKSTMT'' or a custom sequence)
*Cash account reconciliations for cash accounts that require reconciliations (use ''CARECON'' or a custom sequence)
You can use the predefined numbering sequences as they are, modify them to better suit your organization’s needs, or create new custom numbering sequences. A numbering sequence can be shared among multiple types of transactions. For example, you can assign to Cash Management batches the same numbering sequence that is used for batches in the General Ledger module, or you can use one sequence for all reconciliations. 
|}
 You can print the [HelpRoot_ImplementChecklists\CA_Preparation_Checklist|Cash Management Preparation Checklist] and refer to it when you prepare to implement the Cash Management module. ]]></column>
			<column name="PlainText"><![CDATA[Cash Management: Preparation This topic covers the preparation that you have to perform before you begin configuring the     Cash Management module.   Because this is the preparation phase of      implementation, enter no data into the system at this time.  Task  Description Design entry types Design the entry types (the types of receipts and disbursements) to be used for Accounts          Payable and Accounts Receivable payments in  Acumatica ERP, as well as for Cash Management transactions. Some of the entry types can be specific to          customers or vendors or used by specific branches only. Write down the GL accounts (and          subaccounts) to be used as offset accounts (and subaccounts) for each entry type that you          will use in the Cash Management module. For more information, see  Entry Types. List cash accounts and their details In  Acumatica ERP, cash accounts are a special type of accounts that are not listed on the chart of          accounts and are defined separately from general ledger accounts. However, each cash          account is  based on  a specific GL account and differs by either branch or subaccount          from other cash accounts based on the same GL account. For more information, see            Cash Account Configuration. Prepare a list of the         organization's cash accounts, including bank accounts, cash-on-hand accounts, and credit         card accounts. Generally, an organization has cash accounts of the following types:  General-purpose cash accounts to record petty cash or other cash on hand. You should           create at least one general-purpose cash account for each currency. Bank accounts.  Clearing accounts to be used for deposits. A clearing account is used to temporarily           accumulate customer payments, such as checks (including postdated checks) and cash           (coins), for a specific bank account before the payments are actually deposited into the           bank account. For each cash account, write down the following details:  General Ledger account.   Subaccount and branch.  Description (up to 30 characters).  Currency of the account and the default exchange rate type.  entry types to be used with this cash account  Whether the cash account should be reconciled. Normally, most cash accounts should be           reconciled against the bank statements or other documents.  Plan bank accounts  List the organization's bank accounts. For each bank account, write down the following          details: Information about the bank that is associated with the bank account. In  Acumatica ERP, banks are defined as vendor accounts.  The currency of the bank account and the default exchange rate type (if the account is           denominated in a foreign currency).  An indication of whether the bank account should be reconciled. Normally, all bank           accounts should be reconciled against the bank statement.  An indication of whether deposits are used. The clearing accounts to be used for deposits.  A list of the entry types that denote various transactions in the account.  For more information, see  Cash Account Types. Plan identifiers for cash accounts By default, the  CASHACCOUNT  segmented key defines cash account identifiers as          one-segment, 10-character identifiers. The  CASHACCOUNT  segmented key is not related          to the  ACCOUNT  key; you can configure the identifiers for cash accounts and for GL          accounts similarly or differently.  If the  Multiple Branch Support  feature is enabled, you can define the            CASHACCOUNT  key as having one more segment than the  ACCOUNT  key, to          designate the branch that is the owner of the cash account. For instance, for the GL          account  10101 , you could have cash account  10101-MN  in the Main branch and          cash account  10101-NR  in the North branch, both of which are linked to the GL          account  10101 .  Plan cash balance calculations Plan how the system should calculate the balances of cash accounts—that is, whether          it should include the following:  Receipts that are unreleased and not cleared  Receipts that are unreleased but cleared  Receipts that are released but not cleared  Disbursements that are unreleased and not cleared  Disbursements that are unreleased but cleared  Disbursements that are released but not cleared  Released and cleared transactions are always included in the calculation of cash account          balances. Decide on processing centers If you want to automatically collect customer payments made by using credit cards, apply          for a payment gateway account and a merchant account with  Authorize.Net —the          processing center supported by  Acumatica ERP. Decide which cash account will be used for credit card payments. For more information, see  Means of Integration with Authorize.Net. List payment methods and their details  Payment methods are assigned to particular vendors and customers and are used in          other modules of  Acumatica ERP. For each payment method, decide on the following:   Payment method identifier (up to 10 characters)   Description (up to 30 characters)   Payment instrument: cash/check, credit card, or direct deposit   Allowed cash accounts for this payment method (also, note which of them is the default           cash account)  If the payment method will be used in the Accounts Receivable module, note the          following:   Whether processing for the payment method should be done through a processing center           (see  Automatic Payment Collection).   Whether the payment method requires a card number or another unique identifier for           each instance of the method. For example, methods like cash or check do not require any           identifiers, while a credit card method requires particular card numbers for each           instance.   Whether a payment should be voided on the clearing account, rather than the bank           account, after the respective deposit containing the payment is released.   Whether customer remittance information is required for this payment method.   Optionally, what custom elements you'll use to hold additional payment information.           For each element, plan the following:   Element name   An input mask or "regular expression" for validation If a payment method will be used in the Accounts Payable module, decide on the         following:   Whether checks should be printed, which report should be used for this, and how many           detail lines the check stub should have.   Whether a check remittance report should be printed, and which report should be used           for this.   Whether the payment method involves creating batch payments to multiple vendors.   Optionally, what custom elements you'll use to hold additional payment information.           For each element, plan the following:   Element name   Validation, which can be a simple input mask or a special "regular expression"   See  Payment Methods for Customers and  Payment Methods for Vendors.  Decide whether you need to configure funds transfers Decide which of the General Ledger accounts will be used to hold cash-in-transit amounts.          This account is used when the receipt date is earlier or later than the transfer date or          when the funds are sent in one currency and received in another. If the  Subaccounts           feature is enabled in your system, decide on the subaccounts to be used for funds          transfers.  For details, see   ([~/?ScreenId=CA301000|CA301000]) Funds Transfers. Plan GL accounts for the module For the Cash Management module, you will need the following GL accounts: Asset accounts to be used as the base accounts for cash accounts (money-on-hand and           bank accounts) Liability accounts to be used as the base accounts for clearing cash accounts Plan subaccounts for the module (This task is needed only if the  Subaccounts  feature is enabled in your         system.) Prepare a list of subaccounts to be used for cash transactions. Decide on processing options Decide on the policies for transaction entry and processing in the Cash Management          module:  Should transaction totals be validated on data entry or only during the release of the           transactions? Should transactions be automatically held on entry, or should it be possible to           immediately release them? Should Accounts Payable payments be released only in Accounts Payable, or can they also           be released in Cash Management? Should Accounts Receivable payments be released only in Accounts Receivable, or can           also they be released in Cash Management? Should Cash Management batches be posted in General Ledger immediately upon           release? Should control totals be validated for Cash Management transaction? Should the external reference numbers be required for the Cash Management           transactions? Decide on numbering sequences Decide on the numbering sequences to be used to generate identifiers for documents          and transactions. You can create new numbering sequences or review multiple predefined          sequences on the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010)          form. You will need numbering sequences for the following: Cash Management transactions (you can use the pre-defined  CATRAN  or a custom           sequence) Cash Management transfers (you can use the pre-defined  CATRANSFER  sequence or           create a custom one) Batches generated for Cash Management transactions and transfers Payment batches (use  CABATCH  or a custom sequence) Bank statements (use  CABANKSTMT  or a custom sequence) Cash account reconciliations for cash accounts that require reconciliations (use             CARECON  or a custom sequence) You can use the predefined numbering sequences as they are, modify them to better suit         your organization’s needs, or create new custom numbering sequences. A numbering sequence         can be shared among multiple types of transactions. For example, you can assign to Cash         Management batches the same numbering sequence that is used for batches in the General         Ledger module, or you can use one sequence for all reconciliations.   You can print the  Cash Management Preparation Checklist and refer to it when you     prepare to implement the Cash Management module.  ]]></column>
		</row>
		<row PageID="2662e0fa-7a7a-4a9a-a41e-1d86c9400cff" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c39d6b0c-49b1-f9a5-f19b-941427c10d27" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will guide you through the process of configuring the Cash Management module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform these tasks in the order in which they are presented.[anchor|#table_sj1_3j2_cs]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
|  '''Create the General Ledger accounts to be used in the module'''
 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| 
Create the following accounts if they are not available on the chart of accounts:[anchor|#ul_k3s_4xk_cs]
*Asset accounts that will be used as the base accounts for cash accounts
*Offset accounts for entry types, which designate various cash transactions (of the ''Expense'' and ''Income'' types).
*An asset account to be used as the cash-in-transit account for funds transfers. 

See [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts]. 
|- 
| '''2'''
|  '''Create subaccounts for the module'''
 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| 
 (Complete this task only if the ''Subaccounts'' feature is enabled in your system.)
 Create the subaccounts intended for cash accounts if they are not available. Also, create the subaccounts for entry types and a subaccount to be used as the ''in-transit'' subaccount. {br}

See [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount]. 
|- 
| '''3'''
|  '''Define auto-numbering sequences'''
 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
| 
 Modify the predefined numbering sequences or create custom ones for the following types of transactions: [anchor|#ul_v3m_cwk_cs]
*Cash Management transactions (you can use the pre-defined ''CATRAN'' or a custom sequence)
*Cash Management transfers (you can use the pre-defined ''CATRANSFER'' sequence or create a custom one)
*Batches generated for Cash Management transactions and transfers
*Payment batches (use ''CABATCH'' or a custom sequence)
*Bank statements (use ''CABANKSTMT'' or a custom sequence)
*Cash account reconciliations for cash accounts that require reconciliations (use ''CARECON'' or a custom sequence)

|- 
| '''4'''
|  '''Specify the Cash Management preferences'''
 [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000])
| 
 Specify the Cash Management preferences as follows:[anchor|#ul_m41_3j2_cs]
*Select the numbering sequences for Cash Management batches, transactions, transfers, payment batches, and bank statements
*Select the cash-in-transit account and subaccount
*Select the default currency exchange rate type
*Specify the data entry and processing options: 
**Whether to validate control totals on data entry
**Whether to assign the ''On Hold'' status to newly entered transactions
**Whether to release Accounts Payable documents from Cash Management automatically
**Whether to release Accounts Receivable documents from Cash Management automatically
**Whether to post to the General Ledger on release of cash transactions
*Select the options for the calculation of the available balances of cash accounts

|- 
| '''5'''
|  '''Create entry types'''
 [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000])
| 
 For each planned entry type, specify the following: [anchor|#ul_lyz_hj2_cs]
* Entry type identifier (up to 10 characters) 
* Description (up to 30 characters) 
* Entry type (receipt or disbursement) 
* In which module it will be used: Cash Management, Accounts Payable, or Accounts Receivable 
* For Cash Management entry types only, the default offset accounts and subaccounts 

|- 
| '''6'''
|  '''Configure the ''CASHACCOUNT'' segmented key'''
 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
Configure the ''CASHACCOUNT ''segmented key with as many segments as you need, and specify which segments should be validated. By default, the ''CASHACCOUNT'' segmented key defines cash account identifiers as one-segment, 10-character identifiers. 
|- 
| '''7'''
|  '''Populate the ''CASHACCOUNT'' key segments'''
 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| If you have configured the ''CASHACCOUNT'' segmented key with multiple segments, populate the segments for which the '''Validate''' check box is selected. 
|- 
| '''8'''
|  '''Create cash accounts'''
 [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000])
| 
 Create cash accounts for the company as follows: [anchor|#ul_sp1_3j2_cs]
* Select the General Ledger account to be used as the base account. 
* If the ''Subaccounts'' feature is enabled, select the subaccount for the cash account. 
* If the ''Multi-Branch-Support'' feature is enabled, select the branch to which the cash account belongs.
* Enter the cash account description. 
* Select default currency exchange rate type. 
* Indicate whether the account will be reconciled against the statement. 
* Select the entry types that can be used with the cash account. 
((({S:Hint}You will be able to complete the configuration of bank accounts when vendor accounts are created for banks.
)))
See [HelpRoot_Financials\CA__How_to_Create_Cash_Account|To Create a Cash Account].
|- 
| '''9'''
|  '''Create payment methods'''
 [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000])
| Create the payment methods you identified. For each payment method: 
* List the allowed cash accounts. For each cash account, do the following:
**Specify whether the next available number should be suggested for a new payment (usually, it should for Accounts Payable checks and should not for other types). 
** Indicate the last number used. This is required for checks but not for other payment methods. 
** If you designed additional elements for the payment method, enter these elements and their descriptions. 
*Configure the payment method for use in AP (if applicable).
*Configure the payment method for use in AR (if applicable).
*Specify the remittance settings (if applicable).

See [HelpRoot_Financials\CA__CON_PMs_for_Customers|Payment Methods for Customers] and [HelpRoot_Financials\CA__CON_PMs_for_Vendors|Payment Methods for Vendors].
|- 
| '''10'''
|  '''Configure the processing center'''
 [HelpRoot_FormReference\CA_20_50_00|Processing Centers] ([~/?ScreenId=CA205000|CA205000])
| 
Specify the cash account to be used for payments processed through the processing center. On the '''Payment Methods''' tab, add the payment methods for each operator (such as Visa, Mastercard, or American Express) whose cards you are going to process through this center. {br}

For more details, see [HelpRoot_Integration\CA__CON_CardProcessingScenario|Setup of Card Payment Processing].
|}
 You can print the [HelpRoot_ImplementChecklists\CA_Conf_Checklist|Cash Management Configuration Checklist] and refer to it when you configure the Cash Management module. ]]></column>
			<column name="PlainText"><![CDATA[Cash Management: Configuration This topic will guide you through the process of configuring the Cash Management       module. Due to dependencies between the forms, the sequence of actions during configuration is       critical, so you need to perform these tasks in the order in which they are presented. No. Task  Description 1 Create the General Ledger accounts to be used in the module  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) Create the following accounts if they are not available on the                   chart of accounts: Asset accounts that will be used as the base accounts for cash accounts Offset accounts for entry types, which designate various cash transactions (of                     the  Expense  and  Income  types). An asset account to be used as the cash-in-transit account for funds                     transfers.  See  To Add an Account to the Chart of Accounts.  2 Create subaccounts for the module  ([~/?ScreenId=GL203000|GL203000]) Subaccounts                 (GL203000)  (Complete this task only if the  Subaccounts  feature is enabled in your                   system.)  Create the subaccounts intended for cash accounts if they are                   not available. Also, create the subaccounts for entry types and a subaccount to be                   used as the  in-transit  subaccount.  See  To Add a Subaccount.  3 Define auto-numbering sequences  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences                 (CS201010)  Modify the predefined numbering sequences or create custom                   ones for the following types of transactions:  Cash Management transactions (you can use the pre-defined  CATRAN  or a                     custom sequence) Cash Management transfers (you can use the pre-defined  CATRANSFER                      sequence or create a custom one) Batches generated for Cash Management transactions and transfers Payment batches (use  CABATCH  or a custom sequence) Bank statements (use  CABANKSTMT  or a custom sequence) Cash account reconciliations for cash accounts that require reconciliations                     (use  CARECON  or a custom sequence) 4 Specify the Cash Management preferences  ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences                 (CA101000)  Specify the Cash Management preferences as follows: Select the numbering sequences for Cash Management batches, transactions,                     transfers, payment batches, and bank statements Select the cash-in-transit account and subaccount Select the default currency exchange rate type Specify the data entry and processing options:  Whether to validate control totals on data entry Whether to assign the  On Hold  status to newly entered                         transactions Whether to release Accounts Payable documents from Cash Management                         automatically Whether to release Accounts Receivable documents from Cash Management                         automatically Whether to post to the General Ledger on release of cash transactions Select the options for the calculation of the available balances of cash                     accounts 5 Create entry types  ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000)  For each planned entry type, specify the following:   Entry type identifier (up to 10 characters)   Description (up to 30 characters)   Entry type (receipt or disbursement)   In which module it will be used: Cash Management, Accounts Payable, or                     Accounts Receivable   For Cash Management entry types only, the default offset accounts and                     subaccounts  6 Configure the  CASHACCOUNT  segmented key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Configure the  CASHACCOUNT  segmented key with as many                   segments as you need, and specify which segments should be validated. By default,                   the  CASHACCOUNT  segmented key defines cash account identifiers as                   one-segment, 10-character identifiers.  7 Populate the  CASHACCOUNT  key segments  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) If you have configured the  CASHACCOUNT  segmented key with multiple                 segments, populate the segments for which the  Validate  check box is selected.                8 Create cash accounts  ([~/?ScreenId=CA202000|CA202000]) Cash Accounts                 (CA202000)  Create cash accounts for the company as follows:   Select the General Ledger account to be used as the base account.   If the  Subaccounts  feature is enabled, select the subaccount for the                     cash account.   If the  Multi-Branch-Support  feature is enabled, select the branch to                     which the cash account belongs.  Enter the cash account description.   Select default currency exchange rate type.   Indicate whether the account will be reconciled against the statement.   Select the entry types that can be used with the cash account.  You will be able to complete the configuration of bank accounts when vendor                   accounts are created for banks. See  To Create a Cash Account. 9 Create payment methods  ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) Create the payment methods you identified. For each payment method:   List the allowed cash accounts. For each cash account, do the following: Specify whether the next available number should be suggested for a new                         payment (usually, it should for Accounts Payable checks and should not for                         other types).   Indicate the last number used. This is required for checks but not for                         other payment methods.   If you designed additional elements for the payment method, enter these                         elements and their descriptions.  Configure the payment method for use in AP (if applicable). Configure the payment method for use in AR (if applicable). Specify the remittance settings (if applicable). See  Payment Methods for Customers and  Payment Methods for Vendors. 10 Configure the processing center  ([~/?ScreenId=CA205000|CA205000]) Processing Centers (CA205000) Specify the cash account to be used for payments processed                   through the processing center. On the  Payment Methods  tab, add the payment                   methods for each operator (such as Visa, Mastercard, or American Express) whose                   cards you are going to process through this center.  For more details, see  Setup of Card Payment Processing.  You can print the  Cash Management Configuration Checklist and refer to it when you         configure the Cash Management module.  ]]></column>
		</row>
		<row PageID="0e032dda-0da9-4213-adfc-ed1a1b665b9a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="39c4836f-956d-c4e8-9bae-fcea742ec8e2" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter describes the process of implementing the Accounts Payable module in Acumatica ERP. {br}

The Accounts Payable module provides the necessary functionality to manage your company&rsquo;s liabilities to vendors for the goods and services they supply to your organization. {br}

For a detailed description of Accounts Payable forms and capabilities, see the [HelpRoot_Financials\AP_00_00_00|Accounts Payable] chapter of the Financial Management guide. [anchor|#1]
==Prerequisites and Dependencies==
You should implement the Accounts Payable module after you complete the initial configuration of the system and configure the General Ledger and Cash Management modules. If the ''Multi-Currency Accounting'' feature is enabled in your system, you also have to implement the Currency Management module before implementing the Accounts Payable module. {br}

The Accounts Payable and Taxes modules are interrelated. For smoother implementation, perform the preparation work for both modules and then configure the Accounts Payable module.
==Other Considerations==
You should define prices and discounts after you initialize the Accounts Payable module. 
==In This Chapter==[anchor|#ul_prp_ktj_cs]
*[HelpRoot_Implement\AP_Preparation|Accounts Payable: Preparation]: Describes what data you should collect, arrange, and analyze.
*[HelpRoot_Implement\AP_Configuration|Accounts Payable: Configuration]: Guides you through the actual configuration of the Accounts Payable module.
]]></column>
			<column name="PlainText"><![CDATA[Implementing Accounts Payable This chapter describes the process of implementing the Accounts Payable module in  Acumatica ERP.     The Accounts Payable module provides the necessary functionality to manage your company's     liabilities to vendors for the goods and services they supply to your organization.  For a detailed description of Accounts Payable forms and capabilities, see the   ([~/?ScreenId=AP000000|AP000000]) Accounts Payable chapter of the Financial Management         guide.  Prerequisites and Dependencies You should implement the Accounts Payable module after you complete the initial configuration         of the system and configure the General Ledger and Cash Management modules. If the            Multi-Currency Accounting  feature is enabled in your system, you also have to         implement the Currency Management module before implementing the Accounts Payable module.  The Accounts Payable and Taxes modules are interrelated. For smoother implementation,         perform the preparation work for both modules and then configure the Accounts Payable         module. Other Considerations You should define prices and discounts after you initialize the Accounts Payable module.          In This Chapter Accounts Payable: Preparation: Describes what data you should collect, arrange, and      analyze. Accounts Payable: Configuration: Guides you through the actual configuration of the      Accounts Payable module. ]]></column>
		</row>
		<row PageID="28025d38-70d3-42e7-9d42-f25614e32689" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="f0e6e025-c591-0454-0fdf-eb92c46203a1" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
This topic covers the preparation that you have to perform before you begin configuring the Accounts Payable module. ((({S:Warn} Because this is the preparation phase of implementation, enter no data into the system at this time.
)))[anchor|#table_qfq_ktj_cs]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Plan identifiers for vendors'''
| 
 During the initial configuration of the system, you configured the ''BIZACCT'' segmented key and decided how it would be used to define the structure of vendor identifiers: [anchor|#ul_ghs_ktj_cs]
*If you decided to use the ''BIZACCT'' segmented key directly to define vendor IDs, on the [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000]) form, make sure that for ''BIZACCT'' segments to be validated, all values needed for meaningful vendor identifiers have been added. 
*If you decided to use the ''VENDOR'' segmented key to design vendor IDs, prepare a list of values for segments that should be validated and a numbering sequence for the auto-numbered segment (if applicable). The ''VENDOR'' segmented key inherits the structure (the number and type of segments) of ''BIZACCT'' but can differ in the sequence used for auto-numbering and the list of segment values for validated segments.

For additional information, see [HelpRoot_Administration\CS__con_Business_Accounts_Identifiers|Business Account Identifiers] and [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers]. 
|- 
| '''Collect vendor information'''
| 
Collect and analyze vendor information. If you are going to import vendor accounts from your legacy system, review the vendor accounts and delete or inactivate the obsolete ones. Make sure that for each vendor, the following data is available: [anchor|#ul_tks_ktj_cs]
*Vendor ID to be used (which should comply with the applicable segmented key, ''BIZACCT'' or ''VENDOR'')
*Main address and contact details
*Default credit terms
*Currency and rate type, if the vendor operates mostly in a single foreign currency; indicate if the currency can be overridden in the documents
*Vendor&rsquo;s shipment address and contact information, if they differ from the main address and contact information
*Vendor&rsquo;s tax registration ID and the taxes payable for the vendor&rsquo;s supplies
*Vendor&rsquo;s payment address and contact information, if they differ from the main address and contact information
*Default cash account and payment method to be used for the vendor
*Indications of whether multiple documents should be paid separately
*Payment lead time 
*Accounts to be updated by the vendor&rsquo;s documents: 
**Accounts Payable liability account (and subaccount)
**Expense account (and subaccount) for cost of purchases
**Freight account (and subaccount) for recording freight charges and related expenses
**Cash discount account (and subaccount)
**Prepayment account (and subaccount)

|- 
| '''Collect information on contractors'''
| 
(For USA only.) In Acumatica ERP, contractors should have vendor accounts that are marked as 1099 vendors. For each contractor, collect the vendor information listed in the previous task and the compensation type.{br}

See [HelpRoot_Financials\AP__con_Support_for_U.S._1099-MISC_Form|Configuring 1099 Reporting].
|- 
| '''Collect information on vendor locations'''
| (This task is needed only if the ''Business Account Locations'' feature is enabled.) 
A vendor can have one location or multiple locations, each with specific settings. For each location, gather the following vendor information (which can be used as default settings for purchase orders and for payments to vendors):[anchor|#ul_q1y_54r_cs]
*Address of the location and contacts
*Location-specific accounts payable and expense accounts (and the appropriate subaccounts)
*Payment method , cash account, payment lead time, and remittance information
*Shipping terms, carrier, lead time, receiving warehouse, receipt threshold, and the action on threshold violation
*Tax-related information

The main location for each vendor is created automatically when you fill in the vendor’s main address and contact information on the [HelpRoot_FormReference\AP_30_30_00|Vendors] form. The main location will have ''MAIN'' as its ID unless you have chosen to use the branch ID as the default name for the main vendor location for the selected vendor class. If the branch ID is used as the location name, once a user has created a vendor account, its main location will get the name of the branch this user is logged in to.
|- 
| '''Plan identifiers for vendor and customer locations'''
| (This task is needed only if the ''Business Account Locations'' feature is enabled.)
Identifiers of other vendor locations are assigned according to the structure of the ''LOCATION'' segmented key, which is also used for customer locations. We recommend that you define identifiers as one-segment strings that are 10 characters or more.
|- 
| '''Collect information about credit terms in use'''
| For each set of credit terms, do the following:[anchor|#ul_cy5_r2g_ks]
*Plan the identifier, which can be an alphanumeric string of up to 6 characters, and the description, which can be a string of up to 30 characters.
*Specify whether multiple installments are allowed, and specify the number and frequency of installments.
*For single-installment payments, specify the method for calculating due dates.
*Determine the cash discount percent and the date range when it is available.

See [HelpRoot_FormReference\CS_20_65_00|Credit Terms].
|- 
| '''Design attributes for vendors'''
| 
If needed, plan attributes to add vendor properties that are not available in the system, and specify what type of control should be used for each attribute. For example, an attribute to be used for vendors might be industry or company size. {br}

 For more information, see [HelpRoot_Administration\CS__con_Attributes|Attributes].
|- 
| '''Plan GL accounts for vendors'''
| 
Create a list of GL accounts to be used for vendors and vendor locations:[anchor|#ul_kpt_fcv_bt]
*AP account
*Expense account
*Discount and Cash Discount accounts
*Prepayment account
*PO Accrual account

Decide whether you will use the same accounts for all vendors or you will use more specific accounts—for instance, accounts for each vendor class, for each vendor, or even for each vendor location. Mark the GL accounts to be used for particular vendors or particular vendor locations.
|- 
| '''Plan GL subaccounts for vendors'''
| 
(This task is needed only if the ''Subaccounts'' feature is enabled in your system.) {br}

Decide which subaccounts you will use for vendor transactions. {br}

Create the list of the following subaccounts:[anchor|#ul_okc_5cv_bt]
*AP subaccount
*Expense subaccount
*Discount and Cash Discount subaccounts
*Prepayment subaccount
*PO Accrual subaccount

|- 
| '''Design vendor classes'''
| 
p{br}

Plan identifiers for vendor classes (up to 10 alphanumeric characters) and descriptions (up to 30 alphanumeric characters). Consider possibility to import vendor classes from your legacy system.{br}

Review the vendor data you have prepared and indicate a class for each vendor. Finally, select the default vendor class; normally, this would be the class with the most vendors. {br}

For more information, see [HelpRoot_Financials\AP__CON_VendorClasses|Vendor Classes]. 
|- 
| '''Plan numbering sequences'''
| 
Decide on the numbering sequences to be used to generate identifiers for documents and transactions. You can create new numbering sequences or review multiple predefined sequences on the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form. You will need numbering sequences for the following:[anchor|#ul_z5n_zvb_gs]
*Accounts Payable batches 
*Bills (you can use the ''APBILL'' predefined sequence)
*Adjustments
*Payments (you can use the ''APPAYMENT'' predefined sequence)
*Vendor price worksheets (you can use the ''APPRICEWS'' predefined sequence)
*Auto-numbered segment of vendor IDs

For additional information, see [HelpRoot_Administration\CS__con_Multiple_Numbering_Sequences|Numbering Sequence Usage].
|- 
| '''Decide on aging periods'''
| 
Plan up to three aging periods (each defined by the number of days outstanding or past due), such as 30 days, 60 days, and 90 days. In Acumatica ERP, you can view outstanding Accounts Payable documents and payments by aging periods, for better cash flow predictions.
|- 
| '''Determine Accounts Payable processing policies'''
| 
Decide on the following processing policies that the system will use: [anchor|#ul_mkt_ktj_cs]
*Whether to automatically post Accounts Payable transactions when they are released
*Whether to consolidate (summarize by account) the Accounts Payable transactions when they are posted to General Ledger
*Whether to hold new Accounts Payable documents 
*Whether to validate totals for Accounts Payable document when they are taken off hold
*Whether to require approval of Accounts Payable bills for payment
*Whether to require vendor reference numbers for Accounts Payable bills
*Whether to raise an error on duplicate vendor references

|- 
| '''Determine 1099 reporting settings'''
| 
Tax laws in the United States require businesses to submit the 1099-MISC form for each non-employee to whom they provide payment, as well as for certain other types of payment. Prepare a list of compensation types (based on Internal Revenue Service classification in the U.S.) used by your organization, the minimum amounts, and the associated accounts to be used by default for each type. {br}

For details, see [HelpRoot_Financials\AP__con_Support_for_U.S._1099-MISC_Form|Support for U.S. 1099-MISC Form].
|}
 You can print the [HelpRoot_ImplementChecklists\AP_Preparation_Checklist|Accounts Payable Preparation Checklist] and [HelpRoot_ImplementChecklists\TX_Preparation_Checklist|Taxes Preparation Checklist] and refer to them when you prepare to implement the Accounts Payable module. ]]></column>
			<column name="PlainText"><![CDATA[Accounts Payable: Preparation This topic covers the preparation that you have to perform before you begin configuring the     Accounts Payable module.   Because this is the preparation phase of      implementation, enter no data into the system at this time. Task  Description Plan identifiers for vendors  During the initial configuration of the system, you configured the                      BIZACCT  segmented key and decided how it would be used to define the                   structure of vendor identifiers:  If you decided to use the  BIZACCT  segmented key directly to define                     vendor IDs, on the   ([~/?ScreenId=CS203000|CS203000]) Segment Values                     (CS203000) form, make sure that for  BIZACCT  segments to be validated,                     all values needed for meaningful vendor identifiers have been added.  If you decided to use the  VENDOR  segmented key to design vendor IDs,                     prepare a list of values for segments that should be validated and a numbering                     sequence for the auto-numbered segment (if applicable). The  VENDOR                      segmented key inherits the structure (the number and type of segments) of                        BIZACCT  but can differ in the sequence used for auto-numbering and the                     list of segment values for validated segments. For additional information, see  Business Account Identifiers and  Segmented Identifiers.  Collect vendor information Collect and analyze vendor information. If you are going to import vendor                   accounts from your legacy system, review the vendor accounts and delete or                   inactivate the obsolete ones. Make sure that for each vendor, the following data                   is available:  Vendor ID to be used (which should comply with the applicable segmented key,                        BIZACCT  or  VENDOR ) Main address and contact details Default credit terms Currency and rate type, if the vendor operates mostly in a single foreign                     currency; indicate if the currency can be overridden in the documents Vendor's shipment address and contact information, if they differ from the                     main address and contact information Vendor's tax registration ID and the taxes payable for the vendor's                     supplies Vendor's payment address and contact information, if they differ from the main                     address and contact information Default cash account and payment method to be used for the vendor Indications of whether multiple documents should be paid separately Payment lead time  Accounts to be updated by the vendor's documents:  Accounts Payable liability account (and subaccount) Expense account (and subaccount) for cost of purchases Freight account (and subaccount) for recording freight charges and related                         expenses Cash discount account (and subaccount) Prepayment account (and subaccount) Collect information on contractors (For USA only.) In Acumatica ERP, contractors should have vendor accounts that                   are marked as 1099 vendors. For each contractor, collect the vendor information                   listed in the previous task and the compensation type. See  Configuring 1099 Reporting. Collect information on vendor locations (This task is needed only if the  Business Account Locations  feature is         enabled.)  A vendor can have one location or multiple locations, each with specific          settings. For each location, gather the following vendor information (which can be used as          default settings for purchase orders and for payments to vendors): Address of the location and contacts Location-specific accounts payable and expense accounts (and the appropriate           subaccounts) Payment method , cash account, payment lead time, and remittance information Shipping terms, carrier, lead time, receiving warehouse, receipt threshold, and the           action on threshold violation Tax-related information The main location for each vendor is created automatically when you fill in the          vendor’s main address and contact information on the   ([~/?ScreenId=AP303000|AP303000]) Vendors form. The main location will have  MAIN  as          its ID unless you have chosen to use the branch ID as the default name for the main vendor          location for the selected vendor class. If the branch ID is used as the location name, once          a user has created a vendor account, its main location will get the name of the branch this          user is logged in to. Plan identifiers for vendor and customer locations (This task is needed only if the  Business Account Locations  feature is          enabled.) Identifiers of other vendor locations are assigned according to the structure          of the  LOCATION  segmented key, which is also used for customer locations. We          recommend that you define identifiers as one-segment strings that are 10 characters or          more. Collect information about credit terms in use For each set of credit terms, do the following: Plan the identifier, which can be an alphanumeric string of up to 6 characters, and the           description, which can be a string of up to 30 characters. Specify whether multiple installments are allowed, and specify the number and frequency           of installments. For single-installment payments, specify the method for calculating due dates. Determine the cash discount percent and the date range when it is available. See   ([~/?ScreenId=CS206500|CS206500]) Credit Terms. Design attributes for vendors If needed, plan attributes to add vendor properties that are not available in the                   system, and specify what type of control should be used for each attribute. For                   example, an attribute to be used for vendors might be industry or company size.   For more information, see  Attributes. Plan GL accounts for vendors Create a list of GL accounts to be used for vendors and vendor locations: AP account Expense account Discount and Cash Discount accounts Prepayment account PO Accrual account Decide whether you will use the same accounts for all vendors or you will use                   more specific accounts—for instance, accounts for each vendor class, for each                   vendor, or even for each vendor location. Mark the GL accounts to be used for                   particular vendors or particular vendor locations. Plan GL subaccounts for vendors (This task is needed only if the  Subaccounts  feature is enabled in your                   system.)  Decide which subaccounts you will use for vendor transactions.  Create the list of the following subaccounts: AP subaccount Expense subaccount Discount and Cash Discount subaccounts Prepayment subaccount PO Accrual subaccount Design vendor classes p Plan identifiers for vendor classes (up to 10 alphanumeric characters) and                   descriptions (up to 30 alphanumeric characters). Consider possibility to import                   vendor classes from your legacy system. Review the vendor data you have prepared and indicate a class for each vendor.                   Finally, select the default vendor class; normally, this would be the class with                   the most vendors.  For more information, see  Vendor Classes.  Plan numbering sequences Decide on the numbering sequences to be used to generate identifiers for                   documents and transactions. You can create new numbering sequences or review                   multiple predefined sequences on the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form. You will need numbering sequences for the                   following: Accounts Payable batches  Bills (you can use the  APBILL  predefined sequence) Adjustments Payments (you can use the  APPAYMENT  predefined sequence) Vendor price worksheets (you can use the  APPRICEWS  predefined                     sequence) Auto-numbered segment of vendor IDs For additional information, see  Numbering Sequence Usage. Decide on aging periods Plan up to three aging periods (each defined by the number of days outstanding or                   past due), such as 30 days, 60 days, and 90 days. In  Acumatica ERP, you can view outstanding Accounts Payable documents and payments by aging                   periods, for better cash flow predictions. Determine Accounts Payable processing policies Decide on the following processing policies that the system will use:  Whether to automatically post Accounts Payable transactions when they are                     released Whether to consolidate (summarize by account) the Accounts Payable                     transactions when they are posted to General Ledger Whether to hold new Accounts Payable documents  Whether to validate totals for Accounts Payable document when they are taken                     off hold Whether to require approval of Accounts Payable bills for payment Whether to require vendor reference numbers for Accounts Payable bills Whether to raise an error on duplicate vendor references Determine 1099 reporting settings Tax laws in the United States require businesses to submit the 1099-MISC form for                   each non-employee to whom they provide payment, as well as for certain other types                   of payment. Prepare a list of compensation types (based on Internal Revenue                   Service classification in the U.S.) used by your organization, the minimum                   amounts, and the associated accounts to be used by default for each type.  For details, see  Support for U.S. 1099-MISC Form Support for U.S. 1099-MISC Form.  You can print the  Accounts Payable Preparation Checklist and  Taxes Preparation Checklist and refer to them when you prepare to implement the     Accounts Payable module.  ]]></column>
		</row>
		<row PageID="0c8f3038-b504-4392-8b77-0f2a1d5a92c3" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b7ebebfe-7bca-0a92-7081-6ae4a4de4ea6" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will guide you through the process of configuring the Accounts Payable module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform the tasks in the order in which they are listed.
==Prerequisites and Dependencies==
You have to perform the preparation tasks for the Taxes module (as described in [HelpRoot_Implement\TX_Preparation|Taxes: Preparation]) before you configure the Accounts Payable module.[anchor|#table_l15_ktj_cs]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Define auto-numbering sequences'''{br}

 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
| 
Review the predefined numbering sequences or create new ones for the following: [anchor|#ul_hkv_ktj_cs]
*Accounts Payable batches
*Accounts Payable bills
*Accounts Payable adjustments
*Accounts Payable payments
*A segment of the ''VENDOR'' segmented key (if the vendor ID is based on the ''VENDOR'' segmented key, and if an auto-numbered segment will be used but is not already defined)

|- 
| '''2'''
| 
 '''Define the structure of vendor identifiers'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
 If the vendor ID is based on the ''VENDOR'' segmented key, configure the segmented key. (If the vendor ID is based on the segmented key ''BIZACCT'', its structure was defined during the initial system configuration.)
|- 
| '''3'''
| 
 '''Add segment values for the vendor IDs'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000]) 
| 
 If the vendor ID is based on the ''BIZACCT'' segmented key, add vendor-specific segment values for segments that require validation. If not, populate segments of the ''VENDOR'' key.
|- 
| '''4'''
| 
 '''Configure the ''LOCATION'' segmented key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
This task is needed only if the ''Business Account Locations'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form.{br}

Configure the ''LOCATION'' segmented key as a one-segment key. By default, it has 10 unicode characters; change the length of the segment if needed.
|- 
| '''5'''
| 
 '''Create GL accounts for the Accounts Payable module'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| 
Make sure that all the GL accounts required for the module are available on the chart of accounts.[anchor|#ul_wzj_xl3_ps]
*Accounts Payable liability accounts
*Expense accounts for the cost of purchases
*Cash discount account
*Discount account (if the ''Vendor Discounts'' feature is enabled in your system)
*Reclassification accounts
*Prepayment accounts
*PO accrual accounts

|- 
| '''6'''
| 
 '''Create subaccounts for the Accounts Payable module'''{br}

 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| 
This task is needed only if the ''Subaccounts'' feature is enabled in your system on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. {br}

For the Accounts Payable module, you will need the following subaccounts:[anchor|#ul_nnx_zl3_ps]
*Accounts Payable subaccount
*Expense subaccount for the cost of purchases
*Cash discount subaccount
*Discount subaccount (if the ''Vendor Discounts'' feature is enabled in your system)
*Reclassification subaccount
*Prepayment subaccount
*PO accrual subaccount

|- 
| '''7'''
| 
 '''Create tax zones'''{br}

 [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000])
| 
If you plan to process taxes in Acumatica ERP, create tax zones as empty &ldquo;containers&ldquo;; later, when you configure the actual taxes, you will populate the tax zones with actual taxes. At minimum, you will need one tax zone for the default vendor class. {br}

If you plan to integrate your system with Avalara&rsquo;s AvaTax, create only one zone. Specify a name for the special tax zone, such as ''AVATAX'' or ''AVALARA'', that indicates that the taxes in this tax zone are calculated by AvaTax.
|- 
| '''8'''
| 
 '''Create credit terms'''{br}

 [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500])
| 
Configure each set of credit terms, specifying the schedule for payments and the conditions for a cash discount.{br}

For more information, see [HelpRoot_Financials\AR__HOW_Create_Credit_Terms_Multiply_Inst|To Configure Multiple-Installment Credit Terms] and [HelpRoot_Financials\AR__How_Creating_Credit_Terms|To Configure Single-Installment Credit Terms].
|- 
| '''9'''
| 
 '''Create attributes for vendors'''{br}

 [HelpRoot_FormReference\CS_20_50_00|Attributes] ([~/?ScreenId=CS205000|CS205000])
| Create any attributes you might need to further categorize the vendors. You can assign attributes to vendor classes to provide the default attributes for vendors of specific classes. 
|- 
| '''10'''
| 
 '''Create vendor classes'''{br}

 [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000])
| 
 Create the vendor classes you have planned. At least one class (the default vendor class) must be created. 
|- 
| '''11'''
| 
 '''Configure Accounts Payable preferences'''{br}

 [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000])
| 
 Specify your preferences for the Accounts Payable module as follows:[anchor|#ul_zlv_ktj_cs]
*Select the processing settings (you decided upon during the preparation phase) on the '''General Settings''' tab.
*Set up the 1099 reporting on the '''1099 Settings''' tab.
*Select the default vendor class.

|- 
| '''12'''
| 
 '''Enter vendor accounts'''{br}

 [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000])
| If your organization has only a few vendors, enter the vendor accounts manually, otherwise, proceed to Task 13. Make sure the '''Active''' check box is selected for each account. Skip Tasks 13 and 14. 
|- 
| '''13'''
| 
 '''Create an import scenario for vendor accounts'''{br}

 [HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| Create a scenario for importing vendors from your legacy system. For details on creating import scenarios, see [HelpRoot_Integration\IS__mng_Configuring_Import_Scenarios|Configuring Import Scenarios]. 
|- 
| '''14'''
| 
 '''Import vendor accounts'''{br}

 [HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| Before you import vendor accounts by using the developed import scenario, review the source data to make sure that all the data matches the formats defined in the scenario. To test the scenario, import a few records and make sure that valid vendor records have been created. After that, import all the records.
|- 
| '''15'''
| 
 '''Add vendor locations'''{br}

 [HelpRoot_FormReference\AP_30_30_10|Vendor Locations] ([~/?ScreenId=AP303010|AP303010])
| 
This task is needed only if the ''Business Account Locations'' feature is enabled in your system on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form.{br}

For each vendor, one location is created automatically. If there are multiple locations, for each location specify the following:[anchor|#ul_gp5_rgc_gs]
*Accounts Payable and expense accounts and appropriate subaccounts
*Payment settings and remittance information
*Purchasing and shipping-related information
*Tax-related information

|- 
| '''16'''
| 
 '''Create vendor accounts for banks and processing centers'''{br}

 [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000])
| 
Create vendor accounts for banks and for processing centers, and specify the accounts (and subaccounts) to which any fees and charges applied by these businesses for processing your transactions will be recorded.
|- 
| '''17'''
| 
 '''Update entry types'''{br}

 [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000])
| 
For the entry types to be used as bank charges or bank interest, specify the vendor accounts for banks in the '''Business Account''' column.
|- 
| '''18'''
| 
 '''Configure the bank accounts'''{br}

 [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000])
| 
For each cash account created as a bank account, specify the vendor account of the bank. Make sure the entry types to be used with the bank account have been added.
|- 
| '''19'''
| 
 '''Specify 1099 settings for branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| On the '''1099 Settings''' tab, for each branch, specify the settings for e-filing. 
|}
 You can print the [HelpRoot_ImplementChecklists\AP_Conf_Checklist|Accounts Payable Configuration Checklist] and refer to it when you configure the Accounts Payable module. ]]></column>
			<column name="PlainText"><![CDATA[Accounts Payable: Configuration This topic will guide you through the process of configuring the Accounts       Payable module. Due to dependencies between the forms, the sequence of actions during       configuration is critical, so you need to perform the tasks in the order in which they are         listed. Prerequisites and Dependencies You have to perform the preparation         tasks for the Taxes module (as described in  Taxes: Preparation) before you         configure the Accounts Payable module. No. Task  Description 1 Define auto-numbering sequences  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) Review the predefined numbering sequences or create new ones for the following:  Accounts Payable batches Accounts Payable bills Accounts Payable adjustments Accounts Payable payments A segment of the  VENDOR  segmented key (if the vendor ID is based on the                        VENDOR  segmented key, and if an auto-numbered segment will be used but                     is not already defined) 2 Define the structure of vendor identifiers  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000)  If the vendor ID is based on the  VENDOR  segmented key, configure the                   segmented key. (If the vendor ID is based on the segmented key  BIZACCT , its                   structure was defined during the initial system configuration.) 3 Add segment values for the vendor IDs  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000)   If the vendor ID is based on the  BIZACCT  segmented key, add                   vendor-specific segment values for segments that require validation. If not,                   populate segments of the  VENDOR  key. 4 Configure the  LOCATION  segmented key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) This task is needed only if the  Business Account Locations  feature is                   enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form. Configure the  LOCATION  segmented key as a one-segment key. By default, it                   has 10 unicode characters; change the length of the segment if needed. 5 Create GL accounts for the Accounts Payable module  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) Make sure that all the GL accounts required for the module are available on the                   chart of accounts. Accounts Payable liability accounts Expense accounts for the cost of purchases Cash discount account Discount account (if the  Vendor Discounts  feature is enabled in your                     system) Reclassification accounts Prepayment accounts PO accrual accounts 6 Create subaccounts for the Accounts Payable module  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) This task is needed only if the  Subaccounts  feature is enabled in your                   system on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form.  For the Accounts Payable module, you will need the following subaccounts: Accounts Payable subaccount Expense subaccount for the cost of purchases Cash discount subaccount Discount subaccount (if the  Vendor Discounts  feature is enabled in your                     system) Reclassification subaccount Prepayment subaccount PO accrual subaccount 7 Create tax zones  ([~/?ScreenId=TX206000|TX206000]) Tax Zones (TX206000) If you plan to process taxes in  Acumatica ERP, create tax zones as empty "containers"; later, when you configure the actual                   taxes, you will populate the tax zones with actual taxes. At minimum, you will                   need one tax zone for the default vendor class.  If you plan to integrate your system with Avalara's AvaTax, create only one zone.                   Specify a name for the special tax zone, such as  AVATAX  or  AVALARA ,                   that indicates that the taxes in this tax zone are calculated by AvaTax. 8 Create credit terms  ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) Configure each set of credit terms, specifying the schedule for payments and the                   conditions for a cash discount. For more information, see  To Configure Multiple-Installment Credit Terms and  To Configure Single-Installment Credit Terms. 9 Create attributes for vendors  ([~/?ScreenId=CS205000|CS205000]) Attributes (CS205000) Create any attributes you might need to further categorize the vendors. You can                 assign attributes to vendor classes to provide the default attributes for vendors of                 specific classes.  10 Create vendor classes  ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000)  Create the vendor classes you have planned. At least one class (the default                   vendor class) must be created.  11 Configure Accounts Payable preferences  ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000)  Specify your preferences for the Accounts Payable module as follows: Select the processing settings (you decided upon during the preparation phase)                     on the  General Settings  tab. Set up the 1099 reporting on the  1099 Settings  tab. Select the default vendor class. 12 Enter vendor accounts  ([~/?ScreenId=AP303000|AP303000]) Vendors (AP303000) If your organization has only a few vendors, enter the vendor accounts                 manually, otherwise, proceed to Task 13. Make sure the  Active  check box is                 selected for each account. Skip Tasks 13 and 14.  13 Create an import scenario for vendor accounts  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  Create a scenario for importing vendors from your legacy system. For details on                 creating import scenarios, see  Configuring Import Scenarios.  14 Import vendor accounts  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  Before you import vendor accounts by using the developed import scenario,                 review the source data to make sure that all the data matches the formats defined in                 the scenario. To test the scenario, import a few records and make sure that valid                 vendor records have been created. After that, import all the records. 15 Add vendor locations  ([~/?ScreenId=AP303010|AP303010]) Vendor Locations (AP303010) This task is needed only if the  Business Account Locations  feature is                   enabled in your system on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features                   (CS100000) form. For each vendor, one location is created automatically. If there are multiple                   locations, for each location specify the following: Accounts Payable and expense accounts and appropriate subaccounts Payment settings and remittance information Purchasing and shipping-related information Tax-related information 16 Create vendor accounts for banks and processing centers  ([~/?ScreenId=AP303000|AP303000]) Vendors (AP303000) Create vendor accounts for banks and for processing centers, and specify the                   accounts (and subaccounts) to which any fees and charges applied by these                   businesses for processing your transactions will be recorded. 17 Update entry types  ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) For the entry types to be used as bank charges or bank interest, specify the                   vendor accounts for banks in the  Business Account  column. 18 Configure the bank accounts  ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) For each cash account created as a bank account, specify the vendor account of                   the bank. Make sure the entry types to be used with the bank account have been                   added. 19 Specify 1099 settings for branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) On the  1099 Settings  tab, for each branch, specify the settings for                 e-filing.   You can print the  Accounts Payable Configuration Checklist and refer to it when you         configure the Accounts Payable module.  ]]></column>
		</row>
		<row PageID="e0539f1a-075a-4f42-865a-d5e8420f3492" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="2c5fe4d4-d593-e177-91be-8ba9bcab72fa" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter briefly describes the process of implementing the Taxes module in Acumatica ERP. {br}

The Taxes module stores and manages your definitions of taxes, tax categories, and tax zones that are used across the system for automatic tax calculation for every document and transaction. For organizations that conduct business in the United States, Acumatica ERP provides the functionality that enables integration with Avalara&rsquo;s AvaTax service. In case your organization plan on using such integration, you will not need to implement the Taxes module. {br}

For more information about forms and capabilities of the Taxes module, see the [HelpRoot_Financials\TX_00_00_00|Taxes] part of the Financial Management guide. [anchor|#2]
==Prerequisites and Dependencies==
Before you start configuring the Taxes module, you have to implement the Accounts Payable module. However, perform the preparation part of the work for the Taxes module along with the preparation work for the Accounts Payable module before you start configuring the Accounts Payable module.
==In This Chapter==[anchor|#ul_fyg_vwj_cs]
*[HelpRoot_Implement\TX_Preparation|Taxes: Preparation]: Describes data you should collect and decisions you should make before you take action.
*[HelpRoot_Implement\AvaTax_Configuration|AvaTax Integration: Configuration]: Guides you through the configuration of the integration with AvaTax.
*[HelpRoot_Implement\TX_Configuration|Taxes: Configuration]: Guides you through the actual configuration of the Taxes module.
]]></column>
			<column name="PlainText"><![CDATA[Implementing Taxes This chapter briefly describes the process of implementing the Taxes module in  Acumatica ERP.  The Taxes module stores and manages your definitions of taxes, tax categories, and tax zones         that are used across the system for automatic tax calculation for every document and         transaction. For organizations that conduct business in the United States,  Acumatica ERP provides the functionality that enables integration with Avalara's AvaTax service. In         case your organization plan on using such integration, you will not need to implement the         Taxes module.  For more information about forms and capabilities of the Taxes module, see the   ([~/?ScreenId=TX000000|TX000000]) Taxes part of the Financial Management         guide.  Prerequisites and Dependencies Before you start configuring the Taxes module, you have to implement the Accounts Payable         module. However, perform the preparation part of the work for the Taxes module along with         the preparation work for the Accounts Payable module before you start configuring the         Accounts Payable module. In This Chapter Taxes: Preparation: Describes data you should collect and decisions you      should make before you take action. AvaTax Integration: Configuration: Guides you through the configuration of the           integration with AvaTax. Taxes: Configuration: Guides you through the actual configuration of the           Taxes module. ]]></column>
		</row>
		<row PageID="370c1796-3ebf-402a-a9e2-9edf656cee03" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="92341bd0-3d4f-67f2-e9ec-7d952f144090" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#1]
This topic covers the preparation that you have to perform before you begin configuring the Taxes module. 
==Alternative Ways to Implement Taxes==
Before you start implementing the Taxes module, you have to decide whether you need to set up integration with Avalara&rsquo;s AvaTax service. For organizations that conduct their business in the United States, such integration provides the following benefits:[anchor|#ul_unj_zbt_cs]
*Real-time calculation of taxes on all transactions
*Up-to-date tax rates for all tax jurisdictions in the U.S.
*Verification of customer addresses for determining the correct tax jurisdiction
*Management of permits and exemption certificates for resellers
*The ability to easily create tax rules and automatically use them for the appropriate transactions 
*Filing of tax reports on behalf of each branch that reports separately to each taxing authority involved
{br}

If you plan to integrate with AvaTax, prepare for this integration, as described in the [[#10|Prepare to Integrate with AvaTax] section. {br}

If you do not plan to integrate with AvaTax, follow the steps in the [[#20|Prepare to implement Taxes] section.[anchor|#10]
==Prepare to Integrate with AvaTax==
Perform the following steps before you actually start configuring the integration with AvaTax. [anchor|#table_xrn_zmn_ds]
{| class="checklist" | width="100%" 
|- 
!width="23%" ! Task 
!width="76%" ! Description
|- 
| '''Subscribe for the AvaTax service'''
| 
Subscribe to the AvaTax service ([http://www.avalara.com/|http://www.avalara.com]) to configure and maintain the integration with AvaTax. {br}

We recommend that you subscribe to the AvaTax Pro service, which has the features to meet most of your tax-related needs. It validates addresses, maintains up-to-date tax rates, stores customer exemption certificates, and files tax returns. {br}

When you subscribe to the AvaTax service, you will get the license key and password to your organization’s account in AvaTax, and the credentials (user name and password) to the AvaTax admin console. 
|- 
| '''Make sure the ''External Tax Calculation  Integration'' feature is included in your license'''
| 
To enable this integration, make sure that your license includes ''External Tax Calculation Integration'' and ''Address Validation Integration'' features. You will later enable the features.
|- 
| '''Decide whether to use AvaTax&rsquo;s tax codes'''
| 
Decide whether you will use tax categories or Avalara tax codes. Avalara has developed and maintains the tax codes for thousands of products and services for correct tax calculation. We recommend that you import these tax codes and use them as tax categories in Acumatica ERP. Alternatively, you can design tax categories in Acumatica ERP and map them to the AvaTax system tax codes by using your AvaTax admin console.
|- 
| '''Choose the tax agency name'''
| 
Choose the name for the tax agency that indicates that the taxes for any agency are calculated by AvaTax—for instance, ''AVATAX'' or ''AVALARA''. (If your organization will process taxes through online integration with AvaTax and prepare tax returns also through this integration, you will need only one tax agency for all taxes.) 
|- 
| '''Choose a name for the tax zone'''
| 
Choose a name for the tax zone that indicates that the taxes for this tax zone are calculated by AvaTax—for instance, ''AVATAX'' or ''AVALARA''. If your organization implements integration with AvaTax, the applicable taxes will be determined based on tax codes of the products and the addresses of the branches, vendors, or customers and hence, the tax zones are actually not needed. However, because tax zones are required in transactions, you have to create a single tax zone.
|}
If you plan to integrate Acumatica ERP with AvaTax, you don&rsquo;t need to implement the Taxes module. Once preparation is done, proceed to [HelpRoot_Implement\AvaTax_Configuration|AvaTax Integration: Configuration].[anchor|#50]
==Prepare to Implement Taxes==
Perform the following preparation steps before you start configuring the Taxes module. ((({S:Warn} Because this is the preparation phase of implementation, you should enter no data into the system at this time.
)))[anchor|#table_eyj_vwj_cs]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action 
!width="80%" ! Description
|- 
| '''Decide on the types of taxes'''
| Decide which types of tax you will configure in the system. Acumatica ERP supports the following types of taxes: ''VAT (GST)'', ''Sales'', ''Use'', or ''Withholding''. If you are going to configure taxes of the VAT or GST type, make sure the ''VAT Reporting'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form.
|- 
| '''Decide on the VAT entry mode'''
| If you going to use VATs, consider enabling the the ''Net/Gross Entry Mode'' feature. Acumatica ERP supports the following modes of entering VATs on documents: ''Gross'' for inclusive taxes, and ''Net'' for add-on taxes. 
|- 
| '''Prepare the list of taxes applicable to your business'''
| 
Make a list of taxes applicable to the products and services you purchase at various vendor locations and to the products and services you sell to various customer locations.{br}

 For each tax, indicate the following: [anchor|#ul_j1j_pb4_ds]
*Tax ID to be used (up to 10 alphanumeric characters)
*Description
*Tax type: ''VAT (GST)'', ''Sales'', ''Use'', or ''Withholding''
* For a VAT, whether the following VAT-specific options apply (see [HelpRoot_FormReference\TX_20_50_00|Taxes] ([~/?ScreenId=TX205000|TX205000]) for details on each option): ''Reverse VAT'', ''Pending VAT'', ''Statistical VAT'', ''Include in VAT Exempt Total'', ''Include in VAT Taxable Total''
*Tax agency that collects the tax
*Tax schedule, which includes the following:
**Start date and the tax rate
**Minimum and maximum taxable amounts, if applicable
*Basis of tax calculation: 
**Line amount or document total amount
**Line amount (first-level tax) or line amount + tax amount (second-level)
**For a first-level tax, whether it should be excluded from second-level tax calculation
*Cash discount handling: Whether the taxable amount is reduced by the cash discount
*GL accounts (and subaccounts): 
**Liability account (and subaccount) for tax on sales: Accumulates taxes collected from sales and ''payable'' to the tax agency
**Assets account (and subaccount) for tax on purchases: Accumulates taxes paid in purchases and ''claimable'' from the tax agency
**Expense account (and subaccount) for use tax

|- [anchor|#20]
| '''Decide on tax categories'''
| 
Plan tax categories as groups of products and services with identical taxation (in all tax zones). For each category, indicate the following: [anchor|#ul_i1l_vwj_cs]
*Category ID
*Brief description
*Whether the category is inclusive or exclusive
*Taxes of the category

For details, see [HelpRoot_Financials\TX__con_Tax_Category|Tax Categories].
|- 
| '''Plan tax zones'''
| 
Plan tax zones for all the territories with different sets of taxes that apply to purchases and sales. For each zone, indicate the following: [anchor|#ul_wdl_vwj_cs]
* Zone ID (up to 10 alphanumeric characters)
* Brief description ( up to 60 Unicode characters)
* Taxes of the zone 

Identify the tax zones of your company&rsquo;s branches.{br}

 For details on tax zones, see [HelpRoot_Financials\TX__con_Tax_Zone|Tax Zones].
|- 
| '''Identify tax agencies'''
|  Identify all tax agencies your organization reports to. For each tax agency, specify the following details: [anchor|#ul_bns_ktj_cs]
*The frequency of tax reporting to the agency
*The account (and subaccount) to accumulate tax amounts paid to the agency
*The account (and subaccount) to accumulate tax amounts to be claimed from the agency
*The account (and subaccount) to accumulate tax-related expenses
*Vendor ID, address, and contact information

For details, see [HelpRoot_Financials\TX__con_Setup_of_Tax_Agency_Account|Tax Agency Account Setup].
|- 
| '''Plan report lines'''
|  For your organization&rsquo;s tax report to each tax agency, define the report lines. For each report line, indicate the following: [anchor|#ul_ppk_vwj_cs]
* Whether the line is updated with a tax or taxable amount 
*Which update rule will be used: 
**'''+Output-Input''': Sales are added to the box amount and purchases are deducted from the box amount 
**'''+Input-Output''': Purchases are added to the box amount and sales are deducted from the box amount 
*What description should be specified for the report line (should be as close as possible to that of the box on the tax form)
* Whether the tax report replicates the report line for each applicable tax zone 
*Whether this report line is the one selected as the net tax

 For details about reporting settings, see [HelpRoot_Financials\TX__con_Tax_Report_Configuration_and_Setup|Tax Report Configuration].
|- 
| '''Plan reporting groups'''
|  For each tax agency, define reporting groups, indicating for each group: [anchor|#ul_urk_vwj_cs]
*Group type, which should be output (sales) or input (purchases) to accumulate taxable and tax amounts for specific taxes
*The taxes included
*Brief description
*Report lines to display reporting group amounts

For information about reporting groups, see [HelpRoot_Financials\TX__con_Tax_Report_Configuration_and_Setup|Tax Report Configuration].
|}You can print the [HelpRoot_ImplementChecklists\TX_Preparation_Checklist|Taxes Preparation Checklist] and refer to it when you prepare to implement the Taxes module. ]]></column>
			<column name="PlainText"><![CDATA[Taxes: Preparation This topic covers the preparation that you have to perform before you begin configuring the         Taxes module.  Alternative Ways to Implement Taxes Before you start implementing the Taxes module, you have to decide whether you need to set         up integration with Avalara's AvaTax service. For organizations that conduct their business         in the United States, such integration provides the following benefits: Real-time calculation of taxes on all transactions Up-to-date tax rates for all tax jurisdictions in the U.S. Verification of customer addresses for determining the correct tax jurisdiction Management of permits and exemption certificates for resellers The ability to easily create tax rules and automatically use them for the appropriate             transactions  Filing of tax reports on behalf of each branch that reports separately to each taxing             authority involved If you plan to integrate with AvaTax, prepare for this integration, as described in the            Prepare to Integrate           with AvaTax Prepare to Integrate with AvaTax section.  If you do not plan to integrate with AvaTax, follow the steps in the  Prepare to implement           Taxes Prepare to implement Taxes section. Prepare to Integrate with AvaTax Perform the following steps before you actually start configuring the integration with         AvaTax.  Task  Description Subscribe for the AvaTax service Subscribe to the AvaTax service ( http://www.avalara.com http://www.avalara.com) to configure and                   maintain the integration with AvaTax.  We recommend that you subscribe to the AvaTax Pro service, which has the features                   to meet most of your tax-related needs. It validates addresses, maintains                   up-to-date tax rates, stores customer exemption certificates, and files tax                   returns.  When you subscribe to the AvaTax service, you will get the license key and                   password to your organization’s account in AvaTax, and the credentials (user name                   and password) to the AvaTax admin console.  Make sure the                      External                      Tax                      Calculation   Integration  feature is included in your                   license To enable this integration, make sure that your license includes                      External                      Tax                      Calculation                      Integration  and  Address                     Validation                      Integration  features. You will later enable the                   features. Decide whether to use AvaTax's tax codes Decide whether you will use tax categories or Avalara tax codes. Avalara has                   developed and maintains the tax codes for thousands of products and services for                   correct tax calculation. We recommend that you import these tax codes and use them                   as tax categories in  Acumatica ERP. Alternatively, you can design tax categories in  Acumatica ERP and map them to the AvaTax system tax codes by using your AvaTax admin                   console. Choose the tax agency name Choose the name for the tax agency that indicates that the taxes for any agency                   are calculated by AvaTax—for instance,  AVATAX  or  AVALARA . (If your                   organization will process taxes through online integration with AvaTax and prepare                   tax returns also through this integration, you will need only one tax agency for                   all taxes.)  Choose a name for the tax zone Choose a name for the tax zone that indicates that the taxes for this tax zone                   are calculated by AvaTax—for instance,  AVATAX  or  AVALARA . If your                   organization implements integration with AvaTax, the applicable taxes will be                   determined based on tax codes of the products and the addresses of the branches,                   vendors, or customers and hence, the tax zones are actually not needed. However,                   because tax zones are required in transactions, you have to create a single tax                   zone. If you plan to integrate  Acumatica ERP with AvaTax, you don't need to implement the Taxes module. Once preparation is done,         proceed to  AvaTax Integration: Configuration. Prepare to Implement Taxes Perform the following preparation         steps before you start configuring the Taxes module.   Because this is           the preparation phase of implementation, you should enter no data into the system at this           time. Action  Description Decide on the types of taxes Decide which types of tax you will configure in the system.  Acumatica ERP supports the following types of taxes:  VAT (GST) ,  Sales ,                  Use , or  Withholding . If you are going to configure taxes of the VAT or                 GST type, make sure the  VAT Reporting  feature is enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form. Decide on the VAT entry mode If you going to use VATs, consider enabling the the  Net/Gross Entry Mode                  feature.  Acumatica ERP supports the following modes of entering VATs on documents:  Gross  for                 inclusive taxes, and  Net  for add-on taxes.  Prepare the list of taxes applicable to your business Make a list of taxes applicable to the products and services                   you purchase at various vendor locations and to the products and services you sell                   to various customer locations.  For each tax, indicate the following:  Tax ID to be used (up to 10 alphanumeric characters) Description Tax type:  VAT (GST) ,  Sales ,  Use , or                      Withholding  For a VAT, whether the following VAT-specific options apply (see   ([~/?ScreenId=TX205000|TX205000]) Taxes (TX205000) for details on                     each option):  Reverse VAT ,  Pending VAT ,  Statistical VAT ,                        Include in VAT Exempt Total ,  Include in VAT Taxable Total Tax agency that collects the tax Tax schedule, which includes the following: Start date and the tax rate Minimum and maximum taxable amounts, if applicable Basis of tax calculation:  Line amount or document total amount Line amount (first-level tax) or line amount + tax amount                         (second-level) For a first-level tax, whether it should be excluded from second-level tax                         calculation Cash discount handling: Whether the taxable amount is reduced by the cash                     discount GL accounts (and subaccounts):  Liability account (and subaccount) for tax on sales: Accumulates taxes                         collected from sales and  payable  to the tax agency Assets account (and subaccount) for tax on purchases: Accumulates taxes                         paid in purchases and  claimable  from the tax agency Expense account (and subaccount) for use tax Decide on tax categories Plan tax categories as groups of products and services with identical taxation                   (in all tax zones). For each category, indicate the following:  Category ID Brief description Whether the category is inclusive or exclusive Taxes of the category For details, see  Tax Categories. Plan tax zones Plan tax zones for all the territories with different sets of taxes that apply to                   purchases and sales. For each zone, indicate the following:   Zone ID (up to 10 alphanumeric characters)  Brief description ( up to 60 Unicode characters)  Taxes of the zone  Identify the tax zones of your company's branches.  For details on tax zones, see  Tax Zones. Identify tax agencies  Identify all tax agencies your organization reports to. For each tax agency,                 specify the following details:  The frequency of tax reporting to the agency The account (and subaccount) to accumulate tax amounts paid to the agency The account (and subaccount) to accumulate tax amounts to be claimed from the                     agency The account (and subaccount) to accumulate tax-related expenses Vendor ID, address, and contact information For details, see  Tax Agency Account Setup. Plan report lines  For your organization's tax report to each tax agency, define the report                 lines. For each report line, indicate the following:   Whether the line is updated with a tax or taxable amount  Which update rule will be used:  +Output-Input : Sales are added to the box amount and purchases are                         deducted from the box amount  +Input-Output : Purchases are added to the box amount and sales are                         deducted from the box amount  What description should be specified for the report line (should be as close                     as possible to that of the box on the tax form)  Whether the tax report replicates the report line for each applicable tax                     zone  Whether this report line is the one selected as the net tax  For details about reporting settings, see  Tax Report Configuration. Plan reporting groups  For each tax agency, define reporting groups, indicating for each group:  Group type, which should be output (sales) or input (purchases) to accumulate                     taxable and tax amounts for specific taxes The taxes included Brief description Report lines to display reporting group amounts For information about reporting groups, see  Tax Report Configuration. You can print the  Taxes Preparation Checklist and refer to it when       you prepare to implement the Taxes module.  ]]></column>
		</row>
		<row PageID="53715193-a3ec-4ba0-b4dc-5ddf52657303" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="da4b59a7-5ca4-a3e5-96e0-dbeb23bdf757" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]
This topic will guide you through the process of configuring the integration between Acumatica ERP and Avalara&rsquo;s AvaTax. This integration is available if the ''External Tax Calculation Integration'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]). Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to complete these tasks in the order in which they are listed. [anchor|#table_d2l_vwj_cs]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Create a vendor account for the Avalara tax agency'''{br}

 [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000])
| 
Create the vendor account for the Avalara tax agency and select the '''Vendor Is Tax Agency''' check box. If your organization will process taxes through online integration with AvaTax and is going to prepare tax returns through this integration, you will need only this tax agency.{br}

See [HelpRoot_Integration\TX__how_To_Configure_Integration_with_AvaTax|To Set Up Integration With AvaTax].
|- 
| '''2'''
| 
 '''Configure your AvaTax account'''{br}

AvaTax admin console
| 
Use the username and password provided with the subscription to AvaTax to access the AvaTax admin console, and do the following: [anchor|#ol_sxq_x2t_cs]
#By using the AvaTax admin console, create an organizational structure for taxes that is similar to the structure of branches of your organization in Acumatica ERP. To do this, use the'' parent company'', ''child company,'' and ''separate reporting entity'' properties for the companies you create in AvaTax (which represent branches of your organization). Later you will associate each branch of your organization in Acumatica ERP with the corresponding company that you have created in AvaTax.
#Create a tax profile for each company (that is, each branch in Acumatica ERP) by selecting the states where each company has a nexus—a significant business presence.
#Depending on your subscription level to AvaTax and the stage in initializing Acumatica ERP, either import AvaTax tax codes (to be used as tax categories) or map your existing tax categories to AvaTax tax codes (which are created on the Avalara website).
#Optional: Create and maintain tax rules—for example, define tax holidays for specific products for certain periods of time.

|- 
| '''3'''
| 
 '''Set up and test the connection between Acumatica ERP and AvaTax'''{br}

 [HelpRoot_FormReference\TX_10_20_00|Tax Providers] ([~/?ScreenId=TX102000|TX102000])
| 
To set up the connection between Acumatica ERP and your AvaTax account, enter the account number your organization has in AvaTax, your license key, and the URL of the AvaTax service. {br}

Activate and test the connection. Once the connection has been established successfully, on the '''Company Code Mapping''' tab, in the '''Branch''' box, for each branch of your organization, enter the name of the company you have created in your AvaTax account. 
|- 
| '''4'''
| 
 '''Configure the special tax zone'''{br}

 [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000])
| 
For the tax zone for this integration—which you created while configuring the Accounts Payable module, select the '''External Tax Provider''' check box, which appears once the integration is active. In the '''Provider ID''' and '''Tax Agency ID''' boxes, select the tax provider and the tax agency that you created for integration. {br}

See [HelpRoot_Integration\TX__how_To_Configure_Integration_with_AvaTax|To Set Up Integration With AvaTax].
|- 
| '''5'''
| 
 '''Set up address validation''' [HelpRoot_FormReference\CS_10_30_00|Address Validation Providers] ([~/?ScreenId=CS103000|CS103000])
| 
If the ''Address Validation Integration'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] form, set up the Avalara address validation provider by using the built-in plug-in, and specify the parameters for connection to the AvaTax account.
|- 
| '''6'''
|  '''Set up address verification'''
 [HelpRoot_FormReference\CS_20_40_00|Countries/States] ([~/?ScreenId=CS204000|CS204000])
| 
For the required state, in the '''Address Verification Plugin''' box, select the Avalara address verification plug-in.
|- 
| '''6'''
| 
 '''Assign the tax zone to branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
Assign the ''AVALARA'' tax zone to your organization&rsquo;s branches.
|}
 You can print the [HelpRoot_ImplementChecklists\AvaTax_Conf_Checklist|AvaTax Integration Configuration Checklist] and refer to it when you configure the Accounts Payable module. ]]></column>
			<column name="PlainText"><![CDATA[AvaTax Integration: Configuration This topic will guide you through the process of configuring the integration between  Acumatica ERP and Avalara's AvaTax. This integration is available if the  External Tax Calculation           Integration  feature is enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features         (CS100000). Due to dependencies between the forms, the sequence of actions during         configuration is critical, so you need to complete these tasks in the order in which they         are listed.  No. Task  Description 1 Create a vendor account for the Avalara tax agency  ([~/?ScreenId=AP303000|AP303000]) Vendors (AP303000) Create the vendor account for the Avalara tax agency and select the                      Vendor Is Tax Agency  check box. If your organization will                   process taxes through online integration with AvaTax and is going to prepare tax                   returns through this integration, you will need only this tax agency. See  To Set Up Integration With AvaTax. 2 Configure your AvaTax account AvaTax admin console Use the username and password provided with the subscription to AvaTax to access                   the AvaTax admin console, and do the following:  By using the AvaTax admin console, create an organizational structure for                     taxes that is similar to the structure of branches of your organization in  Acumatica ERP. To do this, use the  parent company ,  child company,  and                        separate reporting entity  properties for the companies you create in                     AvaTax (which represent branches of your organization). Later you will associate                     each branch of your organization in  Acumatica ERP with the corresponding company that you have created in AvaTax. Create a tax profile for each company (that is, each branch in  Acumatica ERP) by selecting the states where each company has a nexus—a significant                     business presence. Depending on your subscription level to AvaTax and the stage in initializing                        Acumatica ERP, either import AvaTax tax codes (to be used as tax categories) or map your                     existing tax categories to AvaTax tax codes (which are created on the Avalara                     website). Optional: Create and maintain tax rules—for example, define tax holidays for                     specific products for certain periods of time. 3 Set up and test the connection between  Acumatica ERP and AvaTax  ([~/?ScreenId=TX102000|TX102000]) Tax Providers (TX102000) To set up the connection between  Acumatica ERP and your AvaTax account, enter the account number your organization has in                   AvaTax, your license key, and the URL of the AvaTax service.  Activate and test the connection. Once the connection has been established                   successfully, on the  Company Code Mapping  tab, in the                      Branch  box, for each branch of your organization, enter                   the name of the company you have created in your AvaTax account.  4 Configure the special tax zone  ([~/?ScreenId=TX206000|TX206000]) Tax Zones (TX206000) For the tax zone for this integration—which you created while configuring the                   Accounts Payable module, select the  External Tax Provider                    check box, which appears once the integration is active. In the                      Provider ID  and  Tax Agency ID                    boxes, select the tax provider and the tax agency that you created for                   integration.  See  To Set Up Integration With AvaTax. 5 Set up address validation  ([~/?ScreenId=CS103000|CS103000]) Address Validation Providers (CS103000) If the  Address Validation Integration  feature is enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features form, set up the Avalara address                   validation provider by using the built-in plug-in, and specify the parameters for                   connection to the AvaTax account. 6 Set up address verification  ([~/?ScreenId=CS204000|CS204000]) Countries/States (CS204000) For the required state, in the  Address Verification Plugin                    box, select the Avalara address verification plug-in. 6 Assign the tax zone to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) Assign the  AVALARA  tax zone to your organization's branches.  You can print the  AvaTax Integration Configuration Checklist and refer to it when you         configure the Accounts Payable module.  ]]></column>
		</row>
		<row PageID="e9eed4bb-abd8-4c86-a5bf-d8e615141c51" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="666fd2ad-8e49-0f51-8831-452dbe7a1d5a" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]
This topic will guide you through the process of configuring the Taxes module of Acumatica ERP.[anchor|#table_d2l_vwj_cs]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
|  '''Create GL accounts for tax agencies'''
 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| 
Make sure the accounts you plan to use for the following are defined on the chart of accounts:[anchor|#ul_w4g_4q4_ps]
*Tax Payable
*Tax Claimable
*Tax Expense
*Pending Tax Payable (only if the ''VAT Reporting'' feature is enabled)
*Pending Tax Claimable (only if the ''VAT Reporting'' feature is enabled)

|- 
| '''2'''
|  '''Create subaccounts'''
 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| 
(This task is needed only if the ''Subaccounts'' feature is enabled in your system.) {br}

Make sure the following subaccounts are available:
*Tax payable
*Tax claimable
*Tax expense
*Pending tax payable (only if the ''VAT Reporting'' feature is enabled)
*Pending tax claimable (only if the ''VAT Reporting'' feature is enabled)

|- 
| '''3'''
|  '''Create vendor accounts for tax agencies'''
 [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000])
| 
 Create vendor accounts for the tax agencies you have planned. Enter the vendor ID and name, address, and contact information. Select the '''Vendor Is Tax Agency''' check box, which adds the '''Tax Agency Settings''' tab;enter all relevant information on the tab. {br}

For details, see [HelpRoot_Financials\TX__how_To_Set_Up_a_Tax_Agency|To Set Up a Tax Agency].
|- 
| '''4'''
|  '''Configure report lines'''
 [HelpRoot_FormReference\TX_20_51_00|Reporting Settings] ([~/?ScreenId=TX205100|TX205100])
| 
For each tax agency, create the following entities: [anchor|#ul_tpl_vwj_cs]
*Report lines
*Reporting groups

For details, see [HelpRoot_Financials\TX__how_To_configure_tax_report|To Configure a Tax Report]
|- 
| '''5'''
|  '''Configure reporting groups'''
 [HelpRoot_FormReference\TX_20_52_00|Reporting Groups] ([~/?ScreenId=TX205200|TX205200])
| 
 For each reporting group of each tax agency, link report lines. For details, see [HelpRoot_Financials\TX__how_To_configure_tax_report|To Configure a Tax Report].{br}

For details, see [HelpRoot_Financials\TX__how_To_configure_tax_report|To Configure a Tax Report]
|- 
| '''6'''
|  '''Define taxes'''
 [HelpRoot_FormReference\TX_20_50_00|Taxes] ([~/?ScreenId=TX205000|TX205000])
| 
First, create taxes of the first level. Then, create document-level taxes and second-level taxes. For each tax, do the following:[anchor|#ul_cvl_vwj_cs]
*Enter the tax ID and description.
*Select the tax type. Select the appropriate VAT options if the tax is of the VAT type.
*Select the tax agency.
*Select one of the following calculation types: 
**''Extract From Item Amount'' (inclusive tax, always item-level)
**''Calc. On Item Amount'' (item-level, first-level tax)
**''Calc. On Item + Tax Amount'' (item-level, second-level tax)
**''Calc. On Document Amount'' (document-level, first-level tax)
**''Calc. On Document + Tax Amount'' (document-level, second-level tax)
*Select whether cash discounts affect the taxable amount.
*Specify a tax schedule that includes the start date, tax rate, minimum and maximum taxable amounts (if applicable), and reporting group to be updated by taxable and tax amounts
*Select the General Ledger accounts and subaccounts for the tax.

For details, see [HelpRoot_Financials\TX__how_To_Create_a_Sales_Tax|To Create a Sales Tax] and [HelpRoot_Financials\TX__how_To_Create_a_Value_Added_Tax|To Create a Value-Added Tax].
|- 
| '''7'''
|  '''Create tax categories'''
 [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500])
|  Create the planned categories. For each tax category: [anchor|#ul_bzl_vwj_cs]
*Enter the category ID and description.
*Select the '''Exclude Listed Taxes''' check box if the category is exclusive.
*In the '''Taxes Included''' area, add taxes to the category.

For details, see [HelpRoot_Financials\TX__how_To_Create_a_Tax_Category|To Create a Tax Category].
|- 
| '''8'''
|  '''Configure tax zones'''
 [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000])
| 
Review the tax zones you have created for vendors, and add the tax zones that can be used for customers. Populate the tax zones with taxes. {br}

See [HelpRoot_Financials\TX__how_To_Create_a_Tax_Zone|To Create a Tax Zone].
|- 
| '''9'''
|  '''Assign tax zones to vendor classes'''
 [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000])
| Make sure that each vendor class has a tax zone assigned.
|- 
| '''10'''
|  '''Assign tax zones to branches'''
 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
|  Assign tax zones to the company branches.
|- 
| '''11'''
|  '''Update single-zone report lines'''
 [HelpRoot_FormReference\TX_20_51_00|Reporting Settings] ([~/?ScreenId=TX205100|TX205100])
|  For each tax agency, specify tax zones for single-zone report lines.
|}
 You can print the [HelpRoot_ImplementChecklists\TX_Conf_Checklist|Taxes Configuration Checklist] and refer to it when you configure the Taxes module. ]]></column>
			<column name="PlainText"><![CDATA[Taxes: Configuration This topic will guide you through the process of configuring the Taxes module of  Acumatica ERP. No. Task  Description 1 Create GL accounts for tax agencies  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) Make sure the accounts you plan to use for the following are defined on the chart                   of accounts: Tax Payable Tax Claimable Tax Expense Pending Tax Payable (only if the  VAT Reporting  feature is enabled) Pending Tax Claimable (only if the  VAT Reporting  feature is                     enabled) 2 Create subaccounts  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) (This task is needed only if the  Subaccounts  feature is enabled in your                   system.)  Make sure the following subaccounts are available: Tax payable Tax claimable Tax expense Pending tax payable (only if the  VAT Reporting  feature is enabled) Pending tax claimable (only if the  VAT Reporting  feature is                     enabled) 3 Create vendor accounts for tax agencies  ([~/?ScreenId=AP303000|AP303000]) Vendors                 (AP303000)  Create vendor accounts for the tax agencies you have planned. Enter the vendor                   ID and name, address, and contact information. Select the  Vendor Is Tax                     Agency  check box, which adds the  Tax Agency Settings                    tab;enter all relevant information on the tab.  For details, see  To Set Up a Tax Agency. 4 Configure report lines  ([~/?ScreenId=TX205100|TX205100]) Reporting Settings                 (TX205100) For each tax agency, create the following entities:  Report lines Reporting groups For details, see  To Configure a Tax Report5 Configure reporting groups  ([~/?ScreenId=TX205200|TX205200]) Reporting Groups                 (TX205200)  For each reporting group of each tax agency, link report lines. For details, see                      To Configure a Tax Report. For details, see  To Configure a Tax Report6 Define taxes  ([~/?ScreenId=TX205000|TX205000]) Taxes                 (TX205000) First, create taxes of the first level. Then, create document-level taxes and                   second-level taxes. For each tax, do the following: Enter the tax ID and description. Select the tax type. Select the appropriate VAT options if the tax is of the                     VAT type. Select the tax agency. Select one of the following calculation types:  Extract From Item Amount  (inclusive tax, always item-level) Calc. On Item Amount  (item-level, first-level tax) Calc. On Item + Tax Amount  (item-level, second-level tax) Calc. On Document Amount  (document-level, first-level tax) Calc. On Document + Tax Amount  (document-level, second-level                         tax) Select whether cash discounts affect the taxable amount. Specify a tax schedule that includes the start date, tax rate, minimum and                     maximum taxable amounts (if applicable), and reporting group to be updated by                     taxable and tax amounts Select the General Ledger accounts and subaccounts for the tax. For details, see  To Create a Sales Tax and  To Create a Value-Added Tax. 7 Create tax categories  ([~/?ScreenId=TX205500|TX205500]) Tax Categories                 (TX205500)  Create the planned categories. For each tax category:  Enter the category ID and description. Select the  Exclude Listed Taxes  check box if the category is                     exclusive. In the  Taxes Included  area, add taxes to the category. For details, see  To Create a Tax Category. 8 Configure tax zones  ([~/?ScreenId=TX206000|TX206000]) Tax Zones                 (TX206000) Review the tax zones you have created for vendors, and add the tax zones that can                   be used for customers. Populate the tax zones with taxes.  See  To Create a Tax Zone. 9 Assign tax zones to vendor classes  ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) Make sure that each vendor class has a tax zone assigned. 10 Assign tax zones to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000)  Assign tax zones to the company branches. 11 Update single-zone report lines  ([~/?ScreenId=TX205100|TX205100]) Reporting Settings (TX205100)  For each tax agency, specify tax zones for single-zone report lines.  You can print the  Taxes Configuration Checklist and refer to it when you configure         the Taxes module.  ]]></column>
		</row>
		<row PageID="eb6f1152-66c1-42bf-ac87-5fbd773ffa4a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c67746b5-da6c-82fa-06e0-55e3fc4d16be" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter describes the process of implementing the Accounts Receivable module in Acumatica ERP. {br}

By using the Accounts Receivable module, you can effectively manage receivables and the customers who buy goods and services from your company. The Accounts Receivable module also facilitates automating and customizing customer invoicing and payment collection. For detailed descriptions of Accounts Receivable forms and capabilities, see the [HelpRoot_Financials\AR_00_00_00|Accounts Receivable] chapter of the Financial Management guide.[anchor|#1]
==Prerequisites and Dependencies==
You must perform initial system configuration and configure the General Ledger,Currency Management, Cash Management, Accounts Payable, and the Taxes modules before you implement the Accounts Receivable module. 
==Other Considerations==
You can set up invoice rounding at this stage or later in the implementation process.
==In This Chapter==[anchor|#ul_qjy_jjn_cs]
*[HelpRoot_Implement\AR_Preparation|Accounts Receivable: Preparation]: Describes data you should collect, arrange, and analyze
*[HelpRoot_Implement\AR_Configuration|Accounts Receivables: Configuration]: Guides you through the actual configuration of the Accounts Receivable module
]]></column>
			<column name="PlainText"><![CDATA[Implementing Accounts Receivable This chapter describes the process of implementing the Accounts Receivable module in  Acumatica ERP.  By using the Accounts Receivable module, you can effectively manage receivables and the         customers who buy goods and services from your company. The Accounts Receivable module also         facilitates automating and customizing customer invoicing and payment collection. For         detailed descriptions of Accounts Receivable forms and capabilities, see the   ([~/?ScreenId=AR000000|AR000000]) Accounts Receivable chapter of the Financial Management         guide. Prerequisites and Dependencies You must perform initial system configuration and configure the General Ledger,Currency         Management, Cash Management, Accounts Payable, and the Taxes modules before you implement         the Accounts Receivable module.  Other Considerations You can set up invoice rounding at this stage or later in the implementation         process. In This Chapter Accounts Receivable: Preparation: Describes data you should collect, arrange, and           analyze Accounts Receivables: Configuration: Guides you through the actual configuration of the           Accounts Receivable module ]]></column>
		</row>
		<row PageID="5747c2eb-fe72-4927-88f5-b09423fa0cbe" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3cd8e7af-bf08-0be5-0633-1347ec9e7450" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
This topic covers the preparation that you have to perform before you begin configuring the Accounts Receivable module. ((({S:Warn} Because this is the preparation phase of implementation, you should enter no data into the system at this time.
)))[anchor|#table_hdp_bjn_cs]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="66%" ! Description
!width="13%" ! Feature
|- 
| '''Develop identifiers for customer accounts'''
| 
Do one of the following:[anchor|#ul_hkx_5zv_bt]
*If the ''CUSTOMER'' segmented key will be used for customer IDs, prepare a list of values for segments that should be validated. Also, if there is an auto-numbered segment, decide whether you&rsquo;ll use one of predefined numbering sequences or create a new one.
*If the ''BIZACCT'' segmented key will be used for customer IDs, prepare a list of meaningful segment values to be used for customer IDs.

For additional information, see [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers]. 
| 
|- 
| '''Collect customer information'''
| 
Collect and analyze customer information. Alternatively, if you are going to import the customer accounts from your legacy system, review the accounts and delete or inactivate the obsolete ones. Make sure that for each customer, the following data is available: [anchor|#ul_g5w_sjw_bt]
*The customer ID to be used (which should comply with the applicable segmented key, ''BIZACCT'' or ''CUSTOMER'')
*The customer&rsquo;s business name to appear on documents
* Registered (main) address and contact details 
* The customer&rsquo;s tax registration details; taxes chargeable to the customer 
* Currency and rate type, if the customer operates mostly in a single foreign currency; indicate whether they can be changed in the documents 
* Default credit terms 
*Credit verification rule
* Reference to parent company (if the customer is part of a group of companies) 
* The customer&rsquo;s shipping and billing addresses and contact information, if they are different from main address and contact information 
*Whether write-offs for this customer are allowed and what is the maximum limit
*Whether this customer will be charged for overdue invoices
* Payment methods and their configuration, if applicable; whether payments should be applied automatically to outstanding invoices (oldest first) 
*The frequency and type of the customer statement (statement to show all open documents, or statement to show the balance from the last statement and all documents created since then)
*Mailing settings for invoices and statements: 
**Whether invoices should be sent by email or printed and sent by postal mail
**Whether statements should be sent by email or printed and sent by postal mail
**Whether multi-currency format should be used for statements
* The salespeople working with the customer and each salesperson&rsquo;s commission for sales to this customer 
* Accounts to be updated by the customer&rsquo;s documents: 
** Accounts receivable asset account (and subaccount) 
** Sales revenue account (and subaccount) 
** Account (and subaccount) for cash discount 
** Cost of sales account (and subaccount) 

For details about some customer settings, see [HelpRoot_Financials\AR__MNG_Customers|Managing Customers]. 
| 
|- 
| '''Collect information on customer locations'''
| 
For each location, collect the following details:[anchor|#ul_wwp_bjn_cs]
*Contact information and shipping address for the location, if they are different from the main contact details and address
*Tax registration details and taxes chargeable to the customer for the sales associated with this location
*The warehouse to ship goods to this location and the shipping rule, terms, and shipping zone

For more information, see [HelpRoot_Financials\AR__CON_Customer_Locations|Customer Locations].
| Business Account Locations
|- 
| '''Decide whether to use parent-child relations'''
| 
Analyze the customer data to find out how many customers maintain parent-child relations so that a payment from the parent company can be applied to open documents of child customers and so that you can send one consolidated statement to the parent company instead of sending statements to multiple companies. Mark the customers involved in such relations.{br}

For details, see [HelpRoot_Financials\AR__CON_Customer_Account_Planning|Customer Account Planning].
| Parent-Child Customer Relationship
|- 
| '''Design statement cycles'''
| 
 Develop statement cycles based on the collected customer data. In Acumatica ERP, a statement cycle defines when statements should be prepared and sent to customers. You can configure four aging periods for each statement cycle, for sorting open documents by days past due. {br}

We do not recommend that you assign all customers to the same statement cycle because printing statements for a large number of customers can take a very long time. To avoid this, consider creating multiple similar statement cycles (with the same aging periods and statement frequency but different statement dates) to have smaller numbers of customers per cycle. For example, the statements for cycle 1 could be printed on the 5th of each month, and the statements for cycle 2 could be printed on the 10th of each month. With this strategy, you can distribute accountants’ workload more evenly over a month. {br}

For details about statement cycles, see [HelpRoot_Financials\AR__CON_Statement_Cycle|Statement Cycles].
| 
|- 
| '''Decide whether to consolidate statements'''
| 
If your organization has multiple branches, decide whether each branch will send separate statements to customers. If you choose to send consolidated statements, select the branch whose name will appear on statements.
| Multi-Branch Support
|- 
| '''Plan write-offs'''
| If you allow small balance write-offs, decide on the following: [anchor|#ul_hjy_ynq_ns]
* Maximum write-off balances for different customers 
* Account (and subaccount) for credit balance write-off 
* Account (and subaccount) for debit balance write-off 

| 
|- 
| '''Plan credit terms for customers'''
| 
Review the credit terms used for vendors to see which could be used for customers, and develop any needed credit terms for customers.{br}

For more information, see [HelpRoot_Financials\AR__con_Credit_Terms|Setup of Credit Terms].
| 
|- 
| '''Plan credit policies for customers'''
| 
Develop the credit policies to protect your accounts receivable. You can set up one or both of the following rules to apply a credit hold to customers of a specific customer class or to particular customers:[anchor|#ul_jgl_zmk_ls]
*''Grace period (of a specified number of days past due)'': The customer documents may have an open balance during the specified number of days; after that, a credit hold is applied.
*''Credit limit'': The balance of customer open documents may not exceed the specified amount. Once any new document results in exceeding the limit, a credit hold is applied.

You can set up credit policies so that no new sales are allowed if the customer is on credit hold. {br}

See [HelpRoot_Financials\AR__CON_Credit_Verification|Credit Verification].
| 
|- 
| '''Plan overdue charges'''
| 
Plan overdue charges to be applied to any customer balances that are past due. Decide how the charges should be calculated: [anchor|#ul_ijq_bjn_cs]
*As a fixed amount or percent of overdue balance
*In the original document currency or in the base currency

Decide on the credit terms to be used for the charges (that is, to determine when overdue charges are due) and whether to apply additional fees. Decide on processing options to be applied to the overdue charges:[anchor|#ul_bjq_bjn_cs]
*Whether payments should be applied to overdue charges first
*Whether open overdue documents are included in overdue calculations

Plan identifiers for overdue charges— alphanumeric strings of up to 10 characters. {br}

For more information, see [HelpRoot_Financials\AR__con_Processing_of_Overdue_Charges|Overdue Charges]. 
| Overdue Charges
|- 
| '''Decide on dunning letters'''
| 
Decide whether your organization will send dunning letters to customers and how they will be generated: by customer or by document. Determine the schedule for the letters, and prepare the text of the messages. Decide whether to apply a fee for each letter. {br}

See [HelpRoot_Financials\AR__HOW_Configure_DunningLetters_Sequence|To Set Up the Dunning Process].
| Dunning Letters
|- 
| '''Decide whether to consolidate dunning letters'''
| 
If your organization has multiple branches, decide whether each branch will send dunning letters to customers separately. If you choose to send consolidated dunning letters, select the branch whose name will appear on these letters. {br}

See [HelpRoot_Financials\AR__HOW_Configure_DunningLetter_Mailing|To Set Up a Dunning Letter Mailing].
| Multi-Branch Support, Dunning Letters 
|- 
| '''Design attributes for customers'''
| 
Plan the attributes that you will use to further categorize customers of specific classes. An attribute is a quality or characteristic of the customer or other entity that gives your organization more information. For example, an attribute to be used for customers might be the industry or company size. For each attribute, you can specify what type of control should be used for it on the UI.
| 
|- 
| '''Collect salesperson information'''
| 
Prepare a list of salespeople and the commission percent for each salesperson. (If a salesperson&rsquo;s commission percent differs from customer to customer, choose the most common value to be used as the default; the specific percent can be set on the customer level.){br}

For more information, see [HelpRoot_Financials\AR__con_Commission_Calculation|Commission Configuration and Calculation].
| Commissions
|- 
| '''Plan identifiers for salespersons'''
| 
Identifiers for sales persons are based on the ''SALESPER'' segmented key. Decide on the number of segments, their lengths, and their valid values. By default, the key has one six-character (Unicode) segment.
| Commissions
|- 
| '''Design customer classes'''
| 
 Analyze the customer information you have collected, and group the customers into classes. Customer classes provide default settings for new customer accounts, to simplify data entry (including data import). Decide which of the criteria for grouping customers each class will use: [anchor|#ul_eyp_bjn_cs]
*Same country
*Same currency settings (currency, rate type, enabling of overrides)
*Same tax zone
*Same statement cycle
*Same payment terms
*Same credit verification rule
*Same payment method
*Same salesperson
*Same General Ledger accounts and subaccounts (Accounts Receivable, Cash, Sales, Prepayment)
*Same balance write-off policy
*Same overdue charges
*Same mailing settings

Develop identifiers and descriptions for the customer classes. Consider possibility to import vendor classes from your legacy system.{br}

Review the customer data you have prepared and indicate a class for each customer. Choose the default customer class; normally this is the class with the largest number of customers. {br}

For more information, see [HelpRoot_Financials\AR__CON_CustomerClasses|Customer Classes].
| 
|- 
| '''Plan auto-numbering sequences'''
| 
Decide which numbering sequences you will use for the following:[anchor|#ul_vwf_51w_bt]
* Batch numbering sequence (can be the same as General Ledger batch numbering sequence) 
* Invoice numbering sequence 
* Credit and debit memo numbering sequence (can be the same as invoice numbering sequence) 
* Overdue charges numbering sequence 
* Payment numbering sequence (can be the same as invoice numbering sequence) 
* Sequence for auto-numbered customer ID segment (if any)

For more information, see [HelpRoot_Administration\CS__con_Multiple_Numbering_Sequences|Numbering Sequence Usage]. 
| 
|- 
| '''Determine Accounts Receivable processing policies'''
|  Make the following decisions related to Accounts Receivable processing: [anchor|#ul_pcq_bjn_cs]
*Whether Accounts Receivable transactions should be automatically posted when they&rsquo;re released
*Whether Accounts Receivable transactions should be consolidated (summarized by account) when they&rsquo;re posted to General Ledger
*How long Accounts Receivable transactions must be kept in the database before they can be archived
*Whether new Accounts Receivable documents should be put on hold by default
*Whether the system should validate document totals when the document is taken off hold
*Whether payments should be automatically applied to outstanding invoices
*Whether unapplied payments and credit memos should be aged in aging analysis reports
*Whether invoices that fail credit checks may be saved with ''On Hold'' status

For information on payments being automatically applied, see [HelpRoot_Financials\AR__con_Rules_of_Payment_Auto-Application|Automatic Payment Application]. 
| 
|- 
| '''Develop reason codes'''
| 
Develop reason codes to be used for write-off transactions to provide the reasons for such transactions, as well as offset accounts (and subaccounts). Plan identifiers for reason codes (up to 20 characters), which should clearly designate the reason of the write-off transaction, and descriptions, which may contain up to 40 characters.{br}

See [HelpRoot_InvMgmt\IN__con_Reason_Codes__Definition_and_Usage|Reason Codes for Inventory].
| 
|}
 You can print the [HelpRoot_ImplementChecklists\AR_Preparation_Checklist|Accounts Receivable Preparation Checklist] and refer to it when you prepare to implement the Accounts Receivable module. ]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivable: Preparation This topic covers the preparation that you have to perform before you begin configuring the     Accounts Receivable module.   Because this is the preparation phase of      implementation, you should enter no data into the system at this time. Task  Description Feature Develop identifiers for customer accounts Do one of the following: If the  CUSTOMER  segmented key will be used for customer IDs, prepare a list of           values for segments that should be validated. Also, if there is an auto-numbered segment,           decide whether you'll use one of predefined numbering sequences or create a new one. If the  BIZACCT  segmented key will be used for customer IDs, prepare a list of           meaningful segment values to be used for customer IDs. For additional information, see  Segmented Identifiers.  Collect customer information Collect and analyze customer information. Alternatively, if you are going to import the          customer accounts from your legacy system, review the accounts and delete or inactivate the          obsolete ones. Make sure that for each customer, the following data is available:  The customer ID to be used (which should comply with the applicable segmented key,             BIZACCT  or  CUSTOMER ) The customer's business name to appear on documents  Registered (main) address and contact details   The customer's tax registration details; taxes chargeable to the customer   Currency and rate type, if the customer operates mostly in a single foreign currency;           indicate whether they can be changed in the documents   Default credit terms  Credit verification rule  Reference to parent company (if the customer is part of a group of companies)   The customer's shipping and billing addresses and contact information, if they are           different from main address and contact information  Whether write-offs for this customer are allowed and what is the maximum limit Whether this customer will be charged for overdue invoices  Payment methods and their configuration, if applicable; whether payments should be           applied automatically to outstanding invoices (oldest first)  The frequency and type of the customer statement (statement to show all open documents,           or statement to show the balance from the last statement and all documents created since           then) Mailing settings for invoices and statements:  Whether invoices should be sent by email or printed and sent by postal mail Whether statements should be sent by email or printed and sent by postal mail Whether multi-currency format should be used for statements  The salespeople working with the customer and each salesperson's commission for sales           to this customer   Accounts to be updated by the customer's documents:   Accounts receivable asset account (and subaccount)   Sales revenue account (and subaccount)   Account (and subaccount) for cash discount   Cost of sales account (and subaccount)  For details about some customer settings, see  Managing Customers.  Collect information on customer locations For each location, collect the following details: Contact information and shipping address for the location, if they are different from           the main contact details and address Tax registration details and taxes chargeable to the customer for the sales associated           with this location The warehouse to ship goods to this location and the shipping rule, terms, and shipping           zone For more information, see  Customer Locations. Business Account Locations Decide whether to use parent-child relations Analyze the customer data to find out how many customers maintain parent-child relations          so that a payment from the parent company can be applied to open documents of child          customers and so that you can send one consolidated statement to the parent company instead          of sending statements to multiple companies. Mark the customers involved in such          relations. For details, see  Customer Account Planning. Parent-Child Customer Relationship Design statement cycles  Develop statement cycles based on the collected customer data. In  Acumatica ERP, a statement cycle defines when statements should be prepared and sent to customers. You          can configure four aging periods for each statement cycle, for sorting open documents by          days past due.  We do not recommend that you assign all customers to the same statement cycle because          printing statements for a large number of customers can take a very long time. To avoid          this, consider creating multiple similar statement cycles (with the same aging periods and          statement frequency but different statement dates) to have smaller numbers of customers per          cycle. For example, the statements for cycle 1 could be printed on the 5th of each month,          and the statements for cycle 2 could be printed on the 10th of each month. With this          strategy, you can distribute accountants’ workload more evenly over a month.  For details about statement cycles, see  Statement Cycles. Decide whether to consolidate statements If your organization has multiple branches, decide whether each branch will send separate          statements to customers. If you choose to send consolidated statements, select the branch          whose name will appear on statements. Multi-Branch Support Plan write-offs If you allow small balance write-offs, decide on the following:   Maximum write-off balances for different customers   Account (and subaccount) for credit balance write-off   Account (and subaccount) for debit balance write-off  Plan credit terms for customers Review the credit terms used for vendors to see which could be used for customers, and          develop any needed credit terms for customers. For more information, see  Setup of Credit Terms. Plan credit policies for customers Develop the credit policies to protect your accounts receivable. You can set up one or          both of the following rules to apply a credit hold to customers of a specific customer          class or to particular customers: Grace period (of a specified number of days past due) : The customer documents           may have an open balance during the specified number of days; after that, a credit hold is           applied. Credit limit : The balance of customer open documents may not exceed the           specified amount. Once any new document results in exceeding the limit, a credit hold is           applied. You can set up credit policies so that no new sales are allowed if the customer is on          credit hold.  See  Credit Verification. Plan overdue charges Plan overdue charges to be applied to any customer balances that are past due. Decide how          the charges should be calculated:  As a fixed amount or percent of overdue balance In the original document currency or in the base currency Decide on the credit terms to be used for the charges (that is, to determine when overdue          charges are due) and whether to apply additional fees. Decide on processing options to be          applied to the overdue charges: Whether payments should be applied to overdue charges first Whether open overdue documents are included in overdue calculations Plan identifiers for overdue charges— alphanumeric strings of up to 10 characters.  For more information, see  Overdue Charges.  Overdue Charges Decide on dunning letters Decide whether your organization will send dunning letters to customers and how they will          be generated: by customer or by document . Determine the schedule for the          letters, and prepare the text of the messages. Decide whether to apply a fee for each          letter.  See  To Set Up the Dunning Process. Dunning Letters Decide whether to consolidate dunning letters If your organization has multiple branches, decide whether each branch will send dunning          letters to customers separately. If you choose to send consolidated dunning letters, select          the branch whose name will appear on these letters.  See  To Set Up a Dunning Letter Mailing. Multi-Branch Support, Dunning Letters  Design attributes for customers Plan the attributes that you will use to further categorize customers of specific          classes. An attribute is a quality or characteristic of the customer or other entity that          gives your organization more information. For example, an attribute to be used for          customers might be the industry or company size. For each attribute, you can specify what          type of control should be used for it on the UI. Collect salesperson information Prepare a list of salespeople and the commission percent for each salesperson. (If a          salesperson's commission percent differs from customer to customer, choose the most common          value to be used as the default; the specific percent can be set on the customer          level.) For more information, see  Commission Configuration and Calculation. Commissions Plan identifiers for salespersons Identifiers for sales persons are based on the  SALESPER  segmented key. Decide on          the number of segments, their lengths, and their valid values. By default, the key has one          six-character (Unicode) segment. Commissions Design customer classes  Analyze the customer information you have collected, and group the customers into          classes. Customer classes provide default settings for new customer accounts, to simplify          data entry (including data import). Decide which of the criteria for grouping customers          each class will use:  Same country Same currency settings (currency, rate type, enabling of overrides) Same tax zone Same statement cycle Same payment terms Same credit verification rule Same payment method Same salesperson Same General Ledger accounts and subaccounts (Accounts Receivable, Cash, Sales,           Prepayment) Same balance write-off policy Same overdue charges Same mailing settings Develop identifiers and descriptions for the customer classes. Consider possibility to          import vendor classes from your legacy system. Review the customer data you have prepared and indicate a class for each customer. Choose          the default customer class; normally this is the class with the largest number of          customers.  For more information, see  Customer Classes. Plan auto-numbering sequences Decide which numbering sequences you will use for the following:  Batch numbering sequence (can be the same as General Ledger batch numbering sequence)   Invoice numbering sequence   Credit and debit memo numbering sequence (can be the same as invoice numbering           sequence)   Overdue charges numbering sequence   Payment numbering sequence (can be the same as invoice numbering sequence)   Sequence for auto-numbered customer ID segment (if any) For more information, see  Numbering Sequence Usage.  Determine Accounts Receivable processing policies  Make the following decisions related to Accounts Receivable processing:  Whether Accounts Receivable transactions should be automatically posted when they're           released Whether Accounts Receivable transactions should be consolidated (summarized by account)           when they're posted to General Ledger How long Accounts Receivable transactions must be kept in the database before they can           be archived Whether new Accounts Receivable documents should be put on hold by default Whether the system should validate document totals when the document is taken off           hold Whether payments should be automatically applied to outstanding invoices Whether unapplied payments and credit memos should be aged in aging analysis           reports Whether invoices that fail credit checks may be saved with  On Hold  status For information on payments being automatically applied, see  Automatic Payment Application.          Develop reason codes Develop reason codes to be used for write-off transactions to provide the reasons for          such transactions, as well as offset accounts (and subaccounts). Plan identifiers for          reason codes (up to 20 characters), which should clearly designate the reason of the          write-off transaction, and descriptions, which may contain up to 40 characters. See  Reason Codes for Inventory.  You can print the  Accounts Receivable Preparation Checklist and refer to it when you     prepare to implement the Accounts Receivable module.  ]]></column>
		</row>
		<row PageID="30b16143-1cbd-46ee-919c-d4a0eed04beb" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="db5acdbb-31d8-0cba-98a5-bb0e5db50c99" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will guide you through the process of configuring the Accounts Receivables module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to follow the order of tasks.[anchor|#table_nl2_fjn_cs]
{| class="checklist" | width="100%" 
|- 
!width="3%" ! '''No.'''
!width="22%" ! Task 
!width="59%" ! Description
!width="14%" ! Feature
|- 
| '''1'''
| 
 '''Create GL accounts for the Accounts Receivables module'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| 
Make sure all GL accounts required for the module, including the following, are listed on the chart of accounts:[anchor|#ul_pss_sv4_ps]
*Accounts Receivable accounts
*Sales accounts
*Freight accounts for recording freight charges and related expenses (if the ''Inventory and Order Management'' group of features is enabled in your system)
*Cash discount accounts
*Discount accounts
*Accounts for overdue charges
*Prepayment accounts
*Reason code accounts
*Accounts for write-offs

| 
|- 
| '''2'''
| 
 '''Create subaccounts for the Accounts Receivables module'''{br}

 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| 
Make sure the subaccounts to be used as the following are listed on the chart of accounts:[anchor|#ul_w3x_hw4_ps]
*Accounts Receivable subaccounts
*Sales subaccounts
*Freight subaccounts for recording freight charges and related expenses (if the ''Inventory and Order Management'' group of features is enabled in your system)
*Cash discount subaccounts
*Discount subaccounts
*Subaccounts for overdue charges
*Prepayment subaccounts
*Reason code subaccounts
*Subaccounts for write-offs

| Subaccounts
|- 
| '''3'''
| 
 '''Create credit terms '''{br}

 [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500])
| 
 Configure the sets of credit terms to be used for different customers. Also create credit terms for overdue charges if the ''Overdue Charges'' feature is enabled in your system and for credit card processing if such processing will be used. 
| 
|- 
| '''4'''
| 
 '''Create overdue charges'''{br}

 [HelpRoot_FormReference\AR_20_45_00|Overdue Charges] ([~/?ScreenId=AR204500|AR204500])
| 
For each type of overdue charges, specify the following:[anchor|#ul_abq_1w3_gs]
*Identifier and description
*Credit terms to define overdue charges due dates
*Whether to calculate the charge as a fixed amount or as a percent of the overdue balance
*Whether to calculate the amount in the original document currency or in the base currency
*General Ledger accounts (and subaccounts)
*Whether to apply fees

| Overdue Charges
|- 
| '''5'''
| 
 '''Create statement cycles'''{br}

 [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800])
| 
For each statement cycle, enter the following information: [anchor|#ul_ew2_fjn_cs]
*Statement cycle ID and description
*Day of the month when the statement should be generated
*Aging periods and messages for each aging period
*Overdue charges if overdue charges should be assigned by statement cycle.

| 
|- 
| '''6'''
| 
 '''Create reason codes'''{br}

 [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000])
| 
Create reason codes for the following types of transactions: [anchor|#ul_p4h_tws_cs]
*Credit write-off
*Debit write-off

| 
|- 
| '''7'''
| 
 '''Define auto-numbering sequences'''{br}

 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
| 
Create numbering sequences for the following: [anchor|#ul_ks2_fjn_cs]
*GL batches originated in Accounts Receivable
*Invoices
*Payments
*Debit and credit memos
*Write-offs
*Overdue charges
*A segment of the ''CUSTOMER'' segmented key (if needed)

| 
|- 
| '''8'''
| 
 '''Create attributes to be used for customers'''{br}

 [HelpRoot_FormReference\CS_20_50_00|Attributes] ([~/?ScreenId=CS205000|CS205000])
| 
Create attributes for customers. For each attribute, specify what type of control should be used for it on the UI. 
| 
|- 
| '''9'''
| 
 '''Create customer classes'''{br}

 [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000])
|  Create the customer classes you have planned. 
| 
|- 
| '''10'''
| 
 '''Specify the Accounts Receivable preferences'''{br}

 [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000])
| 
Specify your preferences for the Accounts Receivable module as follows:[anchor|#ul_kx2_fjn_cs]
*Select the appropriate numbering sequences for Accounts Receivable batches, invoices, debit and credit memos, payments, and overdue charges.
*Enter posting and retention settings.
*Enter the default customer class.
*Enter the rules to generate the sales subaccount.
*Select whether to use integrated credit card processing, and select the credit terms to be used for card payments.
*Select miscellaneous processing options.
*Enter the settings to be used for commission calculation.
*Select the default reason codes for write-offs.

| 
|- 
| '''11'''
| 
 '''Select the overdue charges processing options'''{br}

 [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000])
| 
Specify the processing settings for overdue charges:[anchor|#ul_mvf_4zb_2s]
*Whether to set the default overdue charges by statement cycle
*Whether to apply overdue charges to overdue charges 
*Whether to apply payments to overdue charges first

| Overdue Charges
|- 
| '''12'''
| 
 '''Select the dunning letter processing options'''{br}

 [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000])
| 
On the '''Dunning Settings''' tab, specify the following:[anchor|#ul_pl5_mcx_ls]
*What levels are used for the dunning letters, and for each level, the number of days past due, days to settle, and fee amount
*Whether to generate letters by customer or by document
*Whether to include other unpaid documents in the dunning letters
*Whether to automatically release the dunning letters
*Whether to send consolidated dunning letters from all branches and which branch&rsquo;s name should appear on the documents
((({S:Hint}You can also specify a fee to be charged for each dunning letter; however, you will be able to do this after you configure non-stock items denoting such fees. 
)))
| Dunning Letters
|- 
| '''13'''
| 
 '''Configure the ''SALESPER'' key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
Configure the ''SALESPER ''segmented key. Specify the number, length, and type of segments, as well as whether they should be validated. By default, the key has one 10-character segment.
| Commissions
|- 
| '''14'''
| 
 '''Add segment values for the ''SALESPER'' key'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000]) 
| 
If you have configured the ''SALESPER'' segmented key with multiple segments, add segment values for each of the segments to be validated. 
| Commissions
|- 
| '''15'''
| 
 '''Create salesperson accounts'''{br}

 [HelpRoot_FormReference\AR_20_50_00|Salespersons] ([~/?ScreenId=AR205000|AR205000])
| 
 Create accounts for all the company&rsquo;s salespeople. For each, enter the following information: [anchor|#ul_ny2_fjn_cs]
*Salesperson ID
*Salesperson name
*Standard commission

| Commissions
|- 
| '''16'''
| 
 '''Assign salespersons to customer classes'''{br}

 [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000])
| 
Assign a salesperson to a particular customer class if the salesperson works with customers of the class.
| Commissions
|- 
| '''17'''
| 
 '''Define the structure of customer identifiers'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
 If the customer ID is based on the segmented key ''BIZACCT'', its structure was defined during initial stage of system configuration. If not, configure the ''CUSTOMER'' segmented key. 
| 
|- 
| '''18'''
| 
 '''Add segment values for customer IDs'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000]) 
| 
If the customer ID is based on the segmented key ''BIZACCT'', add customer-specific segment values for segments that require validation. {br}

If not, populate segments of the ''CUSTOMER'' key.
| 
|- 
| '''19'''
| 
 '''Enter customer accounts'''{br}

 [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000])
| 
If your organization has only a few customers, enter the customer accounts manually; otherwise, proceed to Task 13. Make sure the '''Active''' check box is selected for each account. Skip Tasks 20 and 21. 
| 
|- 
| '''20'''
| 
 '''Create an import scenario for customers'''{br}

 [HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
Create a scenario for importing the customer accounts.{br}

For details on creating import scenarios, see [HelpRoot_Integration\IS__mng_Configuring_Import_Scenarios|Configuring Import Scenarios]. 
| 
|- 
| '''21'''
| 
 '''Import customer accounts'''{br}

 [HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
Before you import customer accounts by using the developed import scenario, review the source data to make sure that all the data matches the formats defined in the scenario. To test the scenario, import only a few records and make sure that valid records have been created. After that, import all the records.
| 
|- 
| '''22'''
| 
 '''Specify parent-child relations'''{br}

 [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000])
| 
On the '''Billing''' tab, specify the parent account for each child account, and select whether to consolidate balances and statements with the balances and statements of the parent accounts. 
| Parent-Child Customer Relations
|- 
| '''23'''
| 
 '''Add customer locations'''{br}

 [HelpRoot_FormReference\AR_30_30_20|Customer Locations] ([~/?ScreenId=AR303020|AR303020])
| For customers with multiple locations, for each additional location, specify the following:[anchor|#ul_gp5_rgc_gs]
*Accounts Receivable and expense accounts (and appropriate subaccounts)
*Sales account
*Discount account
*Freight account 
*Payment settings
*Shipping settings and address
*Tax-related information

| Business Account Locations
|- 
| '''24'''
| 
 '''Define customer payment methods'''{br}

 [HelpRoot_FormReference\AR_30_30_10|Customer Payment Methods] ([~/?ScreenId=AR303010|AR303010])
| 
Configure customer-specific payment methods. For each customer account, specify the particular payment methods to be used by the customer and enter values for custom elements of the payment method, if any.
| 
|}
 You can print the [HelpRoot_ImplementChecklists\AR_Conf_Checklist|Accounts Receivable Configuration Checklist] and refer to it when you configure the Accounts Receivable module. ]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivables: Configuration This topic will guide you through the process of configuring the Accounts    Receivables module. Due to dependencies between the forms, the sequence of actions during    configuration is critical, so you need to follow the order of tasks. No. Task  Description Feature 1 Create GL accounts for the Accounts Receivables module  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) Make sure all GL accounts required for the module, including the following, are listed on          the chart of accounts: Accounts Receivable accounts Sales accounts Freight accounts for recording freight charges and related expenses (if the             Inventory and Order Management  group of features is enabled in your system) Cash discount accounts Discount accounts Accounts for overdue charges Prepayment accounts Reason code accounts Accounts for write-offs 2 Create subaccounts for the Accounts Receivables module  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) Make sure the subaccounts to be used as the following are listed on the chart of          accounts: Accounts Receivable subaccounts Sales subaccounts Freight subaccounts for recording freight charges and related expenses (if the             Inventory and Order Management  group of features is enabled in your system) Cash discount subaccounts Discount subaccounts Subaccounts for overdue charges Prepayment subaccounts Reason code subaccounts Subaccounts for write-offs Subaccounts 3 Create credit terms   ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500)  Configure the sets of credit terms to be used for different customers. Also create          credit terms for overdue charges if the  Overdue Charges  feature is enabled in your          system and for credit card processing if such processing will be used.  4 Create overdue charges  ([~/?ScreenId=AR204500|AR204500]) Overdue Charges (AR204500) For each type of overdue charges, specify the following: Identifier and description Credit terms to define overdue charges due dates Whether to calculate the charge as a fixed amount or as a percent of the overdue           balance Whether to calculate the amount in the original document currency or in the base           currency General Ledger accounts (and subaccounts) Whether to apply fees Overdue Charges 5 Create statement cycles  ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) For each statement cycle, enter the following information:  Statement cycle ID and description Day of the month when the statement should be generated Aging periods and messages for each aging period Overdue charges if overdue charges should be assigned by statement cycle. 6 Create reason codes  ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) Create reason codes for the following types of transactions:  Credit write-off Debit write-off 7 Define auto-numbering sequences  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) Create numbering sequences for the following:  GL batches originated in Accounts Receivable Invoices Payments Debit and credit memos Write-offs Overdue charges A segment of the  CUSTOMER  segmented key (if needed) 8 Create attributes to be used for customers  ([~/?ScreenId=CS205000|CS205000]) Attributes (CS205000) Create attributes for customers. For each attribute, specify what type of control should          be used for it on the UI.  9 Create customer classes  ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000)  Create the customer classes you have planned.  10 Specify the Accounts Receivable preferences  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) Specify your preferences for the Accounts Receivable module as follows: Select the appropriate numbering sequences for Accounts Receivable batches, invoices,           debit and credit memos, payments, and overdue charges. Enter posting and retention settings. Enter the default customer class. Enter the rules to generate the sales subaccount. Select whether to use integrated credit card processing, and select the credit terms to           be used for card payments. Select miscellaneous processing options. Enter the settings to be used for commission calculation. Select the default reason codes for write-offs. 11 Select the overdue charges processing options  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) Specify the processing settings for overdue charges: Whether to set the default overdue charges by statement cycle Whether to apply overdue charges to overdue charges  Whether to apply payments to overdue charges first Overdue Charges 12 Select the dunning letter processing options  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) On the  Dunning Settings  tab, specify the following: What levels are used for the dunning letters, and for each level, the number of days           past due, days to settle, and fee amount Whether to generate letters by customer or by document Whether to include other unpaid documents in the dunning letters Whether to automatically release the dunning letters Whether to send consolidated dunning letters from all branches and which branch's name           should appear on the documents You can also specify a fee to be charged for each dunning letter; however, you will be          able to do this after you configure non-stock items denoting such fees.  Dunning Letters 13 Configure the  SALESPER  key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Configure the  SALESPER  segmented key. Specify the number, length, and type of          segments, as well as whether they should be validated. By default, the key has one          10-character segment. Commissions 14 Add segment values for the  SALESPER  key  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000)  If you have configured the  SALESPER  segmented key with multiple segments, add          segment values for each of the segments to be validated.  Commissions 15 Create salesperson accounts  ([~/?ScreenId=AR205000|AR205000]) Salespersons (AR205000)  Create accounts for all the company's salespeople. For each, enter the following          information:  Salesperson ID Salesperson name Standard commission Commissions 16 Assign salespersons to customer classes  ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) Assign a salesperson to a particular customer class if the salesperson works with          customers of the class. Commissions 17 Define the structure of customer identifiers  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000)  If the customer ID is based on the segmented key  BIZACCT , its structure was          defined during initial stage of system configuration. If not, configure the  CUSTOMER           segmented key.  18 Add segment values for customer IDs  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000)  If the customer ID is based on the segmented key  BIZACCT , add customer-specific          segment values for segments that require validation.  If not, populate segments of the  CUSTOMER  key. 19 Enter customer accounts  ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) If your organization has only a few customers, enter the customer accounts manually;          otherwise, proceed to Task 13. Make sure the  Active  check box is selected for each          account. Skip Tasks 20 and 21.  20 Create an import scenario for customers  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  Create a scenario for importing the customer accounts. For details on creating import scenarios, see  Configuring Import Scenarios.  21 Import customer accounts  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  Before you import customer accounts by using the developed import scenario, review the          source data to make sure that all the data matches the formats defined in the scenario. To          test the scenario, import only a few records and make sure that valid records have been          created. After that, import all the records. 22 Specify parent-child relations  ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) On the  Billing  tab, specify the parent account for each child account, and select          whether to consolidate balances and statements with the balances and statements of the          parent accounts.  Parent-Child Customer Relations 23 Add customer locations  ([~/?ScreenId=AR303020|AR303020]) Customer Locations (AR303020) For customers with multiple locations, for each additional location, specify the          following: Accounts Receivable and expense accounts (and appropriate subaccounts) Sales account Discount account Freight account  Payment settings Shipping settings and address Tax-related information Business Account Locations 24 Define customer payment methods  ([~/?ScreenId=AR303010|AR303010]) Customer Payment Methods (AR303010) Configure customer-specific payment methods. For each customer account, specify the          particular payment methods to be used by the customer and enter values for custom elements          of the payment method, if any.  You can print the  Accounts Receivable Configuration Checklist and refer to it when you     configure the Accounts Receivable module.  ]]></column>
		</row>
		<row PageID="88823a48-b550-444d-851e-64106b7538a9" Language="en-US" PageRevisionID="1" Content="This chapter describes the process of configuring email system accounts in Acumatica ERP. [anchor|#1]&#xA;==Prerequisites and Dependencies==&#xA;There is no prerequisites for configuring the email system accounts. &#xA;==In This Chapter==[anchor|#ul_psd_y3m_3h]&#xA;*[HelpRoot_Implement\EM_Preparation|Email: Preparation]: Describes what data should be collected, arranged, and analyzed before you can configure email accounts.&#xA;*[HelpRoot_Implement\EM_Configuration|Email: Configuration]: Guides you through the actual configuration of the email accounts.&#xA;" PlainText="Configuring Email This chapter describes the process of configuring email system accounts in  Acumatica ERP.  Prerequisites and Dependencies There is no prerequisites for configuring the email system accounts.  In This Chapter Email: Preparation: Describes what data should be collected, arranged, and      analyzed before you can configure email accounts. Email: Configuration: Guides you through the actual configuration of the      email accounts. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="2a7afb4b-397e-2e01-1c7b-4fafb1004b36" RecordSourceID="22377" />
		<row PageID="3dedb86d-7e84-4551-87e6-2551569da984" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b9d9d114-38c6-a93d-c1eb-9284fd57d534" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
This topic covers the preparation that you have to perform before you begin configuring the Email module in Acumatica ERP. ((({S:Warn} Because this is the preparation phase of implementation, you should enter no data into the system at this time.
)))[anchor|#table_rpw_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Plan system email accounts'''
| 
Collect the following information on the configuration of the system email accounts: [anchor|#ul_yld_yrp_bs]
*Outgoing and incoming mail servers (indicate whether the connection to the mail server should be secured by SSL); incoming mail protocol; server port numbers
*Username and password to be used for the account
*Whether incoming mail processing will be performed
*Allowed message size and attachment types
*The default email workgroups and the default owners if the emails to this account should be automatically assigned to employees, plan the default email workgroups and the default owners

Decide which of the accounts will be used as the default system email account.{br}

For more information, see [HelpRoot_Administration\EM__con_System_Email_Accounts|System Email Accounts].
|- 
| '''Plan templates for notification emails'''
| 
Review the standard set of templates that comes with Acumatica ERP, and decide whether you will use them as is or you need to modify them or create new templates. {br}

Prepare the email templates for the following:[anchor|#ul_qdg_tnf_ht]
*New User Welcome template 
*Password Changed template
*Login Recovery template
*Password Recovery template
{br}

See [HelpRoot_FormReference\SM_20_40_03|Notification Templates].
|- 
| '''Plan integration with Exchange Server'''
| This task is needed only if the ''Exchange Integration'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. 
Decide whether you need to synchronize contacts, emails, tasks, and events between your users&rsquo; Exchange Server accounts and their Acumatica ERP email accounts.{br}

Plan synchronization policies. For each synchronization policy, decide on the record types to be synchronized, the synchronization direction, and the way the synchronized records will be marked; list the employees.{br}

Decide whether you need to perform the synchronization on schedule. Plan the schedules if needed. {br}

For more information, see [HelpRoot_Integration\EM__mng_Exchange_server|Synchronizing Acumatica ERP with Microsoft Exchange Server].
|}
 You can print [HelpRoot_ImplementChecklists\EM_Preparation_Checklist|Email Preparation Checklist] and refer to it when you prepare to implement the Email module. ]]></column>
			<column name="PlainText"><![CDATA[Email: Preparation This topic covers the preparation that you have to perform before you begin configuring the     Email module in  Acumatica ERP.   Because this is the preparation phase of implementation, you should enter     no data into the system at this time. Task  Description Plan system email accounts Collect the following information on the configuration of the system email accounts:  Outgoing and incoming mail servers (indicate whether the connection to the mail server           should be secured by SSL); incoming mail protocol; server port numbers Username and password to be used for the account Whether incoming mail processing will be performed Allowed message size and attachment types The default email workgroups and the default owners if  the emails to this account           should be automatically assigned to employees, plan the default email workgroups and the           default owners Decide which of the accounts will be used as the default system email account. For more information, see  System Email Accounts. Plan templates for notification emails Review the standard set of templates that comes with  Acumatica ERP, and decide whether you will use them as is or you need to modify them or create new          templates.  Prepare the email templates for the following: New User Welcome template  Password Changed template Login Recovery template Password Recovery template See   ([~/?ScreenId=SM204003|SM204003]) Notification Templates. Plan integration with Exchange Server This task is needed only if the  Exchange Integration  feature is enabled on the            ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form.  Decide whether you need          to synchronize contacts, emails, tasks, and events between your users' Exchange Server          accounts and their  Acumatica ERP email accounts. Plan synchronization policies. For each synchronization policy,          decide on the record types to be synchronized, the synchronization direction, and the way          the synchronized records will be marked; list the employees. Decide whether you need          to perform the synchronization on schedule. Plan the schedules if needed.  For more          information, see  Synchronizing Acumatica ERP with Microsoft Exchange Server.  You can print  Email Preparation Checklist and refer to it when you prepare     to implement the Email module.  ]]></column>
		</row>
		<row PageID="46560a7a-0811-4e58-b735-c40ce866e87a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="89f619f0-5d67-076a-e091-b8e55fe73997" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will guide you through the process of configuring the Email module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to follow the order of tasks.[anchor|#table_cmx_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="22%" ! Task 
!width="64%" ! Description
!width="8%" ! Feature
|- 
| '''1'''
| 
 '''Configure system email accounts'''{br}

 [HelpRoot_FormReference\SM_20_40_02|System Email Accounts] ([~/?ScreenId=SM204002|SM204002])
| 
For each system email account, specify the following: [anchor|#ul_yld_yrp_bs]
*Identifier of the account
*Outgoing and incoming mail servers; indicate whether the connection to the mail server should be secured by SSL and whether the outgoing server requires authentication 
*Incoming mail protocol 
*Server port numbers
*Login and password to be used for the account
*Maximum message size allowed for an incoming message
*Attachments: whether they are allowed, and what types of attachments are permitted
*Allowed message size and attachment types
{br}

For details, see [HelpRoot_Administration\EM__HOW_To_Create_a_System_Email_Account|To Create a System Email Account].
| 
|- 
| '''2'''
| 
 '''Set up email preferences'''{br}

 [HelpRoot_FormReference\SM_20_40_01|Email Preferences] ([~/?ScreenId=SM204001|SM204001])
| 
Review the system email accounts listed in the table on the form and select one of them as the default one—then it will appear by default on the forms that the users use to create emails. {br}

Select the email templates to be used for the following:[anchor|#ul_qdg_tnf_ht]
*New User Welcome template 
*Password Changed template
*Login Recovery template
*Password Recovery template

If you are going to schedule the processes of sending and receiving emails, enter the number of times the system will attempt to resend emails that are not sent successfully. 
| 
|- 
| '''3'''
| 
 '''Create the roles to control user access to email accounts'''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
'''''Configuration &gt; User Security &gt; Manage &gt; User Roles (SM201005)'''''{br}

Create the roles to control user access to email accounts
| 
|- 
| '''4'''
|  '''Configure the roles&rsquo; access to email accounts'''
 [HelpRoot_FormReference\SM_20_10_25|Access Rights by Role] ([~/?ScreenId=SM201025|SM201025])
| 
For each role, set its access rights to the System Email Accounts (SM204002) form to ''Revoked'', ''View Only'', or ''Delete''.
| 
|- 
| '''5'''
|  '''Create restriction groups'''
 [HelpRoot_FormReference\SM_20_10_50|Email Account Access] ([~/?ScreenId=SM201050|SM201050])
| 
For each system email account (or group of email accounts intended for a special use), create a restriction group of type ''A'' and add the users who should have access to the system email account or the group of email accounts. The system email account or accounts in each restriction group will not be available for users not included in the group. System email accounts not included in any group will be available to all users.
| Row-Level Security
|- 
| '''6'''
| 
 '''Schedule the send/receive processes'''{br}

 [HelpRoot_FormReference\SM_20_50_20|Automation Schedules] ([~/?ScreenId=SM205020|SM205020]) 
| 
Create a schedule as follows:[anchor|#ol_s4p_qvj_qs]
#Select the '''''Configuration &gt; Email &gt; Schedule &gt; Send and Receive Email (SM507010)''''' form in the '''Screen ID''' box.
#Provide the description of the schedule.
#Select the start and expiration dates for the schedule, or specify the maximum number of executions.
#Specify how often the operation should be performed.

For details, see [HelpRoot_Administration\EM__con_Sending_and_Receiving_Emails|Mail Sending and Receipt] and [HelpRoot_Administration\SM__how_Scheduling_the_Desired_Processing|To Schedule Processing].
| Scheduled Processing
|- 
| '''7'''
| 
 '''Create synchronization policies'''{br}

 [HelpRoot_FormReference\SM_20_40_10|Exchange Synchronization Policies] ([~/?ScreenId=SM204010|SM204010])
| 
For each policy, specify the following:[anchor|#ul_j4p_2fm_ht]
*Policy name
*Category name and color
*Record types that should be synchronized
*Synchronization direction
*If you synchronize contacts, the folder for synchronized contacts
*If you synchronize emails, the folder for synchronized emails and specify other options
*Employee email accounts to be synchronized

See [HelpRoot_Integration\EM__how_Policy_Add|To Add a Synchronization Policy].
| Exchange Integration
|- 
| '''8'''
| 
 '''Set up integration with Exchange Server'''{br}

 [HelpRoot_FormReference\SM_20_40_15|Exchange Server Configuration] ([~/?ScreenId=SM204015|SM204015])
| 
Configure synchronization between your Microsoft Exchange Server and the Acumatica ERP instance.{br}

See [HelpRoot_Integration\EM__how_Add_Server|To Set Up a Connection with an Exchange Server].
| Exchange Integration
|- 
| '''9'''
| 
 '''Set up automatic synchronization with Exchange Server'''{br}

 [HelpRoot_FormReference\SM_20_40_30|Exchange Synchronization Process] ([~/?ScreenId=SM204030|SM204030]) 
| 
For the selected exchange server and each policy, select the employees and click '''Add Schedule'''. Specify the schedule name and the settings you want to use for automatic synchronization. {br}

See [HelpRoot_Integration\EM__how_Schedule_synch|To Set Up Automatic Synchronization with Exchange Server].
| Scheduled Processing and Exchange Integration
|}
 You can print [HelpRoot_ImplementChecklists\EM_Conf_Checklist|Email Configuration Checklist] and refer to it when you configure the Email module. ]]></column>
			<column name="PlainText"><![CDATA[Email: Configuration This topic will guide you through the process of configuring the Email module.       Due to dependencies between the forms, the sequence of actions during configuration is       critical, so you need to follow the order of tasks. No. Task  Description Feature 1 Configure system email accounts  ([~/?ScreenId=SM204002|SM204002]) System Email Accounts (SM204002) For each system email account, specify the following:  Identifier of the account Outgoing and incoming mail servers; indicate whether the connection to the                       mail server should be secured by SSL and whether the outgoing server requires                       authentication  Incoming mail protocol  Server port numbers Login and password to be used for the account Maximum message size allowed for an incoming message Attachments: whether they are allowed, and what types of attachments are                       permitted Allowed message size and attachment types For details, see  To Create a System Email Account. 2 Set up email preferences  ([~/?ScreenId=SM204001|SM204001]) Email Preferences (SM204001) Review the system email accounts listed in the table on the form and select one                   of them as the default one—then it will appear by default on the forms that the                   users use to create emails.  Select the email templates to be used for the following: New User Welcome template  Password Changed template Login Recovery template Password Recovery template If you are going to schedule the processes of sending and receiving emails, enter                   the number of times the system will attempt to resend emails that are not sent                   successfully.  3 Create the roles to control user access to email accounts  ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005) Configuration > User Security > Manage > User Roles                       (SM201005) Create the roles to control user access to email accounts 4 Configure the roles' access to email accounts  ([~/?ScreenId=SM201025|SM201025]) Access Rights by Role (SM201025) For each role, set its access rights to the System Email Accounts (SM204002)                   form to  Revoked ,  View Only , or  Delete . 5 Create restriction groups  ([~/?ScreenId=SM201050|SM201050]) Email Account Access                   (SM201050) For each system email account (or group of email accounts intended for a special                   use), create a restriction group of type  A  and add the users who should                   have access to the system email account or the group of email accounts. The system                   email account or accounts in each restriction group will not be available for                   users not included in the group. System email accounts not included in any group                   will be available to all users. Row-Level Security 6 Schedule the send/receive processes  ([~/?ScreenId=SM205020|SM205020]) Automation Schedules (SM205020)  Create a schedule as follows: Select the  Configuration > Email >  Schedule > Send and Receive                         Email (SM507010)  form in the  Screen ID                      box. Provide the description of the schedule. Select the start and expiration dates for the schedule, or specify the maximum                     number of executions. Specify how often the operation should be performed. For details, see  Mail Sending and Receipt and  To Schedule Processing. Scheduled Processing 7 Create synchronization policies  ([~/?ScreenId=SM204010|SM204010]) Exchange Synchronization Policies (SM204010) For each policy, specify the following: Policy name Category name and color Record types that should be synchronized Synchronization direction If you synchronize contacts, the folder for synchronized contacts If you synchronize emails, the folder for synchronized emails and specify                     other options Employee email accounts to be synchronized See  To Add a Synchronization Policy. Exchange Integration 8 Set up integration with Exchange Server  ([~/?ScreenId=SM204015|SM204015]) Exchange Server Configuration (SM204015) Configure synchronization between your Microsoft Exchange Server and the                   Acumatica ERP instance. See  To Set Up a Connection with an Exchange Server. Exchange Integration 9 Set up automatic synchronization with Exchange Server  ([~/?ScreenId=SM204030|SM204030]) Exchange Synchronization Process (SM204030)  For the selected exchange server and each policy, select the employees and click                      Add Schedule . Specify the schedule name and the settings                   you want to use for automatic synchronization.  See  To Set Up Automatic Synchronization with Exchange Server. Scheduled Processing and Exchange Integration  You can print  Email Configuration Checklist and refer to it when you         configure the Email module.  ]]></column>
		</row>
		<row PageID="022fd54b-71a3-4515-a2af-092e509150fb" Language="en-US" PageRevisionID="1" Content="&#xA;This chapter describes the process of configuring users in Acumatica ERP. &#xA;==Prerequisites and Dependencies==There are no prerequisites for configuring users, however, create user accounts for employees and users not participating in the implementation process after you configured at least the Finance suite and became familiar with the functionality of modules and forms in these modules.&#xA;==In This Chapter==[anchor|#ul_psd_y3m_3h]&#xA;*[HelpRoot_Implement\US_Preparation|Users: Preparation]: Describes what data should be collected, arranged, and analyzed before you can configure users.&#xA;*[HelpRoot_Implement\US_Configuration|Users: Configuration]: Guides you through the actual configuration of the user accounts and roles.&#xA;" PlainText="Configuring Users This chapter describes the process of configuring users in  Acumatica ERP.  Prerequisites and Dependencies There are no prerequisites for configuring    users, however, create user accounts for employees and users not participating in the    implementation process after you configured at least the Finance suite and became familiar with    the functionality of modules and forms in these modules. In This Chapter Users: Preparation: Describes what data should be collected, arranged, and      analyzed before you can configure users. Users: Configuration: Guides you through the actual configuration of the      user accounts and roles. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="78710018-6847-51ea-1dcf-12f2709317ab" RecordSourceID="22377" />
		<row PageID="fc17a2c6-9949-4099-b3c2-62956e4f9324" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="11b27eca-acd3-54b2-8f0b-11d52e581da0" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
Once you have finished configuring the modules of the Finance suite, you are ready to start configuring users. This topic covers the preparation that you have to perform before you begin configuring the users in Acumatica ERP. Complete the following tasks before you actually start configuring the system. [anchor|#table_rpw_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Decide on integration with Active Directory or another system'''
| 
Consider whether you want to integrate Acumatica ERP with Microsoft Active Directory (AD) or Microsoft Azure Active Directory (Azure AD), so that your organization can maintain user accounts and password policies at the domain level. {br}

Identify any domain users that do not need access to Acumatica ERP. Also, review any user groups to be mapped to user roles in Acumatica ERP.{br}

For more information, see [HelpRoot_Integration\US__con_Integration_with_Active_Directory|Integration with Active Directory] and [HelpRoot_Integration\US__con_AzureAD_Integration|Integration with Azure Active Directory].
|- 
| '''Develop a convention for logins (usernames)'''
| 
Each user of Acumatica ERP must have a unique login (''username''). If Acumatica ERP is integrated with Active Directory (AD), consider using domain logins as users&rsquo; logins to Acumatica ERP. Then domain users can sign in to Acumatica ERP by using their domain logins and passwords, with password and login policy set at the domain level.{br}

If no integration is planned, develop a convention for creating logins in Acumatica ERP.
|- 
| '''Prepare a list of users'''
| 
Prepare a list of individuals (employees and possibly external staff, such as consultants) who will need to access and use Acumatica ERP. For each user, list the following information:[anchor|#ul_o1x_yl2_1s]
*The name of the user.
*The login to be used to access the system.
*The email address of the user.
*The initial password.
*Password options. Decide whether to apply the following options for the user:
**Allow password recovery if the user provides an answer to a question maintained in his or her profile.
**Allow password changes. When users change their passwords regularly, their accounts are more secure.
**Permit the user to have a never-expiring password. This option is normally cleared for all users, but in rare instances, you might want to allow it for a particular user.
**Force the user to change the password on the next login. This option is normally selected for new users.
*The user&rsquo;s job responsibilities. List the duties the user performs on a regular basis, such as creating invoices, generating statements, and collecting payments; sometimes employees with the same job title actually have different responsibilities. Users&rsquo; responsibilities are used to define the roles they belong to.
*Optional: IP addresses from which the user may access the system.

For more information, see [HelpRoot_Administration\US__con_User_Accounts|User Accounts in Acumatica ERP].
|- 
| '''Design user roles'''
| 
Analyze the responsibilities of individual users and identify typical sets of related duties, which you will define in Acumatica ERP as roles that can be shared by multiple users. In the system, access is defined for roles rather than for individual users. {br}

For each identified role, plan the following: [anchor|#ul_wcx_yl2_1s]
*Role name.
*Description.
*List of users who will be assigned to the role.
*List of Acumatica ERP modules, forms, and reports that the users with the role may access. Also, determine the level of access to modules (''Granted'', ''View Only'', or ''Revoked'') and to forms (''Delete'', ''Edit'', ''View Only'', or ''Revoked'') that you will assign.

 Access can be controlled not only for forms but also for individual elements and actions on forms. Defining such access, however, can quickly become time-consuming. During implementation, we recommend that you define roles only at the module and form levels, and fine-tune the access, if needed, after the start of actual operations. ((({S:Hint}In addition to controlling access to Acumatica ERP functionality by roles, you can control access to particular GL accounts and customer and vendor accounts by using ''restriction groups''. For more information, see [HelpRoot_Administration\SM__con_Overview_of_Restriction_Groups|Restriction Groups in Acumatica ERP].
)))
For more details about roles and their access rights, see [HelpRoot_Administration\SM__con_Role-Based_Access|Role-Based Access], [HelpRoot_Administration\SM__con_Roles_and_Access_Rights|Levels of Access Rights], and [HelpRoot_Administration\SM__con_Role_Configuration|Access Rights for Roles]. 
|- 
| '''Plan user types'''
| 
If you are going to implement Self-Service Portal, create user types to group the roles created for internal users and the roles intended for external users (the users of Self-Service Portal). For more information, see [HelpRoot_Administration\US__con_User_Accounts#_775858a7-972a-4226-ac5d-7e74ae894419|User Types].{br}

Identifiers for user types can be Unicode strings of up to 50 characters. 
|- 
| '''Redefine security and audit policies'''
| 
If no AD integration is planned, review your security and audit options, which will affect all local users, as follows: [anchor|#ul_tkd_yrp_bs]
*Decide whether to require password complexity. Complex passwords include at least three of these four features: 
**Uppercase letters
**Lowercase letters
**Numbers
**Special symbols
*Decide whether to force users to change passwords and how often.
*Determine whether to apply a mask in addition to other password restrictions. This mask involves excluding characters that may not be supported by the involved systems. Use this option only when it&rsquo;s absolutely necessary. If you decide to use this mask, develop a message text to be displayed to the user when the password violates the validation mask.
* Determine whether to set up an account lock time and how many unsuccessful login attempts are allowed before users&rsquo; accounts will be locked.
*Decide how long you want to keep security audit logs and which of these security events should be logged: 
** Successful login attempt 
** Failed login attempt (this event should always be audited, because it helps you detect possible break-ins to the system)
** Logout 
** Session expiration 
** Screen access (the log will grow very fast if you log this event, so we recommend that you not do so)
** Successful sending of email 
** Failure sending email 

For more information, see [HelpRoot_Administration\SM__con_Site_Security_Options|Security Policies in Acumatica ERP].
|- 
| '''Review the security preferences'''
| 
Review the following security preferences that may be in place, and decide whether your current settings are those you will need in the live system: [anchor|#ul_hh3_typ_bs]
*'''Password Policy''': Decide on the maximum lifetime for user passwords, minimum password length, password complexity (whether it is required), additional validation mask (if required), and tip that the user will see if a new password doesn&rsquo;t meet the complexity requirements.
*'''Account Lockout Policy''': Decide on the maximum number of unsuccessful attempts, lockout time, and lockout counter reset time. 
*'''Audit policy''': Decide on the audited operations and the time to keep the audit history 
*'''Security Certificates:''' If you have not done this during the initial configuration, decide on the default certificate to be used for PDF signing and on the certificate to be used for encryption of the database.

|- 
| '''Decide on user access to branches'''
| 
This task is needed only if the ''Multiple Branch Support'' feature is enabled in your system on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. {br}

Decide which of the users will have access to all branches and which will access only a particular branch. You manage users&rsquo; ability to log in to a specific branch and view the branch data by using the branch access roles. {br}

If no role is assigned to any branch, all users have access to all the data. Once a role has been assigned to one of the branches, roles will be required to access other branches too, and a branch with no role assigned will be inaccessible to any user. {br}

Do not create access roles for branches in the following cases:[anchor|#ul_op3_rq4_ds]
*Your organization has only one branch.
*Your organization has more than one branch, but all users should have access to all branch-specific data.

For more information, see [HelpRoot_Organization\CS__con_Branch_Security_Administration|Security of Organization Branches].
|}
 You can print the [HelpRoot_ImplementChecklists\US_Preparation_Checklist|Users Preparation Checklist] and refer to it when you prepare to implement the User Security module. ]]></column>
			<column name="PlainText"><![CDATA[Users: Preparation Once you have finished configuring the modules of the Finance suite, you are ready to start     configuring users. This topic covers the preparation that you have to perform before you begin     configuring the users in  Acumatica ERP.     Complete the following tasks before you actually start configuring the system.  Task  Description Decide on integration with Active Directory or another system Consider whether you want to integrate  Acumatica ERP with Microsoft Active Directory (AD) or Microsoft Azure Active Directory (Azure AD), so          that your organization can maintain user accounts and password policies at the domain          level.  Identify any domain users that do not need access to  Acumatica ERP. Also, review any user groups to be mapped to user roles in  Acumatica ERP. For more information, see  Integration with Active Directory and  Integration with Azure Active Directory. Develop a convention for logins (usernames) Each user of  Acumatica ERP must have a unique login ( username ). If  Acumatica ERP is integrated with Active Directory (AD), consider using domain logins as users' logins          to  Acumatica ERP. Then domain users can sign in to  Acumatica ERP by using their domain logins and passwords, with password and login policy set at the          domain level. If no integration is planned, develop a convention for creating logins in  Acumatica ERP. Prepare a list of users Prepare a list of individuals (employees and possibly external staff, such as          consultants) who will need to access and use  Acumatica ERP. For each user, list the following information: The name of the user. The login to be used to access the system. The email address of the user. The initial password. Password options. Decide whether to apply the following options for the user: Allow password recovery if the user provides an answer to a question maintained in             his or her profile. Allow password changes. When users change their passwords regularly, their accounts             are more secure. Permit the user to have a never-expiring password. This option is normally cleared             for all users, but in rare instances, you might want to allow it for a particular             user. Force the user to change the password on the next login. This option is normally             selected for new users. The user's job responsibilities. List the duties the user performs on a regular basis,           such as creating invoices, generating statements, and collecting payments; sometimes           employees with the same job title actually have different responsibilities. Users'           responsibilities are used to define the roles they belong to. Optional: IP addresses from which the user may access the system. For more information, see  User Accounts in Acumatica ERP. Design user roles Analyze the responsibilities of individual users and identify typical sets of related          duties, which you will define in  Acumatica ERP as roles that can be shared by multiple users. In the system, access is defined for          roles rather than for individual users.  For each identified role, plan the following:  Role name. Description. List of users who will be assigned to the role. List of  Acumatica ERP modules, forms, and reports that the users with the role may access. Also, determine           the level of access to modules ( Granted ,  View Only , or  Revoked ) and           to forms ( Delete ,  Edit ,  View Only , or  Revoked ) that you will           assign.  Access can be controlled not only for forms but also for individual elements and actions          on forms. Defining such access, however, can quickly become time-consuming. During          implementation, we recommend that you define roles only at the module and form levels, and          fine-tune the access, if needed, after the start of actual operations.  In addition to controlling access to  Acumatica ERP functionality by roles, you can control access to particular GL accounts and customer          and vendor accounts by using  restriction groups . For more information, see  Restriction Groups in Acumatica ERP. For more details about roles and their access rights, see  Role-Based Access,  Levels of Access Rights, and  Access Rights for Roles.  Plan user types If you are going to implement  Self-Service Portal,          create user types to group the roles created for internal users and the roles intended for          external users (the users of  Self-Service Portal). For          more information, see  User Types. Identifiers for user types can be Unicode strings of up to 50 characters.  Redefine security and audit policies If no AD integration is planned, review your security and audit options, which will          affect all local users, as follows:  Decide whether to require password complexity. Complex passwords include at least three           of these four features:  Uppercase letters Lowercase letters Numbers Special symbols Decide whether to force users to change passwords and how often. Determine whether to apply a mask in addition to other password restrictions. This mask           involves excluding characters that may not be supported by the involved systems. Use this           option only when it's absolutely necessary. If you decide to use this mask, develop a           message text to be displayed to the user when the password violates the validation           mask.  Determine whether to set up an account lock time and how many unsuccessful login           attempts are allowed before users' accounts will be locked. Decide how long you want to keep security audit logs and which of these security events           should be logged:   Successful login attempt   Failed login attempt (this event should always be audited, because it helps you             detect possible break-ins to the system)  Logout   Session expiration   Screen access (the log will grow very fast if you log this event, so we recommend             that you not do so)  Successful sending of email   Failure sending email  For more information, see  Security Policies in Acumatica ERP. Review the security preferences Review the following security preferences that may be in place, and decide whether your          current settings are those you will need in the live system:  Password Policy : Decide on the maximum lifetime for user passwords, minimum           password length, password complexity (whether it is required), additional validation mask           (if required), and tip that the user will see if a new password doesn't meet the           complexity requirements. Account Lockout Policy : Decide on the maximum number of unsuccessful attempts,           lockout time, and lockout counter reset time.  Audit policy : Decide on the audited operations and the time to keep the audit           history  Security Certificates:  If you have not done this during the initial           configuration, decide on the default certificate to be used for PDF signing and on the           certificate to be used for encryption of the database. Decide on user access to branches This task is needed only if the  Multiple Branch Support  feature is enabled in your          system on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form.  Decide which of the users will have access to all branches and which will access only a          particular branch. You manage users' ability to log in to a specific branch and view the          branch data by using the branch access roles.  If no role is assigned to any branch, all users have access to all the data. Once a role          has been assigned to one of the branches, roles will be required to access other branches          too, and a branch with no role assigned will be inaccessible to any user.  Do not create access roles for branches in the following cases: Your organization has only one branch. Your organization has more than one branch, but all users should have access to all           branch-specific data. For more information, see  Security of Organization Branches.  You can print the  Users Preparation Checklist and refer to it when you     prepare to implement the User Security module.  ]]></column>
		</row>
		<row PageID="688d82af-33e3-4a9a-9251-bbec002b55c1" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c65fa12a-6a57-fff8-23c7-eeb65722c68f" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]
This topic will guide you through the process of configuring the users of Acumatica ERP. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform these tasks in the order in which they are listed.[anchor|#table_cmx_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Create user roles'''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
Create the roles you identified during the preparation phase.{br}

For each role, specify the role name and description. 
|- 
| '''2'''
| 
 '''Configure role access'''{br}

 [HelpRoot_FormReference\SM_20_10_25|Access Rights by Role] ([~/?ScreenId=SM201025|SM201025])
| 
Set up each role&rsquo;s access rights for the suites that have been used in the implementation process (Organization, Configuration, Finance, and User Security) to specify the default levels of access rights to modules of the suites. Configure each role&rsquo;s access rights to each module and its forms as follows: [anchor|#ol_xq1_scl_hl]
*If the new role should have the ''Revoked'' level of access rights to most forms in the module:
*#Specify the ''Revoked'' level of access rights to the module; this will set the ''Revoked'' access rights to all forms in the module.
*#Specify more permissive levels of access (''Delete'', ''Edit'', or ''View Only'') to certain forms of the module, as planned. 
*#Change the level of access rights to the module to ''Granted''.
*If the new role should have the ''Delete'' level of access to most forms in the module, do the following: 
*#Specify the ''Granted'' level of access rights to the module—the role will inherit the ''Delete'' level of access to all the forms of the module.
*#Specify the ''Revoked'' level of access rights to the forms to which the role should not have access.
*#If needed, select other levels of access rights (''Edit'' or ''View Only'') to other forms of the module as planned. 

If necessary, set up access rights for the form elements. {br}

See [HelpRoot_Administration\SM__con_Role_Configuration|Access Rights for Roles].
|- 
| '''3'''
| 
 '''Create user types'''{br}

 [HelpRoot_FormReference\EP_20_25_00|User Types] ([~/?ScreenId=EP202500|EP202500])
| 
If you are going to use the Self-Service Portal, do the following:[anchor|#ul_e22_c5z_1t]
*Create at least two user types: one to group the default roles created for internal users, and another to group the default roles intended for external users (the users of Self-Service Portal).
*Assign the default roles to the user types.

|- 
| '''4'''
| 
 '''Redefine the security preferences'''{br}

 [HelpRoot_FormReference\SM_20_10_60|Security Preferences] ([~/?ScreenId=SM201060|SM201060])
| 
Update the security settings with those you will need in the live system: [anchor|#ul_hh3_typ_bs]
*'''Password Policy''': Specify the maximum lifetime for user passwords, minimum password length, password complexity (whether it is required), additional validation mask (if required), and the tip that the user will see if a new password doesn&rsquo;t meet the complexity requirements.
*'''Account Lockout Policy''': Specify the maximum number of unsuccessful attempts, lockout time, and lockout counter reset time. 
*'''Audit policy''': Specify the audited operations and the time to keep the audit history. 
*'''Security Certificates:''' If you have not done this during the initial configuration, specify the certificates, the default certificate to be used for PDF signing, and the certificate to be used for encryption of the database.

|- 
| '''5'''
| 
 '''Create user accounts'''{br}

 [HelpRoot_FormReference\SM_20_10_10|Users] ([~/?ScreenId=SM201010|SM201010])
| 
If no AD integration is planned, create user accounts as planned: [anchor|#ul_kjy_yl2_1s]
*Enter the appropriate username, first name, last name, and email address.
*Type a login.
*Enter the initial user password. Select the '''Force User to Change Password on Next Log in''' check box to the right of this box if you want the user to change this password when logging in to the system.
*Optional: Type a '''Comment''' to the user account.
*Set the password options as follows:
**'''Allow Password Recovery''': Select if the user can reset his or her password by answering a recovery question.
**'''Allow Password Changes''': Select if the user is allowed to change his or her password anytime.
**'''Password Never Expires''': Select if the password should never expire.
*Activate the account.
*Optional: In the '''IP Filter''' tab, add IP addresses from which the user is allowed to access the system. Do not add anything here if the user has no such restrictions.
*On the '''Membership''' tab, add the roles of the user.

|- 
| '''6'''
| 
 '''Enable integration with Active Directory'''{br}

{{web.config }}
| 
Enable the integration between Acumatica ERP and Active Directory. {br}

For details, see [HelpRoot_Integration\US__how_Active_Directory_Integration__Enable|To Enable Active Directory Integration] or [HelpRoot_Integration\US__how_ADFS_Enable_Integration|To Enable AD FS Integration with Acumatica ERP].
|- 
| '''7'''
| 
 '''Map AD groups to user roles '''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
Map user roles to user groups available in Active Directory. Note that new AD users will get access to Acumatica ERP automatically depending on the AD group to which they are assigned.{br}

See [HelpRoot_Integration\US__how_Active_Directory_Integration__Map_Roles|To Map Active Directory Groups to Roles in Acumatica ERP] or [HelpRoot_Integration\US__how_ADFS_map_claims|To Map AD FS Claims to Roles in Acumatica ERP].
|- 
| '''8'''
| 
 '''Assign roles to AD users'''{br}

 [HelpRoot_FormReference\SM_20_10_10|Users] ([~/?ScreenId=SM201010|SM201010])
| 
Once the integration between Acumatica ERP and AD has been activated, assign to the users whose accounts were created automatically due to integration the roles that have not been mapped to AD groups.
|- 
| '''9'''
| 
 '''Create branch access roles'''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
(This task is needed only if the ''Multiple Branch Support'' feature is enabled in your system.){br}

For each branch access role, specify the following:[anchor|#ul_lvr_cdf_ft]
*A role name and description that clearly indicates the branch
*The list of users who should have access to the branch data
{br}

See [HelpRoot_Organization\CS__con_Branch_Security_Administration|Security of Organization Branches].
|- 
| '''10'''
| 
 '''Assign branch access roles to branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
(This task is needed only if the ''Multiple Branch Support'' feature is enabled in your system.){br}

Assign to each branch one of the branch roles you have created, which would allow the users to access the data associated with this branch. The roles should be assigned to all branches because once a role is assigned to one of the branches, roles will be required to access other branches too, and a branch with no role assigned will be inaccessible to any user. 
|}
 You can print the [HelpRoot_ImplementChecklists\US_Conf_Checklist|Users Configuration Checklist] and refer to it when you configure the User Security module. ]]></column>
			<column name="PlainText"><![CDATA[Users: Configuration This topic will guide you through the process of configuring the users of  Acumatica ERP. Due to dependencies between the forms, the sequence of actions during configuration is         critical, so you need to perform these tasks in the order in which they are listed. No. Task  Description 1 Create user roles  ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005) Create the roles you identified during the preparation phase. For each role, specify the role name and description.   2 Configure role access  ([~/?ScreenId=SM201025|SM201025]) Access Rights by Role (SM201025) Set up each role's access rights for the suites that have been used in the                   implementation process (Organization, Configuration, Finance, and User Security)                   to specify the default levels of access rights to modules of the suites. Configure                   each role's access rights to each module and its forms as follows:  If the new role should have the  Revoked  level of access rights to most                     forms in the module: Specify the  Revoked  level of access rights to the module; this will                         set the  Revoked  access rights to all forms in the module. Specify more permissive levels of access ( Delete ,  Edit , or                            View Only ) to certain forms of the module, as planned.  Change the level of access rights to the module to  Granted . If the new role should have the  Delete  level of access to most forms in                     the module, do the following:  Specify the  Granted  level of access rights to the module—the role                         will inherit the  Delete  level of access to all the forms of the                         module. Specify the  Revoked  level of access rights to the forms to which                         the role should not have access. If needed, select other levels of access rights ( Edit  or  View                           Only ) to other forms of the module as planned.  If necessary, set up access rights for the form elements.  See  Access Rights for Roles. 3 Create user types  ([~/?ScreenId=EP202500|EP202500]) User Types (EP202500) If you are going to use the  Self-Service Portal, do the following: Create at least two user types: one to group the default roles created for                     internal users, and another to group the default roles intended for external                     users (the users of  Self-Service Portal). Assign the default roles to the user types. 4 Redefine the security preferences  ([~/?ScreenId=SM201060|SM201060]) Security Preferences (SM201060) Update the security settings with those you will need in the live system:  Password Policy : Specify the maximum lifetime for user passwords,                     minimum password length, password complexity (whether it is required),                     additional validation mask (if required), and the tip that the user will see if                     a new password doesn't meet the complexity requirements. Account Lockout Policy : Specify the maximum number of unsuccessful                     attempts, lockout time, and lockout counter reset time.  Audit policy : Specify the audited operations and the time to keep the                     audit history.  Security Certificates:  If you have not done this during the initial                     configuration, specify the certificates, the default certificate to be used for                     PDF signing, and the certificate to be used for encryption of the database. 5 Create user accounts  ([~/?ScreenId=SM201010|SM201010]) Users(SM201010) If no AD integration is planned, create user accounts as planned:  Enter the appropriate username, first name, last name, and email address. Type a login. Enter the initial user password. Select the  Force User to Change Password                       on Next Log in  check box to the right of this box if you want the user to                     change this password when logging in to the system. Optional: Type a  Comment  to the user account. Set the password options as follows: Allow Password Recovery : Select if the user can reset his or her                         password by answering a recovery question. Allow Password Changes : Select if the user is allowed to change his                         or her password anytime. Password Never Expires : Select if the password should never                         expire. Activate the account. Optional: In the  IP Filter  tab, add IP addresses from which the user is                     allowed to access the system. Do not add anything here if the user has no such                     restrictions. On the  Membership  tab, add the roles of the user. 6 Enable integration with Active Directory web.config  Enable the integration between  Acumatica ERP and Active Directory.  For details, see  To Enable Active Directory Integration or  To Enable AD FS Integration with Acumatica ERP. 7 Map AD groups to user roles   ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005) Map user roles to user groups available in Active Directory. Note that new AD                   users will get access to  Acumatica ERP automatically depending on the AD group to which they are assigned. See  To Map Active Directory Groups to Roles in Acumatica ERP or                      To Map AD FS Claims to Roles in Acumatica ERP. 8 Assign roles to AD users  ([~/?ScreenId=SM201010|SM201010]) Users(SM201010) Once the integration between  Acumatica ERP and AD has been activated, assign to the users whose accounts were created                   automatically due to integration the roles that have not been mapped to AD                   groups. 9 Create branch access roles  ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005) (This task is needed only if the  Multiple Branch Support  feature is                   enabled in your system.) For each branch access role, specify the following: A role name and description that clearly indicates the branch The list of users who should have access to the branch data See  Security of Organization Branches. 10 Assign branch access roles to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) (This task is needed only if the  Multiple Branch Support  feature is                   enabled in your system.) Assign to each branch one of the branch roles you have created, which would allow                   the users to access the data associated with this branch. The roles should be                   assigned to all branches because once a role is assigned to one of the branches,                   roles will be required to access other branches too, and a branch with no role                   assigned will be inaccessible to any user.   You can print the  Users Configuration Checklist and refer to it when you configure         the User Security module.  ]]></column>
		</row>
		<row PageID="79666a55-0061-4666-9988-f9ec06e55f2c" Language="en-US" PageRevisionID="1" Content="This chapter describes the process of configuring non-stock items in Acumatica ERP in case the inventory and order management functionality is not used in the implementation.[anchor|#1]&#xA;==Prerequisites and Dependencies==&#xA;You can configure non-stock items any time after you have configured the General Ledger and Taxes modules. ((({S:Hint}If you plan to use the inventory and order management functionality, do not configure non-stock items separately (as described in this topic)—they should be configured along with stock items in the process of implementing the Inventory module.&#xA;)))&#xA;==In This Chapter==[anchor|#ul_psd_y3m_3h]&#xA;*[HelpRoot_Implement\NS_Preparation|Non-Stock Items: Preparation]: Describes what data should be collected, arranged, and analyzed before you can configure non-stock items.&#xA;*[HelpRoot_Implement\NS_Configuration|Non-Stock Items: Configuration]: Guides you through the actual configuration of non-stock items.&#xA;" PlainText="Configuring Non-Stock Items This chapter describes the process of configuring non-stock items in  Acumatica ERP in    case the inventory and order management functionality is not used in the    implementation. Prerequisites and Dependencies You can configure non-stock items any time after you have configured the General Ledger and     Taxes modules.  If you plan to use the inventory and order management functionality, do not      configure non-stock items separately (as described in this topic)—they should be configured      along with stock items in the process of implementing the Inventory module. In This Chapter Non-Stock Items: Preparation: Describes what data should be collected, arranged, and      analyzed before you can configure non-stock items. Non-Stock Items: Configuration: Guides you through the actual configuration of      non-stock items. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c8fcc710-1431-761c-11f4-6d38992d2621" RecordSourceID="22377" />
		<row PageID="c741b1c5-801f-4386-b58d-7cd8d9fd779b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="31bf48ba-504a-ca72-1a79-8ecd54b079ca" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This topic covers the preparation that you have to perform before you begin configuring non-stock items in Acumatica ERP. Complete the following tasks before you actually start configuring the system. [anchor|#table_lyn_4w2_4s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Plan identifiers for non-stock items'''
| 
Decide how the ''INVENTORY'' segmented key, which defines the structure of inventory IDs, should be configured: how many segments it should have, what the length of each segment is, which segments should be validated (and for validated segments, which values are valid), and whether auto-numbering should be used for one of the segments.{br}

By default, the ''INVENTORY'' key has one segment with 10 characters.
|- 
| '''Plan the non-stock items to be defined'''
| 
List all the non-stock items to be defined to the system, which are the following:[anchor|#ul_ib1_c2v_2t]
*All per-hour rates (for work hours and overtime) you will need to calculate employee compensation for case activities that employees will list on time sheets and time cards
*The default labor rates and overtime labor rates to be used for all employees on projects, if the ''Project Accounting'' feature is enabled in your system on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form
*The services and warranties your organization purchases from vendors
*The services and warranties your organization sells to customers
*Various expenses and charges that your organization may incur
Also, prepare the following information for each listed item:[anchor|#ul_xly_xqp_ps]
*Type of non-stock item (''Labor'', ''Service'', ''Charge'', ''Expense'', or ''Non-Stock'')
*Unit of measure
*Sales account (and sales subaccount)
*Expense account (and sales subaccount)
*Expense accrual account (and expense subaccount)
*Purchase price variance account (and purchase price variance subaccount)
*Tax category (if integration with Avalara is not configured) 

For more information on non-stock items, see [HelpRoot_InvMgmt\IN__con_Non-Stock_Item_Support|Non-Stock Items in the Inventory Module].
|- 
| '''Plan units of measure'''
| 
List the units of measure that are needed for the planned non-stock items; specify the conversions between the listed units. {br}

See [HelpRoot_InvMgmt\IN__con_Units_of_Measure_and_Conversions|Units of Measure and Conversions].
|- 
| '''Decide on using attributes for non-stock items'''
| 
 Decide on attributes you may want to add to further categorize particular non-stock items, if any. For example, an attribute to be used for items might be any property of the service or warranty you sell or purchase. {br}

For each attribute, plan the following:[anchor|#ul_gps_cxb_lt]
*The name
*The type of control (free text, masked text, date/time, check box, or combo box)
*Whether it is required
*The values (if the attribute is a combo box)
{br}

For more information, see [HelpRoot_Administration\CS__con_Attributes|Attributes] and [HelpRoot_InvMgmt\IN__con_Inventory_Item_Attributes|Inventory Item Attributes].
|- 
| '''Plan item price classes'''
| Design item classes that you will use in item pricing, and group the items whose prices should be calculated similarly.
|- 
| '''Design item classes'''
| 
Group items in item classes by their type, price class, tax category, and applicable attributes. {br}

Create a naming convention for the item class identifiers. By default, an identifier may be a string of up to 10 unicode characters.
|- 
| '''Consider creating an import scenario for non-stock items'''
| If you have fewer than 15 to 20 non-stock items, you can create these items manually during configuration. However, if you have a considerable number of non-stock items in your legacy system, consider creating an import scenario, as described in [HelpRoot_Integration\IS__con_Simplified_Import_Scenarios|Simplified Scenarios for Data Import]. Review the records in the legacy system and remove the obsolete records.
|}
 You can print [HelpRoot_ImplementChecklists\NS_Preparation_Checklist|Non-Stock Items Preparation Checklist] and refer to it when you prepare to define non-stock items. ]]></column>
			<column name="PlainText"><![CDATA[Non-Stock Items: Preparation This topic covers the preparation that you have to perform before you begin configuring     non-stock items in  Acumatica ERP.     Complete the following tasks before you actually start configuring the system.  Task  Description Plan identifiers for non-stock items Decide how the  INVENTORY  segmented key, which defines the structure of inventory          IDs, should be configured: how many segments it should have, what the length of each          segment is, which segments should be validated (and for validated segments, which values          are valid), and whether auto-numbering should be used for one of the segments. By default, the  INVENTORY  key has one segment with 10 characters. Plan the non-stock items to be defined List all the non-stock items to be defined to the system, which are the          following: All per-hour rates (for work hours and overtime) you will need to calculate employee           compensation for case activities that employees will list on time sheets and time           cards The default labor rates and overtime labor rates to be used for all employees on           projects, if the  Project Accounting  feature is enabled in your system on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form The services and warranties your organization purchases from vendors The services and warranties your organization sells to customers Various expenses and charges that your organization may incur Also, prepare the following information for each listed item: Type of non-stock item ( Labor ,  Service ,  Charge ,  Expense ,           or  Non-Stock ) Unit of measure Sales account (and sales subaccount) Expense account (and sales subaccount) Expense accrual account (and expense subaccount) Purchase price variance account (and purchase price variance subaccount) Tax category (if integration with Avalara is not configured)  For more information on non-stock items, see  Non-Stock Items in the Inventory Module. Plan units of measure List the units of measure that are needed for the planned non-stock items; specify the          conversions between the listed units.  See  Units of Measure and Conversions. Decide on using  attributes for non-stock items  Decide on attributes you may want to add to further categorize particular non-stock          items, if any. For example, an attribute to be used for items might be any  property of the          service or warranty you sell or purchase.  For each attribute, plan the following: The name The type of control (free text, masked text, date/time, check box, or combo box) Whether it is required The values (if the attribute is a combo box) For more information, see  Attributes and  Inventory Item Attributes. Plan item price classes Design item classes that you will use in item pricing, and group the items whose         prices should be calculated similarly. Design item classes Group items in item classes by their type, price class, tax category, and applicable          attributes.  Create a naming convention for the item class identifiers. By default, an identifier may          be a string of up to 10 unicode characters. Consider creating an import scenario for non-stock items If you have fewer than 15 to 20 non-stock items, you can create these items manually         during configuration. However, if you have a considerable number of non-stock items in your         legacy system, consider creating an import scenario, as described in  Simplified Scenarios for Data Import. Review the records in the         legacy system and remove the obsolete records.  You can print  Non-Stock Items Preparation Checklist and refer to it when you prepare     to define non-stock items.  ]]></column>
		</row>
		<row PageID="ee86b0b2-8537-4402-954b-bf2a529ecfc8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="db7d7bc3-f29f-022e-c459-2e4b030a34c5" RecordSourceID="22377">
			<column name="Content"><![CDATA[This topic will guide you through the process of configuring the non-stock items that can be used in the modules of the Finance suite. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to follow the order of tasks.
==Prerequisites and Dependencies==
Non-stock items can be configured after you complete configuration of the Taxes module. Although, we recommend that you first configure the Organization Structure module so that you will be able to assign product workgroups and product managers to non-stock items.[anchor|#table_mxw_tw2_4s]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Update the predefined list of units of measure'''{br}

 [HelpRoot_FormReference\CS_20_31_00|Units of Measure] ([~/?ScreenId=CS203100|CS203100])
| 
Review the predefined units of measure (UOMs) and add the UOMs your organization will use for various non-stock items, including non-stock items of the ''Labor'' type. Define the conversion rules between the UOMs. 
|- 
| '''2'''
| 
 '''Configure the ''INVENTORY ''segmented key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
Specify how the inventory IDs should be structured: [anchor|#ul_wy3_2y2_4s]
*How many segments they should have
*What the length of each segment is
*Which segments should be validated (and for such segments, list the values)
*Whether auto-numbering should be used for one of the segments

By default, the inventory IDs are one-segment, 10-character strings.
|- 
| '''3'''
| 
 '''Add segment values for the ''INVENTORY ''key'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| 
If you have configured the ''INVENTORY'' segmented key with multiple segments, add segment values for the validated segments.
|- 
| '''4'''
| 
 '''Create attributes for non-stock items'''{br}

 [HelpRoot_FormReference\CS_20_50_00|Attributes] ([~/?ScreenId=CS205000|CS205000])
| 
Create attributes to further categorize particular non-stock items. For each attribute, specify what type of control should be used, what values can be used (if it is a combo box), and whether the attribute is required. 
|- 
| '''5'''
| 
 '''Create item price classes'''{br}

 [HelpRoot_FormReference\IN_20_90_00|Item Price Classes] ([~/?ScreenId=IN209000|IN209000])
| Create the planned item price classes. For price class identifiers, strings of up to 10 characters may be used.
|- 
| '''6'''
| 
 '''Create item classes'''{br}

 [HelpRoot_FormReference\IN_20_10_00|Item Classes] ([~/?ScreenId=IN201000|IN201000])
| Create the planned item classes. For each class, specify its identifier, description, type of non-stock items, price class, tax category, and attributes. For class identifiers, strings of up to 10 characters may be used.
|- 
| '''7'''
| 
 '''Create non-stock items'''{br}

 [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000]) 
| 
If you have a relatively small number of non-stock items, create the non-stock items manually. Make sure that you specify the following details for each non-stock item:[anchor|#ul_bpj_vcf_4s]
*Inventory ID, which must be based on the structure of the ''INVENTORY'' segmented key 
*Description that includes all information about the item that is required on invoices
*The ''Active'' status—only active items can be selected for transactions
*Item class
*One of the following types: ''Non-Stock Item'', ''Labor, Service, Charge'', or'' Expense ''
*The base unit of measure
*The default price for the base unit of the item (optional)
*Default vendor
*GL accounts (and subaccounts)
*Tax category
*Attribute values
*Whether the item is subjected to sales commission

|- 
| '''8'''
| 
 '''Create an import scenario for non-stock items'''{br}

(Optional){br}

[HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
If you have many non-stock items in a legacy system, create an import scenario. Make sure that the source file includes at least the following details for each non-stock item: [anchor|#ul_qby_qcf_4s]
*Inventory ID, which must be based on the structure of the'' INVENTORY'' segmented key
*Description of the item
*Item class, to provide the default values for some other settings
*Optionally, the default cost and price

For details, see [HelpRoot_Integration\IS__mng_Configuring_Import_Scenarios|Configuring Import Scenarios].
|- 
| '''9'''
| 
 '''Import non-stock items'''{br}

(Optional){br}

[HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
Before you import item records by using the developed import scenario, review the source data to make sure that all the data matches the formats defined in the scenario. {br}

To test the scenario, import only a few records and make sure that valid records have been created. After that, import all the records.{br}

If the item has settings that differ from those of the class, assign the settings after import is completed. 
|}
 You can print [HelpRoot_ImplementChecklists\NS_Conf_Checklist|Non-Stock Items Configuration Checklist] and refer to it when you configure non-stock items. ]]></column>
			<column name="PlainText"><![CDATA[Non-Stock Items: Configuration This topic will guide you through the process of configuring the non-stock items that       can be used in the modules of the Finance suite. Due to dependencies between the forms, the       sequence of actions during configuration is critical, so you need to follow the order of         tasks. Prerequisites and Dependencies Non-stock items can be configured         after you complete configuration of the Taxes module. Although, we recommend that you first         configure the Organization Structure module so that you will be able to assign product         workgroups and product managers to non-stock items. No. Task  Description 1 Update the predefined list of units of measure  ([~/?ScreenId=CS203100|CS203100]) Units of Measure (CS203100) Review the predefined units of measure (UOMs) and add the UOMs your organization                   will use for various non-stock items, including non-stock items of the                      Labor  type. Define the conversion rules between the UOMs.  2 Configure the  INVENTORY  segmented key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Specify how the inventory IDs should be structured:  How many segments they should have What the length of each segment is Which segments should be validated (and for such segments, list the                     values) Whether auto-numbering should be used for one of the segments By default, the inventory IDs are one-segment, 10-character strings. 3 Add segment values for the  INVENTORY  key  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) If you have configured the  INVENTORY  segmented key with multiple segments,                   add segment values for the validated segments. 4 Create attributes for non-stock items  ([~/?ScreenId=CS205000|CS205000]) Attributes (CS205000) Create attributes to further categorize particular non-stock items. For each                   attribute, specify what type of control should be used, what values can be used                   (if it is a combo box), and whether the attribute is required.  5 Create item price classes  ([~/?ScreenId=IN209000|IN209000]) Item Price Classes (IN209000) Create the planned item price classes. For price class identifiers, strings of                 up to 10 characters may be used. 6 Create item classes  ([~/?ScreenId=IN201000|IN201000]) Item Classes (IN201000) Create the planned item classes. For each class, specify its identifier,                 description, type of non-stock items, price class, tax category, and attributes. For                 class identifiers, strings of up to 10 characters may be used. 7 Create non-stock items  ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items (IN202000)  If you have a relatively small number of non-stock items, create the non-stock                   items manually. Make sure that you specify the following details for each                   non-stock item: Inventory ID, which must be based on the structure of the  INVENTORY                      segmented key  Description that includes all information about the item that is required on                     invoices The  Active  status—only active items can be selected for                     transactions Item class One of the following types:  Non-Stock Item ,  Labor, Service,                       Charge , or  Expense  The base unit of measure The default price for the base unit of the item (optional) Default vendor GL accounts (and subaccounts) Tax category Attribute values Whether the item is subjected to sales commission 8 Create an import scenario for non-stock items (Optional)  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  If you have many non-stock items in a legacy system, create an import scenario.                   Make sure that the source file includes at least the following details for each                   non-stock item:  Inventory ID, which must be based on the structure of the  INVENTORY                      segmented key Description of the item Item class, to provide the default values for some other settings Optionally, the default cost and price For details, see  Configuring Import Scenarios. 9 Import non-stock items (Optional)  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  Before you import item records by using the developed import scenario, review the                   source data to make sure that all the data matches the formats defined in the                   scenario.  To test the scenario, import only a few records and make sure that valid records                   have been created. After that, import all the records. If the item has settings that differ from those of the class, assign the settings                   after import is completed.   You can print  Non-Stock Items Configuration Checklist and refer to it when you         configure non-stock items.  ]]></column>
		</row>
		<row PageID="cf6176b0-d731-462f-8023-6038badc4ffa" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7adf4700-7d12-6564-995f-046ed95fbf23" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter describes the process of implementing the Organization Structure module in Acumatica ERP. {br}

The Organization Structure module provides the functionality to let you effectively manage employees of your organization. The Organization Structure module also lets you configure automatic assignment of documents for approval and assignment of orders for processing. For detailed descriptions of Organization Structure forms and capabilities, see the [HelpRoot_Organization\OS_00_00_00|Organization Structure] chapter of the Organization guide.[anchor|#1]
==Prerequisites and Dependencies==
If you are not going to use the inventory and order management functionality, you must configure the General Ledger, Cash Management, and Accounts Payable modules before you implement the Organization Structure module. {br}

If you plan to use the inventory and order management functionality, proceed with configuring the inventory and order management functionality (at least, configure the Inventory module) and then, configure the Organization Structure module. 
==In This Chapter==[anchor|#ul_qjy_jjn_cs]
*[HelpRoot_Implement\OS_Preparation|Organization Structure: Preparation]: Describes data you should collect, arrange, and analyze.
*[HelpRoot_Implement\OS_Configuration|Organization Structure: Configuration]: Guides you through the actual configuration of the Organization Structure module.
]]></column>
			<column name="PlainText"><![CDATA[Configuring Organization Structure This chapter describes the process of implementing the Organization Structure module in  Acumatica ERP.  The Organization Structure module provides the functionality to let you effectively manage     employees of your organization. The Organization Structure module also lets you configure     automatic assignment of documents for approval and assignment of orders for processing. For     detailed descriptions of Organization Structure forms and capabilities, see the   ([~/?ScreenId=OS000000|OS000000]) Organization Structure chapter of the Organization guide. Prerequisites and Dependencies If you are not going to use the inventory and order management functionality, you must     configure the General Ledger, Cash Management, and Accounts Payable modules before you implement     the Organization Structure module.  If you plan to use the inventory and order management functionality, proceed with configuring     the inventory and order management functionality (at least, configure the Inventory module) and     then, configure the Organization Structure module.  In This Chapter Organization Structure: Preparation: Describes data you should collect, arrange, and      analyze. Organization Structure: Configuration: Guides you through the actual configuration of the      Organization Structure module. ]]></column>
		</row>
		<row PageID="90b75941-8444-4fdd-950b-d4f05a403c96" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="076a699a-ae4e-0b1c-e200-22d8c04ab326" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
This section covers the preparation that you have to perform before you begin configuring the Organization Structure module in Acumatica ERP. When you have completed configuring the General Ledger, the Accounts Payable, and the taxes modules, you are ready to start configuring employees. Complete the following tasks before you actually start configuring the system. [anchor|#table_rpw_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Design employee identifiers'''
| Depending on what you decided earlier in the implementation process, proceed as follows:. [anchor|#ul_ghs_ktj_cs]
*If you decided to use the ''BIZACCT'' segmented key directly to define employee identifiers, prepare a list of employee-specific segment values (for the ''BIZACCT'' segments to be validated). 
*If you decided to use the ''EMPLOYEE'' segmented key, prepare a list of values for segments that should be validated and plan the numbering sequence for the auto-numbered segment (if applicable).

For additional information, see [HelpRoot_Administration\CS__con_Business_Accounts_Identifiers|Business Account Identifiers] and [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers]. 
|- 
| '''Collect employee information'''
| 
Create a list of employees who should have access to the system. For each employee, collect the following information: [anchor|#ul_o3j_1g1_ws]
*Full name, address, phone number, date of birth
*Hire date, position, department
*Duties (tasks) the employee performs in each module
*Branch or branches to which the employee should have access 
*Work hours, and time zone from which the employee works
*Currency the employee is paid in, and rate type used for payments to the employee
*Cash account and payment method
*Frequency with which the employee is paid
*Employment type and salary or hourly rate
*Regular and overtime rates used to pay the employee
*Employee IDs if you do not plan to use an auto-numbering for one of the segments
*User account

|- 
| '''Design any attributes you want to track for employees'''
| 
 Design attributes you may want to add to further categorize particular employees, if any. For example, an attribute to be used for employees might be gender, education, number of children, marital status, or any other additional information. {br}

For each attribute, plan the following:[anchor|#ul_gps_cxb_lt]
*What its name will be
*What type of control will be used (free text, masked text, date/time, check box, or combo box)
*Whether it is required
*What values can be selected (if the attribute is a combo box)

|- 
| '''Create the list of departments'''
| 
Create a list of departments by using the information compiled in the list of employees, and check with human resources personnel to make sure this list is complete. In Acumatica ERP, departments are used for informational purposes only. {br}

Plan identifiers for departments (up to 10 unicode characters). 
|- 
| '''Create the list of positions'''
| 
 Create a list of positions by using the employee information; check with human resources personnel to be sure the list is complete. {br}

Plan identifiers for positions (up to 10 unicode characters). 
|- 
| '''Decide on work calendars'''
| 
Determine which calendars are used in your organization. For each calendar, write down the following: [anchor|#ul_oyn_mmc_lt]
*Calendar ID (alphanumeric string of up to 10 characters) and description (alphanumeric string of up to 60 characters)
*Work hours during each week
*Time zone
*Exceptions

For more information, see [HelpRoot_Organization\EP__con_Multiple_Calendar_Support|Support of Multiple Work Calendars].
|- 
| '''Plan credit terms'''
| 
Create a list of credit terms that will be needed to schedule payments to employees (to pay salaries or wages, or to reimburse expenses).
|- 
| '''Define payment methods and cash accounts'''
| 
 Determine the payment methods that are used to pay the employees when they are reimbursed for expenses, compensated for labor performed on contracts or projects, and paid commissions earned on sales. Plan the cash accounts to be used for these payments.{br}

 For information about payment methods, see [HelpRoot_Financials\CA__MNG_PaymentMethods|Managing Payment Methods].
|- 
| '''Design employee classes'''
| 
Group employees into employee classes based on similar settings: [anchor|#ul_jwk_rnc_lt]
*Currency of the payments 
*Cash account used to pay for their expenses, labor, and commissions 
*Accounts (and subaccounts) to record payments and prepayments to employees of the class 
*Credit terms

Plan identifiers for employee classes (as strings of up to 10 characters) and description (up to 50 characters).{br}

Decide which class will be defined as the default one; this class should have the settings that apply to the largest number of employees. 
|- 
| '''Design the company tree'''
| 
Determine whether you need approval workgroups, which would approve documents (such as for cash transactions, expense claims, or time cards), and product workgroups. If you need workgroups of any type, design the company tree as a hierarchy of workgroups.{br}

For more information, see [HelpRoot_Organization\EP__con_Assignment_Automation|Managing Assignment and Approval Maps] and [HelpRoot_Organization\EP__con_Company_Organizational_Chart|Company Tree and Workgroups].
|- 
| '''Design roles for the Organization Structure module'''
| 
 Analyze user responsibilities related to the management of employees, and identify each set of closely related duties that can be associated with a role in Acumatica ERP. These duties might include the following: [anchor|#ul_ubt_wpf_1s]
*Entering expense claims and time cards
*Creating employee accounts
*Approving expense claims and time cards
*Releasing expense claims and time cards
*Maintaining departments and positions
*Maintaining the company tree and designing assignment and approval maps

For each role, plan the following: [anchor|#ul_sdt_wpf_1s]
*Role name and description
*List of users
*List of Acumatica ERP forms and reports that users with the role should be able to access

Access can be controlled not only for the forms and reports but also for the elements and actions on these forms and reports.{br}

For details about roles and access rights, see [HelpRoot_Administration\SM__con_Role-Based_Access|Role-Based Access] and [HelpRoot_Administration\SM__con_Roles_and_Access_Rights|Levels of Access Rights].
|- 
| '''Decide whether to import employee accounts'''
| 
Decide whether you need to import the employee accounts from your legacy system or you will create them by entering each employee&rsquo;s specific information and selecting the employee class. {br}

If you are going to import them, review the employee records in the legacy system and remove the obsolete records.{br}

See [HelpRoot_Integration\IS__con_Simplified_Import_Scenarios|Simplified Scenarios for Data Import].
|- 
| '''Decide on numbering sequences for expense claims and time cards'''
| 
Decide whether expense claims and time cards will be used in your organization. Decide on the numbering sequences to be used for documents of these types.
|}
 You can print [HelpRoot_ImplementChecklists\OS_Preparation_Checklist|Organization Structure Preparation Checklist] and refer to it when you prepare to implement the Organization Structure module. ]]></column>
			<column name="PlainText"><![CDATA[Organization Structure: Preparation This section covers the preparation that you have to perform before you begin configuring the     Organization Structure module in  Acumatica ERP.     When you have completed configuring the General Ledger, the Accounts Payable, and the taxes     modules, you are ready to start configuring employees. Complete the following tasks before you     actually start configuring the system.  Task  Description Design employee identifiers Depending on what you decided earlier in the implementation process, proceed as         follows:.  If you decided to use the  BIZACCT  segmented key directly to define employee           identifiers, prepare a list of employee-specific segment values (for the  BIZACCT            segments to be validated).  If you decided to use the  EMPLOYEE  segmented key, prepare a list of values for           segments that should be validated and plan the numbering sequence for the auto-numbered           segment (if applicable). For additional information, see  Business Account Identifiers and  Segmented Identifiers.  Collect employee information Create a list of employees who should have access to the system. For each employee,          collect the following information:  Full name, address, phone number, date of birth Hire date, position, department Duties (tasks) the employee performs in each module Branch or branches to which the employee should have access  Work hours, and time zone from which the employee works Currency the employee is paid in, and rate type used for payments to the employee Cash account and payment method Frequency with which the employee is paid Employment type and salary or hourly rate Regular and overtime rates used to pay the employee Employee IDs if you do not plan to use an auto-numbering for one of the segments User account Design any attributes you want to track for employees  Design attributes you may want to add to further categorize particular employees, if          any. For example, an attribute to be used for employees might be gender, education, number          of children, marital status, or any other additional information.  For each attribute, plan the following: What its name will be What type of control will be used (free text, masked text, date/time, check box, or            combo box) Whether it is required What values can be selected (if the attribute is a combo box) Create the list of departments Create a list of departments by using the information compiled in the list of employees,          and check with human resources personnel to make sure this list is complete. In  Acumatica ERP, departments are used for informational purposes only.  Plan identifiers for departments (up to 10 unicode characters).  Create the list of positions  Create a list of positions by using the employee information; check with human resources          personnel to be sure the list is complete.  Plan identifiers for positions (up to 10 unicode characters).  Decide on work calendars Determine which calendars are used in your organization. For each calendar, write down          the following:  Calendar ID (alphanumeric string of up to 10 characters) and description (alphanumeric           string of up to 60 characters) Work hours during each week Time zone Exceptions For more information, see  Support of Multiple Work Calendars. Plan credit terms Create a list of credit terms that will be needed to schedule payments to employees (to          pay salaries or wages, or to reimburse expenses). Define payment methods and cash accounts  Determine the payment methods that are used to pay the employees when they are          reimbursed for expenses, compensated for labor performed on contracts or projects, and paid          commissions earned on sales. Plan the cash accounts to be used for these payments.  For information about payment methods, see  Managing Payment Methods. Design employee classes Group employees into employee classes based on similar settings:  Currency of the payments  Cash account used to pay for their expenses, labor, and commissions  Accounts (and subaccounts) to record payments and prepayments to employees of the class  Credit terms Plan identifiers for employee classes (as strings of up to 10 characters) and description          (up to 50 characters). Decide which class will be defined as the default one; this class should have the          settings that apply to the largest number of employees.  Design the company tree Determine whether you need approval workgroups, which would approve documents (such as          for cash transactions, expense claims, or time cards), and product workgroups. If you need          workgroups of any type, design the company tree as a hierarchy of workgroups. For more information, see  Managing Assignment and Approval Maps          and  Company Tree and Workgroups. Design roles for the Organization Structure module  Analyze user responsibilities related to the management of employees, and identify each          set of closely related duties that can be associated with a role in  Acumatica ERP. These duties might include the following:  Entering expense claims and time cards Creating employee accounts Approving expense claims and time cards Releasing expense claims and time cards Maintaining departments and positions Maintaining the company tree and designing assignment and approval maps For each role, plan the following:  Role name and description List of users List of  Acumatica ERP forms and reports that users with the role should be able to access Access can be controlled not only for the forms and reports but also for the elements and          actions on these forms and reports. For details about roles and access rights, see  Role-Based Access and  Levels of Access Rights. Decide whether to import employee accounts Decide whether you need to import the employee accounts from your legacy system or you          will create them by entering each employee's specific information and selecting the          employee class.  If you are going to import them, review the employee records in the legacy system and          remove the obsolete records. See  Simplified Scenarios for Data Import. Decide on numbering sequences for expense claims and time cards Decide whether expense claims and time cards will be used in your organization. Decide on          the numbering sequences to be used for documents of these types.  You can print  Organization Structure Preparation Checklist and refer to it when you prepare     to implement the Organization Structure module.  ]]></column>
		</row>
		<row PageID="1cbd281f-d25a-4286-aaec-728a700113ab" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a6c82bb8-b7d7-50a2-fa53-a62a86452860" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This section will guide you through the process of configuring the General Ledger module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to follow the order of tasks.[anchor|#table_mxw_tw2_4s]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Create auto-numbering sequences'''{br}

 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
| 
Create numbering sequences for expense claims and for time cards. {br}

Also, create a sequence for the segment of the ''EMPLOYEE'' key (if the employee ID is based on the ''EMPLOYEE'' segmented key and it has an auto-numbered segment).
|- 
| '''2'''
| 
 '''Configure the ''EMPLOYEE'' segmented key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
Specify the structure of the ''EMPLOYEE'' segmented key if it is different from the structure of the ''BIZACCT'' key.
|- 
| '''3'''
| 
 '''Add segment values for employee IDs'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| 
If the employee ID is based on the segmented key ''BIZACCT'', add employee-specific segment values for segments that require validation. {br}

If not, populate the segments of the ''EMPLOYEE'' key.
|- 
| '''4'''
| 
 '''Create departments'''{br}

 [HelpRoot_FormReference\EP_20_15_00|Departments] ([~/?ScreenId=EP201500|EP201500])
| 
Create the departments available in your organization. 
|- 
| '''5'''
| 
 '''Create positions'''{br}

 [HelpRoot_FormReference\EP_20_10_00|Positions] ([~/?ScreenId=EP201000|EP201000])
| 
Create the positions held by employees in your organization. Positions are used for informational purposes only in Acumatica ERP.{br}

For positions, you can use identifiers of up to 10 unicode characters.
|- 
| '''6'''
| 
 '''Create work calendars'''{br}

 [HelpRoot_FormReference\CS_20_90_00|Work Calendar] ([~/?ScreenId=CS209000|CS209000])
| 
Create as many work calendars as are used in your organization. Specify work hours for weekdays, weekends (if any), holidays, early closing days, and any other exceptions.{br}

As a calendar identifier, you can use an alphanumeric string of up to 10 characters. For description, use a string of up to 60 characters.
|- 
| '''7'''
| 
 '''Create attributes for employees'''{br}

(Optional){br}

[HelpRoot_FormReference\CS_20_50_00|Attributes] ([~/?ScreenId=CS205000|CS205000])
| 
For each attribute, specify the following:[anchor|#ul_gps_cxb_lt]
*What name will be used
*What type of control will be used (free text, masked text, date/time, check box, or combo box)
*Whether the attribute is required
*What values users can select from (if the attribute is a combo box)

|- 
| '''8'''
| 
 '''Create credit terms for employees'''{br}

 [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500])
| Create credit terms to be used to schedule payments to employees (to pay salaries or wages, or to reimburse expenses).
|- 
| '''9'''
| 
 '''Create cash accounts'''{br}

 [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000])
| 
Create the cash accounts to be used when employees are reimbursed for expenses, compensated for labor performed on contracts, and paid commissions earned on sales.{br}

 For information about cash accounts, see [HelpRoot_Financials\CA__How_to_Create_Cash_Account|To Create a Cash Account].
|- 
| '''10'''
| 
 '''Create payment methods'''{br}

 [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000])
| 
Create the payment methods to be used when employees are reimbursed for expenses, compensated for labor performed on contracts, and paid commissions earned on sales. {br}

 For information about payment methods, see [HelpRoot_Financials\CA__MNG_PaymentMethods|Managing Payment Methods].
|- 
| '''11'''
|  '''Configure employee classes'''
 [HelpRoot_FormReference\EP_20_20_00|Employee Classes] ([~/?ScreenId=EP202000|EP202000])
| 
Create employee classes. {br}

At minimum, you need to create one employee class that will include the largest number of employees and will be used as the default class. 
|- 
| '''12'''
| 
 '''Create labor items'''{br}

 [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000])
| 
Create the labor items that are needed for all employees for all available earning types. 
|- 
| '''13'''
| 
 '''Create employee accounts'''{br}

 [HelpRoot_FormReference\EP_20_30_00|Employees] ([~/?ScreenId=EP203000|EP203000])
| 
If you have a small number of employees, enter the employee accounts manually. For each employee, specify the following data:[anchor|#ul_ohk_n4y_gt]
*Employee ID, which must be based on the structure of the ''EMPLOYEE'' segmented key
*First and last name of the employee, and address
*Department and position
*Employment type and the salary amount or an hourly rate
*Employee class
*GL accounts (and subaccounts), if these are different from those specified in the class settings
*The credit terms, payment method, and cash account if different from the class settings

If you have not configured the non-stock items (if the ''Inventory and Order Management'' group of features is enabled in your system), you can specify the default labor item and the labor items for available earning types later.
|- 
| '''14'''
| 
 '''Create an import scenario to import employee accounts (optional)'''{br}

(Optional){br}

[HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
If you have many employee accounts in a legacy system, create an import scenario. Make sure that the source file includes at least the following details for each employee:[anchor|#ul_qby_qcf_4s]
*Employee ID, which must be based on the structure of the ''EMPLOYEE'' segmented key
*First and last name of the employee, and address
*Department, position, and calendar
*Employee class, to provide the default values for some other settings
*GL accounts (and subaccounts)
*Earning types and labor items
*The credit terms, payment method, and cash account

For details, see [HelpRoot_Integration\IS__mng_Configuring_Import_Scenarios|Configuring Import Scenarios].
|- 
| '''15'''
| 
 '''Import employee accounts (optional)'''{br}

(Optional){br}

[HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
Before you import employee accounts by using the developed import scenario, review the source data to make sure that all the data matches the formats defined in the scenario. {br}

To test the scenario, import only a few accounts and make sure that valid accounts have been created. After that, import all the accounts.{br}

If the employee account has settings that differ from those of the class, assign the settings after the import is done. 
|- 
| '''16'''
| 
 '''Assign employees to branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
This task is needed only if the ''Multiple Branch Support'' feature is enabled in your system on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. {br}

For each branch, assign the employees.
|- 
| '''17'''
| 
 '''Build the company tree'''{br}

 [HelpRoot_FormReference\EP_20_40_60|Import Company Tree] ([~/?ScreenId=EP204060|EP204060])
| 
Build the company tree with the hierarchy of approval and product workgroups.{br}

For more information, see [HelpRoot_Organization\EP__con_Assignment_Automation|Managing Assignment and Approval Maps].
|- 
| '''18'''
| 
 '''Create roles to manage the Organization Structure module'''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
 For each role, specify the following: [anchor|#ul_wrd_q3d_qs]
*Role name and description
*List of users

Add users to the list of role members.
|- 
| '''19'''
| 
 '''Configure the access rights of each role'''{br}

 [HelpRoot_FormReference\SM_20_10_25|Access Rights by Role] ([~/?ScreenId=SM201025|SM201025])
| 
Configure each role&rsquo;s access rights within the Organization Structure and Time and Expenses modules as follows:[anchor|#ol_xq1_scl_hl]
*If the new role should have the ''Revoked'' level of access rights to most forms in the module, do the following:
*#Specify the ''Revoked'' level of access rights to the module; this will set the ''Revoked'' access rights to all forms in the module.
*#Specify more permissive levels of access (''Delete'', ''Edit'', or ''View Only'') to certain forms of the module, as planned. 
*#Change the level of access rights for the module to ''Granted''.
*If the new role should have the ''Delete'' level of access to most forms in the module, do the following: 
*#Specify the ''Granted'' level of access rights to the module. The role will inherit the ''Delete'' level of access to all the forms of the module.
*#Specify the ''Revoked'' level of access rights to the forms to which the role should not have access.
*#If needed, select other levels of access rights (''Edit'' or ''View Only'') to other forms of the module as planned. 

See [HelpRoot_Administration\SM__con_Role_Configuration|Access Rights for Roles].
|}
 You can print [HelpRoot_ImplementChecklists\OS_Conf_Checklist|Organization Structure Configuration Checklist] and refer to it when you configure the Organization Structure module. ]]></column>
			<column name="PlainText"><![CDATA[Organization Structure: Configuration This section will guide you through the process of configuring the General       Ledger module. Due to dependencies between the forms, the sequence of actions during       configuration is critical, so you need to follow the order of tasks. No. Task  Description 1 Create auto-numbering sequences  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) Create numbering sequences for expense claims and for time cards.  Also, create a sequence for the segment of the  EMPLOYEE  key (if the                   employee ID is based on the  EMPLOYEE  segmented key and it has an                   auto-numbered segment). 2 Configure the  EMPLOYEE  segmented key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Specify the structure of the  EMPLOYEE  segmented key if it is different                   from the structure of the  BIZACCT  key. 3 Add segment values for employee IDs  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) If the employee ID is based on the segmented key  BIZACCT , add                   employee-specific segment values for segments that require validation.  If not, populate the segments of the  EMPLOYEE  key. 4 Create departments  ([~/?ScreenId=EP201500|EP201500]) Departments (EP201500) Create the departments available in your organization.  5 Create positions  ([~/?ScreenId=EP201000|EP201000]) Positions (EP201000) Create the positions held by employees in your organization. Positions are used                   for informational purposes only in  Acumatica ERP. For positions, you can use identifiers of up to 10 unicode characters. 6 Create work calendars  ([~/?ScreenId=CS209000|CS209000]) Work Calendar (CS209000) Create as many work calendars as are used in your organization. Specify work                   hours for weekdays, weekends (if any), holidays, early closing days, and any other                   exceptions. As a calendar identifier, you can use an alphanumeric string of up to 10                   characters. For description, use a string of up to 60 characters. 7 Create attributes for employees (Optional)  ([~/?ScreenId=CS205000|CS205000]) Attributes (CS205000) For each attribute, specify the following: What name will be used What type of control will be used (free text, masked text, date/time, check                       box, or combo box) Whether the attribute is required What values users can select from (if the attribute is a combo box) 8 Create credit terms for employees  ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) Create credit terms to be used to schedule payments to employees (to pay                 salaries or wages, or to reimburse expenses). 9 Create cash accounts  ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) Create the cash accounts to be used when employees are reimbursed for expenses,                   compensated for labor performed on contracts, and paid commissions earned on                   sales.  For information about cash accounts, see  To Create a Cash Account. 10 Create payment methods  ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) Create the payment methods to be used when employees are reimbursed for expenses,                   compensated for labor performed on contracts, and paid commissions earned on                   sales.   For information about payment methods, see  Managing Payment Methods. 11 Configure employee classes  ([~/?ScreenId=EP202000|EP202000]) Employee Classes (EP202000) Create employee classes.  At minimum, you need to create one employee class that will include the largest                   number of employees and will be used as the default class.  12 Create labor items  ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items (IN202000) Create the labor items that are needed for all employees for all available                   earning types.  13 Create employee accounts  ([~/?ScreenId=EP203000|EP203000]) Employees (EP203000) If you have a small number of employees, enter the employee accounts manually.                   For each employee, specify the following data: Employee ID, which must be based on the structure of the  EMPLOYEE                      segmented key First and last name of the employee, and address Department and position Employment type and the salary amount or an hourly rate Employee class GL accounts (and subaccounts), if these are different from those specified in                     the class settings The credit terms, payment method, and cash account if different from the class                     settings If you have not configured the non-stock items (if the  Inventory and Order                     Management  group of features is enabled in your system), you can specify the                   default labor item and the labor items for available earning types later. 14 Create an import scenario to import employee accounts (optional) (Optional)  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  If you have many employee accounts in a legacy system, create an import scenario.                   Make sure that the source file includes at least the following details for each                   employee: Employee ID, which must be based on the structure of the  EMPLOYEE                      segmented key First and last name of the employee, and address Department, position, and calendar Employee class, to provide the default values for some other settings GL accounts (and subaccounts) Earning types and labor items The credit terms, payment method, and cash account For details, see  Configuring Import Scenarios. 15 Import employee accounts (optional) (Optional)  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  Before you import employee accounts by using the developed import scenario,                   review the source data to make sure that all the data matches the formats defined                   in the scenario.  To test the scenario, import only a few accounts and make sure that valid                   accounts have been created. After that, import all the accounts. If the employee account has settings that differ from those of the class, assign                   the settings after the import is done.  16 Assign employees to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) This task is needed only if the  Multiple Branch Support  feature is enabled                   in your system on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000)                   form.  For each branch, assign the employees. 17 Build the company tree  ([~/?ScreenId=EP204060|EP204060]) Import Company Tree (EP204060) Build the company tree with the hierarchy of approval and product workgroups. For more information, see  Managing Assignment and Approval Maps. 18 Create roles to manage the Organization Structure module  ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005)  For each role, specify the following:  Role name and description List of users Add users to the list of role members. 19 Configure the access rights of each role  ([~/?ScreenId=SM201025|SM201025]) Access Rights by Role (SM201025) Configure each role's access rights within the Organization Structure and Time                   and Expenses modules as follows: If the new role should have the  Revoked  level of access rights to most                     forms in the module, do the following: Specify the  Revoked  level of access rights to the module; this will                         set the  Revoked  access rights to all forms in the module. Specify more permissive levels of access ( Delete ,  Edit , or                            View Only ) to certain forms of the module, as planned.  Change the level of access rights for the module to  Granted . If the new role should have the  Delete  level of access to most forms in                     the module, do the following:  Specify the  Granted  level of access rights to the module. The role                         will inherit the  Delete  level of access to all the forms of the                         module. Specify the  Revoked  level of access rights to the forms to which                         the role should not have access. If needed, select other levels of access rights ( Edit  or  View                           Only ) to other forms of the module as planned.  See  Access Rights for Roles.  You can print  Organization Structure Configuration Checklist and refer to it when you         configure the Organization Structure module.  ]]></column>
		</row>
		<row PageID="7d13aebb-6c5d-4e21-b45c-f50bd2cec10d" Language="en-US" PageRevisionID="1" Content="&#xA;This part of the Implementation Guide includes the topics on implementation of the order management and inventory functionality.&#xA;==In This Part==[anchor|#ul_vb2_zmd_2t]&#xA;*[HelpRoot_Implement\Implementing_Inventory_Management|Implementing Inventory]&#xA;*[HelpRoot_Implement\Implementing_Purchasing_Management|Implementing Purchase Orders]&#xA;*[HelpRoot_Implement\Implementing_Sales_Order_Management|Implementing Sales Orders]&#xA;" PlainText="Implementing Order Management and Inventory This part of the Implementation Guide includes the topics on implementation of the order     management and inventory functionality. In This Part Implementing InventoryImplementing Purchase OrdersImplementing Sales Orders" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e0394fb9-3048-0b16-063c-e68483525dd1" RecordSourceID="22377" />
		<row PageID="386b3622-e9ae-4b16-95f6-7ae3edca33f8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e1451ac7-41a9-4a38-fb7c-894ec80e6d8b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes the process of implementing the Inventory module in Acumatica ERP. 
==Overview==
The Inventory module is at the heart of Acumatica ERP inventory and order management functionality, which also include Purchase Orders and Sales Orders. The Inventory module is the first module you implement; the Purchase Orders and Sales Orders modules depend on it. The inventory and order management functionality facilitates and adapts to the complexity and variety of organizations&rsquo; daily operations, so you can implement virtually any kind of inventory and order management model.{br}

This document is divided into four parts: 
*[[#1|'''Prerequisites and Dependencies''']: Describes what modules must be set up and configured before you begin implementing this module.
*[[#2|'''Preparation''']: Describes the data you should collect and analyze.
*[[#3|'''Configuration''']: Guides you through the actual configuration of the Inventory module.
*[[#4|'''Initialization''']: Describes how current inventory stock details can be brought into the system.
*[[#5|'''Other Considerations''']: Covers other aspects pertaining to the implementation of this module. 

This chapter is meant only to guide you through Inventory implementation. For detailed descriptions of Inventory forms and capabilities, see the [HelpRoot_InvMgmt\IN__IN_Features|Overview of the Inventory Processes].[anchor|#1]
==Prerequisites and Dependencies==
The implementation of the Finance suite must be completed, before you implement the Inventory module. [anchor|#2]
==Preparation==
This section covers the needed preparation before you begin configuring the Inventory module. When you are ready to implement this module, begin collecting and analyzing the necessary information. Do the following steps (although not necessarily in the listed order; many steps can be done in parallel) before you actually configure the Inventory module. ((({S:Hint}Because this is the preparation phase of implementation, enter no data into the system at this time. 
)))[anchor|#table_mxk_hdq_tl]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action
!width="80%" ! Description
|- 
| '''Develop conventions for identifying inventory items'''
| 
Plan the inventory ID, which is based on the ''INVENTORY'' segmented key. Each inventory item, stock or non-stock, has an inventory ID. Identifiers (inventory IDs) can be segmented, with each segment providing specific information about the item.((({S:Hint} Acumatica ERP also supports subitems. They can be useful when almost-identical products differ in size, color, and material. These variations can be represented by the same inventory ID and different subitem codes. Subitem codes can also be segmented, for greater detail classification of the products. 
)))
Decide how the inventory ID should be structured: how many segments it should have, what the length of each segment is, which segments should be validated (and for validated segments, which of the segment values are valid), and whether auto-numbering should be used for a segment. {br}

Also, decide whether you&rsquo;ll use subitems and if so, make sure the license includes the ''Inventory Subitems'' feature. To use subitems, you should decide how subitem codes will be structured and segmented. {br}

For details, see [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers] and [HelpRoot_InvMgmt\IN__con_Inventory_IDs_and_Subitem_Codes|Inventory Subitems]. 
|- 
| '''Define Reason Codes'''
| 
Plan reason codes, which determine the offset account and subaccount for receipts, issues, adjustments, and physical inventory adjustments. The reason code provides the offset account and, If ''Subaccounts'' are used in your system, the reason code defines the sources of the offset subaccount segment values. {br}

You need at least four reason codes to be used as default codes for each transaction type: receipts, issues, adjustments, and physical inventory adjustments. For more information, see [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000]) and [HelpRoot_InvMgmt\IN__con_Reason_Codes__Definition_and_Usage|Reason Codes for Inventory]. 
|- 
| '''Plan posting classes'''
|  To automate accurate postings to General Ledger for every stock movement, plan appropriate posting classes. A posting class is a collection of settings assigned to an item that defines the source of accounts and subaccounts for transactions: the inventory item, the warehouse where the transaction occurs, or the posting class itself. It also provides particular accounts and subaccounts, if the source is the posting class. For subaccounts, you can define rules for combining subaccounts from segments of other subaccounts. 
You can define just one class (this would mean that all inventory transactions are posted based on the same rules) or several classes (if different items or group of items update GL differently). Define the rule for the names of posting classes.{br}

The following accounts and subaccounts are defined by the posting class: [anchor|#ul_sdl_hdq_tl]
*Inventory account and subaccount (asset)
*Reason code subaccount
*Sales account and subaccount (revenue)
*Cost of sales account and subaccount (expense)
*Standard cost variance account and subaccount (expense)
*Standard cost revaluation account and subaccount (expense)
*PO accrual account and subaccount (liability)
*Purchase price variance account and subaccount (expense)
*Landed cost variance account and subaccount (expense)

 For details, see [HelpRoot_FormReference\IN_20_60_00|Posting Classes] and [HelpRoot_InvMgmt\IN__con_Posting_Classes__Definition_and_Usage|Posting Classes in Inventory]. 
|- 
| '''Define additional posting settings'''
| 
Analyze the accounting requirements for integration with GL, deciding upon the following: [anchor|#ul_nlc_5lr_tl]
*Should inventory transactions update General Ledger? Should transactions be posted to General Ledger in summary or in detail?
*Should transactions be automatically posted to General Ledger upon release, or should posting be done as a separate operation?
Decide on using two Inventory processing options that can help your users avoid the accidental release of incomplete or incorrect transactions. These settings, listed below, require additional data entry effort (if selected) but provide a better quality of data: [anchor|#ul_y2l_hdq_tl]
*'''Hold Documents on Entry''': When the option is selected, each new document is created with the status ''On Hold'' and cannot be released immediately. To release the transaction, it should be taken off hold first and then released as usual.
*'''Validate Document Totals on Entry''': When this option is selected, each transaction requires entry of control totals for cost and quantity. A transaction can be released only if the system-calculated totals equal the control totals.

 For more details, see [HelpRoot_InvMgmt\IN__con_GL_Accounts_Inventory|Posting Settings in the Inventory Module].
|- 
| '''Collect information about warehouses and locations'''
|  Decide which warehouses you need. A warehouse in Acumatica ERP does not necessarily represent a physical building; you can divide a building into multiple areas and define each area as a warehouse. A warehouse can even be virtual; for example, goods that are between the supplier and your company can be considered in the ''GIT'' (goods in transit) warehouse. 
First, plan the structure of the warehouse ID and the location ID; these identifiers are based, respectively, on the ''INSITE'' and ''INLOCATION'' segmented keys. Decide whether you will use segmented IDs (alternatively, you can instead configure the segmented key as one segment with up to 10 alphanumeric characters). If the key is segmented, determine how many segments (and of what length) will be used, whether the segments should be validated (and if so, what kind of values are allowed), and whether an auto-numbering segment will be used. {br}

Collect the following information about each warehouse you will define in Acumatica ERP: [anchor|#ul_ofl_hdq_tl]
*The warehouse&rsquo;s unique identifier, which can be up to 10 characters and should comply with your design of the ''INSITE'' segmented key. 
*The description, or name, of the warehouse. 
*The address of the warehouse. 
*The organization&rsquo;s branch the warehouse is assigned to. 
*The General Ledger accounts and subaccounts to be used if the account source is ''Warehouse'': inventory, reason code, sales, cost of sales, standard cost variance, standard cost revaluation, purchase order accrual, purchase price variance, and landed cost variance. 
*Indicate what cost (average or last) should be used for customer returns of average-costed and FIFO-costed inventories. 
*List of this warehouse&rsquo;s locations to be configured, noting the following information for each: 
**Location ID, which can be up to 10 characters and should comply with your design of the ''INLOCATION'' segmented key. 
**Description 
**Processing options: 
***Whether sales are allowed from the location 
***Whether receipts are allowed at the location 
***Whether transfers are allowed at the location 
***Whether assembly operations are allowed at the location 
***Pick priority of the location 
***Whether separate cost layers will be created for this location 
***Whether the quantities of goods at this location will be included in the quantities of available goods and included in inventory transactions 
***Whether the location should be restricted for specific item or item class (you may need to return to this setting after defining item classes) 
*Optionally, indicate preferred locations for: receipts, outgoing shipments, customer returns, and drop-ships. 
*Decide whether users should be able to add new locations for this warehouse by entering them directly in inventory documents: 
**'''Do Not Allow On-the-Fly Entry''': This option means that all locations of the warehouse must be defined before they can be used. This is the safest option but can create problems during data entry if the list of locations is incomplete. 
**'''Allow On-the-Fly Entry''': In this case, locations do not need to be defined in advance. If a user types a nonexistent location ID on a data entry screen, the system will automatically add the location to the warehouse. While this option provides greater flexibility, your site may end up with many locations defined due to typos. 
**'''Warn but Allow On-the-Fly Entry''': Here, too, locations can be created on the fly, but the user is warned and can opt out of creating the new location. If the user has made a data entry error, he or she can correct it instead of defining a new location. 

For more information, see [HelpRoot_InvMgmt\IN__con_Multiple_Warehouses|Multiple Warehouses] and [HelpRoot_InvMgmt\IN__con_Warehouse_Locations|Warehouse Locations]. For details on warehouse settings, see [HelpRoot_FormReference\IN_20_40_00|Warehouses] ([~/?ScreenId=IN204000|IN204000]).
|- 
| '''Develop conventions for and plan lot/serial classes'''
|  If you use lot or serial numbers to identify and trace your company&rsquo;s stock, review your existing numbering conventions, and plan the lot/serial classes that can be assigned to stock items. ((({S:Hint}Acumatica ERP supports multiple concurrent lot or serial numbering schemes, so that different items can be numbered differently. 
)))
Lot and serial numbers are defined at the item class level. Some classes include items tracked by lot numbers, some include items tracked by serial numbers, and others include items that are not tracked by either number (you should define at least one lot/serial class for such items.) For each class, decide which group of items it will include. {br}

In addition to deciding which tracking method is used for the class, decide upon the following: [anchor|#ul_ihl_hdq_tl]
*Whether to track expiration dates or not.
*How the numbers are assigned. The assignment method can be one of the following: 
**When received: Items get a lot/serial number when they are received.
**When used: Items don’t get a lot/serial number until they&rsquo;re issued them from stock or used in assembly. 
*What the issue method is for items of the class: 
**'''FIFO''': Lot/serial numbers are picked for issue by receipt date (oldest first).
**'''LIFO''': Lot/serial numbers are picked for issue by receipt date (newest first).
**'''Sequential''': Lot/serial numbers are picked in alphabetic order.
**'''Expiration''': Lot/serial numbers are picked by expiration date (faster-expiring first).

Numbering conventions for lot and serial numbers, numbering conventions can be shared among stock items in two ways: [anchor|#ul_p3l_hdq_tl]
*Stock items with different inventory IDs may have the same serial number. To implement this numbering scheme in Acumatica ERP, assign these stock items to the same lot/serial class but specify for each a separate numbering sequence.
*Stock items with different inventory IDs have unique serial numbers. To implement this numbering scheme in Acumatica ERP, have these items belong to the same lot/serial class and share an auto-generated numbering sequence. This guarantees that all automatically generated lot or serial numbers will be unique. You still can manually assign the same serial number to multiple items with different inventory IDs; Acumatica ERP ensures uniqueness between items with the same inventory ID.

You should decide upon the structure of the lot or serial number for each lot/serial class you will define: the number of segments, the type of each segment, and the possible values for each validated segment. Acumatica ERP supports the following types of segments: [anchor|#ul_cjl_hdq_tl]
*''Constant'': The segment is a predefined alphanumeric string that is replicated to all lot or serial numbers.
*''Date'': The segment shows any of the following parts of the date: day, month number, month name, and two- or four-digit year.
*''Auto-incrementing value'': The system automatically assigns the segment value, based on the numbering sequence, when a new lot/serial number is generated.

Decide which of the defined classes will serve as the default lot/serial class.{br}

For details about classes and possible settings, see [HelpRoot_FormReference\IN_20_70_00|Lot/Serial Classes] ([~/?ScreenId=IN207000|IN207000]); for more information about lot and serial numbers, see [HelpRoot_InvMgmt\IN__con_Lot_and_Serial_Number_Tracking|Lot and Serial Number Tracking] and [HelpRoot_InvMgmt\IN__con_Lot_and_Serial_Numbers|Lot and Serial Numbers].
|- 
| '''Define global units of measure'''
|  Review the units of measure used for different items, and identify those applicable to most of the items. Write down the list of global UOMs and define conversion rules. Choose the UOMs to be the basic UOMs for specifying weights and volumes, respectively. See the [HelpRoot_InvMgmt\IN__con_Units_of_Measure_and_Conversions|Units of Measure and Conversions] for more information.
|- 
| '''Collect information about stock items'''
|  Collect the following general details about stock items. ((({S:Hint}Instead of creating records for each item manually, you can import the stock item records from your legacy system. Consider mapping the item properties used in the old system to the properties used in Acumatica ERP (with simultaneous conversion if needed).
)))[anchor|#ul_mjl_hdq_tl]
*'''Inventory ID''': Consider creating a rule for assigning identifiers, based on the structure you&rsquo;ve planned for the ''INVENTORY'' segmented key.
*'''Description''': Define a rule for providing brief descriptions of the products.
*'''Status''': Choose the appropriate status from the options listed below; normally, only active products are migrated: 
**''Active''
** ''No Sales'' (item cannot be sold)
**''No Purchases'' (item cannot be purchased)
**''No Request'' (item can&rsquo;t be used in requisition requests)
**''Inactive''
* '''Type''': Select one of Acumatica ERP&rsquo;s product types, which can be useful in reports but don&rsquo;t affect processing: 
**''Finished Good''
** ''Component Part''
** ''Subassembly''
* '''Is a Kit''': Indicate whether the stock item is a kit assembled from other items; if so, list components and quantities. See the [HelpRoot_InvMgmt\IN__con_Accounting_for_Kits|Inventory Item Kits] article for more information about kits.
*'''Units of measure''': First, assign the stock item a base or primary unit of measure. Acumatica ERP uses this required unit to maintain the stock level for the item. If the item can be counted in multiple units (such as pieces, packs, or boxes), list all of them before choosing which should be used as the base unit of measure. We recommend that you use the smallest unit as the base unit, to avoid complications. Also choose the default sales and purchase units of measure (the units used most frequently in sales and purchases).
*'''Default storage''': Indicate whether the stock item is mostly stored in, received to, and/or issued from one particular warehouse and location (and if so, which).
Also collect the following accounting and processing details for stock items: [anchor|#ul_ell_hdq_tl]
*'''Valuation Method''': Choose an appropriate valuation method for the stock item: 
**''Average'': The entire quantity of the item on hand is valued with the same cost, which is the total cost of all quantities of the items at the warehouses divided by the total quantity. No distinction is made regarding whether a particular unit was purchased cheaply or expensively; all are valued equally. This is a moving average cost: each receipt adds to total cost and total quantity, causing average cost to be recalculated.
**''FIFO'' (First In, First Out): Each receipt creates a separate cost layer. Stock issue takes the cost from cost layers, starting from the oldest one; when the first cost layer is depleted, the second oldest layer is used, and so on until all issued quantity is costed.
**''Standard'': The entire on-hand quantity of the item is valued with the same cost. Unlike average cost, standard cost is not built by actual receipts; it is defined by the product manager (from analysis of production, storage, handling costs, and the like). Standard cost is reviewed regularly through standard cost revaluation.
**''Specific'': Each piece of the stock item has its own individual cost, which is defined by its purchase price. This valuation method is used for items with lot or serial numbers. The lot/serial number identifies the product piece and its cost layer.
*'''Lot or serial numbering''': If the stock item requires lot or serial numbering, specify an appropriate lot/serial class.
*'''Posting class''': Select the appropriate posting class for the item&rsquo;s transactions.
*'''GL accounts and subaccounts''' (inventory, reason code, sales, cost of sales, standard cost variance, standard cost revaluation, purchase order accrual, purchase price variance, and landed cost variance): The accounts and subaccounts assigned to the item can be different from those in the selected posting class. They will be used if the account source is ''Inventory Item''.
*'''Taxes''': List taxes that apply to purchases and sales of the stock item in the countries and states where your company operates. If an appropriate tax category is already created in Acumatica ERP, indicate it instead of a tax list.
*'''Commissionable''': Indicate if salesperson commission is to be calculated for sales of the item.

For standard-cost items, indicate current standard cost. For details, see the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]), [HelpRoot_InvMgmt\IN__con_Inventory_Items|Inventory Items], and [HelpRoot_InvMgmt\IN__con_Item_Costs_and_Valuation_Methods|Item Costs and Valuation Methods] articles.
|- 
| '''Collect information about non-stock items'''
|  Gather information about all ''non-stock items'': items such as services or licenses for which you do not need to monitor quantity in warehouses, and that are probably not stored in warehouses at all. Purchases and sales of such items do not affect company assets but are debited or credited directly to income and expense accounts. Collect the following details for each type of non-stock items and consider mapping of those details to the details used for stock items in your legacy system to perform import of the items. [anchor|#ul_iml_hdq_tl]
*'''Inventory ID''': Assign the item a unique identifier, based on the structure you&rsquo;ve planned for the ''INVENTORY'' segmented key.
*'''Description''': Provide a brief description of the item.
*'''Status''': Choose a status; the available statuses are the same as those for stock items.
*'''Type''': Select one of the following types: 
**''Non-Stock Item'': A general type of non-stock item
**''Labor'': A type of non-stock item to be used as labor hour rates
**''Service'': A type of non-stock item to be used as service fees
**''Charge'': A type of non-stock item to be used as charge rates
**''Expense'': A type of non-stock item to designate specific expenses
*Whether the item is a kit item; for details, see [HelpRoot_InvMgmt\IN__con_Accounting_for_Kits|Inventory Item Kits].
*'''Units of measure''': If units of measure apply, specify the base, sales, and purchase units.
*'''GL accounts and subaccounts''': Note the default General Ledger accounts used to post inventory transactions: the sales accounts, expense accounts, and accounts for posting transactions related to kit assembly (if the item is a kit).
*'''Taxes''': Describe which taxes apply to purchases and sales of the non-stock item. If an appropriate tax category is already created in Acumatica ERP, indicate it instead of a list of taxes.
*'''Commissionable''': Indicate if salesperson commission is to be calculated for sales of the item.
For details, see [HelpRoot_InvMgmt\IN__con_Non-Stock_Item_Support|Non-Stock Items in the Inventory Module] and [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000]).
|- 
| '''Identify taxes and tax categories'''
|  Analyze the tax requirements for stock and non-stock items, and identify new taxes and tax categories required for the items. For details, see [HelpRoot_FormReference\TX_20_50_00|Taxes] ([~/?ScreenId=TX205000|TX205000]). 
|- 
| '''Define item classes'''
|  Item classes provide default settings for stock or non-stock items when you create new items. Group items with similar settings into item classes, which can include any of the following settings: [anchor|#ul_fnl_hdq_tl]
*Item type
*Valuation method
*Tax category
*Posting class
*Lot/serial class
*Units of measure
*Price class
*Availability settings
*Whether negative quantities will be allowed for items of the class
For each identified class, decide how available quantity should be estimated for items of the class. Possible deductions from the quantity on hand can be any of the following: quantity on issues, quantity on customer orders, back-ordered quantity, quantity shipping, quantity shipped, and quantity on kit assembly demand. Possible additions to the quantity on hand can be any of these: quantity on receipts, quantity in transit, quantity on purchase orders and purchase order receipts, and quantity in kit assembly supply. ((({S:Warn}Most of the class settings are copied from the item class to a new item once you select the item class, but you can select other values for this item. Rules on availability and whether to allow negative quantities, however, are defined at the item class level and cannot be changed for a particular item of the class.
))) For more information, see [HelpRoot_InvMgmt\IN__con_Availability_Calculation|Availability Calculation].
|- 
| '''Define attributes'''
| With Acumatica ERP, to additional properties of items, you can add user-defined attributes and make some of them ''Required''. The attributes are defined at the item class level. For more information, see [HelpRoot_Administration\CS__con_Attributes|Attributes].
|- 
| '''Plan physical inventory counts'''
| 
Partial or full inventory counts are mandatory for any resale business. Decide how often you need to perform full counts. Decide whether you need to perform partial counts (based on item classes, specific items, ABC or movement classes) and how often. {br}

Plan physical inventory types, for each type collect the following information:[anchor|#ul_zfb_mlp_xl]
*Unique identifier of the type and description
*Generation method:'' Full Inventory, By Inventory Item, By item Class, By ABC code, By Movement Class, By Cycle''.
*Optionally, whether to perform counts of this type in a particular warehouse and particular locations only
*How to organize data on count sheets

|- 
| '''Plan Physical Inventory Cycles'''
| Decide how many cycles you need for the inventory types you will use. A cycle defines how often the counting should be performed.
|- 
| '''Create a list of GL accounts used in Inventory'''
| 
Check that all the accounts needed for the Inventory module exist on the chart of accounts, and write down the missing ones:[anchor|#ul_elc_5lr_tl]
*The Accounts Receivable clearing account and subaccount, used to offset the sales revenue posting for the invoice transaction type
*The in-transit account and subaccount, used in two-step transfers to hold the cost of stock issued from the source warehouse and not yet received at the destination
*The work-in-progress account and subaccount, used in kit assembly to hold the cost of the kit&rsquo;s components

|- 
| '''Plan numbering sequences'''
| 
 Acumatica ERP provides default numbering sequences for Inventory batches as well as for each type of inventory transactions: receipt (transfer), issue, adjustment, assembly, replenishment, and physical inventory counts.((({S:Hint}You do not have to use a separate numbering sequence for each type of transactions— multiple transaction types can share a numbering sequence.
)))
You can use the default sequences or create custom numbering sequences—for example, if you want to split a numbering sequence between the branches. If you have branches, the same sequence will be used by all branches by default so that the transactions with subsequent reference numbers may belong to different branches. However, you can split a sequence between branches so that different ranges of reference numbers will belong to different branches. {br}

 You should also define the numbering sequences for the auto-numbered segments of the ''INVENTORY'' and ''INSITE'' segmented keys (used for inventory IDs and warehouse IDs), if such a segment is used. For each of these, plan the numbering sequence: the start number, the numbering step or increment, and the end number.{br}

For more information, see [HelpRoot_Administration\CS__con_Multiple_Numbering_Sequences|Numbering Sequence Usage].
|- 
| '''Review other settings for Inventory configuration'''
|  Define the number of decimal places to be used for the following: [anchor|#ul_gfl_hdq_tl]
*The quantity of stock and non-stock items throughout Acumatica ERP.
*Unit price and unit cost (both are controlled by one setting); total price and cost follow currency settings.
*:((({S:Warn}These settings are also used in the Sales Orders and Purchase Orders modules.
)))

Define the global units of weight and volume to be used in the Inventory module as well as in the Purchase Orders and Sales Orders modules to evaluate weights and volumes.For details, refer to the [HelpRoot_FormReference\IN_10_10_00|Inventory Preferences] ([~/?ScreenId=IN101000|IN101000]) article.
|- 
| '''Plan Roles'''
| Review the duties of all employees who handle stock items in warehouses and who monitor non-stock items. Define a role required for each typical task performed by employees. 
For example, for the ability to receive the purchased goods at specific warehouse, a user should have a role that has the ''Insert'' or ''Delete'' access to the [HelpRoot_FormReference\IN_30_10_00|Receipts] ([~/?ScreenId=IN301000|IN301000]) form, at least the ''View-Only'' access to the [HelpRoot_FormReference\IN_20_40_00|Warehouses] ([~/?ScreenId=IN204000|IN204000]) form, and the ''View-Only'' access to the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]) form.{br}

For more information on roles, see [HelpRoot_Administration\SM__con_Role-Based_Access|Role-Based Access].
|- 
| '''Plan Restriction Groups'''
| 
With a collection of roles, that grant rights to create inventory transactions, a user can receive and issue any items at any warehouse. In Acumatica ERP, you can control visibility of individual items within classes and particular warehouses to users by using restriction groups. For more information, see [HelpRoot_Administration\RS__con_Restriction_Groups_for_Subitems|Inventory Item Security] and [HelpRoot_InvMgmt\IN__con_Inventory_and_Warehouse_Security|Warehouse Security].{br}

 Collect security requirements: [anchor|#ul_zlj_jkx_tl]
*List all users who have to have enter and process inventory transactions. 
*If the user should work with a large number of items list only items that the user should not see and mark the list as &ldquo;Inverse&ldquo;; after configuration of the restriction group, the user will see all unlisted items. 
((({S:Warn}Remember that once you set up these restriction groups, users not included in the group will not see any item and warehouse. Although they may have access to the Inventory forms, they will not be able to select items using those forms. 
)))
|}
You can download and print the [HelpRoot_ImplementChecklists\IN_Preparation_Checklist|Inventory Preparation Checklist] to assist you in collecting the data for Inventory implementation. [anchor|#3]
==Configuration==
This section walks you through the process of actually configuring the Inventory module in Acumatica ERP. 
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="19%" ! Action
!width="75%" ! Description
|- 
| '''1'''
|  '''Define auto-numbering sequences'''
 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
|  Use the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form in the Configuration Settings module to define the numbering sequences for all types of inventory documents: 
*Receipts (transfers)
*Issues
*Adjustments
*Assemblies
*Replenishments
*Physical inventory counts
If the ''INVENTORY'', ''INSITE'', and ''INLOCATION'' segmented keys (used for inventory IDs, warehouse IDs, and warehouse location IDs) use an auto-numbering segment, define these numbering sequences as well. 
|- 
| '''2'''
|  '''Define segmented keys'''
 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
|  Use the [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000]) form in the Configuration Settings module to implement the chosen structure of the following segmented keys planned during the preparation stage: 
*The ''INVENTORY'' segmented key, which inventory IDs are based on
*The ''INSITE'' segmented key, which warehouse IDs are based on
*The ''INLOCATION'' segmented key, which warehouse location IDs are based on

|- 
| '''3'''
|  '''Maintain validation table for key segments'''
 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
|  Use the [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000]) form in the Configuration Settings module to enter valid codes for any ''INVENTORY'', ''INSITE'', and ''INLOCATION'' segments that are validated. (Non-validated and auto-numbered segments do not require maintenance of segment values.)
|- 
| '''4'''
|  '''Create General Ledger accounts'''
|  Use the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form to add any needed General Ledger accounts identified during preparation (especially the '''Consider general posting settings for Inventory setup''' step). For details, see [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts]. 
|- 
| '''5'''
|  '''Create General Ledger subaccounts'''
 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
|  Use the [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]) form to create any necessary subaccounts. See [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount] for more information. 
|- 
| '''6'''
|  '''Create tax categories'''
 [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500])
|  Use the [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500]) form to create any additional tax categories you identified during preparation. Enter the following for each category: 
*Tax category ID
*Description
*Inclusive/exclusive (select the '''Exclude Listed Taxes''' check box to make the tax category exclusive)
*List of taxes (select taxes that have been defined by their ID, and their information will be filled in)

|- 
| '''7'''
|  '''Create reason codes'''
 [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000])
|  Use the [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000]) form to create the reason codes you designed for the following: 
*Receipts
*Issues
*Transfers
*Adjustments
There should be at least one reason code for each transaction type.
|- 
| '''8'''
|  '''Create posting classes'''
 [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000])
|  Use the [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000]) form to create the posting classes you have planned. Enter the following for each class: 
*Class ID
*Description
*Account sources and subaccount combination rules
*GL accounts and subaccounts

|- 
| '''9'''
|  '''Create lot/serial classes'''
 [HelpRoot_FormReference\IN_20_70_00|Lot/Serial Classes] ([~/?ScreenId=IN207000|IN207000])
|  Use the [HelpRoot_FormReference\IN_20_70_00|Lot/Serial Classes] ([~/?ScreenId=IN207000|IN207000]) form to create defined lot/serial classes. Enter applicable settings for each class: 
*Class ID
*Description
*Tracking method
*Track expiration date (yes/no)
*Assignment method
*Issue method
*Auto-incremental value
*Share auto-incremental value among class items (yes/no)
*Lot/serial number segments, types, and values (for ''Constant'' types)

|- 
| '''10'''
|  '''Create units of measure'''
|  Use the [HelpRoot_FormReference\CS_20_31_00|Units of Measure] ([~/?ScreenId=CS203100|CS203100])form to create global units of measure and their conversions. You identified these units during the preparation phase of implementation.
|- 
| '''11'''
|  '''Create item classes'''
 [HelpRoot_FormReference\IN_20_10_00|Item Classes] ([~/?ScreenId=IN201000|IN201000])
|  Use the [HelpRoot_FormReference\IN_20_10_00|Item Classes] ([~/?ScreenId=IN201000|IN201000]) form to create the planned item classes. Enter the applicable settings for each class, which may include the following: 
*Class ID
*Description
*Stock item (yes/no)
*Allow negative inventory
*Item type
*Valuation method
*Tax category
*Posting class
*Lot/serial class
*Unit conversions
*Availability calculation options
If you plan to use attributes for the items of this class, first define the attributes and then assign them to the item class.
|- 
| '''12'''
|  '''Complete Inventory Setup settings'''
 [HelpRoot_FormReference\IN_10_10_00|Inventory Preferences] ([~/?ScreenId=IN101000|IN101000])
|  Use the form to maintain the Inventory module global options and defaults you decided upon while preparing for Inventory configuration: 
*Numbering sequences
*Posting and retention settings
*Data entry settings
*Account settings (Accounts Receivable clearing, in-transit, work-in-progress)
*Default item class
*Default reason codes
*Number of decimals for quantity and unit price/cost
*Use of subitems (yes/no)

|- 
| '''13'''
|  '''Create warehouses'''
 [HelpRoot_FormReference\IN_20_40_00|Warehouses] ([~/?ScreenId=IN204000|IN204000])
|  Use the form to create the necessary warehouse master records. Enter the following information, at minimum, for each warehouse: 
*Warehouse ID
*Branch ID
*Description
*Address
*GL accounts and subaccounts
*All planned locations for the warehouse: 
**Location ID
**Description
**Processing options (include in available, cost separately, allowed transactions, pick priority)
*On-the-fly location maintenance (allow, do not allow, allow with warning)
*Preferred locations for receipts, outgoing shipments, customer returns, and drop-ships.

|- 
| '''14'''
|  '''Create stock items'''
 [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500])
|  Use the form to create master records of stock items. Enter the following information, at minimum, for each item: 
*Inventory ID
*Description
*Status
*Item class
*Lot/serial class

Override the settings copied from the item class, if necessary. If the item belongs to a class with attributes specified, enter the appropriate settings for attributes of the item.{br}

For standard-cost items, enter current cost as pending standard cost with effective date prior to first day of live use of the Inventory module
|- 
| '''15'''
|  '''Create non-stock items'''
 [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000])
| 
Use the form to create master records of non-stock items. Enter the applicable information for each item, including the following: 
*Inventory ID
*Description
*Status
*Item class

Override the settings copied from the item class, if necessary, and add any additional information for each item. 
|- 
| '''16'''
|  '''Define inventory cycles'''
 [HelpRoot_FormReference\IN_50_20_00|Update Standard Costs] ([~/?ScreenId=IN502000|IN502000])
| 
|}
You can download and print the [HelpRoot_ImplementChecklists\IN_Configuration_Checklist|Inventory Configuration Checklist] to assist you in configuring the Inventory module. [anchor|#4]
==Initialization==
Once configuration, described in the previous section, is complete, the Inventory module is ready for use. But to move daily operations from your old system to Acumatica ERP, you should migrate current stock data, which this section describes. ((({S:Hint}'''Physical Inventory Count'''
 Ideally, you should perform a physical inventory count to verify and correct stock quantities in the legacy system before migration to Acumatica ERP, so that you do not carry any existing problems to the new system. However, a complete physical inventory count can be a tremendous effort. Consider performing at least a partial physical inventory count in the most crucial areas.
)))((({S:Hint}'''Stock Cost'''
 Inventory items with average and standard cost valuation have only one current cost, which makes them easy to migrate. {br}

Inventory items with FIFO and specific cost valuation can have multiple cost layers. If each cost layer needs to be recreated in Acumatica ERP, this can require a substantial effort. Consider the possibility of migrating a FIFO (specific-cost) item with a single cost layer at the current average cost. (This will not make it an average-costed item; cost layers from the old system are merged into one layer, while new receipts after migration will build new cost layers.) 
)))
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action
!width="80%" ! Description
|- 
| '''Data Preparation'''
| 
 Print detailed stock status and stock valuation reports in the legacy system, and then review and adjust inventory stock in the legacy system. If you do a physical inventory count, stock adjustments and corrections will be its natural result. If you have decided not to do an inventory count, review the stock report for unusual, undesired, or incorrect cases, such as negative stock and too high, too low, or negative cost. Investigate such cases and make necessary adjustments.{br}

Reprint detailed stock status and stock valuation reports. For easier data handling, export them into spreadsheets. This would allow more automated data transformation and import in Acumatica ERP. {br}

Because inventory, warehouse, and location identifiers in the legacy system can be different from those in Acumatica ERP, prepare mapping tables to convert old identifiers to new ones. Using these mapping tables, transform the exported stock reports into Acumatica ERP stock reports in order to get a stock status report with new Acumatica ERP items, warehouses, and locations. In the simplest case, this transformation would be a substitution of old IDs with new IDs. It can also be a merge of records if, for example, you want to reduce the number or locations of warehouses.{br}

If you need to split warehouses and locations, do this either before migration in the legacy system or after migration in Acumatica ERP. If you use automated procedures or scripts for stock migration, format the transformed data according to requirements for input data. In case of manual migration, format the data for better readability to reduce mistakes during data entry.
|- 
| '''Pre-migration'''
|  If you have stardard-cost item, verify and update, if necessary, their costs.
|- 
| '''Migration'''
|  You perform migration manually by entering the stock quantities by using the [HelpRoot_FormReference\IN_30_10_00|Receipts] ([~/?ScreenId=IN301000|IN301000]) form. Open the [HelpRoot_FormReference\IN_30_10_00|Receipts] ([~/?ScreenId=IN301000|IN301000]) form now. ((({S:Warn}Pay special attention for FIFO items: In order to preserve to cost layers, you must enter each cost layer as a separate receipt with an appropriate transaction date. Similar care should be taken for lot- and serial-numbered items if they use the FIFO or LIFO issue method. 
)))
Because the General Ledger module is implemented before the Inventory module, General Ledger accounts will have the full value of the inventory stocks and Inventory migration will double the figures. To eliminate this: 
*Print the [HelpRoot_ReportReference\GL_63_30_00|Transactions for Period] ([~/?ScreenId=GL633000|GL633000]) report, filtered for Inventory transactions. 
*On the [HelpRoot_FormReference\GL_30_10_00|Journal Transactions] ([~/?ScreenId=GL301000|GL301000]) form, enter reversals of the Inventory transactions for the same financial period as the migrated documents. Use the account total amounts from the General Ledger Transactions for Period report, changing debit to credit and vice versa. 
*Verify that all General Ledger accounts have the same balances as before Inventory migration. 

In case of automated migration, seek assistance from your consultant.
|}[anchor|#5]
==Other Considerations==
*'''Physical Inventory''': Physical inventory count is a common method to ensure that data in Inventory is accurate and reliable. Acumatica ERP supports several approaches: full physical inventory count, cycle count, count by movement class, by ABC code, etc. Using Acumatica ERP, your company can create a physical inventory system that best fits its policies and goals. You can perform physical inventories based on various types of physical inventory counts based on different generation methods. 
*:Refer to [HelpRoot_InvMgmt\IN__con_Planning_for_Physical_Inventory|Configuration of Physical Inventory] article for assistance and details.
*'''Replenishment''': Acumatica ERP offers a range of replenishment methods, configurable and adjustable through item-specific parameters, and enables you to automate your material replenishment to high degree. 
*:Refer to [HelpRoot_InvMgmt\IN__con_Configuration_of_Automated_Replenishment|Configuration of Automated Replenishment] article for assistance and details. 
*'''Access restriction''': With standard security settings, every user who is granted rights to create or process inventory transactions can receive and issue any item at any location. In Acumatica ERP, you can control access to item classes, individual items, and warehouses using restriction groups. 
*:Use the following steps to implement customer access restrictions via restriction groups: 
*:1. Collect access requirements: 
**List all users who have to have enter and process inventory transactions. 
**For each listed user, indicate item classes (or items) and warehouses to which the user must have access; after configuration, the user will have no access to unlisted objects. 
**If the user should access a large number of items and cannot access only a small number, list only no-access items and mark the list as &ldquo;Inverse&ldquo;; after configuration of the restriction group, the user will have access to all unlisted items. Alternatively, you can special item class for such items, an set security for the classes rather than items. 
**Remember that once you set up these restriction groups, users not included in the access lists will have no access to any item and warehouse. Although they may have access to the Inventory forms, they will not be able to select items using those forms. 
*:2. Analyze the collected access lists and combine users with identical access requirements into groups. Assign a unique name to each group. 
*:3. Use [HelpRoot_FormReference\SM_20_10_30|Restriction Groups] ([~/?ScreenId=SM201030|SM201030]) to create the identified group. 
*:4. Use [HelpRoot_FormReference\IN_10_20_10|Restriction Groups by Warehouse] ([~/?ScreenId=IN102010|IN102010]), [HelpRoot_FormReference\IN_10_30_10|Restriction Groups by Item Class] ([~/?ScreenId=IN103010|IN103010]), and [HelpRoot_FormReference\IN_10_30_20|Restriction Groups by Item] ([~/?ScreenId=IN103020|IN103020]) form to configure up the restriction groups you have designed 
]]></column>
			<column name="PlainText"><![CDATA[Implementing Inventory This document describes the process of implementing the Inventory module in  Acumatica ERP.  Overview The Inventory module is at the heart of  Acumatica ERP inventory and order management functionality, which also include Purchase Orders 				and Sales Orders. The Inventory module is the first module you implement; the 				Purchase Orders and Sales Orders modules depend on it. The inventory and order 				management functionality facilitates and adapts to the complexity and variety of 				organizations' daily operations, so you can implement virtually any kind of 				inventory and order management model. This document is divided into four parts:  Prerequisites and Dependencies '''Prerequisites and Dependencies''': Describes what modules 					must be set up and configured before you begin implementing this module. Preparation '''Preparation''': Describes the data you should collect and 					analyze. Configuration '''Configuration''': Guides you through the actual 					configuration of the Inventory module. Initialization '''Initialization''': Describes how current inventory stock 					details can be brought into the system. Other 							Considerations '''Other Considerations''': Covers other aspects pertaining to the 					implementation of this module.  This chapter is meant only to guide you through Inventory implementation. For detailed 				descriptions of Inventory forms and capabilities, see the  Overview of the Inventory Processes. Prerequisites and Dependencies The implementation of the Finance suite must be completed,  before you implement the Inventory 				module.  Preparation This section covers the needed preparation before you begin configuring the Inventory 				module. When you are ready to implement this module, begin collecting and analyzing 				the necessary information. Do the following steps (although not necessarily in the 				listed order; many steps can be done in parallel) before you actually configure the 				Inventory module.  Because this is the preparation phase of implementation, 					enter no data into the system at this time.  Action Description Develop conventions for identifying inventory 								items Plan the inventory ID, which is based on the  INVENTORY  									segmented key. Each inventory item, stock or non-stock, has an 									inventory ID. Identifiers (inventory IDs) can be segmented, with 									each segment providing specific information about the item.  Acumatica ERP also supports subitems. They can be useful when 									almost-identical products differ in size, color, and material. 									These variations can be represented by the same inventory ID and 									different subitem codes. Subitem codes can also be segmented, 									for greater detail classification of the products.  Decide how the inventory ID should be structured: how many 									segments it should have, what the length of each segment is, 									which segments should be validated (and for validated segments, 									which of the segment values are valid), and whether 									auto-numbering should be used for a segment.  Also, decide whether you'll use subitems and if so, make sure the 									license includes the  Inventory Subitems  feature. To use 									subitems, you should decide how subitem codes will be structured 									and segmented.  For details, see  Segmented Identifiers 									and  Inventory Subitems.  Define Reason Codes Plan reason codes, which determine the offset account and 									subaccount for receipts, issues, adjustments, and physical 									inventory adjustments. The reason code provides the offset 									account and, If  Subaccounts  are used in your system, the 									reason code defines the sources of the offset subaccount segment 									values.  You need at least four reason codes to be used as default codes for each transaction 									type: receipts, issues, adjustments, and physical inventory 									adjustments. For more information, see   ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) and  Reason Codes for Inventory.  Plan posting classes  To automate accurate postings to General Ledger for every stock 								movement, plan appropriate posting classes. A posting class is a 								collection of settings assigned to an item that defines the source 								of accounts and subaccounts for transactions: the inventory item, 								the warehouse where the transaction occurs, or the posting class 								itself. It also provides particular accounts and subaccounts, if the 								source is the posting class. For subaccounts, you can define rules 								for combining subaccounts from segments of other subaccounts.  You 									can define just one class (this would mean that all inventory 									transactions are posted based on the same rules) or several 									classes (if different items or group of items update GL 									differently). Define the rule for the names of posting 									classes. The following accounts and subaccounts are 									defined by the posting class:  Inventory account and subaccount (asset) Reason code subaccount Sales account and subaccount (revenue) Cost of sales account and subaccount (expense) Standard cost variance account and subaccount (expense) Standard cost revaluation account and subaccount 										(expense) PO accrual account and subaccount (liability) Purchase price variance account and subaccount 										(expense) Landed cost variance account and subaccount (expense)  For details, see   ([~/?ScreenId=IN206000|IN206000]) Posting Classes and  Posting Classes in Inventory.  Define additional posting settings Analyze the accounting requirements for integration with GL, deciding upon the 									following:  Should inventory transactions update General Ledger? Should 										transactions be posted to General Ledger in summary or in 										detail? Should transactions be automatically posted to General 										Ledger upon release, or should posting be done as a separate 										operation? Decide on using two Inventory processing options that can help 								your users avoid the accidental release of incomplete or incorrect 								transactions. These settings, listed below, require additional data 								entry effort (if selected) but provide a better quality of data:  Hold Documents on Entry : When the option is selected, 										each new document is created with the status  On Hold  										and cannot be released immediately. To release the 										transaction, it should be taken off hold first and then 										released as usual. Validate Document Totals on Entry : When this option 										is selected, each transaction requires entry of control 										totals for cost and quantity. A transaction can be released 										only if the system-calculated totals equal the control 										totals.  For more details, see  Posting Settings in the Inventory Module. Collect information about warehouses and locations  Decide which warehouses you need. A warehouse in  Acumatica ERP does not necessarily represent a physical building; you can 								divide a building into multiple areas and define each area as a 								warehouse. A warehouse can even be virtual; for example, goods that 								are between the supplier and your company can be considered in the 									 GIT  (goods in transit) warehouse.  First, plan the 									structure of the warehouse ID and the location ID; these 									identifiers are based, respectively, on the  INSITE  and 										 INLOCATION  segmented keys. Decide whether you will 									use segmented IDs (alternatively, you can instead configure the 									segmented key as one segment with up to 10 alphanumeric 									characters). If the key is segmented, determine how many 									segments (and of what length) will be used, whether the segments 									should be validated (and if so, what kind of values are 									allowed), and whether an auto-numbering segment will be used. 									 Collect the following information about each warehouse 									you will define in  Acumatica ERP:  The warehouse's unique identifier, which can be up to 10 										characters and should comply with your design of the 											 INSITE  segmented key.  The description, or name, of the warehouse.  The address of the warehouse.  The organization's branch the warehouse is assigned to.  The General Ledger accounts and subaccounts to be used if 										the account source is  Warehouse : inventory, reason 										code, sales, cost of sales, standard cost variance, standard 										cost revaluation, purchase order accrual, purchase price 										variance, and landed cost variance.  Indicate what cost (average or last) should be used for 										customer returns of average-costed and FIFO-costed 										inventories.  List of this warehouse's locations to be configured, noting 										the following information for each:  Location ID, which can be up to 10 characters and 												should comply with your design of the 												 INLOCATION  segmented key.  Description  Processing options:  Whether sales are allowed from the location  Whether receipts are allowed at the location  Whether transfers are allowed at the location  Whether assembly operations are allowed at the 												location  Pick priority of the location  Whether separate cost layers will be created 												for this location  Whether the quantities of goods at this 												location will be included in the quantities of 												available goods and included in inventory 												transactions  Whether the location should be restricted for 												specific item or item class (you may need to 												return to this setting after defining item 												classes)  Optionally, indicate preferred locations for: receipts, 										outgoing shipments, customer returns, and drop-ships.  Decide whether users should be able to add new locations for 										this warehouse by entering them directly in inventory 										documents:  Do Not Allow On-the-Fly Entry : This option 												means that all locations of the warehouse must be 												defined before they can be used. This is the safest 												option but can create problems during data entry if 												the list of locations is incomplete.  Allow On-the-Fly Entry : In this case, 												locations do not need to be defined in advance. If a 												user types a nonexistent location ID on a data entry 												screen, the system will automatically add the 												location to the warehouse. While this option 												provides greater flexibility, your site may end up 												with many locations defined due to typos.  Warn but Allow On-the-Fly Entry : Here, too, 												locations can be created on the fly, but the user is 												warned and can opt out of creating the new location. 												If the user has made a data entry error, he or she 												can correct it instead of defining a new location. 											 For more information, see  Multiple Warehouses and 										 Warehouse Locations. For details on warehouse settings, see   ([~/?ScreenId=IN204000|IN204000]) Warehouses 								(IN204000). Develop conventions for and plan lot/serial 								classes  If you use lot or serial numbers to identify and trace your 								company's stock, review your existing numbering conventions, and 								plan the lot/serial classes that can be assigned to stock items. 									 Acumatica ERP supports multiple concurrent lot or serial numbering schemes, 									so that different items can be numbered differently. 									 Lot and serial numbers are defined at the item class 									level. Some classes include items tracked by lot numbers, some 									include items tracked by serial numbers, and others include 									items that are not tracked by either number (you should define 									at least one lot/serial class for such items.) For each class, 									decide which group of items it will include.  In addition 									to deciding which tracking method is used for the class, decide 									upon the following:  Whether to track expiration dates or not. How the numbers are assigned. The assignment method can be 										one of the following:  When received: Items get a lot/serial number when 												they are received. When used: Items don’t get a lot/serial number until 												they're issued them from stock or used in assembly. 											 What the issue method is for items of the class:  FIFO : Lot/serial numbers are picked for issue 												by receipt date (oldest first). LIFO : Lot/serial numbers are picked for issue 												by receipt date (newest first). Sequential : Lot/serial numbers are picked in 												alphabetic order. Expiration : Lot/serial numbers are picked by 												expiration date (faster-expiring first). Numbering conventions for lot and serial numbers, numbering 									conventions can be shared among stock items in two ways:  Stock items with different inventory IDs may have the same 										serial number. To implement this numbering scheme in  Acumatica ERP, assign these stock items to the same lot/serial class 										but specify for each a separate numbering sequence. Stock items with different inventory IDs have unique serial 										numbers. To implement this numbering scheme in  Acumatica ERP, have these items belong to the same lot/serial class and 										share an auto-generated numbering sequence. This guarantees 										that all automatically generated lot or serial numbers will 										be unique. You still can manually assign the same serial 										number to multiple items with different inventory IDs;  Acumatica ERP ensures uniqueness between items with the same inventory 										ID. You should decide upon the structure of the lot or serial 									number for each lot/serial class you will define: the number of 									segments, the type of each segment, and the possible values for 									each validated segment.  Acumatica ERP supports the following types of segments:  Constant : The segment is a predefined alphanumeric 										string that is replicated to all lot or serial numbers. Date : The segment shows any of the following parts of 										the date: day, month number, month name, and two- or 										four-digit year. Auto-incrementing value : The system automatically 										assigns the segment value, based on the numbering sequence, 										when a new lot/serial number is generated. Decide which of the defined classes will serve as the 									default lot/serial class. For details about classes and 									possible settings, see   ([~/?ScreenId=IN207000|IN207000]) Lot/Serial Classes 									(IN207000); for more information about lot and serial 									numbers, see  Lot and Serial Number Tracking and  Lot and Serial Numbers. Define global units of measure  Review the units of measure used for different items, and 								identify those applicable to most of the items. Write down the list 								of global UOMs and define conversion rules. Choose the UOMs to be 								the basic UOMs for specifying weights and volumes, respectively. See 								the  Units of Measure and Conversions for more information. Collect information about stock items  Collect the following general details about stock items.  Instead of creating 									records for each item manually, you can import the stock item 									records from your legacy system. Consider mapping the item 									properties used in the old system to the properties used in  Acumatica ERP (with simultaneous conversion if needed). Inventory ID : Consider creating a rule for assigning 										identifiers, based on the structure you've planned for the 											 INVENTORY  segmented key. Description : Define a rule for providing brief 										descriptions of the products. Status : Choose the appropriate status from the 										options listed below; normally, only active products are 										migrated:  Active No Sales  (item cannot be sold) No Purchases  (item cannot be purchased) No Request  (item can't be used in requisition 												requests) Inactive Type : Select one of  Acumatica ERP's product types, which can be useful in reports but don't 										affect processing:  Finished Good Component Part Subassembly Is a Kit : Indicate whether the stock item is a kit 										assembled from other items; if so, list components and 										quantities. See the  Inventory Item Kits article for more information about 										kits. Units of measure : First, assign the stock item a base 										or primary unit of measure.  Acumatica ERP uses this required unit to maintain the stock level for 										the item. If the item can be counted in multiple units (such 										as pieces, packs, or boxes), list all of them before 										choosing which should be used as the base unit of measure. 										We recommend that you use the smallest unit as the base 										unit, to avoid complications. Also choose the default sales 										and purchase units of measure (the units used most 										frequently in sales and purchases). Default storage : Indicate whether the stock item is 										mostly stored in, received to, and/or issued from one 										particular warehouse and location (and if so, which). Also collect the following accounting and processing details 								for stock items:  Valuation Method : Choose an appropriate valuation 										method for the stock item:  Average : The entire quantity of the item on 												hand is valued with the same cost, which is the 												total cost of all quantities of the items at the 												warehouses divided by the total quantity. No 												distinction is made regarding whether a particular 												unit was purchased cheaply or expensively; all are 												valued equally. This is a moving average cost: each 												receipt adds to total cost and total quantity, 												causing average cost to be recalculated. FIFO  (First In, First Out): Each receipt 												creates a separate cost layer. Stock issue takes the 												cost from cost layers, starting from the oldest one; 												when the first cost layer is depleted, the second 												oldest layer is used, and so on until all issued 												quantity is costed. Standard : The entire on-hand quantity of the 												item is valued with the same cost. Unlike average 												cost, standard cost is not built by actual receipts; 												it is defined by the product manager (from analysis 												of production, storage, handling costs, and the 												like). Standard cost is reviewed regularly through 												standard cost revaluation. Specific : Each piece of the stock item has 												its own individual cost, which is defined by its 												purchase price. This valuation method is used for 												items with lot or serial numbers. The lot/serial 												number identifies the product piece and its cost 												layer. Lot or serial numbering : If the stock item requires 										lot or serial numbering, specify an appropriate lot/serial 										class. Posting class : Select the appropriate posting class 										for the item's transactions. GL accounts and subaccounts  (inventory, reason code, 										sales, cost of sales, standard cost variance, standard cost 										revaluation, purchase order accrual, purchase price 										variance, and landed cost variance): The accounts and 										subaccounts assigned to the item can be different from those 										in the selected posting class. They will be used if the 										account source is  Inventory Item . Taxes : List taxes that apply to purchases and sales 										of the stock item in the countries and states where your 										company operates. If an appropriate tax category is already 										created in  Acumatica ERP, indicate it instead of a tax list. Commissionable : Indicate if salesperson commission is 										to be calculated for sales of the item. For standard-cost items, indicate current standard cost. For 									details, see the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500),  Inventory Items, and  Item Costs and Valuation Methods articles. Collect information about non-stock items  Gather information about all  non-stock items : items such 								as services or licenses for which you do not need to monitor 								quantity in warehouses, and that are probably not stored in 								warehouses at all. Purchases and sales of such items do not affect 								company assets but are debited or credited directly to income and 								expense accounts. Collect the following details for each type of 								non-stock items and consider mapping of those details to the details 								used for stock items in your legacy system to perform import of the 								items.  Inventory ID : Assign the item a unique identifier, 										based on the structure you've planned for the 											 INVENTORY  segmented key. Description : Provide a brief description of the 										item. Status : Choose a status; the available statuses are 										the same as those for stock items. Type : Select one of the following types:  Non-Stock Item : A general type of non-stock 												item Labor : A type of non-stock item to be used as 												labor hour rates Service : A type of non-stock item to be used 												as service fees Charge : A type of non-stock item to be used 												as charge rates Expense : A type of non-stock item to 												designate specific expenses Whether the item is a kit item; for details, see  Inventory Item Kits. Units of measure : If units of measure apply, specify 										the base, sales, and purchase units. GL accounts and subaccounts : Note the default General 										Ledger accounts used to post inventory transactions: the 										sales accounts, expense accounts, and accounts for posting 										transactions related to kit assembly (if the item is a 										kit). Taxes : Describe which taxes apply to purchases and 										sales of the non-stock item. If an appropriate tax category 										is already created in  Acumatica ERP, indicate it instead of a list of taxes. Commissionable : Indicate if salesperson commission is 										to be calculated for sales of the item. For details, see  Non-Stock Items in the Inventory Module and   ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items (IN202000). Identify taxes and tax categories  Analyze the tax requirements for stock and non-stock items, and 								identify new taxes and tax categories required for the items. For 								details, see   ([~/?ScreenId=TX205000|TX205000]) Taxes 								(TX205000).  Define item classes  Item classes provide default settings for stock or non-stock 								items when you create new items. Group items with similar settings 								into item classes, which can include any of the following settings: 									 Item type Valuation method Tax category Posting class Lot/serial class Units of measure Price class Availability settings Whether negative quantities will be allowed for items of the 										class For each identified class, decide how available quantity should 								be estimated for items of the class. Possible deductions from the 								quantity on hand can be any of the following: quantity on issues, 								quantity on customer orders, back-ordered quantity, quantity 								shipping, quantity shipped, and quantity on kit assembly demand. 								Possible additions to the quantity on hand can be any of these: 								quantity on receipts, quantity in transit, quantity on purchase 								orders and purchase order receipts, and quantity in kit assembly 								supply.  Most of the class settings are copied 									from the item class to a new item once you select the item 									class, but you can select other values for this item. Rules on 									availability and whether to allow negative quantities, however, 									are defined at the item class level and cannot be changed for a 									particular item of the class.  For more information, see 									 Availability Calculation. Define attributes With  Acumatica ERP, to additional properties of items, you can add user-defined 								attributes and make some of them  Required . The attributes are 								defined at the item class level. For more information, see  Attributes. Plan physical inventory counts Partial or full inventory counts are mandatory for any resale 									business. Decide how often you need to perform full counts. 									Decide whether you need to perform partial counts (based on item 									classes, specific items, ABC or movement classes) and how often.  Plan physical inventory types, for each type collect the 									following information: Unique identifier of the type and description Generation method:  Full Inventory, By Inventory Item, 												By item Class, By ABC code, By Movement Class, By 												Cycle . Optionally, whether to perform counts of this type in a 											particular warehouse and particular locations only How to organize data on count sheets Plan Physical Inventory Cycles Decide how many cycles you need for the inventory types you will 								use. A cycle defines how often the counting should be 								performed. Create a list of GL accounts used in Inventory Check that all the accounts needed for the Inventory module exist 									on the chart of accounts, and write down the missing ones: The Accounts Receivable clearing account and subaccount, 										used to offset the sales revenue posting for the invoice 										transaction type The in-transit account and subaccount, used in two-step 										transfers to hold the cost of stock issued from the source 										warehouse and not yet received at the destination The work-in-progress account and subaccount, used in kit 										assembly to hold the cost of the kit's components Plan numbering sequences  Acumatica ERP provides default numbering sequences for Inventory batches as 									well as for each type of inventory transactions: receipt 									(transfer), issue, adjustment, assembly, replenishment, and 									physical inventory counts. You do not have to use a separate numbering 									sequence for each type of transactions— multiple 									transaction types can share a numbering sequence. You can use the default sequences or create custom numbering 									sequences—for example, if you want to split a numbering 									sequence between the branches. If you have branches, the same 									sequence will be used by all branches by default so that the 									transactions with subsequent reference numbers may belong to 									different branches. However, you can split a sequence between 									branches so that different ranges of reference numbers will 									belong to different branches.   You should also define the numbering sequences for the 									auto-numbered segments of the  INVENTORY  and  INSITE  									segmented keys (used for inventory IDs and warehouse IDs), if 									such a segment is used. For each of these, plan the numbering 									sequence: the start number, the numbering step or increment, and 									the end number. For more information, see  Numbering Sequence Usage. Review other settings for Inventory configuration  Define the number of decimal places to be used for the 								following:  The quantity of stock and non-stock items throughout  Acumatica ERP. Unit price and unit cost (both are controlled by one 										setting); total price and cost follow currency 											settings. These settings are also 											used in the Sales Orders and Purchase Orders 											modules. Define the global units of weight and volume to be used in 									the Inventory module as well as in the Purchase Orders and Sales 									Orders modules to evaluate weights and volumes. For details, 								refer to the   ([~/?ScreenId=IN101000|IN101000]) Inventory Preferences (IN101000) article. Plan Roles Review the duties of all employees who handle stock items in 								warehouses and who monitor non-stock items. Define a role required 								for each typical task performed by employees.  For example, for 									the ability to receive the purchased goods at specific 									warehouse, a user should have a role that has the  Insert  									or  Delete  access to the   ([~/?ScreenId=IN301000|IN301000]) Receipts (IN301000) form, 									at least the  View-Only  access to the   ([~/?ScreenId=IN204000|IN204000]) Warehouses (IN204000) form, 									and the  View-Only  access to the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500) 									form. For more information on roles, see  Role-Based Access. Plan Restriction Groups With a collection of roles, that grant rights to create inventory 									transactions, a user can receive and issue any items at any 									warehouse. In  Acumatica ERP, you can control visibility of 									 individual items within classes 									and particular warehouses to users by using restriction groups. 									For more information, see  Inventory Item Security and  Warehouse Security.  Collect security requirements:  List all users who have to have enter and process inventory 										transactions.  If the user should work with a large number of items list 										only items that the user should not see and mark the list as 										"Inverse"; after configuration of the restriction group, the 										user will see all unlisted items. 										 Remember that once you set up these restriction 									groups, users not included in the group will not see any item 									and warehouse. Although they may have access to the Inventory 									forms, they will not be able to select items using those forms. 								 You can download and print the  Inventory Preparation Checklist to assist you in collecting the data for Inventory 				implementation.  Configuration This section walks you through the process of actually configuring the Inventory 				module in  Acumatica ERP.  No. Action Description 1 Define auto-numbering sequences  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences 									(CS201010)  Use the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form in the Configuration Settings module to define 								the numbering sequences for all types of inventory documents:  Receipts (transfers) Issues Adjustments Assemblies Replenishments Physical inventory counts If the  INVENTORY ,  INSITE , and  INLOCATION  								segmented keys (used for inventory IDs, warehouse IDs, and warehouse 								location IDs) use an auto-numbering segment, define these numbering 								sequences as well.  2 Define segmented keys  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys 									(CS202000)  Use the   ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) form in the Configuration Settings module to 								implement the chosen structure of the following segmented keys 								planned during the preparation stage:  The  INVENTORY  segmented key, which inventory IDs are 										based on The  INSITE  segmented key, which warehouse IDs are 										based on The  INLOCATION  segmented key, which warehouse 										location IDs are based on 3 Maintain validation table for key segments  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts 									(GL202500)  Use the   ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) form in the Configuration Settings module to enter 								valid codes for any  INVENTORY ,  INSITE , and 									 INLOCATION  segments that are validated. (Non-validated 								and auto-numbered segments do not require maintenance of segment 								values.) 4 Create General Ledger accounts  Use the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form 								to add any needed General Ledger accounts identified during 								preparation (especially the  Consider general posting settings for 									Inventory setup  step). For details, see  To Add an Account to the Chart of Accounts.  5 Create General Ledger subaccounts  ([~/?ScreenId=GL203000|GL203000]) Subaccounts 									(GL203000)  Use the   ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) form to create any necessary subaccounts. See  To Add a Subaccount 								for more information.  6 Create tax categories  ([~/?ScreenId=TX205500|TX205500]) Tax Categories 									(TX205500)  Use the   ([~/?ScreenId=TX205500|TX205500]) Tax Categories (TX205500) form to create any additional tax categories you 								identified during preparation. Enter the following for each 								category:  Tax category ID Description Inclusive/exclusive (select the  Exclude Listed Taxes  										check box to make the tax category exclusive) List of taxes (select taxes that have been defined by their 										ID, and their information will be filled in) 7 Create reason codes  ([~/?ScreenId=CS211000|CS211000]) Reason Codes 									(CS211000)  Use the   ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) form to create the reason codes you designed for 								the following:  Receipts Issues Transfers Adjustments There should be at least one reason code for each transaction 								type. 8 Create posting classes  ([~/?ScreenId=IN206000|IN206000]) Posting Classes 									(IN206000)  Use the   ([~/?ScreenId=IN206000|IN206000]) Posting Classes (IN206000) form to create the posting classes you have 								planned. Enter the following for each class:  Class ID Description Account sources and subaccount combination rules GL accounts and subaccounts 9 Create lot/serial classes  ([~/?ScreenId=IN207000|IN207000]) Lot/Serial Classes 									(IN207000)  Use the   ([~/?ScreenId=IN207000|IN207000]) Lot/Serial Classes (IN207000) form to create defined lot/serial classes. Enter 								applicable settings for each class:  Class ID Description Tracking method Track expiration date (yes/no) Assignment method Issue method Auto-incremental value Share auto-incremental value among class items (yes/no) Lot/serial number segments, types, and values (for 											 Constant  types) 10 Create units of measure  Use the   ([~/?ScreenId=CS203100|CS203100]) Units of Measure (IN203000)form to create global units of measure and their 								conversions. You identified these units during the preparation phase 								of implementation. 11 Create item classes  ([~/?ScreenId=IN201000|IN201000]) Item Classes 									(IN201000)  Use the   ([~/?ScreenId=IN201000|IN201000]) Item Classes (IN201000) form to create the planned item classes. Enter the 								applicable settings for each class, which may include the following:  Class ID Description Stock item (yes/no) Allow negative inventory Item type Valuation method Tax category Posting class Lot/serial class Unit conversions Availability calculation options If you plan to use attributes for the items of this class, 								first define the attributes and then assign them to the item 								class. 12 Complete Inventory Setup settings  ([~/?ScreenId=IN101000|IN101000]) Inventory Preferences 									(IN101000)  Use the form to maintain the Inventory module global options and 								defaults you decided upon while preparing for Inventory 								configuration:  Numbering sequences Posting and retention settings Data entry settings Account settings (Accounts Receivable clearing, in-transit, 										work-in-progress) Default item class Default reason codes Number of decimals for quantity and unit price/cost Use of subitems (yes/no) 13 Create warehouses  ([~/?ScreenId=IN204000|IN204000]) Warehouses 									(IN204000)  Use the form to create the necessary warehouse master records. 								Enter the following information, at minimum, for each warehouse:  Warehouse ID Branch ID Description Address GL accounts and subaccounts All planned locations for the warehouse:  Location ID Description Processing options (include in available, cost 												separately, allowed transactions, pick 												priority) On-the-fly location maintenance (allow, do not allow, allow 										with warning) Preferred locations for receipts, outgoing shipments, 										customer returns, and drop-ships. 14 Create stock items  ([~/?ScreenId=IN202500|IN202500]) Stock Items 									(IN202500)  Use the form to create master records of stock items. Enter the 								following information, at minimum, for each item:  Inventory ID Description Status Item class Lot/serial class Override the settings copied from the item class, if 									necessary. If the item belongs to a class with attributes 									specified, enter the appropriate settings for attributes of the 									item. For standard-cost items, enter current cost as 									pending standard cost with effective date prior to first day of 									live use of the Inventory module 15 Create non-stock items  ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items 									(IN202000) Use the form to create master records of non-stock items. Enter 									the applicable information for each item, including the 									following:  Inventory ID Description Status Item class Override the settings copied from the item class, if necessary, 									and add any additional information for each item.  16 Define inventory cycles  ([~/?ScreenId=IN502000|IN502000]) Update Standard Costs 								(IN502000) You can download and print the  Inventory Configuration Checklist to assist you in configuring the Inventory module.  Initialization Once configuration, described in the previous section, is complete, the Inventory 				module is ready for use. But to move daily operations from your old system to  Acumatica ERP, you should migrate current stock data, which this section describes.  Physical Inventory Count  Ideally, you should perform a 					physical inventory count to verify and correct stock quantities in the legacy 					system before migration to  Acumatica ERP, so that you do not carry any existing problems to the new system. However, a 					complete physical inventory count can be a tremendous effort. Consider 					performing at least a partial physical inventory count in the most crucial 					areas. Stock Cost  Inventory items with average and standard cost 					valuation have only one current cost, which makes them easy to migrate. 					 Inventory items with FIFO and specific cost valuation can have multiple 					cost layers. If each cost layer needs to be recreated in  Acumatica ERP, this can require a substantial effort. Consider the possibility of migrating 					a FIFO (specific-cost) item with a single cost layer at the current average 					cost. (This will not make it an average-costed item; cost layers from the old 					system are merged into one layer, while new receipts after migration will build 					new cost layers.)  Action Description Data Preparation  Print detailed stock status and stock valuation reports in the 									legacy system, and then review and adjust inventory stock in the 									legacy system. If you do a physical inventory count, stock 									adjustments and corrections will be its natural result. If you 									have decided not to do an inventory count, review the stock 									report for unusual, undesired, or incorrect cases, such as 									negative stock and too high, too low, or negative cost. 									Investigate such cases and make necessary adjustments. Reprint detailed stock status and stock valuation reports. For 									easier data handling, export them into spreadsheets. This would 									allow more automated data transformation and import in  Acumatica ERP.  Because inventory, warehouse, and location identifiers in the 									legacy system can be different from those in  Acumatica ERP, prepare mapping tables to convert old identifiers to new 									ones. Using these mapping tables, transform the exported stock 									reports into  Acumatica ERP stock reports in order to get a stock status report with new 										 Acumatica ERP items, warehouses, and locations. In the simplest case, this 									transformation would be a substitution of old IDs with new IDs. 									It can also be a merge of records if, for example, you want to 									reduce the number or locations of warehouses. If you need to split warehouses and locations, do this either 									before migration in the legacy system or after migration in  Acumatica ERP. If you use automated procedures or scripts for stock 									migration, format the transformed data according to requirements 									for input data. In case of manual migration, format the data for 									better readability to reduce mistakes during data entry. Pre-migration  If you have stardard-cost item, verify and update, if necessary, 								their costs. Migration  You perform migration manually by entering the stock quantities by using the   ([~/?ScreenId=IN301000|IN301000]) Receipts 								(IN301000) form. Open the   ([~/?ScreenId=IN301000|IN301000]) Receipts 								(IN301000) form now.  Pay special attention 									for FIFO items: In order to preserve to cost layers, you must 									enter each cost layer as a separate receipt with an appropriate 									transaction date. Similar care should be taken for lot- and 									serial-numbered items if they use the FIFO or LIFO issue method. 									 Because the General Ledger module is implemented 									before the Inventory module, General Ledger accounts will have 									the full value of the inventory stocks and Inventory migration 									will double the figures. To eliminate this:  Print the   ([~/?ScreenId=GL633000|GL633000]) Transactions for Period 										(GL633000) report, filtered for Inventory transactions.  On the   ([~/?ScreenId=GL301000|GL301000]) Journal Transactions 										(GL301000) form, enter reversals of the Inventory 										transactions for the same financial period as the migrated 										documents. Use the account total amounts from the General 										Ledger Transactions for Period report, changing debit to 										credit and vice versa.  Verify that all General Ledger accounts have the same 										balances as before Inventory migration.  In case of automated migration, seek assistance from your 									consultant. Other Considerations Physical Inventory : Physical inventory count is a common method to ensure 					that data in Inventory is accurate and reliable.  Acumatica ERP supports several approaches: full physical inventory count, cycle count, 					count by movement class, by ABC code, etc. Using  Acumatica ERP, your company can create a physical inventory system that best fits its 					policies and goals. You can perform physical inventories based on various types 					of physical inventory counts based on different generation methods.  Refer to 							 Configuration of Physical Inventory 						article for assistance and details. Replenishment :  Acumatica ERP offers a range of replenishment methods, configurable and adjustable through 					item-specific parameters, and enables you to automate your material 					replenishment to high degree.  Refer to  Configuration of Automated Replenishment article for assistance and details.  Access restriction : With standard security settings, every user who is granted rights 					to create or process inventory transactions can receive and issue any item at 					any location. In  Acumatica ERP, you can control access to item classes, individual items, and warehouses 					using restriction groups.  Use the following steps to implement customer 						access restrictions via restriction groups:  1. Collect access 						requirements:  List all users who have to have enter and process inventory 							transactions.  For each listed user, indicate item classes (or items) and warehouses to 							which the user must have access; after configuration, the user will have 							no access to unlisted objects.  If the user should access a large number of items and cannot access only 							a small number, list only no-access items and mark the list as 							"Inverse"; after configuration of the restriction group, the user will 							have access to all unlisted items. Alternatively, you can special item 							class for such items, an set security for the classes rather than items.  Remember that once you set up these restriction groups, users not 							included in the access lists will have no access to any item and 							warehouse. Although they may have access to the Inventory forms, they 							will not be able to select items using those forms.  2. Analyze the collected access lists and combine users with identical 						access requirements into groups. Assign a unique name to each group. 						 3. Use   ([~/?ScreenId=SM201030|SM201030]) Restriction Groups (SM201030) to 						create the identified group.  4. Use   ([~/?ScreenId=IN102010|IN102010]) Restriction Groups by Warehouse (IN102010),   ([~/?ScreenId=IN103010|IN103010]) Restriction Groups by Item Class (IN103010), and   ([~/?ScreenId=IN103020|IN103020]) Restriction Groups by Item (IN103020) form to configure 						up the restriction groups you have designed  ]]></column>
		</row>
		<row PageID="a143862f-9d84-43a5-872d-e354f4ee08ea" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b1a35907-902e-3884-3035-c73e1e3f35d9" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes the process of implementing the Purchase Orders module in Acumatica ERP. 
==Overview==
The Purchase Orders module provides functionality for efficient management of your company supply chain and optimization of the cost of acquiring materials and services. The Purchase Orders module helps you to monitor purchasing operations and analyze in detail your company&rsquo;s purchasing activities and procurement processes. {br}

As with other sections of the Implementation Guide, this document is divided into three parts: 
*[[#1|'''Prerequisites and Dependencies''']: Describes what modules must be set up and configured before you begin implementing this module.
*[[#2|'''Preparation''']: Describes what data you should collect, arrange, and analyze.
*[[#3|'''Configuration''']: Guides you through the actual configuration of the Purchase Orders module.
*[[#4|'''Initialization''']: Describes how opening balances and historic data can be brought into the system.

This document is meant only to assist you with the implementation process. For detailed descriptions of Purchase Orders forms and capabilities, see [HelpRoot_OrderMgmt\PO__PO_Features|Purchase Orders Processes] in the [HelpRoot_OrderMgmt\SO_00_00_00|Order Management] guide. [anchor|#1]
==Prerequisites and Dependencies==
The implementation of the Finance suite and of the Inventory module must be completed, before you implement the Purchase Orders module. [anchor|#2]
==Preparation==
This section covers the preparation that needs to occur before you begin configuring the Purchase Orders module. The first task in implementing a module is to collect and analyze the necessary information. The following steps should be done before the actual configuration of the Purchase Orders module.((({S:Hint}Enter no data into the system at this time. The information collection, though, need not be done in the listed order; many steps can be done in parallel.
)))[anchor|#table_vgm_w3k_tl]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action 
!width="80%" ! Description
|- 
| '''Collect purchasing- related information on vendor locations'''
|  Vendors are companies or private individuals that supply goods or services to your organization. You can purchase items from different locations of the same vendor. Collect and verify purchasing-related information for every location of every vendor:[anchor|#ul_pjm_w3k_tl]
*Shipper&rsquo;s address and other contact information.
*Tax zone associated with the vendor location; for details, see [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000]).
*Shipping terms used in relations with the vendor; for details, see [HelpRoot_FormReference\CS_20_80_00|Shipping Terms] ([~/?ScreenId=CS208000|CS208000]).
*FOB point where the shipment title passes from the vendor to your organization; for details, see [HelpRoot_FormReference\CS_20_85_00|FOB Points] ([~/?ScreenId=CS208500|CS208500]).
*Lead time (days), which is the time from the placing of an order to the delivery of the goods or services.
*Receiving branch and default warehouse of your organization to receive goods from the vendor location.
*Carrier to be used by vendor for shipping from this vendor location.
*Receipt processing policies for this location: 
**Minimum and maximum percentage of goods required for receipts (calculated from the quantity on the purchase order) or a threshold for receipts, which is a minimum percentage of goods that should be received before a purchase order will be closed.
**Action to be performed if the minimum and maximum or threshold conditions are not satisfied (reject or accept the goods).
*Whether orders should be printed and sent by postal services or they should be emailed to the vendor.
*Payment method to be used to pay for goods received from this location, additional payment instructions, and a number of days required for payments to reach this vendor location.
*General Ledger accounts to be used for transactions associated with this location: 
**Expense account and subaccount for expenses (non-stock items)
**Freight account and subaccount

For details, see [HelpRoot_FormReference\AP_30_30_10|Vendor Locations] ([~/?ScreenId=AP303010|AP303010]). 
|- 
| '''Plan auto-numbering sequences for orders'''
| 
Configuring the Purchase Orders module requires numbering sequences for regular purchase orders, blanket orders, and Purchase Orders receipts. These sequences are used to ensure that each purchasing document (order or receipt) will get a unique reference number in the system.{br}

 Acumatica ERP is installed with ready-to-use numbering sequences for Purchase Orders documents:[anchor|#ul_cnm_w3k_tl]
*POORDER: Numbering sequence for orders of the Purchase Orders module, ranging from 000000 to 999999
*PORECEIPT: Numbering sequence for Purchase Orders receipts, ranging from 000000 to 999999
You can use these sequences or you can create the sequences that fit your needs best. Decide whether blanket orders will share a numbering sequence with other purchase orders. For details, see [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]). 
|- 
| '''Verify posting rules'''
|  The Purchase Orders module is tightly integrated with the Accounts Payable and Inventory modules. Purchase Orders documents (receipt, return, and landed cost) create appropriate transactions in Inventory and Accounts Payable. After that, Inventory and Accounts Payable documents create postings to General Ledger. 
Analyze the accounting requirements for the purchasing transactions and review the available posting classes. Specify the sources for the following accounts and subaccounts that are required for purchasing transactions: [anchor|#ul_alm_w3k_tl]
*Purchase Orders accrual account and subaccount
*Purchase price variance account and subaccount
*Landed cost variance account and subaccount
{br}

The following sources are available: ''Inventory Item'' (or ''Non-stock Item''), ''Warehouse'', ''Employee'', ''Branch'', ''Vendor Location'' (for non-stock items only), or ''Posting class''.{br}

For more information, see [HelpRoot_InvMgmt\IN__con_Posting_Classes__Definition_and_Usage|Posting Classes in Inventory]. 
|- 
| '''Design Reason Codes'''
| Analyze posting requirements for returns and for landed cost adjustments. Design two reason codes for use in the Purchase Orders module: one to be used for the purchase returns, and one to be used for landed cost adjustments. For details, see [HelpRoot_InvMgmt\IN__con_Reason_Codes__Definition_and_Usage|Reason Codes for Inventory].
|- 
| '''Design landed cost codes'''
|  Landed cost codes are used to specify additional costs incurred for shipping purchased goods to your organization warehouses or to customer locations if the goods are drop-shipped. For more information, see [HelpRoot_OrderMgmt\PO__con_Landed_Cost_Tracking|Processing Landed Cost Documents]. 
For each type of possible landed costs, assign a landed cost code and description, and collect the following data: [anchor|#ul_zlm_w3k_tl]
*Types of landed cost, which may include freight or mixed charges, customs duties, or VAT taxes
*Application method (where you will use the landed cost code: in Purchase Orders, in Accounts Payable, or in both modules)
*Allocation method (by cost, quantity, weight, or volume)
*Vendor who will bill for additional cost and the vendor location
*Reason code for landed cost adjustments
*GL accounts to be updated by landed cost transaction: 
**''Landed Cost Accrual ''account (of the ''Expense'' type) and subaccount for items with the any valuation methods except standard
**''Landed Cost Variance'' account (of the ''Expense'' type) and subaccount for items with the standard cost valuation method
*Tax category or categories applicable to the landed costs

For details, see [HelpRoot_FormReference\PO_20_20_00|Landed Cost Codes] ([~/?ScreenId=PO202000|PO202000]). 
|- 
| '''Design ship via codes'''
|  ''Ship via codes'' denote all possible methods your company uses to ship goods to customers and your vendors use to ship goods to your company. 
|- 
| '''Plan needed FOB points'''
|  Define FOB points in relations with the vendors. They can be printed on purchase orders but have no effect on order or receipt processing. If you decide to use FOB points, compile a list of them, providing the following information for each: [anchor|#ul_kzt_gwj_tl]
*FOB point ID (for example, a short name of the port) 
*FOB point description

|- 
| '''Verify General Ledger accounts'''
| 
 Verify that all needed General Ledger accounts have been created in the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]). Prepare a list of missing General Ledger accounts.{br}

The Purchase Orders module requires the following accounts: [anchor|#ul_hlm_w3k_tl]
*Freight account to be used for freight expenses
*PO Accrual account to be used for landed costs
*Accounts for reason codes
*Accounts for ship via codes

|- 
| '''Verify General Ledger subaccounts'''
| Verify that all needed General Ledger subaccounts have been created in [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]). Prepare a list of missing General Ledger subaccounts.
|- 
| '''Plan on maintaining vendor catalogs'''
| 
To facilitate purchasing, you can upload to the system vendor price lists and update them periodically. As a rule, inventory IDs used in your organization are different from those used by vendors. To be able to maintain vendor catalogs, for each inventory item, specify its alternative IDs (including barcodes) used by vendors and establish rules for conversion of UOMs used by vendors to UOMs used in your system. Write down missing UOMs and conversion rules.{br}

For more information, see [HelpRoot_OrderMgmt\PO__con_Vendor_Catalog|Vendor Catalogs]. For details, see [HelpRoot_FormReference\PO_20_10_00|Vendor Inventory] ([~/?ScreenId=PO201000|PO201000]).
|- 
| '''Plan approval procedures'''
| According to generally established policies, purchase orders may be subject to approval. Analyze how different types of orders should be approved in your organization and by whom. For more information, see [HelpRoot_OrderMgmt\PO__con_Purchase_Order_Approvals|Purchase Order Approval]. Write down the list of workgroups with their members, and the conditions for documents to comply to be assigned for approval to a specific group. 
|- 
| '''Design roles'''
| Design the roles you need for users who will enter and process purchase orders, receive the purchased goods, configure approvals, and maintain vendor catalogs with actual vendor prices.
|}
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action 
!width="80%" ! Description
|- 
| '''Collect vendor locations as they relate to purchasing'''
|  Vendors are companies or private individuals that supply goods or services to your company. You can receive materials from different vendor locations. Define or verify all locations for each vendor. For each vendor location from the Accounts Payable module, you should collect (or verify) the following data:
*Shipper&rsquo;s address and other contact information.
*Vendor&rsquo;s tax zone associated with the vendor location; for details, see [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000]).
*Shipping terms used in relations with the vendor; for details, see [HelpRoot_FormReference\CS_20_80_00|Shipping Terms] ([~/?ScreenId=CS208000|CS208000]).
*FOB point where the shipment title passes from the vendor to your company; for details, see [HelpRoot_FormReference\CS_20_85_00|FOB Points] ([~/?ScreenId=CS208500|CS208500]).
*Lead time (days), which is the time from the placing of an order to the delivery of the goods or services.
*Receiving location of your company.
*Carrier of cargo to be used with this vendor location; for more information, see [HelpRoot_FormReference\CS_20_75_00|Ship via Codes] ([~/?ScreenId=CS207500|CS207500]).
*Line type; receiving goods are intended for inventory, intended for immediate sales and not to be stocked, or non-stock items and services.
*Default warehouse of your company to receive goods from the vendor location.
*Purchase Orders receipt processing policies to serve as defaults for every purchase order and this location: 
**Minimum and maximum percentage of goods received for which a receipt will be issued (calculate from the quantity on the purchase order).
**Threshold receipt, which is a minimum percentage of goods that should be received before a purchase order will be closed.
**Receipt action to be performed if the minimum and maximum or threshold receipt conditions are not satisfied (reject or accept the goods).
**Requirements of printing and emailing the purchase order for a vendor.
*General Ledger accounts: 
**Expense account/sub: Default value for non-stock items&rsquo; expenses.
**Freight account/sub: Default value for freight expenses.

For details, see [HelpRoot_FormReference\AP_30_30_10|Vendor Locations] ([~/?ScreenId=AP303010|AP303010]). 
|- 
| '''Verify purchase accounting posting rules'''
|  The Purchase Orders module is an add-on module to the Accounts Payable and Inventory modules. Purchase Orders documents (receipt, return, landed cost) create appropriate transactions in Inventory and Accounts Payable. Afterwards, Inventory and Accounts Payable create postings to General Ledger, depending on the inventory item, location, transaction type, and other conditions. Accounts and subaccounts for purchasing transactions can be obtained from the following entities: 
*Inventory Item: Account and subaccount are sourced from the item record.
*Warehouse: Account and subaccount are sourced from the warehouse record.
*Posting Class: Account and subaccount are taken from a special set of settings, called Posting Class, independent from the inventory item and warehouse.
*Employee: Expense subaccount segments for non-stock items are sourced from the employee record.
*Company Location: Expense subaccount segments for non-stock items are sourced from the company location record.
*Non-stock Item: Expense account and expense subaccount segments for non-stock items are sourced from the non-stock item record.
*Vendor Location: Expense account (if not defined in non-stock item) and expense subaccount segments for non-stock items are sourced from the vendor location record.

The actual source of the account and subaccount is determined by the posting class assigned to the inventory item; for more details, see the [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000]) article. The actual source of the expense subaccount for non-stock items is determined by the '''Combine Expense Sub.''' setting on the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form and by the '''Update Sub. on Order Owner Change''' check box on the [HelpRoot_FormReference\PO_10_10_00|Purchase Orders Preferences] ([~/?ScreenId=PO101000|PO101000]) form.{br}

Accounts and subaccounts for purchasing configured by posting classes are the following: 
*Purchase Orders accrual account and subaccount (liability)
*Purchase price variance account and subaccount (expense)
*Landed cost variance account and subaccount (expense)

The Purchase Orders module requires three additional account settings: 
*Freight account and subaccount, used for freight expenses
*Expense account and subaccount, used for non-stock items expenses
*Landed cost accrual account and subaccount, used for incoming additional costs

Analyze the accounting requirements for the Purchase Orders module and identify records to be created: 
*'''Verify General Ledger accounts.''' Verify that all needed General Ledger accounts have been created in the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]). Prepare a list of missing General Ledger accounts.
*'''Verify General Ledger subaccounts.''' Verify that all needed General Ledger subaccounts have been created in [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]). Prepare a list of missing General Ledger subaccounts.
*'''Reason Codes.''' Be sure there are at least two codes: one to be used for the purchase return documents and one to be used for landed cost adjustments. For details, refer to the [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000]) article.

|- 
| '''Design landed cost codes'''
|  The main purpose of landed cost is to enable users to account for additional costs beyond the merchandise cost incurred in purchasing inventory items. For instance, companies may routinely incur freight or insurance charges on their purchases from overseas vendors. 
Users can create and assign landed cost codes to incoming additional costs. These codes help to determine how to allocate each of the additional costs to items that have been received into inventory. Landed costs can be allocated by cost, quantity, weight, or volume and can be expensed or included in the inventory cost, based on the item’s valuation method. For each type of landed cost, assign a landed cost code and description, and collect the following data: 
*Types of landed cost, which may include freight or mix charges, customs duties, VAT taxes, mix destination charges, and others
*Application method (define where you will use landed cost code: from Purchase Orders, from Accounts Payable, or from both modules)
*Allocation method (by cost, quantity, weight, or volume)
*Vendor from whom invoice for additional cost will be received
*Vendor location from which invoice for additional cost will be received
*Reason code for landed cost adjustment
*Account to be updated by landed cost transaction: 
**Expense account and subaccount for landed cost accrual account; the landed cost for items with the any valuation methods (except standard) and for non-sold receipt quantity landed costs will be posted directly to a General Ledger landed cost accrual account)
**Expense account and subaccount for landed cost variance account; the landed cost for items with the standard cost valuation methods and for the receipt quantity that was sold prior to the processing of the landed costs will be posted directly to a general ledger landed cost variance account
*Tax category; for more information, see [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500]) 

For details, see [HelpRoot_FormReference\PO_20_20_00|Landed Cost Codes] ([~/?ScreenId=PO202000|PO202000]). 
|- 
| '''Define equivalent in vendor and your company inventory items and UOMs'''
|  Normally, inventory item identifications used in your company are different than inventory items used by vendors. Units of measure (UOMs) can be different as well. For each item and unit of measure from the vendor price list, an equivalent in the Inventory Management module should be found. The equivalents for vendor items can be obtained from: 
*Inventory item cross-reference from Inventory module (used to identify inventory items in other information systems and business processes). For details, refer to the [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000]) article.
*Vendor inventory catalog (after vendor price list has been uploaded to your system and equivalents from cross-reference items are found you can manually enter missing inventory items and UOMs corresponding to vendor inventory items). 
For each item, define the following data: 
*''' Location''': Vendor location of purchase item
*''' Lead time '''(days): The time from the placing of an order for item to the delivery of this inventory item
*'''Barcode''': machine-readable arrangement of numbers printed on a package (can be obtained from inventory item cross-reference)

The vendor price list file should be in the proper format. You can selectively upload the file with up-to-date information (new prices or new vendor item identifications).{br}

For more information, see [HelpRoot_FormReference\PO_20_10_00|Vendor Inventory] ([~/?ScreenId=PO201000|PO201000]).
|- 
| '''Define autonumbering sequences'''
|  Configuring the Purchase Orders module requires numbering sequences for regular purchase orders, blanket orders, and Purchase Orders receipts. These numberings are used to ensure a unique internal reference number for each purchasing document (described below): 
*'''Regular Purchase Order''' is a numbering of a normal purchase order to be submitted to a vendor. Each order may have an external reference number as requested by the vendor; external numbers may be duplicated for different vendors. Autonumbering is used for internal reference and guarantees unique number for each purchase order document.
*'''Blanket Purchase Order''' is a numbering of a blanket order. You can have multiple purchase orders against each blanket purchase order. Decide if blanket purchase orders will share order numbering with regular purchase orders or whether blanket purchase orders should have separate numbering.
*'''Purchase Receipt''' is a numbering of Purchase Orders receipts. Each receipt also may have its number as requested by the vendor&rsquo;s invoice; it is used as external reference. External numbers may be duplicated for different vendors. Autonumbering, used for internal reference, guarantees unique number for each document. Decide if the Purchase Orders module is to share receipt numbering with the Inventory module or should have separate numbering for its receipts.
((({S:Hint} Acumatica ERP is installed with predefined ready-to-use numbering sequences for objects that require auto-numbering: 
*POORDER: Numbering sequence for orders of Purchase Orders module, ranging from 000000 to 999999
*PORECEIPT: Numbering sequence for Purchase Orders receipts, ranging from 000000 to 999999
))) For details, see the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) article.
|- 
| '''Define Purchase Orders processing policies'''
|  When you define purchasing-related processing policies, decide the following: 
*Should Purchase Orders receipt transactions automatically create an invoice from the vendor when released?
*Should new Purchase Orders receipt documents be put on hold by default?
*Should the system validate the Purchase Orders document total during data entry? (Such validation is always performed when a document is released.)
*Should Inventory and Accounts Payable documents be automatically released on the Purchase Orders receipt release process?
*Should the subaccount be updated on order owner change in the purchase order for non-stock items?
*Should purchase order documents be approved?
*Should notifications be generated for the various types of documents and reports created in the Purchase Orders module? Define the recipients of these notifications.
For details, see the [HelpRoot_FormReference\PO_10_10_00|Purchase Orders Preferences] ([~/?ScreenId=PO101000|PO101000]) article.
|}
You can download and print the [HelpRoot_ImplementChecklists\PO_Preparation_Checklist|Purchase Orders Preparation Checklist] to assist you in collecting the data for Inventory implementation. [anchor|#3]
==Configuration==
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Action
!width="72%" ! Description
|- 
| '''1'''
|  '''Define autonumbering sequences'''
|  Use the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form in the Configuration Settings module to define the numbering sequences for normal purchase orders, blanket purchase orders, and purchase receipts.
|- 
| '''2'''
|  '''Create or verify General Ledger accounts'''
|  Use the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form to maintain necessary General Ledger accounts. See also the [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts].
|- 
| '''3'''
|  '''Create or verify General Ledger subaccounts'''
|  Use the [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]) form to create necessary General Ledger subaccounts. See also [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount]. 
|- 
| '''4'''
|  '''Create Reason Codes'''
|  Use the [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000]) form to create necessary reason codes. 
|- 
| '''5'''
|  '''Verify Posting Classes'''
|  Use the [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000]) form to verify created posting classes in Purchase Orders terms. 
|- 
| '''6'''
|  '''Verify the posting rule of non-stock expense account and subaccount'''
|  Use the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form to verify the created posting rule of expense account subaccounts for non-stock items ('''Combine Expense Sub''' - sources of subaccount segments). 
|- 
| '''7'''
|  '''Complete Purchase Orders Setup'''
|  Use the [HelpRoot_FormReference\PO_10_10_00|Purchase Orders Preferences] ([~/?ScreenId=PO101000|PO101000]) form to maintain the Purchase Orders module global options and defaults. 
|- 
| '''8'''
|  '''Verify Vendor Locations'''
|  Use the [HelpRoot_FormReference\AP_30_30_10|Vendor Locations] ([~/?ScreenId=AP303010|AP303010]) form to maintain Vendor Locations options and defaults. 
|- 
| '''9'''
|  '''Create Landed Cost Code'''
|  Use the [HelpRoot_FormReference\PO_20_20_00|Landed Cost Codes] ([~/?ScreenId=PO202000|PO202000]) form to create necessary codes of additional costs. 
|- 
| '''10'''
|  '''Create Cross-References (Vendor Inventory equal to Inventory ID)'''
|  Use the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]) form to define equivalence in vendor inventory and your inventory ID settings. 
|}
You can download and print the [HelpRoot_ImplementChecklists\PO_Configuration_Checklist|Purchase Orders Configuration Checklist] to assist you in configuring the Purchase Orders module. [anchor|#4]
==Initialization==
Once configuration, as described in the previous section, is complete, the Purchase Orders module is ready for use. This section provides information about initializing the Purchase Orders module. {br}

Because Purchase Orders is an add-on module to the Accounts Payable and Inventory modules, the Accounts Payable and Inventory modules must be initialized before initialization of the Purchase Orders module. {br}

The Purchase Orders module does not post transactions directly to the General Ledger, but the release receipt process generates documents in Accounts Payable and Inventory. For the facilitation of Purchase Orders migration, all the Purchase Orders receipts should have an appropriate reflection in Inventory and Accounts Payable accounts of carryover data before the initialization of the Accounts Payable and Inventory modules. To keep the implementation effort within reasonable limits, it is recommended that you migrate only outstanding Purchase Orders orders with their open balances as of the date of migration. {br}

Perform these steps to initialize the Purchase Orders module using this approach: 
*Fully outstanding purchase order documents must be entered with the original document date, open balance, and exchange rate (if the document is in a foreign currency).
*Partially outstanding purchase order documents must be entered with the net balance as of the migration date (not with the original document amount).
*Outstanding documents must be entered for the current period.
]]></column>
			<column name="PlainText"><![CDATA[Implementing Purchase Orders This document describes the process of implementing the Purchase Orders module in  Acumatica ERP.  Overview The Purchase Orders module provides functionality for efficient management of your 				company supply chain and optimization of the cost of acquiring materials and 				services. The Purchase Orders module helps you to monitor purchasing operations and 				analyze in detail your company's purchasing activities and procurement processes.  As with other sections of the Implementation Guide, this document is divided into 				three parts:  Prerequisites and Dependencies '''Prerequisites and Dependencies''': Describes what modules 					must be set up and configured before you begin implementing this module. Preparation '''Preparation''': Describes what data you should collect, 					arrange, and analyze. Configuration '''Configuration''': Guides you through the actual 					configuration of the Purchase Orders module. Initialization '''Initialization''': Describes how opening balances and 					historic data can be brought into the system. This document is meant only to assist you with the implementation process. For detailed 				descriptions of Purchase Orders forms and capabilities, see  Purchase Orders Processes in the   ([~/?ScreenId=SO000000|SO000000]) Order Management guide.  Prerequisites and Dependencies The implementation of the Finance suite and of the Inventory module must be 				completed, before you implement the Purchase Orders module.  Preparation This section covers the preparation that needs to occur before you begin configuring 				the Purchase Orders module. The first task in implementing a module is to collect 				and analyze the necessary information. The following steps should be done before the 				actual configuration of the Purchase Orders module. Enter no data into the 					system at this time. The information collection, though, need not be done in the 					listed order; many steps can be done in parallel. Action  Description Collect purchasing- related information on vendor 									locations  Vendors are companies or private individuals that supply goods 								or services to your organization. You can purchase items from 								different locations of the same vendor. Collect and verify 								purchasing-related information for every location of every 									vendor: Shipper's address and other contact information. Tax zone associated with the vendor location; for details, 										see   ([~/?ScreenId=TX206000|TX206000]) Tax Zones 										(TX206000). Shipping terms used in relations with the vendor; for 										details, see   ([~/?ScreenId=CS208000|CS208000]) Shipping Terms 										(CS208000). FOB point where the shipment title passes from the vendor to 										your organization; for details, see   ([~/?ScreenId=CS208500|CS208500]) FOB Points 										(CS208500). Lead time (days), which is the time from the placing of an 										order to the delivery of the goods or services. Receiving branch and default warehouse of your organization 										to receive goods from the vendor location. Carrier to be used by vendor for shipping from this vendor 										location. Receipt processing policies for this location:  Minimum and maximum percentage of goods required for 												receipts (calculated from the quantity on the 												purchase order) or a threshold for receipts, which 												is a minimum percentage of goods that should be 												received before a purchase order will be 												closed. Action to be performed if the minimum and maximum or 												threshold conditions are not satisfied (reject or 												accept the goods). Whether orders should be printed and sent by postal services 										or they should be emailed to the vendor. Payment method to be used to pay for goods received from 										this location, additional payment instructions, and a number 										of days required for payments to reach this vendor 										location. General Ledger accounts to be used for transactions 										associated with this location:  Expense account and subaccount for expenses 												(non-stock items) Freight account and subaccount For details, see   ([~/?ScreenId=AP303010|AP303010]) Vendor Locations (AP301000).  Plan auto-numbering sequences for orders Configuring the Purchase Orders module requires numbering 									sequences for regular purchase orders, blanket orders, and 									Purchase Orders receipts. These sequences are used to ensure 									that each purchasing document (order or receipt) will get a 									unique reference number in the system.  Acumatica ERP is installed with ready-to-use numbering sequences for 									Purchase Orders documents: POORDER: Numbering sequence for orders of the Purchase 											Orders module, ranging from 000000 to 999999 PORECEIPT: Numbering sequence for Purchase Orders 											receipts, ranging from 000000 to 999999 You can use these sequences or you can create the sequences 									that fit your needs best. Decide whether blanket orders will 									share a numbering sequence with other purchase orders. For 									details, see   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010).  Verify posting rules  The Purchase Orders module is tightly integrated with the 								Accounts Payable and Inventory modules. Purchase Orders documents 								(receipt, return, and landed cost) create appropriate transactions 								in Inventory and Accounts Payable. After that, Inventory and 								Accounts Payable documents create postings to General Ledger. 									 Analyze the accounting requirements for the purchasing 									transactions and review the available posting classes. Specify 									the sources for the following accounts and subaccounts that are 									required for purchasing transactions:  Purchase Orders accrual account and subaccount Purchase price variance account and subaccount Landed cost variance account and subaccount The following sources are available:  Inventory 										Item  (or  Non-stock Item ),  Warehouse , 										 Employee ,  Branch ,  Vendor Location  (for 									non-stock items only), or  Posting class . For more 									information, see  Posting Classes in Inventory. 								 Design Reason Codes Analyze posting requirements for returns and for landed cost 								adjustments. Design two reason codes for use in the Purchase Orders 								module: one to be used for the purchase returns, and one to be used 								for landed cost adjustments. For details, see  Reason Codes for Inventory. Design landed cost codes  Landed cost codes are used to specify additional costs incurred 								for shipping purchased goods to your organization warehouses or to 								customer locations if the goods are drop-shipped. For more 								information, see  Processing Landed Cost Documents. 									 For each type of possible landed costs, assign a landed cost 									code and description, and collect the following data:  Types of landed cost, which may include freight or mixed 										charges, customs duties, or VAT taxes Application method (where you will use the landed cost code: 										in Purchase Orders, in Accounts Payable, or in both 										modules) Allocation method (by cost, quantity, weight, or 										volume) Vendor who will bill for additional cost and the vendor 										location Reason code for landed cost adjustments GL accounts to be updated by landed cost transaction:  Landed Cost Accrual  account (of the 												 Expense  type) and subaccount for items with 												the any valuation methods except standard Landed Cost Variance  account (of the 												 Expense  type) and subaccount for items with 												the standard cost valuation method Tax category or categories applicable to the landed 										costs For details, see   ([~/?ScreenId=PO202000|PO202000]) Landed Cost Codes (PO202000).  Design ship via codes Ship via codes  denote all possible methods your company uses 								to ship goods to customers and your vendors use to ship goods to 								your company.  Plan needed FOB points  Define FOB points in relations with the vendors. They can be 								printed on purchase orders but have no effect on order or receipt 								processing. If you decide to use FOB points, compile a list of them, 								providing the following information for each:  FOB point ID (for example, a short name of the port)  FOB point description Verify General Ledger accounts  Verify that all needed General Ledger accounts have been created 									in the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500). Prepare a list of missing General Ledger 									accounts. The Purchase Orders module requires the following accounts:  Freight account to be used for freight expenses PO Accrual account to be used for landed costs Accounts for reason codes Accounts for ship via codes Verify General Ledger subaccounts Verify that all needed General Ledger subaccounts have been 								created in   ([~/?ScreenId=GL203000|GL203000]) Subaccounts 								(GL203000). Prepare a list of missing General Ledger 								subaccounts. Plan on maintaining vendor catalogs To facilitate purchasing, you can upload to the system vendor 									price lists and update them periodically. As a rule, inventory 									IDs used in your organization are different from those used by 									vendors. To be able to maintain vendor catalogs, for each 									inventory item, specify its alternative IDs (including barcodes) 									used by vendors and establish rules for conversion of UOMs used 									by vendors to UOMs used in your system. Write down missing UOMs 									and conversion rules. For more information, see  Vendor Catalogs. For 									details, see   ([~/?ScreenId=PO201000|PO201000]) Vendor Inventory (PO201000). Plan approval procedures According to generally established policies, purchase orders may 								be subject to approval. Analyze how different types of orders should 								be approved in your organization and by whom. For more information, 								see  Purchase Order Approval. Write down 								the list of workgroups with their members, and the conditions for 								documents to comply to be assigned for approval to a specific group. 							 Design roles Design the roles you need for users who will enter and process 								purchase orders, receive the purchased goods, configure approvals, 								and maintain vendor catalogs with actual vendor prices. Action  Description Collect vendor locations as they relate to purchasing  Vendors are companies or private individuals that supply goods 								or services to your company. You can receive materials from 								different vendor locations. Define or verify all locations for each 								vendor. For each vendor location from the Accounts Payable module, 								you should collect (or verify) the following data: Shipper's address and other contact information. Vendor's tax zone associated with the vendor location; for details, see   ([~/?ScreenId=TX206000|TX206000]) Tax Zones 										(TX206000). Shipping terms used in relations with the vendor; for details, see   ([~/?ScreenId=CS208000|CS208000]) Shipping Terms 										(CS208000). FOB point where the shipment title passes from the vendor to your company; for details, 										see   ([~/?ScreenId=CS208500|CS208500]) FOB Points (CS208500). Lead time (days), which is the time from the placing of an 										order to the delivery of the goods or services. Receiving location of your company. Carrier of cargo to be used with this vendor location; for more information, see   ([~/?ScreenId=CS207500|CS207500]) Ship via Codes 										(CS207500). Line type; receiving goods are intended for inventory, 										intended for immediate sales and not to be stocked, or 										non-stock items and services. Default warehouse of your company to receive goods from the 										vendor location. Purchase Orders receipt processing policies to serve as 										defaults for every purchase order and this location:  Minimum and maximum percentage of goods received for 												which a receipt will be issued (calculate from the 												quantity on the purchase order). Threshold receipt, which is a minimum percentage of 												goods that should be received before a purchase 												order will be closed. Receipt action to be performed if the minimum and 												maximum or threshold receipt conditions are not 												satisfied (reject or accept the goods). Requirements of printing and emailing the purchase 												order for a vendor. General Ledger accounts:  Expense account/sub: Default value for non-stock 												items' expenses. Freight account/sub: Default value for freight 												expenses. For details, see   ([~/?ScreenId=AP303010|AP303010]) Vendor Locations (AP301000).  Verify purchase accounting posting rules  The Purchase Orders module is an add-on module to the Accounts Payable and Inventory 								modules. Purchase Orders documents (receipt, return, landed cost) 								create appropriate transactions in Inventory and Accounts Payable. 								Afterwards, Inventory and Accounts Payable create postings to 								General Ledger, depending on the inventory item, location, 								transaction type, and other conditions. Accounts and subaccounts for 								purchasing transactions can be obtained from the following entities:  Inventory Item: Account and subaccount are sourced from the 										item record. Warehouse: Account and subaccount are sourced from the 										warehouse record. Posting Class: Account and subaccount are taken from a 										special set of settings, called Posting Class, independent 										from the inventory item and warehouse. Employee: Expense subaccount segments for non-stock items 										are sourced from the employee record. Company Location: Expense subaccount segments for non-stock 										items are sourced from the company location record. Non-stock Item: Expense account and expense subaccount 										segments for non-stock items are sourced from the non-stock 										item record. Vendor Location: Expense account (if not defined in 										non-stock item) and expense subaccount segments for 										non-stock items are sourced from the vendor location 										record. The actual source of the account and subaccount is 									determined by the posting class assigned to the inventory item; 									for more details, see the   ([~/?ScreenId=IN206000|IN206000]) Posting Classes 									(IN206000) article. The actual source of the expense subaccount 									for non-stock items is determined by the  Combine Expense 										Sub.  setting on the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences 									(AP101000) form and by the  Update Sub. on Order Owner 										Change  check box on the   ([~/?ScreenId=PO101000|PO101000]) Purchase Orders Preferences 									(PO101000) form. Accounts and subaccounts for purchasing 									configured by posting classes are the following:  Purchase Orders accrual account and subaccount 										(liability) Purchase price variance account and subaccount 										(expense) Landed cost variance account and subaccount (expense) The Purchase Orders module requires three additional account 									settings:  Freight account and subaccount, used for freight 										expenses Expense account and subaccount, used for non-stock items 										expenses Landed cost accrual account and subaccount, used for 										incoming additional costs Analyze the accounting requirements for the Purchase Orders 									module and identify records to be created:  Verify General Ledger accounts.  Verify that all 										needed General Ledger accounts have been created in the 											  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500). Prepare a list of missing General Ledger 										accounts. Verify General Ledger subaccounts.  Verify that all 										needed General Ledger subaccounts have been created in   ([~/?ScreenId=GL203000|GL203000]) Subaccounts 										(GL203000). Prepare a list of missing General Ledger 										subaccounts. Reason Codes.  Be sure there are at least two codes: 										one to be used for the purchase return documents and one to 										be used for landed cost adjustments. For details, refer to 										the   ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) article. Design landed cost codes  The main purpose of landed cost is to enable users to account for additional costs 								beyond the merchandise cost incurred in purchasing inventory items. 								For instance, companies may routinely incur freight or insurance 								charges on their purchases from overseas vendors.  Users can 									create and assign landed cost codes to incoming additional 									costs. These codes help to determine how to allocate each of the 									additional costs to items that have been received into 									inventory. Landed costs can be allocated by cost, quantity, 									weight, or volume and can be expensed or included in the 									inventory cost, based on the item’s valuation method. For each 									type of landed cost, assign a landed cost code and description, 									and collect the following data:  Types of landed cost, which may include freight or mix 										charges, customs duties, VAT taxes, mix destination charges, 										and others Application method (define where you will use landed cost 										code: from Purchase Orders, from Accounts Payable, or from 										both modules) Allocation method (by cost, quantity, weight, or 										volume) Vendor from whom invoice for additional cost will be 										received Vendor location from which invoice for additional cost will 										be received Reason code for landed cost adjustment Account to be updated by landed cost transaction:  Expense account and subaccount for landed cost 												accrual account; the landed cost for items with the 												any valuation methods (except standard) and for 												non-sold receipt quantity landed costs will be 												posted directly to a General Ledger landed cost 												accrual account) Expense account and subaccount for landed cost 												variance account; the landed cost for items with the 												standard cost valuation methods and for the receipt 												quantity that was sold prior to the processing of 												the landed costs will be posted directly to a 												general ledger landed cost variance account Tax category; for more information, see   ([~/?ScreenId=TX205500|TX205500]) Tax Categories 										(TX205500)  For details, see   ([~/?ScreenId=PO202000|PO202000]) Landed Cost Codes (PO202000).  Define equivalent in vendor and your company inventory items 									and UOMs  Normally, inventory item identifications used in your company are different than 								inventory items used by vendors. Units of measure (UOMs) can be 								different as well. For each item and unit of measure from the vendor 								price list, an equivalent in the Inventory Management module should 								be found. The equivalents for vendor items can be obtained from:  Inventory item cross-reference from Inventory module (used 										to identify inventory items in other information systems and 										business processes). For details, refer to the   ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items 										(IN202000) article. Vendor inventory catalog (after vendor price list has been 										uploaded to your system and equivalents from cross-reference 										items are found you can manually enter missing inventory 										items and UOMs corresponding to vendor inventory items). 									 For each item, define the following data:   Location : Vendor location of purchase item  Lead time  (days): The time from the placing of an 										order for item to the delivery of this inventory item Barcode : machine-readable arrangement of numbers 										printed on a package (can be obtained from inventory item 										cross-reference) The vendor price list file should be in the proper format. 									You can selectively upload the file with up-to-date information 									(new prices or new vendor item identifications). For more 									information, see   ([~/?ScreenId=PO201000|PO201000]) Vendor Inventory (PO201000). Define autonumbering sequences  Configuring the Purchase Orders module requires numbering sequences for regular 								purchase orders, blanket orders, and Purchase Orders receipts. These 								numberings are used to ensure a unique internal reference number for 								each purchasing document (described below):  Regular Purchase Order  is a numbering of a normal 										purchase order to be submitted to a vendor. Each order may 										have an external reference number as requested by the 										vendor; external numbers may be duplicated for different 										vendors. Autonumbering is used for internal reference and 										guarantees unique number for each purchase order 										document. Blanket Purchase Order  is a numbering of a blanket 										order. You can have multiple purchase orders against each 										blanket purchase order. Decide if blanket purchase orders 										will share order numbering with regular purchase orders or 										whether blanket purchase orders should have separate 										numbering. Purchase Receipt  is a numbering of Purchase Orders 										receipts. Each receipt also may have its number as requested 										by the vendor's invoice; it is used as external reference. 										External numbers may be duplicated for different vendors. 										Autonumbering, used for internal reference, guarantees 										unique number for each document. Decide if the Purchase 										Orders module is to share receipt numbering with the 										Inventory module or should have separate numbering for its 										receipts.  Acumatica ERP is installed with predefined ready-to-use numbering sequences 									for objects that require auto-numbering:  POORDER: Numbering sequence for orders of Purchase 											Orders module, ranging from 000000 to 999999 PORECEIPT: Numbering sequence for Purchase Orders 											receipts, ranging from 000000 to 999999  For details, see the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences 								(CS201010) article. Define Purchase Orders processing policies  When you define purchasing-related processing policies, decide the following:  Should Purchase Orders receipt transactions automatically 										create an invoice from the vendor when released? Should new Purchase Orders receipt documents be put on hold 										by default? Should the system validate the Purchase Orders document 										total during data entry? (Such validation is always 										performed when a document is released.) Should Inventory and Accounts Payable documents be 										automatically released on the Purchase Orders receipt 										release process? Should the subaccount be updated on order owner change in 										the purchase order for non-stock items? Should purchase order documents be approved? Should notifications be generated for the various types of 										documents and reports created in the Purchase Orders module? 										Define the recipients of these notifications. For details, see the   ([~/?ScreenId=PO101000|PO101000]) Purchase Orders Preferences (PO101000) article. You can download and print the  Purchase Orders Preparation Checklist to assist you in collecting the data for Inventory 				implementation.  Configuration No. Action Description 1 Define autonumbering sequences  Use the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form 								in the Configuration Settings module to define the numbering 								sequences for normal purchase orders, blanket purchase orders, and 								purchase receipts. 2 Create or verify General Ledger accounts  Use the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form 								to maintain necessary General Ledger accounts. See also the  To Add an Account to the Chart of Accounts. 3 Create or verify General Ledger subaccounts  Use the   ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) form 								to create necessary General Ledger subaccounts. See also  To Add a Subaccount.  4 Create Reason Codes  Use the   ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) form 								to create necessary reason codes.  5 Verify Posting Classes  Use the   ([~/?ScreenId=IN206000|IN206000]) Posting Classes (IN206000) form 								to verify created posting classes in Purchase Orders terms.  6 Verify the posting rule of non-stock expense account and 									subaccount  Use the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form 								to verify the created posting rule of expense account subaccounts 								for non-stock items ( Combine Expense Sub  - sources of 								subaccount segments).  7 Complete Purchase Orders Setup  Use the   ([~/?ScreenId=PO101000|PO101000]) Purchase Orders Preferences (PO101000) form 								to maintain the Purchase Orders module global options and defaults.  8 Verify Vendor Locations  Use the   ([~/?ScreenId=AP303010|AP303010]) Vendor Locations (AP303010) form 								to maintain Vendor Locations options and defaults.  9 Create Landed Cost Code  Use the   ([~/?ScreenId=PO202000|PO202000]) Landed Cost Codes (PO202000) form 								to create necessary codes of additional costs.  10 Create Cross-References (Vendor Inventory equal to Inventory 									ID)  Use the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500) form 								to define equivalence in vendor inventory and your inventory ID 								settings.  You can download and print the  Purchase Orders Configuration Checklist to assist you in configuring the Purchase Orders module.  Initialization Once configuration, as described in the previous section, is complete, the Purchase 				Orders module is ready for use. This section provides information about initializing 				the Purchase Orders module.  Because Purchase Orders is an add-on module to the Accounts Payable and Inventory 				modules, the Accounts Payable and Inventory modules must be initialized before 				initialization of the Purchase Orders module.  The Purchase Orders module does not post transactions directly to the General Ledger, 				but the release receipt process generates documents in Accounts Payable and 				Inventory. For the facilitation of Purchase Orders migration, all the Purchase 				Orders receipts should have an appropriate reflection in Inventory and Accounts 				Payable accounts of carryover data before the initialization of the Accounts Payable 				and Inventory modules. To keep the implementation effort within reasonable limits, 				it is recommended that you migrate only outstanding Purchase Orders orders with 				their open balances as of the date of migration.  Perform these steps to initialize the Purchase Orders module using this approach:  Fully outstanding purchase order documents must be entered with the original 					document date, open balance, and exchange rate (if the document is in a foreign 					currency). Partially outstanding purchase order documents must be entered with the net 					balance as of the migration date (not with the original document amount). Outstanding documents must be entered for the current period. ]]></column>
		</row>
		<row PageID="333f5e6e-efa9-4965-961d-498dd05efe7a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="03edde19-54cb-74a0-4ed9-47c890874bd3" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes the process of implementing the Sales Orders module in Acumatica ERP. 
==Overview==
The Sales Orders module supports and automates sales and delivery processes in your organization. In Acumatica ERP, sales workflows are represented by order types, which describe what should be done during the order&rsquo;s lifetime, including integration with the Accounts Receivable and Inventory modules. By reviewing and modifying predefined order types and other settings for the module, you can configure it to fit most sales process, as described in this document. {br}

Advanced configuration of this module—with the creation of new order types or changes to the workflow of predefined types—can also be done to meet your company&rsquo;s specific needs. Such configuration should be done only with the assistance of an Acumatica ERP specialist. {br}

With Acumatica ERP, you can also manage complex pricing and discount policies. Once you have completed basic Sales Orders implementation, you can implement your pricing and discount policies. {br}

This article is meant only to guide you through implementation of the Sales Orders module. For a detailed description of Sales Orders forms and capabilities, see the [HelpRoot_OrderMgmt\SO_00_00_00|Order Management] guide.[anchor|#1]
==Prerequisites and Dependencies==
The implementation of the Finance suite and of the Inventory module must be completed, before you implement the Sales Orders module. 
==Preparation==
This section covers the needed preparation before you begin basic configuration of the Sales Orders module. {br}

Preparation for the basic configuration consists primarily of researching the predefined order types and, for those you plan to use, reviewing their settings on the [HelpRoot_FormReference\SO_20_10_00|Order Types] ([~/?ScreenId=SO201000|SO201000]) form. You will also review related settings on other forms. [anchor|#table_r5t_gwj_tl]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action
!width="79%" ! Description
|- 
| '''Decide which predefined order types your company will use'''
|  Review the topics of the [HelpRoot_OrderMgmt\SO__CNF_Getting_Started|Configuring Order Management] chapter to learn more about predefined order types in Acumatica ERP, and find the ones that best fit your business processes. Decide which order types you will and will not use; unused order types can be marked as inactive. 
|- 
| '''Review settings for the order types you will use'''
|  For each order type that you will use, review the settings found in the '''Order Settings''' section on the '''General Settings''' tab of the [HelpRoot_FormReference\SO_20_10_00|Order Types] ([~/?ScreenId=SO201000|SO201000]) form. Decide whether numbering sequences should be unique to each order type or shared by multiple types. ((({S:Hint}If you are going to use separate numbering sequences for different order types, consider using prefixes.
)))
Decide on workfow options to be used for each order type: whether to hold orders of the type on entry, whether to require control total, to ship and to bill orders of the type separately, whether to calculate freight automatically, whether to recalculate discount for partial shipments, copy notes and attachments to shipments and to invoices.
|- 
| '''Review each order type&rsquo;s Accounts Receivable settings'''
|  For each order type you are going to use, decide whether invoices generated for orders of different types will use different numbering sequences. You can instead use for all order types the numbering sequence assigned to invoices in Accounts Receivable. In this case, all of your company’s invoices, regardless of origin, will use a single numbering sequence.
|- 
| '''Analyze posting requirements for each order type '''
|  Analyze the accounting requirements for the sales transactions generated by each order type. Decide which accounts and subaccount should be updated by such transactions and specify the sources of the accounts and subaccount segments. The available options can include the following: customer location, inventory item, non-stock item, warehouse, posting class, reason code, carrier, and order type, salesperson, or employee. ((({S:Hint}When deciding on different sources for accounts and subaccounts, you should also review the General Ledger accounts and subaccounts of the records that can be involved, such as customer locations, inventory items, and warehouses.
)))
|- 
| '''Plan shipment settings'''
| Decide on options that control workflow for shipments: whether to allocate freight on shipping, whether to hold shipments on entry, and whether to validate control totals. 
|- 
| '''Plan default values for the module'''
|  Review the options on the [HelpRoot_FormReference\SO_10_10_00|Sales Orders Preferences] ([~/?ScreenId=SO101000|SO101000]) form. Decide which of the order types used most frequently can be selected as the default sales order type and the default transfer order type. Review the credit check policies to decide whether to hold invoices on failed credit check.
|- 
| '''Review relevant delivery settings for customers'''
|  Review the delivery settings on the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form for each customer. If the customer has multiple locations, review the following settings of each location: [anchor|#ul_jyt_gwj_tl]
*The carrier to handle shipments to this customer location. 
*The shipping terms governing delivery of goods. International commercial terms (Incoterms) standards are often used. Shipping terms can be printed on sales orders and shipping documents. 
*The FOB point where the title of shipped goods is transferred to the customer. Although the FOB point can be printed on sales orders and shipping documents, it does not affect order processing. 
*'''Shipping Rule''': How the shipment should be generated if the quantity is insufficient: 
**''Ship Complete'': The ordered quantity should be shipped only in full. 
**''Back Order Allowed'': The ordered quantity can be shipped in multiple partial shipments. 
**''Cancel Remainder'': The ordered quantity can be shipped partially, and the quantity remaining after the first shipment will be canceled. 
*'''Order Priority''': The relative &ldquo;weight&ldquo; of the customer&rsquo;s orders in allocating the inventory in mass order processing. Orders with higher priority are processed first and are more likely to be shipped in full. 
*'''Warehouse''': The preferred warehouse for sales to the customer. Although you can review other delivery settings of the customer as well, they have no impact on sales order processing, except that they can be printed on shipping documents. 

|- 
| '''Review customer classes'''
|  Analyse the delivery settings of customers considering how customers are grouped in customer classes. Review the following settings in the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form for each class: [anchor|#ul_xyt_gwj_tl]
*'''Ship Via'''
* '''Shipping Terms'''
* '''Ship Complete'''

These settings will be copied to new customers and can be changed for individual customers as needed.
|- 
| '''Determine whether you need to define carriers'''
|  Plan any needed carriers—companies that handle your shipments to customers. For basic configuration of this module, maintenance of carrier records is required only if any order types are configured to use ''Carrier'' as the source for the freight account or subaccount, and the freight amount is entered directly in the sales order. The name of the carrier can also be printed on sales order confirmation and shipping documents. If you decide to use carriers in basic configuration, compile the list of them with the following details for each carrier: [anchor|#ul_bzt_gwj_tl]
*Carrier ID to be used. 
*Carrier name or description. 
*Freight sales account (a revenue account) and subaccount to post freight collected from customers; these settings can be referred to by order types as the source for the freight account and subaccount. 
*Freight expense account and subaccount to post the carrier&rsquo;s freight charges; these settings are not used in order processing.

If you decide to use integration with nationwide carriers (FedEx, or UPS), follow the steps in the [HelpRoot_ImplementChecklists\Carrier_Configuration_Checklist|Carrier Integration Checklist] topic.
|- 
| '''Define any needed shipping terms'''
|  Plan any shipping terms to be defined. If you decide to use shipping terms in the basic configuration of the Sales Orders module, list the terms you wish to use, providing for each set of terms: [anchor|#ul_hzt_gwj_tl]
*Shipping terms ID (for example, the Incoterms code) 
*Shipping terms description 

|- 
| '''Plan needed FOB points'''
|  Decide whether your site will define FOB points in Acumatica ERP. They can be printed on sales order confirmation and shipping documents but have no effect on order processing. If you decide to use FOB points, compile a list of them, providing the following information for each: [anchor|#ul_kzt_gwj_tl]
*FOB point ID (for example, a short name of the port) 
*FOB point description

|}
You can download and print the [HelpRoot_ImplementChecklists\SO_Preparation_Checklist|Sales Orders Preparation Checklist] to assist you in collecting the data for basic Sales Orders configuration. 
==Configuration==
This section describes the process of configuring the basic functionality of the Sales Orders module, based on the information you&rsquo;ve compiled during preparation. Due to dependencies among the forms, the sequence of actions during configuration is critical, so please note instructions pertinent to the order in which the steps should be performed. 
{| class="checklist" | width="100%" 
|- 
!width="5%" ! '''No.'''
!width="23%" ! Action
!width="70%" ! Description
|- 
| '''1'''
|  '''Create General Ledger accounts'''
|  Use the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form of the General Ledger module to create necessary accounts. 
|- 
| '''2'''
|  '''Create subaccount segment values'''
|  Use the [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000]) form of the Common Settings module to add needed values for subaccount segments. 
|- 
| '''3'''
|  '''Create General Ledger subaccounts'''
|  Use the [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]) form of the General Ledger module to create necessary subaccounts; this step should be done after Step 2 has been completed. 
|- 
| '''4'''
|  '''Define auto-numbering sequences'''
|  Use the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form of the Common Settings module to define the numbering sequences for order types, shipments, and Accounts Receivable documents of order types. 
|- 
| colspan="3" | Steps 5–14 should be done after the steps above have been completed.
|- 
| '''5'''
|  '''Review branch master records'''
|  If you have decided to use ''Company Branch'' as the source for subaccounts, review branch settings on the [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form of the Organization Structure module. 
|- 
| '''6'''
|  '''Review salesperson master records'''
|  If you have decided to use ''Salesperson'' as the source for subaccounts, review salespersons&rsquo; records using the [HelpRoot_FormReference\AR_20_50_00|Salespersons] ([~/?ScreenId=AR205000|AR205000]) form of the Accounts Receivable module. 
|- 
| '''7'''
|  '''Review stock item master records'''
|  If you have decided to use ''Inventory Item'' as the source for accounts or subaccounts, review the account settings of stock items on the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]) form of the Inventory module. 
|- 
| '''8'''
|  '''Review non-stock item master records'''
|  If you have decided to use ''Non-Stock Item'' as the source for accounts or subaccounts, review the account settings of non-stock items on the [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000]) form of the Inventory module. 
|- 
| '''9'''
|  '''Review posting class master records'''
|  If you have decided to use ''Posting Class'' as the source for accounts or subaccounts, review posting classes on the [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000]) form of the Inventory module. 
|- 
| '''10'''
|  '''Review warehouse master records'''
|  If you have decided to use ''Warehouse'' as the source for accounts or subaccounts, review warehouse settings on the [HelpRoot_FormReference\IN_20_40_00|Warehouses] ([~/?ScreenId=IN204000|IN204000]) form of the Inventory module.
|- 
| '''11'''
|  '''Review employee master records'''
|  If you have decided to use ''Employee'' as the source for subaccounts, review employee settings on the [HelpRoot_FormReference\EP_20_30_00|Employees] ([~/?ScreenId=EP203000|EP203000]) form of the General Ledger module. 
|- 
| '''12'''
|  '''Create carrier master records'''
|  If you have decided to use ''Carrier'' as the source for accounts or subaccounts, review (and, if necessary, create) carrier master records on the [HelpRoot_FormReference\CS_20_75_00|Ship via Codes] ([~/?ScreenId=CS207500|CS207500]) form of the Sale Orders module. 
If you decide to use integration with nationwide carriers (FedEx, or UPS), follow the steps in the [HelpRoot_ImplementChecklists\Carrier_Configuration_Checklist|Carrier Integration Checklist] topic to configure the integration.
|- 
| '''13'''
|  '''Create shipping terms'''
|  Create the identified necessary shipping terms using the [HelpRoot_FormReference\CS_20_80_00|Shipping Terms] ([~/?ScreenId=CS208000|CS208000]) form of the Sales Orders module. 
|- 
| '''14'''
|  '''Create FOB points'''
|  Create the identified necessary FOB points on the [HelpRoot_FormReference\CS_20_85_00|FOB Points] ([~/?ScreenId=CS208500|CS208500]) form of the Sales Orders module. 
|- 
| colspan="3" | Steps 15 and 16 should be done after Steps 12–14 have been completed.
|- 
| '''15'''
|  '''Review customer master records'''
|  Use the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form of the Accounts Receivable module to review (and change, if necessary) the delivery settings of each location of each customer: '''Ship Via''', '''Shipping Terms''', '''FOB Point''', '''Ship Complete''', '''Order Priority''', and '''Warehouse'''. Also, if you decided to use ''Customer Location'' as a source for accounts or subaccounts, review the General Ledger account settings for each customer location. 
|- 
| '''16'''
|  '''Review customer classes'''
|  Use the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form of the Accounts Receivable module to review (and change, if necessary) the delivery settings of each customer class: '''Ship Via''', '''Shipping Terms''', and '''Ship Complete'''. 
|- 
| colspan="3" | Steps 17 and 18 should be the last steps you complete.
|- 
| '''17'''
|  '''Make needed changes to order types'''
|  Use the [HelpRoot_FormReference\SO_20_10_00|Order Types] ([~/?ScreenId=SO201000|SO201000]) form to configure the predefined order types to suit your sales processes. Select the desired order type to review it and make any needed changes to settings: 
*'''Active''': Clear this check box if you do not plan to use the displayed order type 
*'''Description''': Modify the description if desired 
*Review '''Order Settings''': 
**'''Order Numbering Sequence'''
** '''Days to Keep'''
** '''Hold Orders on Entry''' (yes/no) 
**'''Hold Document on Failed Credit Check''' (yes/no) 
**'''Require Control Total''' (yes/no) 
**'''Bill Separately''' (yes/no) 
**'''Ship Separately''' (yes/no) 
**'''Calculate Freight''' (yes/no) 
**'''Recalculate Discount On Partial Shipment''' (yes/no) 
**'''Copy Notes''' (yes/no) 
**'''Copy Attachments''' (yes/no) 
**'''Copy Line Notes To Shipment''' (yes/no) 
**'''Copy Line Attachments To Shipment''' (yes/no) 
**'''Copy Line Notes To Invoice''' (yes/no) 
***'''Only Non-Stock''' (yes/no) 
**'''Copy Line Attachments To Invoice''' (yes/no) 
***'''Only Non-Stock''' (yes/no) 
*Review '''Posting Settings''': 
**'''Use Sales Account from'''
** '''Combine Sales Sub. from'''
** '''Freight Account'''
** '''Use Freight Account from'''
** '''Freight Sub.'''
** '''Combine Freight Sub. from'''
** '''Discount Account'''
** '''Use Discount Account from'''
** '''Discount Sub.'''
** '''Combine Discount Sub. from'''
** '''Post Line Discounts Separately''' (yes/no) 
**'''Use Discount Sub. from Sales Sub.''' (yes/no) 
*Review '''Accounts Receivable Settings''': 
**'''Invoice Numbering Sequence'''
** '''Mark as Printed''' (yes/no) 
**'''Mark as Emailed''' (yes/no) 
**'''Hold Invoices on Entry''' (yes/no)
*Review '''Template Settings''' tab:
**'''Allow Quick Process''' (yes/no)
*Save the order type.

|- 
| '''18'''
|  '''Configure Sales Orders Preferences'''
|  Use the [HelpRoot_FormReference\SO_10_10_00|Sales Orders Preferences] ([~/?ScreenId=SO101000|SO101000]) form to configure the global settings, based on decisions you made during preparation: [anchor|#_01862916-fe5a-47e1-a749-dc5d2af167aa]
*'''Default Sales Order Type'''
* '''Default Transfer Order Type'''
* '''Shipment Numbering Sequence'''
* '''Advanced Availability Validation'''
* '''Validate Min. Markup'''
* '''Use a Price Adjustment Multiplier'''
* '''Freight Allocation on Partial Shipping'''
* '''Free Item Shipping'''
* '''Hold Shipments on Entry'''
* '''Validate Shipment Total on Confirmation'''
* '''Add Zero Lines for Items Not in Stock'''
* '''Create Zero Shipments'''
* '''Hold Invoices on Failed Credit Check'''
* '''Use Shipment Date for Invoice Date'''
* '''Automatically Release IN Documents'''
* '''Use Shipped-Not-Invoiced Account'''
* '''Shipped-Not-Invoiced Account'''
* '''Shipped-Not-Invoiced Sub.'''
* '''Cost Calculation Basis for Non-Stock Kits'''

All global settings needed for basic Sales Orders configuration are shown on the '''General Settings''' tab of the form. 
|}
You can download and print the [HelpRoot_ImplementChecklists\SO_Configuration_Checklist|Sales Orders Configuration Checklist] to assist you in this configuration.]]></column>
			<column name="PlainText"><![CDATA[Implementing Sales Orders This document describes the process of implementing the Sales Orders module in  Acumatica ERP.  Overview The Sales Orders module supports and automates sales and delivery processes in your 				organization. In  Acumatica ERP, sales workflows are represented by order types, which describe what should be 				done during the order's lifetime, including integration with the Accounts Receivable 				and Inventory modules. By reviewing and modifying predefined order types and other 				settings for the module, you can configure it to fit most sales process, as 				described in this document.  Advanced configuration of this module—with the creation of new order types or 				changes to the workflow of predefined types—can also be done to meet your 				company's specific needs. Such configuration should be done only with the assistance 				of an  Acumatica ERP specialist.  With  Acumatica ERP, you can also manage complex pricing and discount policies. Once you have 				completed basic Sales Orders implementation, you can implement your pricing and 				discount policies.  This article is meant only to guide you through implementation of the Sales Orders module. For 				a detailed description of Sales Orders forms and capabilities, see the   ([~/?ScreenId=SO000000|SO000000]) Order Management guide. Prerequisites and Dependencies The implementation of the Finance suite and of the Inventory module must be 				completed, before you implement the Sales Orders module.  Preparation This section covers the needed preparation before you begin basic configuration of 				the Sales Orders module.  Preparation for the basic configuration consists primarily of researching the predefined order 				types and, for those you plan to use, reviewing their settings on the   ([~/?ScreenId=SO201000|SO201000]) Order Types (SO201000) form. You will 				also review related settings on other forms.  Action Description Decide which predefined order types your company will 								use  Review the topics of the  Configuring Order Management 								chapter to learn more about predefined order types in  Acumatica ERP, and find the ones that best fit your business processes. Decide 								which order types you will and will not use; unused order types can 								be marked as inactive.  Review settings for the order types you will use  For each order type that you will use, review the settings found in the  Order 									Settings  section on the  General Settings  tab of the 									  ([~/?ScreenId=SO201000|SO201000]) Order Types (SO201000) form. 								Decide whether numbering sequences should be unique to each order 								type or shared by multiple types.  If you are going 									to use separate numbering sequences for different order types, 									consider using prefixes. Decide on workfow options to 									be used for each order type: whether to hold orders of the type 									on entry, whether to require control total, to ship and to bill 									orders of the type separately, whether to calculate freight 									automatically, whether to recalculate discount for partial 									shipments, copy notes and attachments to shipments and to 									invoices. Review each order type's Accounts Receivable 								settings  For each order type you are going to use, decide whether 								invoices generated for orders of different types will use different 								numbering sequences. You can instead use for all order types the 								numbering sequence assigned to invoices in Accounts Receivable. In 								this case, all of your company’s invoices, regardless of origin, 								will use a single numbering sequence. Analyze posting requirements for each order type   Analyze the accounting requirements for the sales transactions 								generated by each order type. Decide which accounts and subaccount 								should be updated by such transactions and specify the sources of 								the accounts and subaccount segments. The available options can 								include the following: customer location, inventory item, non-stock 								item, warehouse, posting class, reason code, carrier, and order 								type, salesperson, or employee.  When deciding on 									different sources for accounts and subaccounts, you should also 									review the General Ledger accounts and subaccounts of the 									records that can be involved, such as customer locations, 									inventory items, and warehouses. Plan shipment settings Decide on options that control workflow for shipments: whether to 								allocate freight on shipping, whether to hold shipments on entry, 								and whether to validate control totals.  Plan default values for the module  Review the options on the   ([~/?ScreenId=SO101000|SO101000]) Sales Orders Preferences (SO101000) 								form. Decide which of the order types used most frequently can be 								selected as the default sales order type and the default transfer 								order type. Review the credit check policies to decide whether to 								hold invoices on failed credit check. Review relevant delivery settings for customers  Review the delivery settings on the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form for each customer. If the 								customer has multiple locations, review the following settings of 								each location:  The carrier to handle shipments to this customer location.  The shipping terms governing delivery of goods. 										International commercial terms (Incoterms) standards are 										often used. Shipping terms can be printed on sales orders 										and shipping documents.  The FOB point where the title of shipped goods is 										transferred to the customer. Although the FOB point can be 										printed on sales orders and shipping documents, it does not 										affect order processing.  Shipping Rule : How the shipment should be generated 										if the quantity is insufficient:  Ship Complete : The ordered quantity should be 												shipped only in full.  Back Order Allowed : The ordered quantity can 												be shipped in multiple partial shipments.  Cancel Remainder : The ordered quantity can be 												shipped partially, and the quantity remaining after 												the first shipment will be canceled.  Order Priority : The relative "weight" of the 										customer's orders in allocating the inventory in mass order 										processing. Orders with higher priority are processed first 										and are more likely to be shipped in full.  Warehouse : The preferred warehouse for sales to the 										customer. Although you can review other delivery settings of 										the customer as well, they have no impact on sales order 										processing, except that they can be printed on shipping 										documents.  Review customer classes  Analyse the delivery settings of customers considering how customers are grouped in 								customer classes. Review the following settings in the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form for each 								class:  Ship Via Shipping Terms Ship Complete These settings will be copied to new customers and can be 									changed for individual customers as needed. Determine whether you need to define carriers  Plan any needed carriers—companies that handle your shipments to customers. For basic 								configuration of this module, maintenance of carrier records is 								required only if any order types are configured to use 									 Carrier  as the source for the freight account or 								subaccount, and the freight amount is entered directly in the sales 								order. The name of the carrier can also be printed on sales order 								confirmation and shipping documents. If you decide to use carriers 								in basic configuration, compile the list of them with the following 								details for each carrier:  Carrier ID to be used.  Carrier name or description.  Freight sales account (a revenue account) and subaccount to 										post freight collected from customers; these settings can be 										referred to by order types as the source for the freight 										account and subaccount.  Freight expense account and subaccount to post the carrier's 										freight charges; these settings are not used in order 										processing. If 									you decide to use integration with nationwide carriers (FedEx, 									or UPS), follow the steps in the  Carrier Integration Checklist 								topic. Define any needed shipping terms  Plan any shipping terms to be defined. If you decide to use 								shipping terms in the basic configuration of the Sales Orders 								module, list the terms you wish to use, providing for each set of 								terms:  Shipping terms ID (for example, the Incoterms code)  Shipping terms description  Plan needed FOB points  Decide whether your site will define FOB points in  Acumatica ERP. They can be printed on sales order confirmation and shipping 								documents but have no effect on order processing. If you decide to 								use FOB points, compile a list of them, providing the following 								information for each:  FOB point ID (for example, a short name of the port)  FOB point description You can download and print the  Sales Orders Preparation Checklist to assist you in collecting the data for basic Sales Orders 				configuration.  Configuration This section describes the process of configuring the basic functionality of the 				Sales Orders module, based on the information you've compiled during preparation. 				Due to dependencies among the forms, the sequence of actions during configuration is 				critical, so please note instructions pertinent to the order in which the steps 				should be performed.  No. Action Description 1 Create General Ledger accounts  Use the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form of the General 								Ledger module to create necessary accounts.  2 Create subaccount segment values  Use the   ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) form of the Common 								Settings module to add needed values for subaccount segments.  3 Create General Ledger subaccounts  Use the   ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) form of the General 								Ledger module to create necessary subaccounts; this step should be 								done after Step 2 has been completed.  4 Define auto-numbering sequences  Use the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form of the Common 								Settings module to define the numbering sequences for order types, 								shipments, and Accounts Receivable documents of order types.  Steps 5–14 should be done after the steps 								above have been completed. 5 Review branch master records  If you have decided to use  Company Branch  as the source for subaccounts, 								review branch settings on the   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) form of the 								Organization Structure module.  6 Review salesperson master records  If you have decided to use  Salesperson  as the source for subaccounts, review 								salespersons' records using the   ([~/?ScreenId=AR205000|AR205000]) Salespersons (AR205000) form of the 								Accounts Receivable module.  7 Review stock item master records  If you have decided to use  Inventory Item  as the source for accounts or 								subaccounts, review the account settings of stock items on the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500) form of the 								Inventory module.  8 Review non-stock item master records  If you have decided to use  Non-Stock Item  as the source for accounts or 								subaccounts, review the account settings of non-stock items on the 									  ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items (IN202000) form of 								the Inventory module.  9 Review posting class master records  If you have decided to use  Posting Class  as the source for accounts or 								subaccounts, review posting classes on the   ([~/?ScreenId=IN206000|IN206000]) Posting Classes (IN206000) form of the 								Inventory module.  10 Review warehouse master records  If you have decided to use  Warehouse  as the source for accounts or 								subaccounts, review warehouse settings on the   ([~/?ScreenId=IN204000|IN204000]) Warehouses (IN204000) form of the 								Inventory module. 11 Review employee master records  If you have decided to use  Employee  as the source for subaccounts, review 								employee settings on the   ([~/?ScreenId=EP203000|EP203000]) Employees (EP203000) form of the General Ledger module.  12 Create carrier master records  If you have decided to use  Carrier  as the source for accounts or subaccounts, 								review (and, if necessary, create) carrier master records on the 									  ([~/?ScreenId=CS207500|CS207500]) Ship via Codes (CS207500) form 								of the Sale Orders module. 									 If 									you decide to use integration with nationwide carriers (FedEx, 									or UPS), follow the steps in the  Carrier Integration Checklist topic to 									configure the integration. 13 Create shipping terms  Create the identified necessary shipping terms using the   ([~/?ScreenId=CS208000|CS208000]) Shipping Terms (CS208000) form of the 								Sales Orders module.  14 Create FOB points  Create the identified necessary FOB points on the   ([~/?ScreenId=CS208500|CS208500]) FOB Points (CS208500) form of the 								Sales Orders module.  Steps 15 and 16 should be done after Steps 								12–14 have been completed. 15 Review customer master records  Use the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form of the Accounts 								Receivable module to review (and change, if necessary) the delivery 								settings of each location of each customer:  Ship Via , 									 Shipping Terms ,  FOB Point ,  Ship Complete , 									 Order Priority , and  Warehouse . Also, if you 								decided to use  Customer Location  as a source for accounts or 								subaccounts, review the General Ledger account settings for each 								customer location.  16 Review customer classes  Use the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form of the Accounts 								Receivable module to review (and change, if necessary) the delivery 								settings of each customer class:  Ship Via ,  Shipping 									Terms , and  Ship Complete .  Steps 17 and 18 should be the last steps 								you complete. 17 Make needed changes to order types  Use the   ([~/?ScreenId=SO201000|SO201000]) Order Types (SO201000) form to configure the 								predefined order types to suit your sales processes. Select the 								desired order type to review it and make any needed changes to 								settings:  Active : Clear this check box if you do not plan to 										use the displayed order type  Description : Modify the description if desired  Review  Order Settings :  Order Numbering Sequence Days to Keep Hold Orders on Entry  (yes/no)  Hold 												Document on Failed Credit 												Check  (yes/no)  Require Control Total  (yes/no)  Bill Separately  (yes/no)  Ship Separately  (yes/no)  Calculate Freight  (yes/no)  Recalculate Discount On Partial Shipment  												(yes/no)  Copy Notes  (yes/no)  Copy Attachments  (yes/no)  Copy Line Notes To Shipment  (yes/no)  Copy Line Attachments To Shipment  (yes/no)  Copy Line Notes To Invoice  (yes/no)  Only Non-Stock  (yes/no)  Copy Line Attachments To Invoice  (yes/no)  Only Non-Stock  (yes/no)  Review  Posting Settings :  Use Sales Account from Combine Sales Sub. from Freight Account Use Freight Account from Freight Sub. Combine Freight Sub. from Discount Account Use Discount Account from Discount Sub. Combine Discount Sub. from Post Line Discounts Separately  (yes/no)  Use Discount Sub. from Sales Sub.  (yes/no) 											 Review  Accounts Receivable Settings :  Invoice Numbering Sequence Mark as Printed  (yes/no)  Mark as Emailed  (yes/no)  Hold Invoices on Entry  (yes/no) Review  Template Settings  tab: Allow Quick Process  												(yes/no) Save the order type. 18 Configure Sales Orders Preferences  Use the   ([~/?ScreenId=SO101000|SO101000]) Sales Orders Preferences (SO101000) form to configure the 								global settings, based on decisions you made during preparation:  Default Sales Order Type Default Transfer Order Type Shipment Numbering Sequence Advanced Availability Validation Validate Min. Markup Use a Price Adjustment Multiplier Freight Allocation on Partial Shipping Free Item Shipping Hold Shipments on Entry Validate Shipment Total on Confirmation Add Zero Lines for Items Not in Stock Create Zero Shipments Hold Invoices on Failed Credit Check Use Shipment Date for Invoice Date Automatically Release IN Documents Use Shipped-Not-Invoiced Account Shipped-Not-Invoiced Account Shipped-Not-Invoiced Sub. Cost Calculation Basis for Non-Stock Kits All global settings needed for basic Sales Orders 									configuration are shown on the  General Settings  tab of 									the form.  You can download and print the  Sales Orders Configuration Checklist to assist you in this configuration. ]]></column>
		</row>
		<row PageID="df6b826c-6a84-4137-9b32-5c1fbeeae64a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="647c7e8b-e0c6-3c1b-c19e-50bb02e7fdce" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes the process of implementing the Projects module in Acumatica ERP. 
==Overview==
The Projects module supports and automates the process of managing the company projects in four main areas: 
*Collection of project-related transactions (primarily expenses) as they are processed in various Acumatica ERP modules
*Allocation of costs, calculation of burdens, overheads, and billable amounts
*Project billing
*Reporting

To meet these requirements, the Projects module is tightly integrated with many Acumatica ERP modules, including General Ledger, Accounts Payable, Account Receivable, Inventory, Purchase Orders, and Sales Orders. These modules do not require any change in their configuration when Projects is implemented. However, you may wish to review the certain areas as described in '''[HelpRoot_Implement\Implementing_Project_Management#4|Integration]'''. This document includes the following sections:
*[[#1|'''Prerequisites and Dependencies''']: Describes what modules must be set up and configured before you begin implementing this module.
*[[#2|'''Preparation''']: Describes data you should collect, arrange, and analyze.
*[[#3|'''Configuration''']: Guides you through the actual configuration of the Projects module.
*[[#4|'''Initializing Projects with Budget-based Allocation''']: Describes how to bring opening balances and historic data into the system to use projects with budget-based allocation.
*[[#5|'''Initializing Projects with Transaction-based Allocation''']: Describes how to bring opening balances and historic data into the system to use projects with transaction-based allocation.
*[[#6|'''Integration''']: Covers settings of the integrated modules that can be reviewed during the Projects implementation.
*[[#7|'''Other Considerations''']: Covers other aspects pertaining to the implementation of this module.

This document is meant only to guide you through Projects module implementation. For more information about the Projects forms, functions and reports, see [HelpRoot_Projects\PM_00_00_00|Projects]. [anchor|#1]
==Prerequisites and Dependencies==
The implementation of the Finance suite must be completed, before you can implement the Projects module. [anchor|#2]
==Preparation==
This section covers the preparatory steps before you begin configuring the Projects module. {br}

Implementation of Acumatica ERP module should start with collecting and analyzing the necessary information. Do the following steps before you actually configure the Projects module; these steps do not need to be done in the listed order and many can be done in parallel. ((({S:Hint}Because this is the preparation phase of implementation, enter no data into the system at this time.
)))
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Item 
!width="80%" ! Description
|- 
| '''Develop Projects numbering convention'''
|  Each project in Acumatica ERP is assigned with a unique '''Project ID'''. It can be comprised of segments with optional validation of each segment. Plan the structure of the project ID (segmented key ''PROJECT''): number of segments, length of segments, whether and how they should be validated, and whether auto-numbering should be used. Prepare list of valid entries for segments that should be validated. Design numbering sequence for auto-numbered segment, if needed. Plan also the structures for the '''Task ID''' segmented key ''PROTASK'') and '''Account Group ID''' (segmented key ''ACCGROUP''). ((({S:Hint} The task ID should be unique only within a project. Two different projects can have tasks with the same identifier, and they will be different tasks. For this reason, auto-numbering would not usually be used for task IDs.
))) For additional information, see [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers].
|- 
| '''Define autonumbering sequences'''
|  Projects requires numbering sequences for batches and Projects transactions. Acumatica ERP is installed with the following predefined, ready-to-use numbering sequences: 
*BATCH: Shared numbering sequence for batches of all modules, ranging from 0000000001 to 9999999999
*PMTRAN: Numbering sequence for Projects transactions, ranging from PM00000001 to PM99999999
If the project identifier is designed with an auto-numbering segment, define a numbering sequence for this segment too. For details, see [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences].
|- 
| '''Define non-project code'''
|  Once the Projects module is activated, transactions in all modules of Acumatica ERP will require Project IDs. This does not mean that each transaction must be linked to a project; the user can enter the non-project code (which you define) in the transaction that is not related to any project. For convenience, the non-project code should be distinctly different from project IDs and should be short, such as the single character ''X''.
|- 
| '''Define global processing options'''
|  The Projects module has two global options that control how all Projects transactions are processed: 
*'''Automatically Post on Release''' indicates if a Projects transaction should be automatically posted to General Ledger immediately after it is released.
*'''Automatically Release Allocations''' indicates if a Projects allocation transaction should be automatically released immediately after it is generated. Because an unreleased allocation transaction can be deleted or edited, which can cause inconsistency, it is recommended that you use auto-release of allocations.

|- 
| '''Define Projects integration'''
| Projects can receive transactions from the General Ledger, Accounts Payable, Accounts Receivable, Order Management, Purchase Orders, Organization Structure, Inventory, Cash Management, and Customer Management modules. These options are known as Visibility Settings in Projects setup. They indicate whether project-related transactions can be entered in the particular module at all. Projects and tasks also have their own visibility settings, which control the availability of this particular project or task in Acumatica ERP modules. ((({S:Hint} Visibility settings do not restrict the Projects module from posting its transactions to the General Ledger or from creating Accounts Receivable invoices.
)))
|- 
| '''Define EP Integration'''
|  If desired, define settings related to posting employee timesheets and equipment timesheets. With integration of the Time and Expenses and Projects modules, these transactions are initially released from Time and Expenses to Projects, and then Projects posts them to General Ledger. The credit account and subaccount are determined by the settings of the employee or equipment master record. The debit account and subaccount are configured by the Projects module: 
*'''Expense Account Source''' can be one of the following :
**Expense account of the ''Labor Class'' of the employee, or the ''Rate Class'' of the equipment 
**Expense account of the ''Employee'' or default account of the ''Equipment''
**Default account of the ''Project''
**Default account of the ''Task''
* '''Expense Subaccount''' can be combined segment by segment from:
**The expense subaccount of the employee&rsquo;s labor class, or of the equipment rate class (placeholder ''II'') 
**The expense subaccount of employee or default subaccount of equipment (placeholder ''EE'') 
**The default subaccount of the project (placeholder ''PP'') 
**The default subaccount of the task (placeholder ''TT'')

For information about the configuration of employee and equipment master records, see [HelpRoot_FormReference\EP_20_30_00|Employees] and [HelpRoot_FormReference\EP_20_80_00|Equipment] respectively.
|- 
| '''Define Account Groups'''
|  The role of account groups in Projects is similar to the role of accounts in General Ledger: All transaction processing and all reporting in Projects are done by account groups. When defining account groups, first of all, identify the accounts that will be used in project-related transactions. Accounts Receivable accounts (accounts debited by project billing) and Accounts Payable accounts (accounts credited by supplier bills) should be excluded. Consider that: 
*An account group should include accounts of one type (such as only expense or only income).
*Allocation and billing rules select transactions by account group. If transactions of two accounts should follow different rules, these two accounts should be included in different account groups.
*The account group is most frequently used as a key to billing (burden, overhead) rates. If transactions usually use the same rate, consider including their accounts in one group. If transactions usually use different rates, consider including their accounts in different groups.
((({S:Hint} The account group is not the only key to the allocation rate. Rates can also depend on employee, inventory item, project, and task.
))) Additionally, consider off-balance account groups that are not linked to General Ledger accounts and that would hold amounts not posted to General Ledger. An example of an off-balance group can be unrecognized revenue: You may want to see the amount in your project reporting, but do not want to post to General Ledger until actual billing is done (and thus revenue is recognized). For information about using account groups in this way, see the examples of allocation and billing rules further in the article. For each identified group, write down the following:
*'''Account Group ID''' to be used (which should comply with the defined ''ACCGROUP'' segmented key).
*'''Type''' of account group: Assets, Liability, Income, Expense, or Off-Balance. The type of the group should be the same as the type of General Ledger accounts included in the group. An off-balance group cannot include any General Ledger account.
*Short '''Description''' of the account group.
*List of '''GL Accounts''' included in the group.
For details, see [HelpRoot_FormReference\PM_20_10_00|Account Groups].
|- 
| '''Define Allocation and Billing Rates'''
|  The projects rate is used as a parameter in allocation rules formulas, and can be one of the following:
*''Billing unit rate'': When the original transaction quantity is multiplied by the rate to get the billable amount; for example, if you change $100 per hour for the consultant work, the rate is 100.
*''Billing factor'': When the original transaction amount is multiplied by the rate to get billable amount; for instance, if you re-invoice subcontractor bills to the customer with a 10% surcharge, the rate is 1.1.
*''Overhead rate'': If you charge the project with $20 of administrative overhead for every $100 of direct labor cost, the rate is 0.2 and the allocation rule should multiply the rate by the original transaction amount.
Usage of the rate is not restricted by these three options. The rate can be used anywhere within an allocation rule formula where numeric values can be used, with the following considerations:
*Rates of different usages should be maintained in different rate tables. For example, the ''billing unit rate'' and ''billing factor'' should not be put together under one rate code.
*The rate code produces only one rate figure for a particular transaction that is being allocated. If you need to calculate two different amounts for the same original transaction (such as admininstrative burden and billing amount), you should use two rate codes in two separate allocation steps.
*The rate code can hold rates by parameters—Account Group, Project, Task, Employee, Inventory, or any combination of these. For instance, if the billable rate for senior consultants is different from the billable rate of junior consultants, you should use one rate code with the parameter Employee.
 For each identified rate code, record the '''Rate Code''' (identifier of the rate table) and a brief '''Description'''. Define '''Lookup Rules''' for each rate code and customer price class: 
*'''Sequence''' indicates the order in which applicability of the lookup rule to the original transaction is checked.
*Short '''Description''' order rule (optional).
*'''Account Group''', '''Project''', '''Task''', '''Employee''', and '''Inventory''' indicate which elements of the original transaction are checked for applicability of the rule.
*Short '''Description''' order rule (optional).
((({S:Hint} You can select any combination of the parameters: one, a few, all, or none. Allocation tries to match the lookup rule and the original transaction; if lookup parameter elements are different, the rule is skipped and the next rule is tried. Due to this, a more specific rule (with a large number of parameters) should be assigned with a smaller '''Sequence''' number, and a less specific rule (with fewer parameters) should be assigned with a greater '''Sequence''' number. A rule with no parameters should be given the biggest sequence number, because such a rule applies to any transaction and should be tried only after all other rules.
))) For each sequence of each rate table, indicate: 
*'''Rate'''
* List of applicable '''Account Groups''', '''Projects''', '''Tasks''', '''Employees''', '''Inventory''' items, according to defined parameters of the lookup rule sequence. 
((({S:Hint} Rates are date-sensitive. You can create a schedule when one rate supersedes another. However, for the purpose of implementation, all rates should have the start date as the first operational date of the Projects module and a blank end date.
)))[HelpRoot_Implement\PM_Allocation_and_Billing_Rate_Examples|Projects Allocation and Billing Rate Examples] includes some examples of rate definitions. For more information, see [HelpRoot_FormReference\PM_20_41_00|Rate Types], [HelpRoot_FormReference\PM_20_50_00|Rate Lookup Rules], and [HelpRoot_FormReference\PM_20_60_00|Rate Tables].
|- 
| '''Design Allocation and Billing Rules'''
|  These rules comprise the heart of the Projects module. They define:
*Re-allocation of costs between account categories, tasks, and even projects
*alculation of burdens, overheads
*Selecting and grouping of transactions for posting
*Calculation of billable amounts and generation of Accounts Receivable invoices
See [HelpRoot_Implement\PM_Allocation_and_Billing_Rules_Examples|Project Allocation and Billing Rules Examples] for detailed examples of how these functions can be used. Analyze your business needs and practices and design your own allocation and billing rules: 
*'''Rule ID''': Unique identifier of the rule. 
*'''Description''': Short description of the rule. 
*:__Allocation Rule steps__
*'''Step ID''': Sequence or order of execution: from lower numbers to higher number. 
*'''Description''': Brief description of what this step does 
*'''Sum''': A check box you select if the step is to sum up the results of previous steps; leave it clear if the step is to select transactions and/or to perform regular calculation. 
*'''Post''': A check box you select if calculation results should be posted to account groups; clear the check box if the step is to select transactions for another summary step. 
*'''Rate Code''': The table of allocation billing rates used in the calculation of the step. 
*'''Quantity Formula''': The formula used to calculate the allocation transaction quantity; not used for the ''Budget'' method. 
*'''Billable Quantity Formula''': A formula used to calculate the allocation transaction billable quantity; not used for ''Budget'' method. 
*'''Amount Formula''': A formula used to calculate allocation transaction amount; not used for ''Budget'' method. 
*'''Description Formula''': A formula used to compose allocation transaction description. 
*'''Range Start/End''': The range of the previous steps to sum up; not used if the '''Sum''' check box is cleared. 
*'''Account Group From/To''': The range of account groups of the original transactions to select for allocation; not used if the '''Sum''' check box is selected. 
*'''Method''': How allocated quantities and amounts are calculated: 
**The ''Budget'' method calculates the allocation amount as the product of the account group budget and the task percent complete. 
**The ''Transaction'' method uses quantity and amount formulas. 
*'''Update GL''': A check box you select if the step should post the calculated amount to General Ledger ; clear the check box if posting should be done only for the Projects account group. 
*'''Debit''' of the side of the allocation transaction:
**''Project'': Use ''Source'' to debit the original project; if another project should be debited, use ''Replace'' and indicate the ID of the project. 
**''Task'': Use ''Source'' to debit the original task; if another task should be debited, use ''Replace'' and indicate the ID of the task. 
**''Account Group'':
*** Use ''Source'' to debit the original account group. 
*** Use ''Replace'' and indicate the account group to debit if it is different from the original. 
*** The ''From Account'' option is set automatically when you change ''Account''. 
*** Use ''No Debit'' to generate a single-sided credit-only transaction; available only for the ''Budget'' method. Such an allocation transaction cannot be posted to General Ledger. 
**''Account'': use ''Source'' to debit the original account; use ''Replace'' and indicate account to debit, if different from the original. Not available if '''Update GL''' is off. 
**''Subaccount'' is combined segment by segment from: 
**
***The subaccount indicated in the allocation step (placeholder ''AA'') 
***The project default subaccount (placeholder ''PP'') 
***The task default subaccount (placeholder ''TT'') 
***The subaccount of the original transaction (placeholder ''SS'') 
***Not available if '''Update GL''' is cleared. 
*'''Credit''' of the side of the allocation transaction; similar to '''Debit''' except that the account group can be set to ''No Credit'' to indicate a single-sided, debit-only allocation transaction. ''No Credit'' can be used with the ''Transaction'' method. 
*'''Grouping:'''
** ''Full Detail'' indicates no grouping; one original transaction creates one allocation transaction. 
**''By Item'' groups by inventory ID. 
**''By Employee'' groups by employee ID. 
**''By Date'' groups by original transaction date. 
**''By Vendor'' groups by vendor ID. 
**Any combination of ''by Item'', ''by Employee'', ''by Date'', ''by Vendor'' can be selected; if all options (including ''Full Details'') are off, the step creates only one allocation transaction. 
*'''Allocation''' filters out certain original transactions: 
**'''Include Non-Billable''': Switch off the option to exclude non-billable transactions; switch on the option to process all transactions. 
**'''Include Zero Amount''': Switch off the option to exclude transactions with a zero amount; switch on the option to process all transactions. 
**'''Include Zero Quantity''': Switch off the option to exclude transactions with a zero quantity; switch on the option to process all transactions. 
*'''Reverse''': Defines when allocation transactions used as basis for project billing (see the '''Account Group''' setting in '''Billing Rules''') should be reversed. 
**''On Invoice Release'': Allocation reversal transactions are incorporated in an Accounts Receivable invoice. 
**''On Project Billing'': Allocation reversal transactions are generated by project billing as a separate Projects document. 
**''Never'': Allocation transactions are not reversed.
*'''Copy Notes''': Switch on the option to copy notes of original transactions to allocation transactions. 
*:__Billing Rules__
*'''Account Group''' provides its balance as the billable amount 
*'''Invoice Description''' is not just a description but also a grouping factor. All billing rules with the same description are put in one Accounts Receivable invoice, and different descriptions lead to separate invoices. 
*'''Account Source''' defines where the invoice revenue account will be taken from:
**''None''
** ''Billing Rule'': Account maintained directly in billing rule in '''Account'''
** ''Project'': Default project account
**''Task'': Default task account 
**''Customer'': Customer&rsquo;s sales account
**''Inventory Item'': Item&rsquo;s sales account
**''Resource''
* '''Account''' is credited by the project invoice if '''Account Source''' is set to ''Billing Rule''. It should be the revenue account from the Income account group. 
*'''Subaccount Mask''' defines how the invoice revenue subaccount is combined segment by segment from the following:
**The subaccount indicated in the billing rule (placeholder ''BB'').
**The default subaccount of the project (placeholder ''PP'').
**The default subaccount of the task (placeholder ''TT'').
**The subaccount of the source transaction (placeholder ''SS''); the source of billing is normally transactions generated by the allocation process. 
*'''Subaccount''' is referred to by ''Subaccount Mask'' ''BB''. 
*'''Include Non-Billable''': Switch on the option if you want to bill transactions that are marked as non-billable. 
*'''Limit Quantity''': Switch on the option if the total billed quantity should be limited with the budget quantity of '''Max. Limits Account Group'''. 
*'''Limit Amount''': Switch on the option if the total billed amount should be limited with the budget amount of '''Max. Limits Account Group'''. 
*'''Max. Limits Account Group''': Indicate the account group that provides its budget (contract amount) as the limit for the total billed amount or quantity. 
*'''WIP Account Group''': Indicate the account group whose transactions should be automatically reversed by the billing process. Do not indicate the account group as WIP if it is already selected as the basis for billing (''Account Group'' of billing rule); reversal for such accounts is controlled by the '''Reverse''' setting of the allocation rules. 
*'''Copy Notes''': Switch on the option to copy notes of Projects transactions to an Accounts Receivable invoice. 
For further details, see [HelpRoot_FormReference\PM_20_70_00|Billing Rules].
|- 
| '''Collect project information'''
|  For each existing project, compile the following data: 
*'''Project ID''' to be used (which should comply with the segmented key ''PROJECT'') 
*'''Customer''' billable for the project (blank for non-billable internal projects) 
*'''Description''' of the project
*'''Default Account''' and '''Default Subaccount''' of the project 
*Planned project '''Start Date''' and '''End Date'''
*Project Allocation '''Billing Rule''' and '''Next Billing Date'''
*Automation settings: 
**Whether the project transaction should be automatically allocated 
**Whether the project invoices should be automatically released 
*Modules the project can be used in: General Ledger, Accounts Payable, Accounts Receivable, Sales Orders, Purchase Orders, Time and Expenses, Inventory, Cash Management, Customer Management. 
*Optional list of employees assigned to the project, and whether only these employees are allowed for the project transactions. Indicate whether the employees should use different labor class and overtime labor class for the project than those in the employee master record. 
*Optional list of equipment assigned to the project, and whether only the listed equipment is allowed for the project transactions. 
*'''Owner ID''' and '''Workgroup ID''' of the project, if applicable. 
*List of project tasks, indicating for each task: 
**'''Task ID''' to be used (which should comply with the segmented key ''PROTASK'') 
**Task '''Description'''
**Customer '''Location'''
** '''Price Class'''
** '''Billing Rule''', if different from the billing rule of the project 
**Planned task '''Start Date''' and '''End Date'''
** '''Default Account''' and '''Default Subaccount''' of the task 
**When the task should be billed: ''By Billing Period'' of the project, ''By Task Completion'', or ''By Project Completion''
**Modules the task can be used in: General Ledger, Accounts Payable, Accounts Receivable, Sales Orders, Purchase Orders, Time and Expenses, Inventory, Cash Management, Customer Management 
**'''Owner ID''' and '''Workgroup ID''' of the task, if applicable
**Task budget split by account group 
*If you plan to use the the Projects module with the Sales Orders module, indicate which tasks should cause freight and document discount posting.

|}
You can download and print the [HelpRoot_ImplementChecklists\PM_Preparation_Checklist|Projects Preparation Checklist] to assist you in collecting the data for Projects implementation. [anchor|#3]
==Configuration==
This section walks you through the process of actually configuring the Projects module in Acumatica ERP. 
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="28%" ! Action
!width="66%" ! Description
|- 
| '''1'''
|  '''Define auto-numbering sequences'''
|  Use the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form in the Common Settings module to create or review numbering sequences for: 
*Project batches (if not shared with other modules)
*Project transactions (sequence ''PMTRAN'')
*Auto-numbering segment of the ''PROJECT'' segmented key (if needed)

|- 
| '''2'''
|  '''Define structure of Projects identifiers'''
|  Use the [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000]) form in the Common Settings module to define segmentation of the following identifiers: 
*Project ID (key ''PROJECT'')
*Project Task ID (key ''PROTASK'')
*Account Group ID (key ''ACCGROUP'')

|- 
| '''3'''
|  '''Maintain valid values for validated segments'''
|  Use the [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000]) form in the Common Settings module to enter permitted values for segments of '''Project ID''', '''Task ID''', and '''Account Group ID''' that are configured as validated. Non-validated and auto-numbered segments do not require maintenance of segment values. 
|- 
| '''4'''
|  '''Configure Projects preferences'''
|  Use the [HelpRoot_FormReference\PM_10_10_00|Projects Preferences] ([~/?ScreenId=PM101000|PM101000]) form to configure and activate the Projects module, specifying the following settings: 
*'''Active''' (yes/no) 
*'''Batch Numbering Sequence'''
* '''Transaction Numbering Sequence'''
* '''Non-Project Code'''
* '''Automatically Post on Release'''
* '''Automatically Release Allocation'''
* '''Visibility Settings'''
* '''Expense Account Source''' and '''Expense Subaccount''' combination for Time and Expenses timesheets

|- 
| '''5'''
|  '''Create account groups'''
|  Use the [HelpRoot_FormReference\PM_20_10_00|Account Groups] ([~/?ScreenId=PM201000|PM201000]) form to create designed account groups and assign General Ledger accounts to them. 
|- 
| '''6'''
|  '''Create rate types'''
|  Use the [HelpRoot_FormReference\PM_20_41_00|Rate Types] ([~/?ScreenId=PM204100|PM204100]) form to register rate types and their descriptions in the Acumatica ERP. 
|- 
| '''7'''
|  '''Create rate lookup rules'''
|  Use the [HelpRoot_FormReference\PM_20_50_00|Rate Lookup Rules] ([~/?ScreenId=PM205000|PM205000]) form to define lookup rules for the registered rate codes. 
|- 
| '''8'''
|  '''Maintain Rate Tables'''
|  Use the [HelpRoot_FormReference\PM_20_60_00|Rate Tables] ([~/?ScreenId=PM206000|PM206000]) form to enter current allocation and billing rate values in the rate tables, defined in Steps 6 and 7. 
|- 
| '''9'''
|  '''Create allocation and billing rules'''
|  Use the [HelpRoot_FormReference\PM_20_70_00|Billing Rules] ([~/?ScreenId=PM207000|PM207000]) form to create the rules for project allocation and billing. 
|- 
| '''10'''
|  '''Create projects'''
|  Use the [HelpRoot_FormReference\PM_30_10_00|Projects] ([~/?ScreenId=PM301000|PM301000]) form to create project master records. At the same time and in the same form, you can also add tasks to the project. Note, however, that task visibility and budget cannot be maintained in this form. 
|- 
| '''11'''
|  '''Create or update project tasks'''
|  Use the [HelpRoot_FormReference\PM_30_20_00|Project Tasks] ([~/?ScreenId=PM302000|PM302000]) form to create project tasks. If tasks are created in step 10, review task visibility and maintain task budget in this form. 
|}
You can download and print the [HelpRoot_ImplementChecklists\PM_Configuration_Checklist|Project Configuration Checklist] to assist you in configuring the Projects module. {br}

[anchor|#4]
== Initializing Projects with Budget-based Allocation==
Projects with a budget-based allocation are fixed-price projects, allocated and billed as a project completion percent of the contract value. To migrate fixed-price projects from a legacy system to Acumatica ERP, perform the following steps: 
*Run allocation in the legacy system to ensure that projects have no unallocated transactions
*Create an off-balance account group to receive postings by a &ldquo;non-posting&ldquo; allocation rule (see next point)
*Create a &ldquo;non-posting&ldquo; allocation rule that is identical to the regular allocation rule with the following exceptions: 
**It does not update GL
**It debits and credits the special off-balance account group from point 1
**It has no billing rules
**Example (with reference to the '''FPPCR''' rule in [HelpRoot_Implement\PM_Allocation_and_Billing_Rate_Examples|Projects Allocation and Billing Rate Examples])

{| class="checklist" | width="100%" 
|- 
!width="4%" !  Step
!width="14%" ! Description
!width="6%" ! Sum
!width="5%" ! Post
!width="16%" ! Account Group
!width="10%" ! Method
!width="10%" ! Update GL
!width="16%" ! Debit Account Group
!width="14%" ! Credit Account Group 
|- 
| '''10'''
|  PTD revenue
|  OFF
|  ON
|  REVENUE
|  Budget
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|}
*Enter the percent complete for project tasks that matches the amount billed to date:
**Do not enter the '''actual''' percent complete for project tasks at this time.
*Enter account group balances as a Projects transaction without posting to General Ledger on the [HelpRoot_FormReference\PM_30_40_00|Project Transactions] ([~/?ScreenId=PM304000|PM304000]) form: 
**Enter account groups and leave accounts and subaccounts blank.
**Enter credit balances as negative figures.
**Do not enter a balance for the account group used by the regular billing rule as billing base, such as the ''UNBILLED'' account group in the ''FPPCR'' rule!
*Run allocation.
*Assign a regular allocation rule to the project and its tasks.
*Enter the actual percent complete for project tasks.
*The project is ready.
*After migration, the &ldquo;non-posting&ldquo; allocation rule can be deleted.

Usually, fixed-price projects have a limit on the maximum allowed billing amount. Limit can be enforced for quantity too. If this is the case: 
*Reduce the budget of the max. limits account category by the amounts billed in the legacy system.
*Create a special account group to hold the original budget value:
**No transactions should be posted to it.
**It should not be used in allocation and billing rules.
**It should be used only as a reference to the original budget value.
*When the budget is revised, change both the max limits account group and the special account group.
[anchor|#5]
== Initializing Projects with Transaction-based Allocation==
Transaction-based allocation is used by time-and-materials and cost-plus projects. To migrate such projects from a legacy system to Acumatica ERP, perform the following steps: 
*Run allocation in the legacy system to ensure that projects have no unallocated transactions.
*Create an off-balance account group to receive postings by the &ldquo;zero&ldquo; allocation rule (see the next point).
*Create a &ldquo;zero&ldquo; allocation rule that: 
**Selects transactions from account groups that are selected by the regular allocation rule of the project.
**Generates allocation with a zero amount and quantity without General Ledger posting.
**Debits and credits the special off-balance account group.
**Has no billing rules.
**Example (with reference to the '''TMR''' rule in [HelpRoot_Implement\PM_Allocation_and_Billing_Rate_Examples|Projects Allocation and Billing Rate Examples])

{| class="checklist" | width="100%" 
|- 
!width="4%" !  Step
!width="12%" ! Description
!width="4%" ! Sum
!width="4%" ! Post
!width="8%" ! Qty. Formula
!width="8%" ! Billable Qty. Formula
!width="8%" ! Amount Formula
!width="12%" ! Account Group
!width="8%" ! Update GL
!width="16%" ! Debit Account Group
!width="16%" ! Credit Account Group 
|- 
| '''10'''
|  Labor
|  OFF
|  ON
|  =0
|  =0
|  =0
|  LABOR
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|- 
| '''20'''
|  Material
|  OFF
|  ON
|  =0
|  =0
|  =0
|  MATERIAL
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|- 
| '''30'''
|  Subcontractors
|  OFF
|  ON
|  =0
|  =0
|  =0
|  SUBCON
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|- 
| '''40'''
|  Travel expenses
|  OFF
|  ON
|  =0
|  =0
|  =0
|  TRAVEL
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|}
*Replace the allocation rule of the project and its tasks with the &ldquo;zero&ldquo; rule.
*Enter account group balances as Projects transactions without posting to the General Ledger by using the [HelpRoot_FormReference\PM_30_40_00|Project Transactions] ([~/?ScreenId=PM304000|PM304000]) form: 
**Enter account groups and leave accounts and subaccounts blank.
**Enter credit balances as negative figures.
**Enter in full the balance for the account group used by the regular billing rule as the billing base (as with the ''UNBILLED'' account group in the ''TMR'' rule).
**Reduce the balance of the offset account group (in the ''TMR'' rule, offset to the ''UNBILLED'' account group is the ''REVENUE'' account group) by the balance of unbilled amount. Thus:
***For the ''TMR'' rule, the transaction amount for ''REVENUE'' should be -(''REVENUE'' balance - ''UNBILLED'' balance)
***For the ''TMSUM'' rule, the transaction amount for ''UNRECREV'' should be -(''UNRECREV'' balance - ''UNBILLED'' balance - ''UNBILLEDHR'' balance) = 0. That is, an offset transaction is not needed.
***The ''TMU'' rule has no offset to ''UNRECREV'', so no offset transaction is needed.
*Run allocation.
*Assign the regular allocation rule to the project and its tasks.
*The project is ready.
*After migration, the &ldquo;zero&ldquo; allocation rule can be deleted.

If project billing is a limited amount and quantity, it should be handled similarly for projects with budget-based allocation: 
*Reduce the budget of the max. limits account category by the amounts billed in the legacy system
*Create a special account group to hold the original budget value: 
**No transactions should be posted to it.
**It should not be used in allocation and billing rules.
**It should be used only as reference to the original budget value.
*When the budget is revised, change both the .max limits account group and the special account group.
[anchor|#6]
==Integration==
The Acumatica ERP modules integrated with the Projects module do not require any change in their configuration when Projects is implemented. There are two considerations, though: 
#Integrated modules do not post transactions to Projects directly. The original transaction is first posted to General Ledger and then from General Ledger is copied to Projects. Thus, if the Accounts Payable Preferences form has the '''Post Summary on Updating GL''' check box selected, projects will get a summary of Accounts Payable transactions. To update Projects with full details of the original transactions, clear the '''Post Summary on Updating GL''' check box on the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]), [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]), and [HelpRoot_FormReference\IN_10_10_00|Inventory Preferences] ([~/?ScreenId=IN101000|IN101000]) forms.
#Transactions from integrated modules reach the Projects module only after they are released and posted. You can reduce manual processing time by configuring integrated modules to release and post transactions automatically by selecting the following check boxes: 
##'''Automatically Post on Release''' on the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]), [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]), and [HelpRoot_FormReference\IN_10_10_00|Inventory Preferences] ([~/?ScreenId=IN101000|IN101000]) forms.
##'''Automatically Release AR Documents''' and ''' Automatically Release IN Documents''' on the [HelpRoot_FormReference\SO_10_10_00|Sales Orders Preferences] ([~/?ScreenId=SO101000|SO101000]) form.
##'''Release AP Documents Automatically''' and '''Release IN Documents Automatically''' on the [HelpRoot_FormReference\PO_10_10_00|Purchase Orders Preferences] ([~/?ScreenId=PO101000|PO101000]) forms.
##'''Automatically Release PM Documents''' on the [HelpRoot_FormReference\EP_10_10_00|Time and Expenses Preferences] ([~/?ScreenId=EP101000|EP101000]) form.
#Time and Expenses can copy notes and attached documents from a Time and Expenses transaction to a Projects transaction if the '''Copy Notes to PM Documents''' and '''Copy Notes to PM Documents''' check boxes on the [HelpRoot_FormReference\EP_10_10_00|Time and Expenses Preferences] ([~/?ScreenId=EP101000|EP101000]) form are selected.
[anchor|#7]
==Other Considerations==
{| class="checklist" | width="100%" 
|- 
!width="23%" ! Consideration
!width="76%" ! Details
|- 
| '''Project Templates and Global Tasks'''
| 
If you have many projects that are similar to one another, you can save the time needed to create them by using project templates. A project template contains standard data. When you create a new project, you simply select an appropriate template, and all its data will be copied to the new project; you need only to adjust it to reflect any differences. {br}

Project templates are maintained on the ([HelpRoot_FormReference\PM_20_80_00|Project Templates] ([~/?ScreenId=PM208000|PM208000]) form. With minor exceptions, template configuration is the same as project configuration. A project template does not have: 
*A customer. 
*Planned start and end dates.
*A next billing date. 
*An auto-allocation option. 
*Custom project attributes. 

You set these settings in the project after you copy template data to it. A project template has tasks that serve as task templates. They can be maintained on the [HelpRoot_FormReference\PM_20_80_10|Project Template Tasks] ([~/?ScreenId=PM208010|PM208010]) form or directly on the ([HelpRoot_FormReference\PM_20_80_00|Project Templates] ([~/?ScreenId=PM208000|PM208000]) form. Compared to a project task, a task template does not have: 
*A customer location. 
*A customer price class. 
*Planned start and end dates.
*Custom task attributes. 

You set these settings in the task after template data is copied to the project. For each template task, you can indicate whether it should be automatically copied when a project is created from its template. Non-auto template tasks can be added to the project by using '''Add Tasks''' on the '''Tasks''' tab of the ([HelpRoot_FormReference\PM_30_10_00|Projects] ([~/?ScreenId=PM301000|PM301000]) form. Global tasks are similar to template tasks, except that they are not linked to a project template and can be added to any project. Consider using global tasks if certain tasks should be included in many (or most) of your projects, although all these projects have different structures. Global tasks are maintained on the ([HelpRoot_FormReference\PM_20_80_30|Common Tasks] ([~/?ScreenId=PM208030|PM208030]) form. For more information, see [HelpRoot_Projects\PM__con_Templates_for_Projects_and_Tasks|Templates for Projects and Tasks]. 
|- 
| '''Attributes'''
| 
You can extend the standard definition of the project, task, and account group by adding custom ''attributes'' to their master records. {br}

Attributes are defined on the ([HelpRoot_FormReference\CS_20_50_00|Attributes] ([~/?ScreenId=CS205000|CS205000]) form of the Common Settings module. The definition of a custom attribute includes: 
*'''Attribute ID'''. 
*'''Description'''.
*'''Control Type''': text, combo (selection from predefined list), check box (yes/no), or date and time. 
*'''Required''' or optional. 
*'''Entry Mask''' to validate entry for text or combo. 
*'''Regular Expression''' for advanced validation of entry in text or combo (optional). 
*List of valid '''Values''' for combo only; each value has a description and a sort order. 
((({S:Hint}
 Projects, tasks, account groups can have identical attributes. In such a case, define only one attribute and share it among projects, tasks, and account groups.
)))
{br}

Next, custom attributes should be enabled for the project, task, or account group by using the ([HelpRoot_FormReference\PM_20_20_00|Attributes] ([~/?ScreenId=PM202000|PM202000]) form of the Projects module. {br}

Finally, enter appropriate values of the customer attributes on the respective forms: 
* Account group custom attributes: ([HelpRoot_FormReference\PM_20_10_00|Account Groups] ([~/?ScreenId=PM201000|PM201000]) form. 
* Project custom attributes: ([HelpRoot_FormReference\PM_30_10_00|Projects] ([~/?ScreenId=PM301000|PM301000]) form. 
* Task custom attributes: ([HelpRoot_FormReference\PM_30_20_00|Project Tasks] ([~/?ScreenId=PM302000|PM302000]) form. 

|}]]></column>
			<column name="PlainText"><![CDATA[Implementing Project Accounting This document describes the process of implementing the Projects module in  Acumatica ERP.  Overview The Projects module supports and automates the process of managing the company 				projects in four main areas:  Collection of project-related transactions (primarily expenses) as they are 					processed in various  Acumatica ERP modules Allocation of costs, calculation of burdens, overheads, and billable 					amounts Project billing Reporting To meet these requirements, the Projects module is tightly integrated with many  Acumatica ERP modules, including General Ledger, Accounts Payable, Account Receivable, 				Inventory, Purchase Orders, and Sales Orders. These modules do not require any 				change in their configuration when Projects is implemented. However, you may wish to 				review the certain areas as described in  Integration Integration. This document includes the following 				sections: Prerequisites and Dependencies '''Prerequisites and Dependencies''': Describes what modules 					must be set up and configured before you begin implementing this module. Preparation '''Preparation''': Describes data you should collect, arrange, 					and analyze. Configuration '''Configuration''': Guides you through the actual 					configuration of the Projects module. Initializing Projects with Budget-based Allocation '''Initializing Projects with Budget-based Allocation''': 					Describes how to bring opening balances and historic data into the system to use 					projects with budget-based allocation. Initializing Projects with Transaction-based Allocation '''Initializing Projects with Transaction-based Allocation''': 					Describes how to bring opening balances and historic data into the system to use 					projects with transaction-based allocation. Integration '''Integration''': Covers settings of the integrated modules 					that can be reviewed during the Projects implementation. Other 							Considerations '''Other Considerations''': Covers other aspects pertaining to the 					implementation of this module. This document is meant only to guide you through Projects module implementation. For 				more information about the Projects forms, functions and reports, see   ([~/?ScreenId=PM000000|PM000000]) Projects.  Prerequisites and Dependencies The implementation of the Finance suite must be completed,  before you can implement 				the Projects module.  Preparation This section covers the preparatory steps before you begin configuring the Projects 				module.  Implementation of  Acumatica ERP module should start with collecting and analyzing the necessary information. Do 				the following steps before you actually configure the Projects module; these steps 				do not need to be done in the listed order and many can be done in parallel. 					 Because this is the preparation phase of implementation, enter no data 					into the system at this time. Item  Description Develop Projects numbering convention  Each project in  Acumatica ERP is assigned with a unique  Project ID . It can be comprised 								of segments with optional validation of each segment. Plan the 								structure of the project ID (segmented key  PROJECT ): number 								of segments, length of segments, whether and how they should be 								validated, and whether auto-numbering should be used. Prepare list 								of valid entries for segments that should be validated. Design 								numbering sequence for auto-numbered segment, if needed. Plan also 								the structures for the  Task ID  segmented key  PROTASK ) 								and  Account Group ID  (segmented key  ACCGROUP ).   The task ID should be unique only within a project. 									Two different projects can have tasks with the same identifier, 									and they will be different tasks. For this reason, 									auto-numbering would not usually be used for task IDs.  								For additional information, see  Segmented Identifiers. Define autonumbering sequences  Projects requires numbering sequences for batches and Projects 								transactions.  Acumatica ERP is installed with the following predefined, ready-to-use 								numbering sequences:  BATCH: Shared numbering sequence for batches of all modules, 										ranging from 0000000001 to 9999999999 PMTRAN: Numbering sequence for Projects transactions, 										ranging from PM00000001 to PM99999999 If the project identifier is designed with an auto-numbering 								segment, define a numbering sequence for this segment too. For 								details, see   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences. Define non-project code  Once the Projects module is activated, transactions in all 								modules of  Acumatica ERP will require Project IDs. This does not mean that each 								transaction must be linked to a project; the user can enter the 								non-project code (which you define) in the transaction that is not 								related to any project. For convenience, the non-project code should 								be distinctly different from project IDs and should be short, such 								as the single character  X . Define global processing options  The Projects module has two global options that control how all 								Projects transactions are processed:  Automatically Post on Release  										indicates if a Projects transaction should be automatically 										posted to General Ledger immediately after it is 										released. Automatically Release Allocations  										indicates if a Projects allocation transaction should be 										automatically released immediately after it is generated. 										Because an unreleased allocation transaction can be deleted 										or edited, which can cause inconsistency, it is recommended 										that you use auto-release of allocations. Define Projects integration Projects can receive transactions from the General Ledger, 								Accounts Payable, Accounts Receivable, Order Management, Purchase 								Orders, Organization Structure, Inventory, Cash Management, and 								Customer Management modules. These options are known as Visibility 								Settings in Projects setup. They indicate whether project-related 								transactions can be entered in the particular module at all. 								Projects and tasks also have their own visibility settings, which 								control the availability of this particular project or task in  Acumatica ERP modules.   Visibility settings do not restrict 									the Projects module from posting its transactions to the General 									Ledger or from creating Accounts Receivable 								invoices. Define EP Integration  If desired, define settings related to posting employee 								timesheets and equipment timesheets. With integration of the Time 								and Expenses and Projects modules, these transactions are initially 								released from Time and Expenses to Projects, and then Projects posts 								them to General Ledger. The credit account and subaccount are 								determined by the settings of the employee or equipment master 								record. The debit account and subaccount are configured by the 								Projects module:  Expense Account Source  can be one of 										the following : Expense account of the  Labor Class  of the 												employee, or the  Rate Class  of the equipment  Expense account of the  Employee  or default 												account of the  Equipment Default account of the  Project Default account of the  Task Expense Subaccount  can be combined 										segment by segment from: The expense subaccount of the employee's labor 												class, or of the equipment rate class (placeholder 												 II )  The expense subaccount of employee or default 												subaccount of equipment (placeholder  EE )  The default subaccount of the project (placeholder 												 PP )  The default subaccount of the task (placeholder 												 TT ) For information about the configuration of employee and 									equipment master records, see   ([~/?ScreenId=EP203000|EP203000]) Employees and   ([~/?ScreenId=EP208000|EP208000]) Equipment 								respectively. Define Account Groups  The role of account groups in Projects is similar to the role of 								accounts in General Ledger: All transaction processing and all 								reporting in Projects are done by account groups. When defining 								account groups, first of all, identify the accounts that will be 								used in project-related transactions. Accounts Receivable accounts 								(accounts debited by project billing) and Accounts Payable accounts 								(accounts credited by supplier bills) should be excluded. Consider 								that:  An account group should include accounts of one type (such 										as only expense or only income). Allocation and billing rules select transactions by account 										group. If transactions of two accounts should follow 										different rules, these two accounts should be included in 										different account groups. The account group is most frequently used as a key to 										billing (burden, overhead) rates. If transactions usually 										use the same rate, consider including their accounts in one 										group. If transactions usually use different rates, consider 										including their accounts in different groups.  The account group is not the only key to the 									allocation rate. Rates can also depend on employee, inventory 									item, project, and task.  Additionally, consider 								off-balance account groups that are not linked to General Ledger 								accounts and that would hold amounts not posted to General Ledger. 								An example of an off-balance group can be unrecognized revenue: You 								may want to see the amount in your project reporting, but do not 								want to post to General Ledger until actual billing is done (and 								thus revenue is recognized). For information about using account 								groups in this way, see the examples of allocation and billing rules 								further in the article. For each identified group, write down the following: Account Group ID  to be used (which should comply with 										the defined  ACCGROUP  segmented key). Type  of account group: Assets, Liability, Income, 										Expense, or Off-Balance. The type of the group should be the 										same as the type of General Ledger accounts included in the 										group. An off-balance group cannot include any General 										Ledger account. Short  Description  of the account group. List of  GL Accounts  included in the group. For details, see   ([~/?ScreenId=PM201000|PM201000]) Account Groups. Define Allocation and Billing Rates  The projects rate is used as a parameter in allocation rules formulas, and can be one 								of the following: Billing unit rate : When the original transaction 										quantity is multiplied by the rate to get the billable 										amount; for example, if you change $100 per hour for the 										consultant work, the rate is 100. Billing factor : When the original transaction amount 										is multiplied by the rate to get billable amount; for 										instance, if you re-invoice subcontractor bills to the 										customer with a 10% surcharge, the rate is 1.1. Overhead rate : If you charge the project with $20 of 										administrative overhead for every $100 of direct labor cost, 										the rate is 0.2 and the allocation rule should multiply the 										rate by the original transaction amount. Usage of the rate is not restricted by these three options. The 								rate can be used anywhere within an allocation rule formula where 								numeric values can be used, with the following considerations: Rates of different usages should be maintained in different 										rate tables. For example, the  billing unit rate  and 											 billing factor  should not be put together under 										one rate code. The rate code produces only one rate figure for a particular 										transaction that is being allocated. If you need to 										calculate two different amounts for the same original 										transaction (such as admininstrative burden and billing 										amount), you should use two rate codes in two separate 										allocation steps. The rate code can hold rates by parameters—Account 										Group, Project, Task, Employee, Inventory, or any 										combination of these. For instance, if the billable rate for 										senior consultants is different from the billable rate of 										junior consultants, you should use one rate code with the 										parameter Employee.  For each identified rate code, record the  Rate Code  								(identifier of the rate table) and a brief  Description . 								Define  Lookup Rules  for each rate code and customer price 								class:  Sequence  indicates the order in which applicability 										of the lookup rule to the original transaction is 										checked. Short  Description  order rule 										(optional). Account Group ,  Project ,  Task , 											 Employee , and  Inventory  indicate which 										elements of the original transaction are checked for 										applicability of the rule. Short  Description  order rule (optional).  You can select any combination of the 									parameters: one, a few, all, or none. Allocation tries to match 									the lookup rule and the original transaction; if lookup 									parameter elements are different, the rule is skipped and the 									next rule is tried. Due to this, a more specific rule (with a 									large number of parameters) should be assigned with a smaller 										 Sequence  number, and a less specific rule (with fewer 									parameters) should be assigned with a greater  Sequence  									number. A rule with no parameters should be given the biggest 									sequence number, because such a rule applies to any transaction 									and should be tried only after all other rules.  For each 								sequence of each rate table, indicate:  Rate  List of applicable  Account Groups ,  Projects , 											 Tasks ,  Employees ,  Inventory  items, 										according to defined parameters of the lookup rule sequence. 									  Rates are date-sensitive. You can create a 									schedule when one rate supersedes another. However, for the 									purpose of implementation, all rates should have the start date 									as the first operational date of the Projects module and a blank 									end date. Projects Allocation and Billing Rate Examples includes some examples of rate definitions. For 								more information, see   ([~/?ScreenId=PM204100|PM204100]) Rate Types,   ([~/?ScreenId=PM205000|PM205000]) Rate Lookup Rules, and   ([~/?ScreenId=PM206000|PM206000]) Rate Tables. Design Allocation and Billing Rules  These rules comprise the heart of the Projects module. They define: Re-allocation of costs between account categories, tasks, 										and even projects alculation of burdens, overheads Selecting and grouping of transactions for posting Calculation of billable amounts and generation of Accounts 										Receivable invoices See  Project Allocation and Billing Rules Examples for detailed examples of how these functions can 								be used. Analyze your business needs and practices and design your 								own allocation and billing rules:  Rule ID : Unique identifier of the 										rule.  Description : Short description of the 										rule.  Allocation Rule steps Step ID : Sequence or order of 										execution: from lower numbers to higher number.  Description : Brief description of 										what this step does  Sum : A check box you select if the 										step is to sum up the results of previous steps; leave it 										clear if the step is to select transactions and/or to 										perform regular calculation.  Post : A check box you select if 										calculation results should be posted to account groups; 										clear the check box if the step is to select transactions 										for another summary step.  Rate Code : The table of allocation 										billing rates used in the calculation of the step.  Quantity Formula : The formula used to 										calculate the allocation transaction quantity; not used for 										the  Budget  method.  Billable Quantity Formula : A formula used to 										calculate the allocation transaction billable quantity; not 										used for  Budget  method.  Amount Formula : A formula used to 										calculate allocation transaction amount; not used for 											 Budget  method.  Description Formula : A formula used 										to compose allocation transaction description.  Range Start/End : The range of the 										previous steps to sum up; not used if the 											 Sum  check box is cleared.  Account Group From/To : The range of 										account groups of the original transactions to select for 										allocation; not used if the  Sum  check 										box is selected.  Method : How allocated quantities and amounts are 										calculated:  The  Budget  method calculates the allocation 												amount as the product of the account group budget 												and the task percent complete.  The  Transaction  method uses quantity and 												amount formulas.  Update GL : A check box you select if 										the step should post the calculated amount to General Ledger 										; clear the check box if posting should be done only for the 										Projects account group.  Debit  of the side of the allocation transaction: Project : Use  Source  to debit the 												original project; if another project should be 												debited, use  Replace  and indicate the ID of 												the project.  Task : Use  Source  to debit the original 												task; if another task should be debited, use 												 Replace  and indicate the ID of the task.  Account Group :  Use  Source  to debit the original 												account group.   Use  Replace  and indicate the account 												group to debit if it is different from the 												original.   The  From Account  option is set 												automatically when you change  Account .   Use  No Debit  to generate a 												single-sided credit-only transaction; available 												only for the  Budget  method. Such an 												allocation transaction cannot be posted to General 												Ledger.  Account : use  Source  to debit the 												original account; use  Replace  and indicate 												account to debit, if different from the original. 												Not available if  Update GL  is 												off.  Subaccount  is combined segment by segment 												from:  The subaccount indicated in the allocation 												step (placeholder  AA )  The project default subaccount (placeholder 												 PP )  The task default subaccount (placeholder 												 TT )  The subaccount of the original transaction 												(placeholder  SS )  Not available if  Update 												GL  is cleared.  Credit  of the side of the allocation 										transaction; similar to  Debit  except 										that the account group can be set to  No Credit  to 										indicate a single-sided, debit-only allocation transaction. 											 No Credit  can be used with the  Transaction  										method.  Grouping: Full Detail  indicates no grouping; one 												original transaction creates one allocation 												transaction.  By Item  groups by inventory ID.  By Employee  groups by employee ID.  By Date  groups by original transaction date.  By Vendor  groups by vendor ID.  Any combination of  by Item ,  by 												Employee ,  by Date ,  by Vendor  can 												be selected; if all options (including  Full 												Details ) are off, the step creates only one 												allocation transaction.  Allocation  filters out certain 										original transactions:  Include Non-Billable : Switch 												off the option to exclude non-billable transactions; 												switch on the option to process all transactions.  Include Zero Amount : Switch 												off the option to exclude transactions with a zero 												amount; switch on the option to process all 												transactions.  Include Zero Quantity : Switch 												off the option to exclude transactions with a zero 												quantity; switch on the option to process all 												transactions.  Reverse : Defines when allocation 										transactions used as basis for project billing (see the 											 Account Group  setting in 											 Billing Rules ) should be 										reversed.  On Invoice Release : Allocation reversal 												transactions are incorporated in an Accounts 												Receivable invoice.  On Project Billing : Allocation reversal 												transactions are generated by project billing as a 												separate Projects document.  Never : Allocation transactions are not 												reversed. Copy Notes : Switch on the option to 										copy notes of original transactions to allocation 										transactions.  Billing Rules Account Group  provides its balance as 										the billable amount  Invoice Description  is not just a 										description but also a grouping factor. All billing rules 										with the same description are put in one Accounts Receivable 										invoice, and different descriptions lead to separate 										invoices.  Account Source  defines where the 										invoice revenue account will be taken from: None Billing Rule : Account maintained directly in 												billing rule in  Account Project : Default project account Task : Default task account  Customer : Customer's sales account Inventory Item : Item's sales account Resource Account  is credited by the project 										invoice if  Account Source  is set to 											 Billing Rule . It should be the revenue account 										from the Income account group.  Subaccount Mask  defines how the 										invoice revenue subaccount is combined segment by segment 										from the following: The subaccount indicated in the billing rule 												(placeholder  BB ). The default subaccount of the project (placeholder 												 PP ). The default subaccount of the task (placeholder 												 TT ). The subaccount of the source transaction 												(placeholder  SS ); the source of billing is 												normally transactions generated by the allocation 												process.  Subaccount  is referred to by 											 Subaccount Mask BB .  Include Non-Billable : Switch on the 										option if you want to bill transactions that are marked as 										non-billable.  Limit Quantity : Switch on the option 										if the total billed quantity should be limited with the 										budget quantity of  Max. Limits Account 											Group .  Limit Amount : Switch on the option if 										the total billed amount should be limited with the budget 										amount of  Max. Limits Account Group .  Max. Limits Account Group : Indicate 										the account group that provides its budget (contract amount) 										as the limit for the total billed amount or quantity.  WIP Account Group : Indicate the 										account group whose transactions should be automatically 										reversed by the billing process. Do not indicate the account 										group as WIP if it is already selected as the basis for 										billing ( Account Group  of billing rule); reversal for 										such accounts is controlled by the 											 Reverse  setting of the allocation 										rules.  Copy Notes : Switch on the option to 										copy notes of Projects transactions to an Accounts 										Receivable invoice.  For further details, see   ([~/?ScreenId=PM207000|PM207000]) Billing Rules. Collect project information  For each existing project, compile the following data:  Project ID  to be used (which should 										comply with the segmented key  PROJECT )  Customer  billable for the project 										(blank for non-billable internal projects)  Description  of the project Default Account  and 											 Default Subaccount  of the project  Planned project  Start Date  and 											 End Date Project Allocation  Billing Rule  and 											 Next Billing Date Automation settings:  Whether the project transaction should be 												automatically allocated  Whether the project invoices should be automatically 												released  Modules the project can be used in: General Ledger, Accounts 										Payable, Accounts Receivable, Sales Orders, Purchase Orders, 										Time and Expenses, Inventory, Cash Management, Customer 										Management.  Optional list of employees assigned to the project, and 										whether only these employees are allowed for the project 										transactions. Indicate whether the employees should use 										different labor class and overtime labor class for the 										project than those in the employee master record.  Optional list of equipment assigned to the project, and 										whether only the listed equipment is allowed for the project 										transactions.  Owner ID  and  Workgroup 											ID  of the project, if applicable.  List of project tasks, indicating for each task:  Task ID  to be used (which 												should comply with the segmented key  PROTASK )  Task  Description Customer  Location Price Class Billing Rule , if different 												from the billing rule of the project  Planned task  Start Date  and 												 End Date Default Account  and 												 Default Subaccount  of the 												task  When the task should be billed:  By Billing 												Period  of the project,  By Task 												Completion , or  By Project Completion Modules the task can be used in: General Ledger, 												Accounts Payable, Accounts Receivable, Sales Orders, 												Purchase Orders, Time and Expenses, Inventory, Cash 												Management, Customer Management  Owner ID  and 												 Workgroup ID  of the task, 												if applicable Task budget split by account group  If you plan to use the the Projects module with the Sales 										Orders module, indicate which tasks should cause freight and 										document discount posting. You can download and print the  Projects Preparation Checklist to assist you in collecting the data for Projects 				implementation.  Configuration This section walks you through the process of actually configuring the Projects 				module in  Acumatica ERP.  No. Action Description 1 Define auto-numbering sequences  Use the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form 								in the Common Settings module to create or review numbering 								sequences for:  Project batches (if not shared with other modules) Project transactions (sequence  PMTRAN ) Auto-numbering segment of the  PROJECT  segmented key 										(if needed) 2 Define structure of Projects identifiers  Use the   ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) form 								in the Common Settings module to define segmentation of the 								following identifiers:  Project ID (key  PROJECT ) Project Task ID (key  PROTASK ) Account Group ID (key  ACCGROUP ) 3 Maintain valid values for validated segments  Use the   ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) form 								in the Common Settings module to enter permitted values for segments 								of  Project ID ,  Task 								ID , and  Account Group ID  that are 								configured as validated. Non-validated and auto-numbered segments do 								not require maintenance of segment values.  4 Configure Projects preferences  Use the   ([~/?ScreenId=PM101000|PM101000]) Projects Preferences (PM101000) form to configure 								and activate the Projects module, specifying the following settings:  Active  (yes/no)  Batch Numbering Sequence Transaction Numbering Sequence Non-Project Code Automatically Post on Release Automatically Release Allocation Visibility Settings Expense Account Source  and 											 Expense Subaccount  combination 										for Time and Expenses timesheets 5 Create account groups  Use the   ([~/?ScreenId=PM201000|PM201000]) Account Groups (PM201000) form to create 								designed account groups and assign General Ledger accounts to them.  6 Create rate types  Use the   ([~/?ScreenId=PM204100|PM204100]) Rate Types (PM204100) form to 								register rate types and their descriptions in the  Acumatica ERP.  7 Create rate lookup rules  Use the   ([~/?ScreenId=PM205000|PM205000]) Rate Lookup Rules (PM205000) form to define 								lookup rules for the registered rate codes.  8 Maintain Rate Tables  Use the   ([~/?ScreenId=PM206000|PM206000]) Rate Tables (PM206000) form to enter 								current allocation and billing rate values in the rate tables, 								defined in Steps 6 and 7.  9 Create allocation and billing rules  Use the   ([~/?ScreenId=PM207000|PM207000]) Billing Rules (PM207000) form to create 								the rules for project allocation and billing.  10 Create projects  Use the   ([~/?ScreenId=PM301000|PM301000]) Projects (PM301000) form to create 								project master records. At the same time and in the same form, you 								can also add tasks to the project. Note, however, that task 								visibility and budget cannot be maintained in this form.  11 Create or update project tasks  Use the   ([~/?ScreenId=PM302000|PM302000]) Project Tasks (PM302000) form to create 								project tasks. If tasks are created in step 10, review task 								visibility and maintain task budget in this form.  You can download and print the  Project Configuration Checklist to assist you in configuring the Projects module.   Initializing Projects with Budget-based Allocation Projects with a budget-based allocation are fixed-price projects, allocated and 				billed as a project completion percent of the contract value. To migrate fixed-price 				projects from a legacy system to  Acumatica ERP, perform the following steps:  Run allocation in the legacy system to ensure that projects have no unallocated 					transactions Create an off-balance account group to receive postings by a "non-posting" 					allocation rule (see next point) Create a "non-posting" allocation rule that is identical to the regular 					allocation rule with the following exceptions:  It does not update GL It debits and credits the special off-balance account group from point 							1 It has no billing rules Example (with reference to the  FPPCR  rule in  Projects Allocation and Billing Rate Examples)  Step Description Sum Post Account Group Method Update GL Debit Account Group Credit Account Group  10  PTD revenue  OFF  ON  REVENUE  Budget  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE Enter the percent complete for project tasks that matches the amount billed to date: Do not enter the  actual  percent complete for project tasks at 							this time. Enter account group balances as a Projects transaction without posting to General Ledger on 					the   ([~/?ScreenId=PM304000|PM304000]) Project Transactions (PM304000) 					form:  Enter account groups and leave accounts and subaccounts blank. Enter credit balances as negative figures. Do not enter a balance for the account group used by the regular billing 							rule as billing base, such as the  UNBILLED  account group in the 								 FPPCR  rule! Run allocation. Assign a regular allocation rule to the project and its tasks. Enter the actual percent complete for project tasks. The project is ready. After migration, the "non-posting" allocation rule can be deleted. Usually, fixed-price projects have a limit on the maximum allowed billing amount. 				Limit can be enforced for quantity too. If this is the case:  Reduce the budget of the max. limits account category by the amounts billed in 					the legacy system. Create a special account group to hold the original budget value: No transactions should be posted to it. It should not be used in allocation and billing rules. It should be used only as a reference to the original budget value. When the budget is revised, change both the max limits account group and the 					special account group.  Initializing Projects with Transaction-based Allocation Transaction-based allocation is used by time-and-materials and cost-plus projects. To 				migrate such projects from a legacy system to  Acumatica ERP, perform the following steps:  Run allocation in the legacy system to ensure that projects have no unallocated 					transactions. Create an off-balance account group to receive postings by the "zero" allocation 					rule (see the next point). Create a "zero" allocation rule that:  Selects transactions from account groups that are selected by the 							regular allocation rule of the project. Generates allocation with a zero amount and quantity without General 							Ledger posting. Debits and credits the special off-balance account group. Has no billing rules. Example (with reference to the  TMR  rule in  Projects Allocation and Billing Rate Examples)  Step Description Sum Post Qty. Formula Billable Qty. Formula Amount Formula Account Group Update GL Debit Account Group Credit Account Group  10  Labor  OFF  ON  =0  =0  =0  LABOR  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE 20  Material  OFF  ON  =0  =0  =0  MATERIAL  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE 30  Subcontractors  OFF  ON  =0  =0  =0  SUBCON  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE 40  Travel expenses  OFF  ON  =0  =0  =0  TRAVEL  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE Replace the allocation rule of the project and its tasks with the "zero" 					rule. Enter account group balances as Projects transactions without posting to the General Ledger 					by using the   ([~/?ScreenId=PM304000|PM304000]) Project Transactions 					(PM304000) form:  Enter account groups and leave accounts and subaccounts blank. Enter credit balances as negative figures. Enter in full the balance for the account group used by the regular 							billing rule as the billing base (as with the  UNBILLED  account 							group in the  TMR  rule). Reduce the balance of the offset account group (in the  TMR  rule, 							offset to the  UNBILLED  account group is the  REVENUE  							account group) by the balance of unbilled amount. Thus: For the  TMR  rule, the transaction amount for 										 REVENUE  should be -( REVENUE  balance - 										 UNBILLED  balance) For the  TMSUM  rule, the transaction amount for 										 UNRECREV  should be -( UNRECREV  balance - 										 UNBILLED  balance -  UNBILLEDHR  balance) = 0. 									That is, an offset transaction is not needed. The  TMU  rule has no offset to  UNRECREV , so no 									offset transaction is needed. Run allocation. Assign the regular allocation rule to the project and its tasks. The project is ready. After migration, the "zero" allocation rule can be deleted. If project billing is a limited amount and quantity, it should be handled similarly 				for projects with budget-based allocation:  Reduce the budget of the max. limits account category by the amounts billed in 					the legacy system Create a special account group to hold the original budget value:  No transactions should be posted to it. It should not be used in allocation and billing rules. It should be used only as reference to the original budget value. When the budget is revised, change both the .max limits account group and the 					special account group. Integration The  Acumatica ERP modules integrated with the Projects module do not require any change in their 				configuration when Projects is implemented. There are two considerations, though:  Integrated modules do not post transactions to Projects directly. The original transaction 					is first posted to General Ledger and then from General Ledger is copied to 					Projects. Thus, if the Accounts Payable Preferences form has the  Post 						Summary on Updating GL  check box selected, projects will get a 					summary of Accounts Payable transactions. To update Projects with full details 					of the original transactions, clear the  Post Summary on Updating 						GL  check box on the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000),   ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000), and   ([~/?ScreenId=IN101000|IN101000]) Inventory Preferences (IN101000) 					forms. Transactions from integrated modules reach the Projects module only after they 					are released and posted. You can reduce manual processing time by configuring 					integrated modules to release and post transactions automatically by selecting 					the following check boxes:  Automatically Post on Release  on the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000), 								  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences 							(AR101000), and   ([~/?ScreenId=IN101000|IN101000]) Inventory Preferences (IN101000) forms. Automatically Release AR Documents  and   Automatically 								Release IN Documents  on the   ([~/?ScreenId=SO101000|SO101000]) Sales Orders Preferences (SO101000) 							form. Release AP Documents Automatically  and  Release IN 								Documents Automatically  on the   ([~/?ScreenId=PO101000|PO101000]) Purchase Orders Preferences (PO101000) 							forms. Automatically Release PM Documents  on the   ([~/?ScreenId=EP101000|EP101000]) Time and Expenses Preferences 							(EP101000) form. Time and Expenses can copy notes and attached documents from a Time and Expenses transaction 					to a Projects transaction if the  Copy Notes to PM 						Documents  and  Copy Notes to PM Documents  					check boxes on the   ([~/?ScreenId=EP101000|EP101000]) Time and Expenses Preferences (EP101000) form are selected. Other Considerations Consideration Details Project Templates and Global Tasks If you have many projects that are similar to one another, you 									can save the time needed to create them by using project 									templates. A project template contains standard data. When you 									create a new project, you simply select an appropriate template, 									and all its data will be copied to the new project; you need 									only to adjust it to reflect any differences.  Project templates are maintained on the (  ([~/?ScreenId=PM208000|PM208000]) Project Templates 									(PM208000) form. With minor exceptions, template 									configuration is the same as project configuration. A project 									template does not have:  A customer.  Planned start and end dates. A next billing date.  An auto-allocation option.  Custom project attributes.  You set these settings in the project after you copy template data to it. A project 									template has tasks that serve as task templates. They can be 									maintained on the   ([~/?ScreenId=PM208010|PM208010]) Project Template Tasks (PM208010) form or directly on the (  ([~/?ScreenId=PM208000|PM208000]) Project Templates (PM208000) 									form. Compared to a project task, a task template does not have:  A customer location.  A customer price class.  Planned start and end dates. Custom task attributes.  You set these settings in the task after template data is copied to the project. For each 									template task, you can indicate whether it should be 									automatically copied when a project is created from its 									template. Non-auto template tasks can be added to the project by 									using  Add Tasks  on the 										 Tasks  tab of the (  ([~/?ScreenId=PM301000|PM301000]) Projects (PM301000) 									form. Global tasks are similar to template tasks, except that 									they are not linked to a project template and can be added to 									any project. Consider using global tasks if certain tasks should 									be included in many (or most) of your projects, although all 									these projects have different structures. Global tasks are 									maintained on the (  ([~/?ScreenId=PM208030|PM208030]) Common Tasks (PM208030) 									form. For more information, see  Templates for Projects and Tasks.  Attributes You can extend the standard definition of the project, task, and 									account group by adding custom  attributes  to their master 									records.  Attributes are defined on the (  ([~/?ScreenId=CS205000|CS205000]) Attributes (CS205000) 									form of the Common Settings module. The definition of a custom 									attribute includes:  Attribute ID .  Description . Control Type : text, combo (selection 										from predefined list), check box (yes/no), or date and time.  Required  or optional.  Entry Mask  to validate entry for text 										or combo.  Regular Expression  for advanced 										validation of entry in text or combo (optional).  List of valid  Values  for combo only; 										each value has a description and a sort order.   Projects, tasks, account groups can have identical 										attributes. In such a case, define only one attribute and 										share it among projects, tasks, and account groups. Next, custom attributes should be enabled for the project, task, or account group by 									using the (  ([~/?ScreenId=PM202000|PM202000]) Attributes 									(PM202000) form of the Projects module.  Finally, enter appropriate values of the customer attributes on 									the respective forms:   Account group custom attributes: (  ([~/?ScreenId=PM201000|PM201000]) Account Groups 										(PM201000) form.   Project custom attributes: (  ([~/?ScreenId=PM301000|PM301000]) Projects 										(PM301000) form.   Task custom attributes: (  ([~/?ScreenId=PM302000|PM302000]) Project Tasks 										(PM302000) form.  ]]></column>
		</row>
		<row PageID="4f0098eb-ee0f-4ac1-82f3-33104fe1d4c3" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="9d1e2adf-a8cf-24f5-5582-6ec98a2dd78d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This section provides some examples of rates configuration in the Projects module. All examples assume ''DEFAULT'' customer price. 
==The Simplest Rate==
In this example, we will use rate code '''LABORATE''' designed to hold labor billing rates. The simplest Rate Lookup Rule would look as follows: 
{| class="checklist" | width="100%" 
|- 
!width="12%" !  Sequence
!width="12%" ! Account Group
!width="12%" ! Project
!width="12%" ! Task
!width="12%" ! Inventory
!width="12%" ! Employee
!width="25%" ! Description
|- 
|  999
|  Off
|  Off
|  Off
|  Off
|  Off
|  Default
|}
All options ('''Account Group''', '''Project''', '''Task''', '''Inventory''', '''Employee''') that control applicability of the rule to allocated transaction, are deselected. This means that rule apply to all transactions without exception. The simplest Rate Tables is 
{| class="checklist" | width="100%" 
|- 
! Sequence
!Start Date
!End Date
!Rate
|- 
|  999
|  1 Feb 2006
| 
|  100.00
|}
Blank end date indicates that all transactions on and after 1 February 2006 will be billed at $100/hour. ((({S:Warn}
Rate itself does not know anything about unit of measures or type of the transaction. If misused, it may charge $100 per box of chocolates, or multiply $500 of air ticket cost by 100. ''Allocation Rule'' that uses the rate code, should specify labor expense account category explicitly to ensure that only labor transactions are selected for allocation with such rate code.
)))
==Transaction-type Sensitive Rate==
The rate definition can be modified to avoid the above-mentioned problem, and to apply it only to labor transactions: 
{| class="checklist" | width="100%" 
|- 
!width="12%" !  Sequence
!width="12%" ! Account Group
!width="12%" ! Project
!width="12%" ! Task
!width="12%" ! Inventory
!width="12%" ! Employee
!width="25%" ! Description
|- 
|  999
| '''On'''
|  Off
|  Off
|  Off
|  Off
|  Default
|}
Now options '''Account Group''' is selected and we need to provide one or few account groups in the rate table: 
{| class="checklist" | width="100%" 
|- 
!width="13%" !  Sequence
!width="26%" ! Account Groups
!width="26%" ! Start Date
!width="20%" ! End Date
!width="13%" ! Rate 
|- 
|  999
|  LABOR
|  1 Feb 2006
| 
|  100.00
|}
The rule will be checked against account group of the allocated transaction, and if it is also ''LABOR'', the rate of $100 will be applied. We can be sure now that we do not bill our customers hundred-fold for travel expenses. ((({S:Warn}
Non-labor transactions will get no rate from such table. To avoid errors during allocation, ''Allocation Rule'' that uses the rate code, has to pre-filter labor transactions still.
)))
==Improved Rate==
The rate definition can be further improved to protect against possible misconfiguration in Allocation Rules: 
{| class="checklist" | width="100%" 
|- 
!width="12%" !  Sequence
!width="12%" ! Account Group
!width="12%" ! Project
!width="12%" ! Task
!width="12%" ! Inventory
!width="12%" ! Employee
!width="25%" ! Description
|- 
|  900
| '''On'''
|  Off
|  Off
|  Off
|  Off
|  Labor Default
|- 
|  999
|  Off
|  Off
|  Off
|  Off
|  Off
|  Default
|}
Two sequences require two rate tables: 
{| class="checklist" | width="100%" 
|- 
!width="16%" !  Sequence
!width="25%" ! Account Groups
!width="25%" ! Start Date
!width="16%" ! End Date
!width="16%" ! Rate 
|- 
|  900
|  LABOR
|  1 Feb 2006
| 
|  100.00
|- 
|  999
| 
|  1 Feb 2006
| 
|  0.00
|}
Allocation will search rate table from top. All labor transactions will be &ldquo;captured&ldquo; in step '''900''' and billed at $100/hour. Non-labor transaction will fall through to rule '''999''' and will be zeroed. 
==Extended Definition==
The rate definition can be extended to bill differently for different qualification of employees: 
{| class="checklist" | width="100%" 
|- 
!width="11%" !  Sequence
!width="11%" ! Account Group
!width="11%" ! Project
!width="11%" ! Task
!width="11%" ! Inventory
!width="11%" ! Employee
!width="29%" ! Description
|- 
|  800
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Project management
|- 
|  810
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Senior consultants
|- 
|  820
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Junior consultants
|- 
|  900
| '''On'''
|  Off
|  Off
|  Off
|  Off
|  Labor Default
|- 
|  999
|  Off
|  Off
|  Off
|  Off
|  Off
|  Default
|}
The first three rules have options '''Employee''' on. This means that they apply only to transactions with Employee ID from the attached employee list. If Employee ID is different, the rule is skipped and the next rule is tried. Note that although all first three rules have the same setting - apply per '''Account Group''' and '''Employee''' - they are not identical: each rule has different list of employees (see below). The last two rules remain unchanged. They work as &ldquo;trap&ldquo; for all transactions that fail all previous rules and reach the end of the table. The Rate Tables are extended: 
{| class="checklist" | width="100%" 
|- 
!width="9%" !  Sequence
!width="13%" ! Account Groups
!width="27%" ! Employees
!width="18%" ! Start Date
!width="18%" ! End Date
!width="13%" ! Rate 
|- 
|  800
|  LABOR
|  EP00000001 EP00000002
|  1 Feb 2006
| 
|  150.00
|- 
| rowspan="2" | 810
| rowspan="2" | LABOR
| rowspan="2" | EP00000006 EP00000007
|  1 Feb 2006
|  31 Jan 2012
|  120.00
|- 
|  1 Feb 2012
| 
|  130.00
|- 
| rowspan="2" | 820
| rowspan="2" | LABOR
| rowspan="2" | EP00000009 EP00000010
|  1 Feb 2006
|  31 Jan 2010
|  120.00
|- 
|  1 Feb 2010
| 
|  125.00
|- 
| rowspan="4" | 900
| rowspan="4" | LABOR
| rowspan="4" | 
|  1 Feb 2006
|  31 Jan 2008
|  100.00
|- 
|  1 Feb 2008
|  31 Jan 2010
|  105.00
|- 
|  1 Feb 2010
|  31 Jan 2012
|  110.00
|- 
|  1 Feb 2012
| 
|  115.00
|- 
|  999
| 
| 
|  1 Feb 2006
| 
|  0.00
|}
 Following examples demonstrate how the rule works: 
*Transaction with account group ''LABOR'' and employee ID ''EP00000001'' is &ldquo;caught&ldquo; by rule '''800''' and is allocated with rate $150/hour.
*Transaction with account group ''LABOR'' and employee ID ''EP00000006'' fails rule '''800''' (employee ''EP00000006'' is not in the list). The search continues with rule '''810'''. This rule fits to transaction. The rate in rule '''810''' is time sensitive: if allocation is run before 1 Feb 2012, the billing rate is $120/hour; after 1 Feb 2012, work of the same employee is invoiced at $130/hour.
*Transaction with account group ''LABOR'' and employee ID ''EP00000008'' fails rule '''800'''. Sequentially, it tries and fails rules 810 and 820. Finally, it tries rule 900 which applies to all LABOR transactions regardless of employee. The allocated transaction gets its billing rate from this rule: 
**if allocation is done before 1 Feb 2008, employee time is billed at $100/hour.
**if allocation is done between 1 Feb 2008 and 1 Feb 2010, employee time is billed at $105/hour.
**if allocation is done between 1 Feb 2010 and 1 Feb 2012, employee time is billed at $110/hour.
**if allocation is done after 1 Feb 2012, employee time is billed at $115/hour.
*Transaction with account group ''TRAVEL'' and employee ID ''EP00000001'' fails rule '''800''' (it has &ldquo;wrong&ldquo; account category). Sequentially, it tries and fails rules '''810''', '''820''', '''900'''. Finally rule '''999''' applies zero rate to it.

Note that sequence numbers have big gaps: 800-810-820-900-999. This is done intentionally, to simplify insertion of new rules, should they be needed. For example, time of employee EP00000008 should be billed with special rate, you can easily add rule with sequence number 815. 
==Further Extension==
The rate definition can also be extended to bill differently for different projects (while keeping different employee rates): 
{| class="checklist" | width="100%" 
|- 
!width="11%" !  Sequence
!width="11%" ! Account Group
!width="11%" ! Project
!width="11%" ! Task
!width="11%" ! Inventory
!width="11%" ! Employee
!width="33%" ! Description
|- 
|  700
| '''On'''
|  '''On'''
|  Off
|  Off
| '''On'''
|  Special project management 
|- 
|  710
| '''On'''
|  '''On'''
|  Off
|  Off
| '''On'''
|  Special senior consultants
|- 
|  720
| '''On'''
|  '''On'''
|  Off
|  Off
| '''On'''
|  Special junior consultants
|- 
|  790
| '''On'''
|  '''On'''
|  Off
|  Off
|  Off
|  Special labor default
|- 
|  800
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Project management
|- 
|  810
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Senior consultants
|- 
|  820
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Junior consultants
|- 
|  900
| '''On'''
|  Off
|  Off
|  Off
|  Off
|  Labor Default
|- 
|  999
|  Off
|  Off
|  Off
|  Off
|  Off
|  Default
|}
===The Rate Table===
{| class="checklist" | width="100%" 
|- 
!width="7%" !  Sequence
!width="10%" ! Account Groups
!width="19%" ! Project
!width="22%" ! Employees
!width="14%" ! Start Date
!width="14%" ! End Date
!width="10%" ! Rate 
|- 
|  700
|  LABOR
|  TM00000001
|  EP00000001 EP00000002
|  1 Feb 2006
| 
|  250.00
|- 
|  710
|  LABOR
|  TM00000001
|  EP00000006 EP00000007
|  1 Feb 2006
| 
|  200.00
|- 
|  720
|  LABOR
|  TM00000001
|  EP00000009 EP00000010
|  1 Feb 2006
| 
|  175.00
|- 
|  790
|  LABOR
|  TM00000001
| 
|  1 Feb 2006
| 
|  125.00
|- 
|  800
|  LABOR
| 
|  EP00000001 EP00000002
|  1 Feb 2006
| 
|  150.00
|- 
| rowspan="2" | 810
| rowspan="2" | LABOR
| rowspan="2" | 
| rowspan="2" | EP00000006 EP00000007
|  1 Feb 2006
|  31 Jan 2012
|  120.00
|- 
|  1 Feb 2012
| 
|  130.00
|- 
| rowspan="2" | 820
| rowspan="2" | LABOR
| rowspan="2" | 
| rowspan="2" | EP00000009 EP00000010
|  1 Feb 2006
|  31 Jan 2010
|  120.00
|- 
|  1 Feb 2010
| 
|  125.00
|- 
| rowspan="4" | 900
| rowspan="4" | LABOR
| rowspan="4" | 
| rowspan="4" | 
|  1 Feb 2006
|  31 Jan 2008
|  100.00
|- 
|  1 Feb 2008
|  31 Jan 2010
|  105.00
|- 
|  1 Feb 2010
|  31 Jan 2012
|  110.00
|- 
|  1 Feb 2012
| 
|  115.00
|- 
|  999
| 
| 
| 
|  1 Feb 2006
| 
|  0.00
|}
Rules '''700''', '''710''', '''720''', and '''790''' define special labor billing rate for project ''TM00000001'': if employee ''EP00000006'' works in this project, his time is billed to customer at $200/hour (rule '''710'''). But his work in project ''CP00000005'' will be billed at $120/hour (rule '''820''').]]></column>
			<column name="PlainText"><![CDATA[Projects Allocation and Billing Rate Examples This section provides some examples of rates configuration in the Projects module. 				All examples assume  DEFAULT  customer price.  The Simplest Rate In this example, we will use rate code  LABORATE  designed to hold labor billing 				rates. The simplest Rate Lookup Rule would look as follows:   Sequence Account Group Project Task Inventory Employee Description  999  Off  Off  Off  Off  Off  Default All options ( Account Group ,  Project ,  Task ,  Inventory , 					 Employee ) that control applicability of the rule to allocated 				transaction, are deselected. This means that rule apply to all transactions without 				exception. The simplest Rate Tables is   Sequence Start Date End Date Rate  999  1 Feb 2006  100.00 Blank end date indicates that all transactions on and after 1 February 2006 will be 				billed at $100/hour.  Rate itself does not know anything about unit of measures or type of the 					transaction. If misused, it may charge $100 per box of chocolates, or multiply 					$500 of air ticket cost by 100.  Allocation Rule  that uses the rate code, 					should specify labor expense account category explicitly to ensure that only 					labor transactions are selected for allocation with such rate code. Transaction-type Sensitive Rate The rate definition can be modified to avoid the above-mentioned problem, and to 				apply it only to labor transactions:   Sequence Account Group Project Task Inventory Employee Description  999 On  Off  Off  Off  Off  Default Now options  Account Group  is selected and we need to provide one or few 				account groups in the rate table:   Sequence Account Groups Start Date End Date Rate   999  LABOR  1 Feb 2006  100.00 The rule will be checked against account group of the allocated transaction, and if 				it is also  LABOR , the rate of $100 will be applied. We can be sure now that 				we do not bill our customers hundred-fold for travel expenses.  Non-labor transactions will get no rate from such table. To avoid errors during 					allocation,  Allocation Rule  that uses the rate code, has to pre-filter 					labor transactions still. Improved Rate The rate definition can be further improved to protect against possible 				misconfiguration in Allocation Rules:   Sequence Account Group Project Task Inventory Employee Description  900 On  Off  Off  Off  Off  Labor Default  999  Off  Off  Off  Off  Off  Default Two sequences require two rate tables:   Sequence Account Groups Start Date End Date Rate   900  LABOR  1 Feb 2006  100.00  999  1 Feb 2006  0.00 Allocation will search rate table from top. All labor transactions will be "captured" 				in step  900  and billed at $100/hour. Non-labor transaction will fall through 				to rule  999  and will be zeroed.  Extended Definition The rate definition can be extended to bill differently for different qualification 				of employees:   Sequence Account Group Project Task Inventory Employee Description  800 On  Off  Off  Off On  Project management  810 On  Off  Off  Off On  Senior consultants  820 On  Off  Off  Off On  Junior consultants  900 On  Off  Off  Off  Off  Labor Default  999  Off  Off  Off  Off  Off  Default The first three rules have options  Employee  on. This means that they apply 				only to transactions with Employee ID from the attached employee list. If Employee 				ID is different, the rule is skipped and the next rule is tried. Note that although 				all first three rules have the same setting - apply per  Account Group  and 					 Employee  - they are not identical: each rule has different list of 				employees (see below). The last two rules remain unchanged. They work as "trap" for 				all transactions that fail all previous rules and reach the end of the table. The 				Rate Tables are extended:   Sequence Account Groups Employees Start Date End Date Rate   800  LABOR  EP00000001 EP00000002  1 Feb 2006  150.00 810 LABOR EP00000006 EP00000007  1 Feb 2006  31 Jan 2012  120.00  1 Feb 2012  130.00 820 LABOR EP00000009 EP00000010  1 Feb 2006  31 Jan 2010  120.00  1 Feb 2010  125.00 900 LABOR  1 Feb 2006  31 Jan 2008  100.00  1 Feb 2008  31 Jan 2010  105.00  1 Feb 2010  31 Jan 2012  110.00  1 Feb 2012  115.00  999  1 Feb 2006  0.00  Following examples demonstrate how the rule works:  Transaction with account group  LABOR  and employee ID  EP00000001  is 					"caught" by rule  800  and is allocated with rate $150/hour. Transaction with account group  LABOR  and employee ID  EP00000006  					fails rule  800  (employee  EP00000006  is not in the list). The 					search continues with rule  810 . This rule fits to transaction. The rate 					in rule  810  is time sensitive: if allocation is run before 1 Feb 2012, 					the billing rate is $120/hour; after 1 Feb 2012, work of the same employee is 					invoiced at $130/hour. Transaction with account group  LABOR  and employee ID  EP00000008  					fails rule  800 . Sequentially, it tries and fails rules 810 and 820. 					Finally, it tries rule 900 which applies to all LABOR transactions regardless of 					employee. The allocated transaction gets its billing rate from this rule:  if allocation is done before 1 Feb 2008, employee time is billed at 							$100/hour. if allocation is done between 1 Feb 2008 and 1 Feb 2010, employee time 							is billed at $105/hour. if allocation is done between 1 Feb 2010 and 1 Feb 2012, employee time 							is billed at $110/hour. if allocation is done after 1 Feb 2012, employee time is billed at 							$115/hour. Transaction with account group  TRAVEL  and employee ID  EP00000001  					fails rule  800  (it has "wrong" account category). Sequentially, it tries 					and fails rules  810 ,  820 ,  900 . Finally rule  999  					applies zero rate to it. Note that sequence numbers have big gaps: 800-810-820-900-999. This is done 				intentionally, to simplify insertion of new rules, should they be needed. For 				example, time of employee EP00000008 should be billed with special rate, you can 				easily add rule with sequence number 815.  Further Extension The rate definition can also be extended to bill differently for different projects 				(while keeping different employee rates):   Sequence Account Group Project Task Inventory Employee Description  700 On On  Off  Off On  Special project management   710 On On  Off  Off On  Special senior consultants  720 On On  Off  Off On  Special junior consultants  790 On On  Off  Off  Off  Special labor default  800 On  Off  Off  Off On  Project management  810 On  Off  Off  Off On  Senior consultants  820 On  Off  Off  Off On  Junior consultants  900 On  Off  Off  Off  Off  Labor Default  999  Off  Off  Off  Off  Off  Default The Rate Table  Sequence Account Groups Project Employees Start Date End Date Rate   700  LABOR  TM00000001  EP00000001 EP00000002  1 Feb 2006  250.00  710  LABOR  TM00000001  EP00000006 EP00000007  1 Feb 2006  200.00  720  LABOR  TM00000001  EP00000009 EP00000010  1 Feb 2006  175.00  790  LABOR  TM00000001  1 Feb 2006  125.00  800  LABOR  EP00000001 EP00000002  1 Feb 2006  150.00 810 LABOR EP00000006 EP00000007  1 Feb 2006  31 Jan 2012  120.00  1 Feb 2012  130.00 820 LABOR EP00000009 EP00000010  1 Feb 2006  31 Jan 2010  120.00  1 Feb 2010  125.00 900 LABOR  1 Feb 2006  31 Jan 2008  100.00  1 Feb 2008  31 Jan 2010  105.00  1 Feb 2010  31 Jan 2012  110.00  1 Feb 2012  115.00  999  1 Feb 2006  0.00 Rules  700 ,  710 ,  720 , and  790  define special labor billing 				rate for project  TM00000001 : if employee  EP00000006  works in this 				project, his time is billed to customer at $200/hour (rule  710 ). But his work 				in project  CP00000005  will be billed at $120/hour (rule  820 ). ]]></column>
		</row>
		<row PageID="17611cbc-6496-41e8-bdb9-cb58f25afd22" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8806da61-841c-064d-ce3e-0561e8cb8756" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This section provides some examples of allocation and billing rules in the Projects module. 
==Budget-based Allocations==
The FPCPU, FPCPP, FPPCR, and FPPCU rules all use the allocation method ''Budget'' and are designed for fixed-price projects. These projects calculate the billable amount based on the percent complete of the job done. Actual billing can be ongoing, when the task is finished, or when the whole project is finished, depending on the project task setting. 
==Rule FPCPU==
The rule is designed for fixed price projects that update General Ledger only through invoicing; between the billings, the project displays unbilled amounts as unrecognized revenue. The method is '' Budget''.
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="7%" ! Step
!width="14%" ! Description
!width="7%" ! Sum
!width="7%" ! Post
!width="15%" ! Description Formula
!width="14%" ! Account Group
!width="8%" ! Update GL
!width="10%" ! Debit Account Group
!width="14%" ! Credit Account Group
|- 
| '''10'''
| PTD revenue (unrecognized) 
| OFF
| ON
| =&rsquo;Unrecognized revenue&rsquo;
| CONTRACT
| OFF
| NO DEBIT
| Replace with UNRECREV
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="16%" ! Account Group
!width="12%" ! Invoice Description
!width="12%" ! Account
!width="16%" ! Subaccount
!width="8%" ! Include Non-Billable
!width="8%" ! Limit Qty
!width="8%" ! Limit Amount
!width="16%" ! Max. Limits Account Group
|- 
| UNRECREV
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| ON
| CONTRACT
|}
A project that uses this rule is expected to have the off-balance account group ''CONTRACT''; the budget of this group holds the contract amount, which is the maximum amount that you can bill to the customer. The total contract amount can be split among tasks, and each task will have its budget for account group ''CONTRACT''. Alternatively, you can create a special task that does not accept transactions from any module, but it holds the contract amount and is used in allocation and billing. All other tasks will have no budget for the account group ''CONTRACT''. {br}

The allocation rule calculates the billable amount as '''CONTRACT budget &#42; percent complete of the task - previous billable amounts'''. The calculated amount is posted as a single-sided transaction and shown only in Projects. Single-sided transactions cannot be posted to the General Ledger. The General Ledger is updated by the billing rule, which: 
*Generates an invoice for the amount calculated by the allocation rule. Note that the billing account group ''UNRECREV'' is the same as the '''credit''' account group in the allocation rule.
*Reverses allocation transactions used as a billing source: account group ''UNRECREV'' should have a zero balance after the billing. The reversal transaction is a Projects transaction, which should be released to update the ''UNRECREV'' balance.

The total billable amount is limited by the budget of account category ''CONTRACT''. ((({S:Warn}
 A single-sided, budget-based credit allocation is the only case when a credit setting of the allocation rule is used in the billing rule. In all other cases, debit setting should be used. 
)))
==Rule FPCPP==
This rule is designed for fixed-price projects that update the General Ledger with unrecognized revenue. The revenue is recognized during billing. The method is '' Budget''.
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="6%" ! Step
!width="9%" ! Descr.
!width="6%" ! Sum
!width="6%" ! Post
!width="12%" ! Descr. Formula
!width="12%" ! Account Group
!width="8%" ! Update GL
!width="18%" ! Debit
!width="18%" ! Credit
|- 
| '''10'''
| PTD revenue
| OFF
| ON
| =&rsquo;Billable amount&rsquo;
| CONTRACT
| ON
| 
Account¹: Replace with 111100{br}

Subacct mask²: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000
| 
Account¹: Replace with 220000 {br}

Subacct mask²: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000
|}
¹ When the debit or credit account is changed, the debit or credit account group is automatically set to ''From Account''{br}

² Mask ''AA'' of the subaccount segment indicates that the segment should be taken from allocation rule. Other available masks are: 
*''PP'': The default subaccount of the project
*''SS'': The source transaction
*''TT'': The default subaccount of the task

===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Account Group
!width="14%" ! Invoice Description
!width="11%" ! Account
!width="18%" ! Subaccount
!width="8%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="8%" ! Limit Amount
!width="14%" ! Max. Limits Account Group
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| ON
| CONTRACT
|}
Unlike FPCPU, allocation rule FPCPP updates the General Ledger with the amount of unrecognized revenue; therefore, it has both debit and credit settings. Note that the billing account group ''UNBILLED'' is the group of the '''debit''' account ''111100''. As in the previous rule, FPCPP billing reverses allocation transactions used as the billing source. But in this case, reversal transactions are invisibly &ldquo;attached&ldquo; to the Accounts Receivable invoice and do not require a separate release. 
==Rule FPPCR==
This rule is designed for fixed-price projects that update the General Ledger with recognized revenue even between invoicing. 
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="6%" ! Step
!width="8%" ! Descr.
!width="6%" ! Sum
!width="6%" ! Post
!width="12%" ! Description Formula
!width="11%" ! Account Group
!width="7%" ! Method
!width="7%" ! Update GL
!width="16%" ! Debit
!width="16%" ! Credit
|- 
| '''10'''
| PTD revenue
| OFF
| ON
| = &rsquo;Recognized revenue&rsquo;
| REVENUE
| Budget
| ON
| 
Account: Replace with 111100 {br}

Subacct mask: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000
| 
Account: Replace with 403000 {br}

Subacct mask: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="15%" ! Account Group
!width="13%" ! Invoice Descr.
!width="11%" ! Account
!width="19%" ! Subaccount
!width="9%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="7%" ! Limit Amount
!width="15%" ! Max. Limits Account Group
|- 
| UNBILLED
| Project billing
| 403000
| 00-00-00-00-000
| OFF
| OFF
| ON
| REVENUE
|}
Allocation rule FPPCR is different from FPCPP in that it updates the General Ledger with the amount of recognized revenue, so that the Profit and Loss report will show project revenue even before the Accounts Receivable invoice is generated. The billing rule reverses the allocation posting and re-posts revenue to the same account ''403000'' so that the revenue balance is not affected by the billing and effectively, invoice amounts are posted from the unbilled Accounts Receivable account ''111100'' to the Accounts Receivable account (as defined in customer master record). 
==Rule FPPCU==
The rule is designed for fixed-price projects that update the General Ledger only through invoicing; between the billings, the project displays unbilled amount and unrecognized revenue separately. The method is ''Budget''.
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="6%" ! Step
!width="15%" ! Descr.
!width="6%" ! Sum
!width="6%" ! Post
!width="15%" ! Descr. Formula
!width="15%" ! Account Group
!width="6%" ! Update GL
!width="15%" ! Debit Account Group
!width="15%" ! Credit Account Group
|- 
| '''10'''
| Allocate billable amount
| OFF
| ON
| =&rsquo;Project revenue&rsquo;
| REVENUE
| OFF
| Replace with UNBILLED
| Replace with UNRECREV
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Account Group
!width="11%" ! Invoice Descr.
!width="13%" ! Account
!width="18%" ! Subaccount
!width="9%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="9%" ! Limit Amount
!width="14%" ! Max. Limits Account Group
|- 
| UNBILLED
| Project billing
| 403000
| 00-00-00-00-000
| OFF
| OFF
| ON
| REVENUE
|}
The FPPCU rule is very similar to FPCPU, except that it generates a double-sided allocation transaction (which has both debit and credit). Respectively, the billing rule uses the '''debit''' account group. 
==Transaction-based Allocations==
The following rules use the allocation method ''Transaction'' (for presentation purposes, the method is not shown in the tables below) and are designed for time-and-material projects and for cost-plus projects. 
==Rule TMR==
This rule is designed for simple time-and-material projects that recognize revenue during allocation and post it to the General Ledger. [anchor|#table_bkm_5ll_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Settings
!width="20%" ! Step 10
!width="20%" ! Step 20
!width="20%" ! Step 30
!width="20%" ! Step 40
|- 
| '''Description'''
| Calculate billable labor
| Calculate billable material
| Re-invoice subcontractors
| Re-invoice travel expenses
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Post'''
| ON
| ON
| ON
| ON
|- 
| '''Rate Code'''
| LABORATE
| BILLINRATE
| BILLINRATE
| 
|- 
| '''Qty Formula'''
| {{=[PMTran. Qty]}}
| {{=[PMTran. Qty]}}
| =0
| =0
|- 
| '''Billable Qty Formula'''
| {{=[PMTran. BillableQty]}}
| {{=[PMTran. BillableQty]}}
| =0
| =0
|- 
| '''Amount Formula'''
| {{=[PMTran. BillableQty] * @Rate}}
| {{=[PMTran. Amount] * @Rate}}
| {{=[PMTran. Amount] * @Rate}}
| {{=[PMTran. Amount]}}
|- 
| '''Description Formula'''
| {{=IsNull([EPEmployee. AcctName, [PMTran. Description])}}
| {{= IsNull ([InventoryItem. Descr], [PMTran. Description])}}
| {{= IsNull ([Vendor. AcctName], [PMTran. Description])}}
| {{=[PMTran. Description]}}
|- 
| '''Account Group'''
| LABOR
| MATERIAL
| SUBCON
| TRAVEL
|- 
| '''Update GL'''
| ON
| ON
| ON
| ON
|- 
| '''Debit Account'''
| Replace with 111100
| Replace with 111100
| Replace with 111100
| Replace with 111100
|- 
| '''Credit Account'''
| Replace with 403000
| Replace with 401000
| Replace with 408000
| Replace with 408000
|- 
| '''Groups by'''
| by Employee
| by Item
| by Vendor
| Full detail
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Account Group
!width="16%" ! Invoice Description
!width="14%" ! Account
!width="20%" ! Subaccount
!width="10%" ! Include Non-Billable
!width="8%" ! Limit Qty
!width="9%" ! Limit Amount 
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|}
Step 10 of the allocation rule calculates billable labor by using the billing hourly rate ''LABORATE''. Steps 20-40 mark up non-labor expenses by multiplying them by the factor ''MATERATE''. Although ''LABORATE'' and ''MATERATE'' are both maintained as rate codes, their usage is different: hourly rate and mark-up factor. Note description formulas, e.g. {{=IsNull([InventoryItem.Descr], [PMTran.Description])}}. If the original transaction has an inventory ID, the allocation transaction will use the description of the inventory item. Otherwise, the original transaction description will be copied. The '''Grouping''' option &ldquo;compresses&ldquo; original transactions into fewer allocation transactions according to their nature: labor expenses are grouped by employee, material expenses are grouped by inventory item, and subcontractor expenses are grouped by vendor. Travel expenses are not grouped. 
==Rule TMU==
This rule is designed for simple time-and-material projects that recognize revenue during billing; unrecognized revenue is shown in Projects but is not posted to General Ledger. [anchor|#table_fhk_ssl_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Settings
!width="20%" ! Step 10
!width="20%" ! Step 20
!width="20%" ! Step 30
!width="20%" ! Step 40
|- 
| '''Description'''
| Revenue on labor
| Revenue on material
| Revenue on subcontractors
| Re-invoice travel expenses
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Post'''
| ON
| ON
| ON
| ON
|- 
| '''Rate Code'''
| LABORATE
| BILLINRATE
| BILLINRATE
| 
|- 
| '''Qty Formula'''
| {{= -[PMTran. Qty]}}
| {{= -[PMTran. Qty]}}
| =0
| =0
|- 
| '''Billable Qty Formula'''
| {{= -[PMTran. BillableQty]}}
| {{= -[PMTran. BillableQty]}}
| =0
| =0
|- 
| '''Amount Formula'''
| {{= -[PMTran. BillableQty] * @Rate}}
| {{= -[PMTran. Amount] * @Rate}}
| {{= -[PMTran. Amount] * @Rate}}
| {{= -[PMTran. Amount]}}
|- 
| '''Description Formula'''
| {{=[EPEmployee. AcctName]}}
| {{=[InventoryItem. Descr]}}
| {{=[Vendor. AcctName]}}
| {{=[PMTran. Description]}}
|- 
| '''Account Group'''
| LABOR
| MATERIAL
| SUBCON
| TRAVEL
|- 
| '''Update GL'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Debit Account'''
| Replace with UNRECREV
| Replace with UNRECREV
| Replace with UNRECREV
| Replace with UNRECREV
|- 
| '''Credit Account'''
| NO CREDIT
| NO CREDIT
| NO CREDIT
| NO CREDIT
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Account Group
!width="16%" ! Invoice Description
!width="14%" ! Account
!width="20%" ! Subaccount
!width="9%" ! Include Non-Billable
!width="8%" ! Limit Qty
!width="9%" ! Limit Amount 
|- 
| UNRECREV
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|}
The allocation rule generates single-sided transactions to update unrecognized revenue. ((({S:Warn}
 Note the negative sign in quantity and amount formulas. Single-sided credit is allowed only for budget-based allocations. Transaction-based allocation can create only single-sided debit transactions. To ensure that the liability account group ''UNRECREV'' ('''credit''' type) is updated correctly by the '''debit''' transaction, the transaction amount must be '''negative'''.
)))
==Rule TMSUM==
This time-and-material rule demonstrates the use of the ''Sum'' function in allocation. [anchor|#table_zff_kwg_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="16%" ! Settings
!width="17%" ! Step 20
!width="14%" ! Step 30
!width="13%" ! Step 40
!width="18%" ! Step 100
!width="19%" ! Step 110
|- 
| '''Description'''
| Select material
| Select sub-contractors
| Select travel
| Bill labor
| Bill other
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
| ON
|- 
| '''Post'''
| OFF
| OFF
| OFF
| ON
| ON
|- 
| '''Rate Code'''
| 
| 
| 
| LABORATE
| BILLINRATE
|- 
| '''Qty Formula'''
| 
| 
| 
| {{=[PMTran. Qty]}}
| 
|- 
| '''Billable Qty Formula'''
| 
| 
| 
| {{=[PMTran. BillableQty]}}
| 
|- 
| '''Amount Formula'''
| 
| 
| 
| {{=[PMTran. Amount] *@Rate}}
| {{=[PMTran. Amount] * @Rate}}
|- 
| '''Description Formula'''
| 
| 
| 
| =&rsquo;Billable labor&rsquo;
| =&rsquo;Billable material&rsquo;
|- 
| '''Account Group'''
| MATERIAL
| SUBCON
| TRAVEL
| LABOR
| 
|- 
| '''Range'''
| 
| 
| 
| 
| From '''10''' To '''90'''
|- 
|  '''Update GL'''
| OFF
| OFF
| OFF
| OFF
| OFF
|- 
| '''Debit Account Group'''
| 
| 
| 
| Replace with UNBILLEDHR
| Replace with UNBILLED
|- 
| '''Credit Account Group'''
| 
| 
| 
| Replace with UNRECREV
| Replace with UNRECREV
|}
===Billing Rules ===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Account Group
!width="16%" ! Invoice Description
!width="14%" ! Account
!width="20%" ! Subaccount
!width="9%" ! Include Non-Billable
!width="8%" ! Limit Qty
!width="9%" ! Limit Amount 
|- 
| UNBILLEDHR
| Project billing
| 403000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|}
 Steps 20-40 of the allocation rule do not allocate expenses or calculate billable amounts; they only select transactions from respective account groups for further processing in Step 110. Step 100 is regular allocation step that calculates billable labor and posts it to the ''UNBILLEDHR'' account group. Step 110 does not select original transactions directly (its '''Account Group''' is blank) but takes input from previous steps (the '''Range From/To''' column). Note that the debit account groups in Step 100 and Step 110 are different. This allows you to bill them differently: The billing rule credits labor revenue to account ''403000'', while other project revenues are credited to account ''408000''. Both billing rules have the same invoice description ''Project billing'' so that each billing run will generate one invoice. To invoice labor separately from other charges, use a different '''Invoice Description''' in the billing rules. 
==Rule CPINT==
This rule is designed for internal cost-plus projects that allocate indirect expenses and do not generate billable revenue. [anchor|#table_a2w_45g_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="18%" ! Settings
!width="21%" ! '''Step 10'''
!width="20%" !  '''Step 20'''
!width="20%" ! Step 30
!width="18%" ! Step 40
|- 
| '''Description'''
| Burden on labor
| Burden on material
| Burden on subcontractors
| Burden on travel
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Post'''
| ON
| ON
| ON
| ON
|- 
| '''Rate Code'''
| BURDENRATE
| BURDENRATE
| BURDENRATE
| BURDENRATE
|- 
| '''Qty Formula'''
| {{=[PMTran. Qty]}}
| =0
| =0
| =0
|- 
| '''Billable Qty Formula'''
| {{=[PMTran. BillableQty]}}
| =0
| =0
| =0
|- 
| '''Amount Formula'''
| {{=[PMTran. Amount]}}{{ *@Rate}}
| {{=[PMTran. Amount] *@Rate}}
| {{=[PMTran. Amount] *@Rate}}
| {{=[PMTran. Amount] *@Rate}}
|- 
| '''Description Formula'''
| = &rsquo;Burden on labor&rsquo;
| = &rsquo;Burden on material&rsquo;
| = &rsquo;Burden on sub-contractors&rsquo;
| = &rsquo;Other burdens&rsquo;
|- 
| '''Account Group'''
| LABOR
| MATERIAL
| SUBCON
| TRAVEL
|- 
| '''Update GL'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Debit Account Group'''
| BURDEN
| BURDEN
| BURDEN
| BURDEN
|- 
| '''Credit Account Group'''
| NO CREDIT
| NO CREDIT
| NO CREDIT
| NO CREDIT
|}
Steps 10-40 of the allocation rule calculate the project burden as a certain percentage of the direct costs. The calculated burden is not posted to General Ledger: actual indirect costs are posted in Accounts Payable or General Ledger as non-project transactions; the project allocation is designed to enable Projects reports to show the estimated project burden. This rule has no billing steps. It is designed for internal projects that have no customers to bill. 
==Rule CPSUM==
The rule is designed for billable cost-plus projects and demonstrates the ''Sum'' allocation function. [anchor|#table_sdp_crg_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Settings
!width="11%" ! Step 10
!width="14%" ! Step 20
!width="14%" ! Step 30
!width="10%" ! Step 40
!width="17%" ! Step 100
!width="17%" ! Step 110
|- 
| '''Description'''
| Select labor
| Select material
| Select subcontractors
| Select travel
| Calculate burden
| Calculate billable
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
| ON
| ON
|- 
| '''Post'''
| OFF
| OFF
| OFF
| OFF
| ON
| ON
|- 
| '''Rate Code'''
| 
| 
| 
| 
| BURDENRATE
| BILLINRATE
|- 
| '''Qty Formula'''
| 
| 
| 
| 
| {{=[PMTran. Qty]}}
| {{=[PMTran. Qty]}}
|- 
| '''Billable Qty Formula'''
| 
| 
| 
| 
| {{=[PMTran. BillableQty]}}
| {{=[PMTran. BillableQty]}}
|- 
| '''Amount Formula'''
| 
| 
| 
| 
| {{=[PMTran. Amount] *@Rate}}
| {{=[PMTran. Amount] *@Rate}}
|- 
| '''Description Formula'''
| 
| 
| 
| 
| =&rsquo;Project burden&rsquo;
| =&rsquo;Project billable&rsquo;
|- 
| '''Account Group'''
| LABOR
| MATERIAL
| SUBCON
| TRAVEL
| 
| 
|- 
| '''Range'''
| 
| 
| 
| 
| From '''10''' To '''90'''
| From '''10''' To '''90'''
|- 
|  '''Update GL'''
| OFF
| OFF
| OFF
| OFF
| OFF
| ON
|- 
| '''Debit'''
| 
| 
| 
| 
| Account Group BURDEN
| Account 111100
|- 
| '''Credit'''
| 
| 
| 
| 
| Account Group NO CREDIT
| Account 408000
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="18%" ! Account Group
!width="18%" ! Invoice Description
!width="15%" ! Account
!width="19%" ! Subaccount
!width="10%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="10%" ! Limit Amount 
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|}
Steps 10-40 of the allocation rule select original transactions from the respective account groups and keep them for further processing steps. Step 100 takes input from Steps 10-40, and calculates and posts the project burden without updating General Ledger. Step 110 takes the same input and calculates project revenue that is then invoiced by the billing rule. 
==Rule FPCOSTM==
This rule is an example of a &ldquo;mixed-method&ldquo; rule: HR-related costs (labor and travel) are billed under a fixed-price scheme, while material subcontractor expenses are handled in a time-and-materials manner. [anchor|#table_qgv_x3g_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="23%" ! Settings
!width="26%" ! '''Step 10'''
!width="25%" !  '''Step 20'''
!width="24%" ! Step 30
|- 
| '''Description'''
| Calculate billable HR
| Calculate billable material
| Re-invoice subcontractors
|- 
| '''Sum'''
| OFF
| OFF
| OFF
|- 
| '''Post'''
| ON
| OFF
| ON
|- 
| '''Rate Code'''
| 
| BILLINRATE
| BILLINRATE
|- 
| '''Qty Formula'''
| 
| {{=[PMTran. Qty]}}
| =0
|- 
| '''Billable Qty Formula'''
| 
| {{=[PMTran. BillableQty]}}
| =0
|- 
| '''Amount Formula'''
| 
| {{=[PMTran. Amount] * @Rate}}
| {{=[PMTran. Amount] * @Rate}}
|- 
| '''Description Formula'''
| = &rsquo;Unrecognized revenue&rsquo;
| {{= IsNull ([InventoryItem. Descr], [PMTran. Description])}}
| {{= IsNull ( [Vendor. AcctName], [PMTran. Description])}}
|- 
| '''Account Group'''
| CONTRACT
| MATERIAL
| SUBCON
|- 
| '''Method'''
| Budget
| Transaction
| Transaction
|- 
| '''Update GL'''
| OFF
| OFF
| ON
|- 
| '''Debit Account Group'''
| UNBILLEDHR
| UNBILLED
| UNBILLED
|- 
| '''Credit Account Group'''
| UNRECREV
| UNRECREV
| UNRECREV
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="17%" ! Account Group
!width="11%" ! Invoice Description
!width="12%" ! Account
!width="18%" ! Subaccount
!width="8%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="8%" ! Limit Amount
!width="14%" ! Max. Limits Account Group
|- 
| UNBILLEDHR
| Project billing
| 403000
| 00-00-00-00-000
| OFF
| OFF
| ON
| CONTRACT
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
| 
|}]]></column>
			<column name="PlainText"><![CDATA[Project Allocation and Billing Rules Examples This section provides some examples of allocation and billing rules in the Projects 				module.  Budget-based Allocations The FPCPU, FPCPP, FPPCR, and FPPCU rules all use the allocation method  Budget  				and are designed for fixed-price projects. These projects calculate the billable 				amount based on the percent complete of the job done. Actual billing can be ongoing, 				when the task is finished, or when the whole project is finished, depending on the 				project task setting.  Rule FPCPU The rule is designed for fixed price projects that update General Ledger only through 				invoicing; between the billings, the project displays unbilled amounts as 				unrecognized revenue. The method is   Budget . Allocation Rules Step Description Sum Post Description Formula Account Group Update GL Debit Account Group Credit Account Group 10 PTD revenue (unrecognized)  OFF ON ='Unrecognized revenue' CONTRACT OFF NO DEBIT Replace with UNRECREV Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNRECREV Project billing 408000 00-00-00-00-000 OFF OFF ON CONTRACT A project that uses this rule is expected to have the off-balance account group 					 CONTRACT ; the budget of this group holds the contract amount, which is 				the maximum amount that you can bill to the customer. The total contract amount can 				be split among tasks, and each task will have its budget for account group 					 CONTRACT . Alternatively, you can create a special task that does not 				accept transactions from any module, but it holds the contract amount and is used in 				allocation and billing. All other tasks will have no budget for the account group 					 CONTRACT .  The allocation rule calculates the billable amount as  CONTRACT budget * percent 					complete of the task - previous billable amounts . The calculated amount is 				posted as a single-sided transaction and shown only in Projects. Single-sided 				transactions cannot be posted to the General Ledger. The General Ledger is updated 				by the billing rule, which:  Generates an invoice for the amount calculated by the allocation rule. Note that 					the billing account group  UNRECREV  is the same as the  credit  					account group in the allocation rule. Reverses allocation transactions used as a billing source: account group 						 UNRECREV  should have a zero balance after the billing. The reversal 					transaction is a Projects transaction, which should be released to update the 						 UNRECREV  balance. The total billable amount is limited by the budget of account category 					 CONTRACT .   A single-sided, budget-based credit allocation is the only case when a credit 					setting of the allocation rule is used in the billing rule. In all other cases, 					debit setting should be used.  Rule FPCPP This rule is designed for fixed-price projects that update the General Ledger with 				unrecognized revenue. The revenue is recognized during billing. The method is   					Budget . Allocation Rules Step Descr. Sum Post Descr. Formula Account Group Update GL Debit Credit 10 PTD revenue OFF ON ='Billable amount' CONTRACT ON Account¹: Replace with 111100 Subacct mask²: AA-AA-AA-AA-AAA Subaccount: 									00-00-00-00-000 Account¹: Replace with 220000  Subacct mask²: AA-AA-AA-AA-AAA Subaccount: 									00-00-00-00-000 ¹ When the debit or credit account is changed, the debit or credit account group 				is automatically set to  From Account ² Mask  AA  of the subaccount segment indicates that the segment should be 				taken from allocation rule. Other available masks are:  PP : The default subaccount of the project SS : The source transaction TT : The default subaccount of the task Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF ON CONTRACT Unlike FPCPU, allocation rule FPCPP updates the General Ledger with the amount of 				unrecognized revenue; therefore, it has both debit and credit settings. Note that 				the billing account group  UNBILLED  is the group of the  debit  account 					 111100 . As in the previous rule, FPCPP billing reverses allocation 				transactions used as the billing source. But in this case, reversal transactions are 				invisibly "attached" to the Accounts Receivable invoice and do not require a 				separate release.  Rule FPPCR This rule is designed for fixed-price projects that update the General Ledger with 				recognized revenue even between invoicing.  Allocation Rules Step Descr. Sum Post Description Formula Account Group Method Update GL Debit Credit 10 PTD revenue OFF ON = 'Recognized revenue' REVENUE Budget ON Account: Replace with 111100  Subacct mask: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000 Account: Replace with 403000  Subacct mask: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000 Billing Rules Account Group Invoice Descr. Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNBILLED Project billing 403000 00-00-00-00-000 OFF OFF ON REVENUE Allocation rule FPPCR is different from FPCPP in that it updates the General Ledger 				with the amount of recognized revenue, so that the Profit and Loss report will show 				project revenue even before the Accounts Receivable invoice is generated. The 				billing rule reverses the allocation posting and re-posts revenue to the same 				account  403000  so that the revenue balance is not affected by the billing and 				effectively, invoice amounts are posted from the unbilled Accounts Receivable 				account  111100  to the Accounts Receivable account (as defined in customer 				master record).  Rule FPPCU The rule is designed for fixed-price projects that update the General Ledger only 				through invoicing; between the billings, the project displays unbilled amount and 				unrecognized revenue separately. The method is  Budget . Allocation Rules Step Descr. Sum Post Descr. Formula Account Group Update GL Debit Account Group Credit Account Group 10 Allocate billable amount OFF ON ='Project revenue' REVENUE OFF Replace with UNBILLED Replace with UNRECREV Billing Rules Account Group Invoice Descr. Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNBILLED Project billing 403000 00-00-00-00-000 OFF OFF ON REVENUE The FPPCU rule is very similar to FPCPU, except that it generates a double-sided 				allocation transaction (which has both debit and credit). Respectively, the billing 				rule uses the  debit  account group.  Transaction-based Allocations The following rules use the allocation method  Transaction  (for presentation 				purposes, the method is not shown in the tables below) and are designed for 				time-and-material projects and for cost-plus projects.  Rule TMR This rule is designed for simple time-and-material projects that recognize revenue 				during allocation and post it to the General Ledger.  Allocation Rules Settings Step 10 Step 20 Step 30 Step 40 Description Calculate billable labor Calculate billable material Re-invoice subcontractors Re-invoice travel expenses Sum OFF OFF OFF OFF Post ON ON ON ON Rate Code LABORATE BILLINRATE BILLINRATE Qty Formula =[PMTran. Qty] =[PMTran. Qty] =0 =0 Billable Qty Formula =[PMTran. BillableQty] =[PMTran. BillableQty] =0 =0 Amount Formula =[PMTran. BillableQty] * @Rate =[PMTran. Amount] * @Rate =[PMTran. Amount] * @Rate =[PMTran. Amount] Description Formula =IsNull([EPEmployee. AcctName, [PMTran. 									Description]) = IsNull ([InventoryItem. Descr], [PMTran. 									Description]) = IsNull ([Vendor. AcctName], [PMTran. 									Description]) =[PMTran. Description] Account Group LABOR MATERIAL SUBCON TRAVEL Update GL ON ON ON ON Debit Account Replace with 111100 Replace with 111100 Replace with 111100 Replace with 111100 Credit Account Replace with 403000 Replace with 401000 Replace with 408000 Replace with 408000 Groups by by Employee by Item by Vendor Full detail Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount  UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF OFF Step 10 of the allocation rule calculates billable labor by using the billing hourly 				rate  LABORATE . Steps 20-40 mark up non-labor expenses by multiplying them by 				the factor  MATERATE . Although  LABORATE  and  MATERATE  are both 				maintained as rate codes, their usage is different: hourly rate and mark-up factor. 				Note description formulas, e.g.  =IsNull([InventoryItem.Descr], 					[PMTran.Description]) . If the original transaction has an inventory ID, 				the allocation transaction will use the description of the inventory item. 				Otherwise, the original transaction description will be copied. The  Grouping  				option "compresses" original transactions into fewer allocation transactions 				according to their nature: labor expenses are grouped by employee, material expenses 				are grouped by inventory item, and subcontractor expenses are grouped by vendor. 				Travel expenses are not grouped.  Rule TMU This rule is designed for simple time-and-material projects that recognize revenue 				during billing; unrecognized revenue is shown in Projects but is not posted to 				General Ledger.  Allocation Rules Settings Step 10 Step 20 Step 30 Step 40 Description Revenue on labor Revenue on material Revenue on subcontractors Re-invoice travel expenses Sum OFF OFF OFF OFF Post ON ON ON ON Rate Code LABORATE BILLINRATE BILLINRATE Qty Formula = -[PMTran. Qty] = -[PMTran. Qty] =0 =0 Billable Qty Formula = -[PMTran. BillableQty] = -[PMTran. BillableQty] =0 =0 Amount Formula = -[PMTran. BillableQty] * @Rate = -[PMTran. Amount] * @Rate = -[PMTran. Amount] * @Rate = -[PMTran. Amount] Description Formula =[EPEmployee. AcctName] =[InventoryItem. Descr] =[Vendor. AcctName] =[PMTran. Description] Account Group LABOR MATERIAL SUBCON TRAVEL Update GL OFF OFF OFF OFF Debit Account Replace with UNRECREV Replace with UNRECREV Replace with UNRECREV Replace with UNRECREV Credit Account NO CREDIT NO CREDIT NO CREDIT NO CREDIT Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount  UNRECREV Project billing 408000 00-00-00-00-000 OFF OFF OFF The allocation rule generates single-sided transactions to update unrecognized 				revenue.   Note the negative sign in quantity and amount formulas. Single-sided credit is 					allowed only for budget-based allocations. Transaction-based allocation can 					create only single-sided debit transactions. To ensure that the liability 					account group  UNRECREV  ( credit  type) is updated correctly by the 						 debit  transaction, the transaction amount must be 					 negative . Rule TMSUM This time-and-material rule demonstrates the use of the  Sum  function in 				allocation.  Allocation Rules Settings Step 20 Step 30 Step 40 Step 100 Step 110 Description Select material Select sub-contractors Select travel Bill labor Bill other Sum OFF OFF OFF OFF ON Post OFF OFF OFF ON ON Rate Code LABORATE BILLINRATE Qty Formula =[PMTran. Qty] Billable Qty Formula =[PMTran. BillableQty] Amount Formula =[PMTran. Amount] *@Rate =[PMTran. Amount] * @Rate Description Formula ='Billable labor' ='Billable material' Account Group MATERIAL SUBCON TRAVEL LABOR Range From  10  To  90 Update GL OFF OFF OFF OFF OFF Debit Account Group Replace with UNBILLEDHR Replace with UNBILLED Credit Account Group Replace with UNRECREV Replace with UNRECREV Billing Rules  Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount  UNBILLEDHR Project billing 403000 00-00-00-00-000 OFF OFF OFF UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF OFF  Steps 20-40 of the allocation rule do not allocate expenses or calculate billable 				amounts; they only select transactions from respective account groups for further 				processing in Step 110. Step 100 is regular allocation step that calculates billable 				labor and posts it to the  UNBILLEDHR  account group. Step 110 does not select 				original transactions directly (its  Account Group  is blank) but takes input 				from previous steps (the  Range From/To  column). Note that the debit account 				groups in Step 100 and Step 110 are different. This allows you to bill them 				differently: The billing rule credits labor revenue to account  403000 , while 				other project revenues are credited to account  408000 . Both billing rules 				have the same invoice description  Project billing  so that each billing run 				will generate one invoice. To invoice labor separately from other charges, use a 				different  Invoice Description  in the billing rules.  Rule CPINT This rule is designed for internal cost-plus projects that allocate indirect expenses 				and do not generate billable revenue.  Allocation Rules Settings Step 10 Step 20 Step 30 Step 40 Description Burden on labor Burden on material Burden on subcontractors Burden on travel Sum OFF OFF OFF OFF Post ON ON ON ON Rate Code BURDENRATE BURDENRATE BURDENRATE BURDENRATE Qty Formula =[PMTran. Qty] =0 =0 =0 Billable Qty Formula =[PMTran. BillableQty] =0 =0 =0 Amount Formula =[PMTran. Amount]  *@Rate =[PMTran. Amount] *@Rate =[PMTran. Amount] *@Rate =[PMTran. Amount] *@Rate Description Formula = 'Burden on labor' = 'Burden on material' = 'Burden on sub-contractors' = 'Other burdens' Account Group LABOR MATERIAL SUBCON TRAVEL Update GL OFF OFF OFF OFF Debit Account Group BURDEN BURDEN BURDEN BURDEN Credit Account Group NO CREDIT NO CREDIT NO CREDIT NO CREDIT Steps 10-40 of the allocation rule calculate the project burden as a certain 				percentage of the direct costs. The calculated burden is not posted to General 				Ledger: actual indirect costs are posted in Accounts Payable or General Ledger as 				non-project transactions; the project allocation is designed to enable Projects 				reports to show the estimated project burden. This rule has no billing steps. It is 				designed for internal projects that have no customers to bill.  Rule CPSUM The rule is designed for billable cost-plus projects and demonstrates the  Sum  				allocation function.  Allocation Rules Settings Step 10 Step 20 Step 30 Step 40 Step 100 Step 110 Description Select labor Select material Select subcontractors Select travel Calculate burden Calculate billable Sum OFF OFF OFF OFF ON ON Post OFF OFF OFF OFF ON ON Rate Code BURDENRATE BILLINRATE Qty Formula =[PMTran. Qty] =[PMTran. Qty] Billable Qty Formula =[PMTran. BillableQty] =[PMTran. BillableQty] Amount Formula =[PMTran. Amount] *@Rate =[PMTran. Amount] *@Rate Description Formula ='Project burden' ='Project billable' Account Group LABOR MATERIAL SUBCON TRAVEL Range From  10  To  90 From  10  To  90 Update GL OFF OFF OFF OFF OFF ON Debit Account Group BURDEN Account 111100 Credit Account Group NO CREDIT Account 408000 Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount  UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF OFF Steps 10-40 of the allocation rule select original transactions from the respective 				account groups and keep them for further processing steps. Step 100 takes input from 				Steps 10-40, and calculates and posts the project burden without updating General 				Ledger. Step 110 takes the same input and calculates project revenue that is then 				invoiced by the billing rule.  Rule FPCOSTM This rule is an example of a "mixed-method" rule: HR-related costs (labor and travel) 				are billed under a fixed-price scheme, while material subcontractor expenses are 				handled in a time-and-materials manner.  Allocation Rules Settings Step 10 Step 20 Step 30 Description Calculate billable HR Calculate billable material Re-invoice subcontractors Sum OFF OFF OFF Post ON OFF ON Rate Code BILLINRATE BILLINRATE Qty Formula =[PMTran. Qty] =0 Billable Qty Formula =[PMTran. BillableQty] =0 Amount Formula =[PMTran. Amount] * @Rate =[PMTran. Amount] * @Rate Description Formula = 'Unrecognized revenue' = IsNull ([InventoryItem. Descr], [PMTran. 									Description]) = IsNull ( [Vendor. AcctName], [PMTran. 									Description]) Account Group CONTRACT MATERIAL SUBCON Method Budget Transaction Transaction Update GL OFF OFF ON Debit Account Group UNBILLEDHR UNBILLED UNBILLED Credit Account Group UNRECREV UNRECREV UNRECREV Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNBILLEDHR Project billing 403000 00-00-00-00-000 OFF OFF ON CONTRACT UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF OFF ]]></column>
		</row>
	</rows>
</data>