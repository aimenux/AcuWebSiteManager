<?xml version="1.0" encoding="utf-8"?>
<data>
	<table name="WikiRevision">
		<col name="CompanyID" type="Int" default="Zero" />
		<col name="PageID" type="UniqueIdentifier" />
		<col name="Language" type="VarChar(50)" />
		<col name="PageRevisionID" type="Int" />
		<col name="Content" type="NVarChar(MAX)" />
		<col name="ContentHtml" type="NVarChar(MAX)" nullable="true" />
		<col name="PlainText" type="NVarChar(MAX)" />
		<col name="ApprovalByID" type="UniqueIdentifier" nullable="true" />
		<col name="ApprovalDateTime" type="DateTime" nullable="true" />
		<col name="CreatedByID" type="UniqueIdentifier" />
		<col name="CreatedDateTime" type="DateTime" />
		<col name="CompanyMask" type="VarBinary(32)" default="CompanyMaskReadOnly" />
		<col name="UID" type="UniqueIdentifier" />
		<col name="RecordSourceID" type="SmallInt" nullable="true" />
	</table>
	<rows>
		<row PageID="a4be22b4-ae3b-43e0-a004-150a98b7cda8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8ebd2f04-5af8-8d5e-4666-370084b5ac48" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 New implementation can be a challenging task because it requires significant time and resources. There are many known approaches to implementing a complex ERP system, each with its own advantages and drawbacks.{br}

This guide takes a moderate approach that, on one hand, does not require thorough planning performed in advance and on the other hand does not assume that configuring will be performed without any planning at all. This approach outlines the preparation and planning work that should be performed before you implement each module or capability. However, this approach assumes that you had performed extensive analysis of your business processes at the time when you were evaluating which ERP solution would fit your business best.
==The Structure of the Guide==
Implementation Guide includes a chapter that contains an overview of the Acumatica ERP functionality and add-on features. Each of other chapters is focused on the implementation of a particular module or capability and contains a list of tasks. Generally, the order of chapters follows the order in which the respective modules or capabilities should be implemented. However, specific modules or capabilities can be implemented earlier in the process if the prerequisite tasks are completed.{br}

Most chapters include topics of the following types: [anchor|#ul_qjq_5rf_gl]
*'''Preparation''': A topic of this type describes information to be collected, decisions to be made, and other considerations you should take into account before actually configuring the module or capability. It also lists the prerequisites and dependencies that you should consider before you proceed with implementation.
*'''Configuration''': A topic of this type describes the actual configuration of the module or capability.
*'''Initialization''': A topic of this type describes how to enter initial balances and the historical data for the module.

==Implementation Tools==
 Acumatica ERP provides import scenarios, which are important tools that may significantly reduce the time you otherwise would spend on entering the data. Import scenarios can be used to import the customer and vendor accounts, stock and non-stock items, sales orders, and purchase orders. The Implementation Guide recommends using import scenarios for all tasks where it is possible. {br}

 Acumatica ERP is installed with a number of predefined import scenarios. You can modify the predefined import scenarios as needed or create new import scenarios from scratch.
==In This Guide==[anchor|#ul_p12_lql_ms]
*[HelpRoot_Implement\Impl_Features_Overview|Overview of the Acumatica ERP Features ]
*[HelpRoot_Implement\Impl_INIT|Performing Initial Configuration]
*[HelpRoot_Implement\config_Basic_Company_Mapref|Configuring a Company Without Branches]
*[HelpRoot_Implement\config_GL_Mapref|Implementing the General Ledger]
*[HelpRoot_Implement\config_CA_Mapref|Implementing Cash Management]
*[HelpRoot_Implement\config_Credit_Terms_Mapref|Configuring Credit Terms]
*[HelpRoot_Implement\config_AP_Mapref|Implementing Accounts Payable]
*[HelpRoot_Implement\config_AR_Mapref|Implementing Accounts Receivable]
*[HelpRoot_Implement\Impl_CM|Implementing Currency Management]
*[HelpRoot_Implement\Impl_TX|Implementing Taxes]
*[HelpRoot_Implement\Impl_Email|Configuring Email]
*[HelpRoot_Implement\Impl_US|Configuring Users]
*[HelpRoot_Implement\Impl_Non-Stock_Items|Configuring Non-Stock Items]
*[HelpRoot_Implement\Impl_OS|Configuring Organization Structure]
*[HelpRoot_Implement\Impl_Distribution|Implementing Order Management and Inventory]
*[HelpRoot_ImplementChecklists\Implementation_Checklists|Implementation Checklists]
]]></column>
			<column name="PlainText"><![CDATA[ Acumatica ERP     Implementation Guide  New implementation can be a challenging task because it requires significant time and         resources. There are many known approaches to implementing a complex ERP system, each with         its own advantages and drawbacks. This guide takes a moderate approach that, on one hand, does not require thorough planning         performed in advance and on the other hand does not assume that configuring will be         performed without any planning at all. This approach outlines the preparation and planning         work that should be performed before you implement each module or capability. However, this         approach assumes that you had performed extensive analysis of your business processes at the         time when you were evaluating which ERP solution would fit your business best. The Structure of the Guide Implementation Guide includes a chapter that contains an overview of the  Acumatica ERP functionality and add-on features. Each of other chapters   is focused on the         implementation of a particular module or capability and contains a list of tasks. Generally,         the order of chapters follows the order in which the respective modules or capabilities         should be implemented. However, specific modules or capabilities can be implemented earlier         in the process if the prerequisite tasks are completed. Most chapters include topics of the following types:  Preparation : A topic of this type describes information to be collected, decisions           to be made, and other considerations you should take into account before actually           configuring the module or capability. It also lists the prerequisites and dependencies           that you should consider before you proceed with implementation. Configuration : A topic of this type describes the actual configuration of the           module or capability. Initialization : A topic of this type describes how to enter initial balances and           the historical data for the module. Implementation Tools  Acumatica ERP provides import scenarios, which are important tools that may significantly reduce the         time you otherwise would spend on entering the data. Import scenarios can be used to import         the customer and vendor accounts, stock and non-stock items, sales orders, and purchase         orders. The Implementation Guide recommends using import scenarios for all tasks where it is         possible.   Acumatica ERP is installed with a number of predefined import scenarios. You can modify the predefined         import scenarios as needed or create new import scenarios from scratch. In This Guide Overview of the Acumatica ERP Features Performing Initial ConfigurationConfiguring a Company Without BranchesImplementing the General LedgerImplementing Cash ManagementConfiguring Credit TermsImplementing Accounts PayableImplementing Accounts ReceivableImplementing Currency ManagementImplementing TaxesConfiguring EmailConfiguring UsersConfiguring Non-Stock ItemsConfiguring Organization StructureImplementing Order Management and InventoryImplementation Checklists]]></column>
		</row>
		<row PageID="97edb8e5-f4e6-48d2-a895-8e961988c664" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="225c99d8-9624-7b21-bc08-154c3b06dd07" RecordSourceID="22377">
			<column name="Content"><![CDATA[
 Acumatica ERP provides a scalable core system functionality and includes a range of add-on features. {br}

 Before you start implementing Acumatica ERP, you may find it helpful to become familiar with the functionality of the modules to be implemented and the add-on features your organization has included in the license. 
==Core Functionality==
 Acumatica ERP includes the following suites and modules, whose core functionality is briefly described in the table below.[anchor|#table_tkk_1j1_yv]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Suite/Module
!width="80%" ! Overview
|- 
| colspan="2" | '''Organization'''
|- 
|  '''Communication'''
| 
Provides users with access to such means of communication as email, notifications, announcements, activities, and tasks. The module also includes a special feature—a preconfigured Communications dashboard. 
|- 
| '''Time and Expenses'''
| 
Supports the processing of expense claims.
|- 
| '''Organization Structure'''
| Supports the configuration of the company, employee accounts, company tree, departments, positions, workgroups, and assignment maps, all of which are used across other modules.
|- 
| colspan="2" | '''Finance'''
|- 
|  '''General Ledger'''
| 
Supports the chart of accounts shared by all the branches (if any), as well as ledgers, budgets, analytical reports, recurring transactions, document batches, and various configurations of the financial year and periods, including custom financial year and periods.
|- 
| '''Cash Management'''
| 
Provides support for cash accounts, payment methods, reconciliation statements, bank deposits, funds transfers, cash flow forecasts, and credit card processing.
|- 
| '''Accounts Payable'''
| 
Provides support for vendor accounts (including those for tax agencies), credit terms, documents of multiple types, configurable approval of documents for payment, recurring transactions, ACH payments, and the 1099 form (for the United States).
|- 
| '''Accounts Receivable'''
| 
Provides support for customer accounts, documents of multiple types, recurring transactions, credit card processing, tracking of card expiration dates, configurable rules of payment auto-application, aging of credits, statements, credit management, and write-offs.
|- 
| '''Taxes'''
| Gives you the ability to create and maintain taxes (of multiple types), tax zones, and tax categories; supports automatic tax calculation and tax reporting.
|- 
| colspan="2" | '''Configuration'''
|- 
|  '''Common Settings'''
| 
Enables the use of segmented keys (for GL accounts, subaccounts, and inventory items, and for customer, vendor, and employee accounts) and the creation of numbering sequences, which are used for automatic generation of reference numbers for batches and for documents of various types. {br}

Also, this module supports attributes—optional and required UI elements to be used in many modules for entering and storing additional properties of various objects including leads and stock items.
|- 
| '''User Security'''
| 
Supports roles, which control user access to suites, modules, forms, UI elements, and records. Also, this module provides the means for managing local user accounts, password policies for local users, security audit options, and encryption certificates.
|- 
| '''Document Management'''
| 
Supports internal wikis and synchronization with external files. Also, this module supports storing files internally and externally and routing imported files between the storage locations.
|- 
| '''Email'''
| 
Supports configuration and management of the system email accounts for incoming and outgoing emails. This module also supports built-in incoming mail processing, which can be adjusted for the business needs of your company.
|- 
| colspan="2" | '''System'''
|- 
|  '''Management'''
| 
Supports snapshots, locales, and the management of application updates.
|- 
| '''Integration'''
| 
Enables the import and export of data in accordance with user-defined scenarios.
|- 
| '''Customization'''
| 
Provides a means for application customization and management of the site map.
|- 
| colspan="2" | '''Dashboards'''
|- 
|  '''Dashboards'''
| 
Supports user-configurable dashboards, which display exactly the information the user needs in the preferred presentation form. For more information, see [HelpRoot_Interface\DB__mng_UIG_Dashboards|Dashboards] in the '''''Getting Started Guide'''''.
|}
==Finance Group of Features==[anchor|#table_i1l_1j1_yv]The features available for the Finance functionality are briefly described below.
{| class="checklist" | width="100%" 
|- 
!width="9%" ! Feature
!width="18%" ! Related Feature
!width="72%" ! Overview
|- 
| colspan="2" | '''Standard Financials'''
| This group of features is available in all editions of Acumatica ERP. You can enable any of the features in this group—they are included in any license. 
|- 
| 
| '''Multi-Branch Support'''
| 
Provides support for multiple branches. Branches can be configured for points of sale (locations) as well as for separate legal entities within your organization, to ensure better visibility into various layers of financial operations. For details, see [HelpRoot_Organization\CS__con_Multiple_Branch_Support|Multiple Branch Support] and [HelpRoot_Organization\CS__con_Basic_Models_for_Multi-Branch_Organization|Basic Models for Multibranch Organization].
|- 
| 
| '''Business Account Locations'''
| Supports multiple locations for vendor and customer accounts. 
|- 
| 
| '''Multi-Currency Accounting'''
| 
Adds the Currency Management module and support of the following: multiple currencies across the modules; automatic calculation of the realized gains and losses and rounding amounts on foreign currency transactions; revaluation of foreign currency accounts; and translation of the base currency accounts into any foreign currency for reporting. For more information, see the [HelpRoot_Financials\CM_00_00_00|Currency Management] chapter. 
|- 
| 
| '''Volume Pricing'''
| Gives you the ability to define price tiers for item quantities. 
|- 
| 
| '''Expense Reclassification'''
| 
Supports the two-stage release of AP documents: ''pre-release'', when a data entry clerk enters a bill or a quick check; and ''release'', when an authorized accountant reviews a pre-released document, specifies the correct expense accounts (and subaccounts), and releases the document. For details, see [HelpRoot_Financials\AP__con_Expense_Reclassification_Pending|Configuring Reclassification of Expenses].
|- 
| 
| '''Tax Entry From GL Module'''
| Gives users the ability to specify taxes for documents entered in the General Ledger module.
|- 
| 
| '''VAT Reporting'''
| 
Enables accounting and reporting for any value-added tax (VAT) in the system: in the Taxes module, enables the ''VAT'' tax type option; and in the Accounts Payable and Accounts Receivable modules, adds UI elements that can be used for automatic calculation of tax amounts and for VAT reporting. For details, see [HelpRoot_Financials\TX__con_VAT_and_Its_Modifications|Value-Added Tax and Its Variations].
|- 
| 
| '''Invoice Rounding'''
| 
Provides automatic rounding of bill amounts in the Accounts Payable module and invoice amounts in the Accounts Receivable module. For details, see [HelpRoot_Financials\AP__con_Rounding|Rounding of Document Amounts].
|- 
| 
| '''ROT and RUT Deduction'''
| 
Adds a form and multiple UI elements in the Accounts Receivables module that you can use to create and process documents eligible for ROT and RUT deductions.
|- 
| colspan="2" | '''Advanced Financials'''
| This group of features is not available in the standard edition of Acumatica ERP. You can enable any of the features in this group if the group of features is available in your system. 
|- 
| 
| '''Subaccounts'''
| 
Gives you the ability to use subaccounts in addition to accounts. The subaccounts, which are configurable in the Common Settings module, are used to detail account balances, for more granular financial analysis. For details, see [HelpRoot_Financials\config_Subaccounts_GeneralInfo|Subaccounts: General Information]. 
|- 
| 
| '''General Ledger Allocation Templates'''
| Enables the creation and maintenance of allocation templates (which define how the allocations are to be performed) and the automatic application of allocations according to your definitions.
|- 
| 
| '''Inter-Branch Transactions'''
| 
Makes possible the automatic generation of inter-branch transactions. For details, see [HelpRoot_Financials\config_InterBranch_Mapping_Rules_Mapref|Configuring Interbranch Account Mapping].
|- 
| 
| '''General Ledger Consolidation'''
| Provides consolidating data from specific branches of subsidiaries (or consolidation units) into specific branch of the parent company. You can configure which data should be consolidated and how exactly the data should be consolidated. After that, you can consolidate the data as often as you need within each financial period. 
|- 
| 
| '''Translation of Financial Statements'''
| 
Gives you the ability to translate amounts from the base currency to another currency at the account balance level. Translation can be used for reporting purposes in any foreign currency. For details, see [HelpRoot_Financials\CM__con_Overview_of_Translations|Translation Processing Workflow].
|- 
| 
| '''Customer Discounts'''
| 
Gives you the ability to maintain customer discounts in your system: import them or enter them manually, and update them. The system automatically applies the customer discounts to sales orders (or invoices if the ''Inventory and Order Management'' group of features is not enabled) when a user saves the document. [anchor|#_ca38c87f-294c-454d-8382-281804994e85]{br}

When the feature is disabled, you can enter the discount percent or amount on a line and document level on data entry forms, but the discount amounts are not posted separately to a discount account.{br}

For more information, see [HelpRoot_PricesAndDiscounts\PriceDiscount_CustomerDiscounts_GeneralInfo|Customer Discounts: General Information].
|- 
| 
| '''Vendor Discounts'''
| 
Gives you the ability to maintain vendor discounts in your system: import them or enter them manually, and update them. The system automatically applies the vendor discounts to purchase orders (or bills if the ''Inventory and Order Management'' group of features is not enabled) when a user saves the document.[anchor|#_b34cbf3b-8a0c-4a13-8d21-e8c1669741ff]{br}

When the feature is disabled, you can enter the discount percent or amount on a line and document level on data entry forms, but the discount amounts are not posted separately to a discount account.{br}

For more information, see [HelpRoot_PricesAndDiscounts\AP__con_Configuring_Vendor_Discounts|Configuring Vendor Discounts].
|- 
| 
| '''Commissions'''
| Makes it possible to configure commission calculations that support your company&rsquo;s policies. 
|- 
| 
| '''Overdue Charges'''
| Gives you the ability to configure additional charges to be applied to the outstanding balances of customers who are consistently paying too late or not paying in full. 
|- 
| 
| '''Dunning Letter Management'''
| 
Provides you with the ability to generate dunning letters to notify customers about their overdue documents. You can select how you want to manage a level of dunning letter: by customer or by overdue document. For details, see [HelpRoot_Financials\AR__MNG_DunningLetters|Managing Dunning Letters].
|- 
| 
| '''Deferred Revenue Management'''
| 
Adds the Deferred Revenue module and integrates it with the Accounts Payable and Accounts Receivable modules, so that the users can assign various documents to deferral schedules for recognizing portions of the deferred amounts. For more information, see [HelpRoot_Financials\DR_00_00_00|Deferred Revenue].
|- 
| 
| '''Parent-Child Customer Relationship'''
| 
Makes it possible to configure parent-child relationships between business accounts of the ''Customer'' and ''Customer & Vendor'' types. A parent-child relationship includes the ability for the parent account to pay invoices of the child account, to generate consolidated statements and reports, and to view a consolidated balance for a parent account that includes the balances of its child accounts. The relationship can be removed at any time. For details, see [HelpRoot_Financials\AR__MNG_ParentChild|Managing Parent-Child Relationships].
|- 
| colspan="2" | '''Contract Management'''
| 
This feature provides the support of contracts, including case processing and contract billing. It adds forms related to contract processing to the Accounts Receivable module and enables integration of the Accounts Receivable and the Time and Expenses modules. For more information, see [HelpRoot_ContractManagement\AR__MNG_Contracts|Managing Contracts].
|- 
| colspan="2" | '''Fixed Asset Management'''
| 
This feature adds the Fixed Assets module, which can be used to create and manage fixed assets through their useful life, from acquisition to disposal. The Fixed Assets module integrates with the Requisitions and Purchase Orders modules to facilitate converting purchases into fixed assets without the need to re-enter data. For more information, see the [HelpRoot_Financials\FA_00_00_00|Fixed Assets] chapter. 
|- 
| colspan="2" | '''Payroll'''
| 
This feature activates the Payroll module.
|- 
| 
| '''Multiple Workshifts'''
| 
Can be selected only if the ''Payroll'' feature is selected. Enables shift codes that can be used by users to report time they spent on activities when working on a particular shift.
|}
==Monitoring and Automation Group of Features==[anchor|#table_inl_1j1_yv] The features in this group enable the monitoring of user activities and the automation of workflows. This group of features is not available in the standard edition of Acumatica ERP.
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Feature
!width="80%" ! Overview
|- 
| '''Time Reporting on Activity'''
| Extends the functionality of the Time and Expenses module by making it possible to track the time your organization&rsquo;s employees spend on activities that can be included in time cards. For details, see [HelpRoot_Organization\EP__con_Time_Tracking|Time Activities].
|- 
| '''Approval Workflow'''
| Provides the ability to configure and use approval maps for the automatic assignment of various documents to particular employees for approval. If this feature is not enabled, approval maps cannot be used in the system, but the approval for expense claims still can be configured and performed by using a different method. For details, see [HelpRoot_GettingStarted\CO__con_Centralized_Approvals|Approving Documents] and [HelpRoot_Organization\EP__con_Claim_Approval|Expense Claim Approval].
|- 
| '''Field-Level Audit'''
| 
Gives your organization the ability to track user activities in the system. This feature, which is configurable in the Management module, provides complete information on who did what and when on the form. For more information, see [HelpRoot_Administration\SM__con_Field_Level_Audit|Field-Level Auditing].
|- 
| '''Row-Level Security'''
| 
Adds the Row-Level Security module, which enables the management and administration of user access (through restriction groups) to particular system records and objects to which users have access by their roles. For details, see [HelpRoot_Administration\SM__con_Overview_of_Restriction_Groups|Restriction Groups in Acumatica ERP].
|- 
| '''Scheduled Processing'''
| 
Makes it possible for you to configure automatic processing of documents that require significant time and system resources. You can define a schedule for such automatic processing—for instance, at times when there are no employees at work, such as weekends or nights. For more information, see [HelpRoot_Administration\SM__con_Scheduled_Processing|Scheduled Processing].
|- 
| '''Change Notifications'''
| 
Gives you the ability to configure notifications about specific changes in documents so that users of the system can sign up to receive emails sent by the system when specific changes are made to particular documents. For more information, see [HelpRoot_Administration\SM__con_Notifications_About_Changes|Notifications About Changes on Data Entry Forms].
|- 
| '''Workflow Automation'''
| 
Provides the ability to customize workflows by means of automation steps, and gives you the ability to back up and store automation definitions that include all the automation steps defined in the application. For more information, see [HelpRoot_Administration\SM__con_Automation_Maintenance|Automation Maintenance].
|}
==Inventory and Order Management Group of Features==[anchor|#table_bvp_3dt_mr]
The Inventory and Order Management group of features, once enabled, includes the basic functionality of the following modules: [anchor|#ul_rrq_5j5_mr]
*Inventory module: The basic functionality of the Inventory module includes only non-stock items that can be processed in the Sales Orders and Purchase Orders modules. For more information, see [HelpRoot_InvMgmt\IN_00_00_00|Inventory Management].
*Sales Orders module: The basic functionality of the Sales Orders module includes predefined order types, flexible order processing workflows (which include sending orders by email or printing them and sending them by postal mail), generation of pick lists, and shipment processing. For more information, see [HelpRoot_OrderMgmt\SO_00_00_00|Order Management].
*Purchase Orders module: The basic functionality of the Purchase Orders module includes purchase orders of multiple types, vendor catalogs, default prices that are updated from current documents, landed cost tracking, and barcode support.

The Purchase Requisitions module is enabled by a separate feature of the Inventory and Order Management group of features, ''Purchase Requisitions''. The features are briefly described below.
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Feature
!width="80%" ! Overview
|- 
| '''Inventory'''
| 
Gives you the ability to maintain stock items in the Inventory module and use the Sales Orders, Purchase Orders, and Purchase Requisitions modules of the Inventory and Order Management functionality for creating and processing documents that include stock items.{br}

If this feature is not included in your license, you can use the modules of the Inventory and Order Management functionality only for creating and processing documents that include non-stock items and services.
|- 
| '''Multiple Units of Measure'''
| Gives you the ability to define for each stock item multiple units of measure (UOMs) and the rules for conversion between them. With this feature not enabled, for each stock item, you can define only the base unit of measure that is used for purchasing the item, selling it, and calculating the available quantity of it. For more information, see [HelpRoot_InvMgmt\UOMs_GeneralInfo|Units of Measure: General Information].
|- 
| '''Lot and Serial Tracking'''
| Gives you an ability to track stock items by lot or serial numbers and by expiration dates. Acumatica ERP provides flexible numbering schemes for lot and serial numbers and the ability to track different products differently. For more information, see [HelpRoot_InvMgmt\Lot_and_Serial_Numbers_GeneralInfo|Items with Lot and Serial Numbers: General Information].
|- 
| '''Blanket and Standard Purchase Orders'''
| Makes possible the processing of blanket purchase orders—orders that can be fulfilled through multiple normal orders. Also, adds the standard purchase orders—orders that include the products purchased regularly in the same quantities and that can be processed repeatedly. For more information, see [HelpRoot_OrderMgmt\PO__con_Types_of_Purchase_Orders|Blanket and Standard Purchase Orders].
|- 
| '''Drop Shipments'''
| Gives you the ability to create and track orders for goods that should be delivered directly to a customer location. For more information, see [HelpRoot_OrderMgmt\OrderMgmt_Drop_Shipment_Sale_Mapref|Processing Sales with Drop-Shipment].
|- 
| '''Multiple Warehouses'''
| Adds the ability to configure multiple warehouses. For more information, see [HelpRoot_InvMgmt\Warehouses_GeneralInfo|Warehouses: General Information].
|- 
| '''Multiple Warehouse Locations'''
| Supports multiple locations for each warehouse. Some of these locations can be reserved for specific inventory transactions, such as receipts, issues, and returns. For more information, see [HelpRoot_InvMgmt\Warehouse_Locations_GeneralInfo|Warehouse Locations and Single-Step Transfers: General Information].
|- 
| '''Inventory Replenishment'''
| Automates the generation of purchase and transfer orders for replenishment of stock items for your warehouse or warehouses. This feature can be enabled only if the ''Multiple Warehouses'' feature is enabled. For more information, see [HelpRoot_InvMgmt\IN__con_Automated_Replenishment|Automated Replenishment].
|- 
| '''Matrix Items'''
| 
A check box that you use to select the ''Matrix Items'' feature for enabling.{br}

With this feature enabled, functionality of creating and using matrix items becomes available in the system. For details, see [HelpRoot_InvMgmt\Matrix_Items_GeneralInfo|Matrix Items: General Information].
|- 
| '''Inventory Subitems'''
| Makes possible the use of subitems in your system. With subitems enabled, under the same inventory ID, there can be a number of products that share all the settings of the inventory item record but have additional properties that differ, such as size, color, and material. For details, see [HelpRoot_InvMgmt\IN__con_Inventory_IDs_and_Subitem_Codes|Inventory Subitems].
|- 
| '''Automatic Packaging'''
| Makes it possible for the system to calculate the optimal set of boxes for each sales order or a consolidated shipment. The system selects the boxes based on the list of carrier boxes, the item packaging options, and the item quantities on the document. If the items will be shipped through an integrated carrier, the system calculates the shipping costs for each carrier, so that you can select the best shipping option. For more information, see [HelpRoot_OrderMgmt\SO__con_Automated_Shipments|Automatic Packaging for Integrated Carriers].
|- 
| '''Kit Assembly'''
| Makes possible the creation of kit specifications and kit assembly and disassembly according to specifications. For more information on kits, see [HelpRoot_InvMgmt\IN__con_Accounting_for_Kits|Inventory Item Kits].
|- 
| '''Advanced Physical Count'''
| Supports physical counts by inventory IDs, item classes, user-defined cycles, movement classes, or ABC codes. For information, see [HelpRoot_InvMgmt\IN__con_Planning_for_Physical_Inventory|Configuration of Physical Inventory].
|- 
| '''Sales Order to Purchase Order Link'''
| Supports sales order fulfillment by back ordering. For details, see [HelpRoot_OrderMgmt\OrderMgmt_Purchase_for_Sale_Mapref|Processing Purchases for Sale].
|- 
| '''Custom Order Types'''
| Enables the creation of custom types of sales orders. For more information, see [HelpRoot_OrderMgmt\SO__con_Custom_Order_Types|Custom Sales Order Types].
|- 
| '''Purchase Requisitions'''
| Enables the Purchase Requisitions module in the system. You can use this module to create requisition requests and requisitions, perform bidding to find the best prices, and control budget compliance. For more information, see [HelpRoot_OrderMgmt\RQ_00_00_00|Processing Purchase Requisitions].
|- 
| '''Advanced SO Invoices'''
| Gives you the ability to add stock items directly to SO invoices without creating and processing an associated sales order and shipment. For more information, see [HelpRoot_OrderMgmt\OrderMgmt_Direct_Sales_GeneralInfo|Direct Sales: General Information].
|- 
| '''Vendor Relations'''
| Enables a capability of configuring and managing vendor relations. For more information, see [HelpRoot_Financials\AP__MNG_Managing_Vendor_Relations|Managing Vendor Relations].
|- 
| '''Warehouse Management'''
| Enables the ability to perform warehouse operations by using barcode scanners or mobile devices.
|- 
| '''Fulfillment'''
| Gives you the ability to perform fulfillment operations, such as picking, packing, and shipping items by using barcode scanners or mobile devices.
|- 
| '''Advanced Picking'''
| Gives you the ability to fulfill sales orders by using advanced picking processes, such as wave picking and batch picking.
|- 
| '''Receiving'''
| Gives you the ability to perform receiving operations, such as receiving and putting away items by using barcode scanners or mobile devices.
|- 
| '''Inventory Operations'''
| Gives you the ability to perform inventory operations, such as issuing, receiving, transferring, and counting items by using barcode scanners or mobile devices.
|- 
| '''Cart Tracking'''
| Enable the ability to configure carts and track them when performing warehouse operations by using barcode scanners or mobile devices.
|}
==Third-Party Integrations==[anchor|#table_m3m_1j1_yv]The features in the '''Third-Party Integrations''' group of features are available for all the editions, although the number of features is different in different editions of Acumatica ERP.
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Feature
!width="80%" ! Overview
|- 
| '''Shipping Carrier Integration'''
| 
Enables you to configure integration with carriers, such as FedEx, or UPS. With this integration, you can apply real-time rates to shipments and track their delivery. ((({S:Warn}Integration with any of the carriers does not support international shipments.
))) For details, see [HelpRoot_OrderMgmt\CS__con_Integration_with_Carriers|Integration with Carriers].
|- 
| '''Exchange Integration'''
| 
Gives you the ability to integrate Acumatica ERP with Microsoft Exchange Server. You will be able to configure synchronization, and then synchronize users&rsquo; contacts, emails, tasks, and events in Acumatica ERP with their Exchange mailboxes. For more information, see [HelpRoot_Integration\EM__mng_Exchange_server|Synchronizing Acumatica ERP with Microsoft Exchange Server].
|- 
| '''External Tax Calculation Integration'''
| 
Enables integration with external tax providers, such as the AvaTax service by Avalara for automatic calculation of sales and use taxes online. This feature, which is configurable in the Taxes module, adds related forms to the following modules: Taxes, Accounts Payable, Accounts Receivable, Sales Orders, Purchase Orders, and Cash Management. For details, see [HelpRoot_Integration\TX__con_Avalara_Integration|Integrating Acumatica ERP with External Tax Providers].
|- 
| '''Address Validation Integration'''
| 
Provides validation of customer addresses through integrated specialized services, such as AvaTax by Avalara. The feature can be used with the '' External Tax Calculation Integration'' feature or without it. For details, see [HelpRoot_Integration\TX__con_Avalara_Integration|Integrating Acumatica ERP with External Tax Providers].
|}
==Other Features==[anchor|#table_zsm_1j1_yv]These features are available as add-on features.
{| class="checklist" | width="100%" 
|- 
!width="9%" ! Feature
!width="18%" ! Related Feature
!width="72%" ! Overview
|- 
| colspan="2" | '''Customer Management'''
| 
This feature adds the Customer Management module: lead and customer tracking, business opportunities, case management, marketing lists, and campaign management. For more information, see [HelpRoot_CRM\CR__CR_Features|Reviewing CRM Processes].
|- 
| colspan="2" | '''Lead/Contact Duplicate Validation'''
| 
This feature provides functionality you can use to configure and perform automatic validation of lead and contact records for duplicates.
|- 
| colspan="2" | '''Project Accounting'''
| 
This feature adds the Projects module, which can be integrated with certain basic modules (General Ledger, Accounts Receivable, Accounts Payable, Cash Management, and Time and Expenses) and add-on modules (Customer Management, Purchase Orders, Inventory, and Sales Orders). The Projects module includes project costing and project billing. For more information, see [HelpRoot_Projects\PM_00_00_00|Projects].
|- 
| colspan="2" | '''Customer Portal'''
| 
The Acumatica Self-Service                         Portal provides a solution for you to more efficiently work and communicate with your customers. Self-Service Portal is specifically designed to be the site where your customers can view all the relevant information about their interactions with you as a vendor and perform needed activities.{br}

 Self-Service Portal is an additional application that can be installed separately. For more information, see [HelpRoot_SS_Portal_Admin\SP_SP_00_00| Self-Service Portal]. 
|- 
| 
| '''B2B Ordering'''
| 
Makes it possible for your customers to view the online catalog and place orders themselves through Self-Service Portal. This feature can be enabled only if the ''Advanced Inventory'' group of features is enabled. For more information, see [HelpRoot_SS_Portal_Admin\SP__mng_Online_Ordering|Managing Online Orders].
|- 
| 
| '''Case Management on Portal'''
| 
Gives your customers the ability to add cases and track case processing through Self-Service Portal. This feature can be enabled only if the ''Customer Management'' feature is enabled. For more information, see [HelpRoot_SS_Portal_Admin\SP__mng_Portal_Cases|Managing Cases with Self-Service Portal].
|- 
| 
| '''Financials on Portal '''
| 
Provides a means for your customers to view the documents associated with their company accounts in Acumatica ERP.
|}]]></column>
			<column name="PlainText"><![CDATA[Overview of the  Acumatica ERP   Features   Acumatica ERP provides a scalable core system functionality and includes a range of add-on features.   Before you start implementing  Acumatica ERP,     you may find it helpful to become familiar with the functionality of the modules to be     implemented and the add-on features your organization has included in the license.  Core Functionality  Acumatica ERP     includes the following suites and modules, whose core functionality is briefly described in the     table below. Suite/Module Overview Organization Communication Provides users with access to such means of communication as email, notifications,          announcements, activities, and tasks. The module also includes a special feature—a          preconfigured Communications dashboard.  Time and Expenses Supports the processing of expense claims. Organization Structure Supports the configuration of the company, employee accounts, company tree,         departments, positions, workgroups, and assignment maps, all of which are used across other         modules. Finance General Ledger Supports the chart of accounts shared by all the branches (if any), as well as ledgers,          budgets, analytical reports, recurring transactions, document batches, and various          configurations of the financial year and periods, including custom financial year and          periods. Cash Management Provides support for cash accounts, payment methods, reconciliation statements, bank          deposits, funds transfers, cash flow forecasts, and credit card processing. Accounts Payable Provides support for vendor accounts (including those for tax agencies), credit terms,          documents of multiple types, configurable approval of documents for payment, recurring          transactions, ACH payments, and the 1099 form (for the United States). Accounts Receivable Provides support for customer accounts, documents of multiple types, recurring          transactions, credit card processing, tracking of card expiration dates, configurable rules          of payment auto-application, aging of credits, statements, credit management, and          write-offs. Taxes Gives you the ability to create and maintain taxes (of multiple types), tax zones, and         tax categories; supports automatic tax calculation and tax reporting. Configuration Common Settings Enables the use of segmented keys (for GL accounts, subaccounts, and inventory items, and          for customer, vendor, and employee accounts) and the creation of numbering sequences, which          are used for automatic generation of reference numbers for batches and for documents of          various types.  Also, this module supports attributes—optional and required UI elements to be used          in many modules for entering and storing additional properties of various objects including          leads and stock items. User Security Supports roles, which control user access to suites, modules, forms, UI elements, and          records. Also, this module provides the means for managing local user accounts, password          policies for local users, security audit options, and encryption certificates. Document Management Supports internal wikis and synchronization with external files. Also, this module          supports storing files internally and externally and routing imported files between the          storage locations. Email Supports configuration and management of the system email accounts for incoming and          outgoing emails. This module also supports built-in incoming mail processing, which can be          adjusted for the business needs of your company. System Management Supports snapshots, locales, and the management of application updates. Integration Enables the import and export of data in accordance with user-defined scenarios. Customization Provides a means for application customization and management of the site          map . Dashboards Dashboards Supports user-configurable dashboards, which display exactly the information the user          needs in the preferred presentation form. For more information, see  Dashboards in the  Getting Started            Guide . Finance Group of Features The features available for the Finance functionality are briefly described below. Feature Related Feature Overview Standard Financials This group of features is available in all editions of  Acumatica ERP. You can enable any of the features in this group—they are included in any license.         Multi-Branch Support Provides support for multiple branches. Branches can be configured for points of sale          (locations) as well as for separate legal entities within your organization, to ensure          better visibility into various layers of financial operations. For details, see  Multiple Branch Support and  Basic Models for Multibranch Organization. Business Account Locations Supports multiple locations for vendor and customer accounts.  Multi-Currency Accounting Adds the Currency Management module and support of the following: multiple currencies          across the modules; automatic calculation of the realized gains and losses and rounding          amounts on foreign currency transactions; revaluation of foreign currency accounts; and          translation of the base currency accounts into any foreign currency for reporting. For more          information, see the   ([~/?ScreenId=CM000000|CM000000]) Currency Management chapter.  Volume Pricing Gives you the ability to define price tiers for item quantities.  Expense Reclassification Supports the two-stage release of AP documents:  pre-release , when a data entry          clerk enters a bill or a quick check; and  release , when an authorized accountant          reviews a pre-released document, specifies the correct expense accounts (and subaccounts),          and releases the document. For details, see  Configuring Reclassification of Expenses. Tax Entry From GL Module Gives users the ability to specify taxes for documents entered in the General Ledger         module. VAT Reporting Enables accounting and reporting for any value-added tax (VAT) in the system: in the          Taxes module, enables the  VAT  tax type option; and in the Accounts Payable and          Accounts Receivable modules, adds UI elements that can be used for automatic calculation of          tax amounts and for VAT reporting. For details, see  Value-Added Tax and Its Variations. Invoice Rounding Provides automatic rounding of bill amounts in the Accounts Payable module and invoice          amounts in the Accounts Receivable module. For details, see  Rounding of Document Amounts. ROT and RUT Deduction Adds a form and multiple UI elements in the Accounts Receivables module that you can use          to create and process documents eligible for ROT and RUT deductions. Advanced Financials This group of features is not available in the standard edition of  Acumatica ERP. You can enable any of the features in this group if the group of features is available         in your system.  Subaccounts Gives you the ability to use subaccounts in addition to accounts. The subaccounts, which          are configurable in the Common Settings module, are used to detail account balances, for          more granular financial analysis. For details, see  Subaccounts: General Information.  General Ledger Allocation Templates Enables the creation and maintenance of allocation templates (which define how the         allocations are to be performed) and the automatic application of allocations according to         your definitions. Inter-Branch Transactions Makes possible the automatic generation of inter-branch transactions. For details, see            Configuring Interbranch Account Mapping. General Ledger Consolidation Provides consolidating data from specific branches of subsidiaries (or consolidation         units) into specific branch of the parent company. You can configure which data should be         consolidated and how exactly the data should be consolidated. After that, you can         consolidate the data as often as you need within each financial period.  Translation of Financial Statements Gives you the ability to translate amounts from the base currency to another currency at          the account balance level. Translation can be used for reporting purposes in any foreign          currency. For details, see  Translation Processing Workflow. Customer Discounts Gives you the ability to maintain customer discounts in your system: import them or enter          them manually, and update them. The system automatically applies the customer discounts to          sales orders (or invoices if the  Inventory and Order Management  group of features is          not enabled) when a user saves the document.  When the feature is disabled, you can enter the discount percent or amount on a line and document level on data entry forms, but the discount amounts are not posted separately to a discount account. For more information, see  Customer Discounts: General Information. Vendor Discounts Gives you the ability to maintain vendor discounts in your system: import them or enter          them manually, and update them. The system automatically applies the vendor discounts to          purchase orders (or bills if the  Inventory and Order Management  group of features is          not enabled) when a user saves the document. When the feature is disabled, you can enter the discount percent or amount on a line and document level on data entry forms, but the discount amounts are not posted separately to a discount account. For more information, see  Configuring Vendor Discounts. Commissions Makes it possible to configure commission calculations that support your company's         policies.  Overdue Charges Gives you the ability to configure additional charges to be applied to the outstanding         balances of customers who are consistently paying too late or not paying in full.  Dunning Letter Management Provides you with the ability to generate dunning letters to notify customers about their          overdue documents. You can select how you want to manage a level of dunning letter: by          customer or by overdue document. For details, see  Managing Dunning Letters. Deferred Revenue Management Adds the Deferred Revenue module and integrates it with the Accounts Payable and Accounts          Receivable modules, so that the users can assign various documents to deferral schedules          for recognizing portions of the deferred amounts. For more information, see   ([~/?ScreenId=DR000000|DR000000]) Deferred Revenue. Parent-Child Customer Relationship Makes it possible to configure parent-child relationships between business accounts of          the  Customer  and  Customer & Vendor  types. A parent-child relationship          includes the ability for the parent account to pay invoices of the child account, to          generate consolidated statements and reports, and to view a consolidated balance for a          parent account that includes the balances of its child accounts. The relationship can be          removed at any time. For details, see  Managing Parent-Child Relationships. Contract Management This feature provides the support of contracts, including case processing and contract          billing. It adds forms related to contract processing to the Accounts Receivable module and          enables integration of the Accounts Receivable and the Time and Expenses modules. For more          information, see  Managing Contracts. Fixed Asset Management This feature adds the Fixed Assets module, which can be used to create and manage fixed          assets through their useful life, from acquisition to disposal. The Fixed Assets module          integrates with the Requisitions and Purchase Orders modules to facilitate converting          purchases into fixed assets without the need to re-enter data. For more information, see          the   ([~/?ScreenId=FA000000|FA000000]) Fixed Assets chapter.  Payroll This feature activates the Payroll module. Multiple Workshifts Can be selected only if the  Payroll  feature is selected. Enables shift codes that          can be used by users to report time they spent on activities when working on a particular          shift. Monitoring and Automation Group of Features  The features in this group enable the monitoring of user activities and the automation of      workflows. This group of features is not available in the standard edition of  Acumatica ERP. Feature Overview Time Reporting on Activity Extends the functionality of the Time and Expenses module by making it possible to         track the time your organization's employees spend on activities that can be included in         time cards. For details, see  Time Activities. Approval Workflow Provides the ability to configure and use approval maps for the automatic assignment         of various documents to particular employees for approval. If this feature is not enabled,         approval maps cannot be used in the system, but the approval for expense claims still can be         configured and performed by using a different method. For details, see  Approving Documents and  Expense Claim Approval. Field-Level Audit Gives your organization the ability to track user activities in the system. This feature,          which is configurable in the Management module, provides complete information on who did          what and when on the form. For more information, see  Field-Level Auditing. Row-Level Security Adds the Row-Level Security module, which enables the management and administration of          user access (through restriction groups) to particular system records and objects to which          users have access by their roles. For details, see  Restriction Groups in Acumatica ERP. Scheduled Processing Makes it possible for you to configure automatic processing of documents that require          significant time and system resources. You can define a schedule for such automatic          processing—for instance, at times when there are no employees at work, such as weekends or          nights. For more information, see  Scheduled Processing. Change Notifications Gives you the ability to configure notifications about specific changes in documents so          that users of the system can sign up to receive emails sent by the system when specific          changes are made to particular documents. For more information, see  Notifications About Changes on Data Entry Forms. Workflow Automation Provides the ability to customize workflows by means of automation steps, and gives you          the ability to back up and store automation definitions that include all the automation          steps defined in the application. For more information, see  Automation Maintenance. Inventory and Order Management Group of Features The Inventory and Order Management group of features, once enabled, includes the basic       functionality of the following modules:  Inventory module: The basic functionality of the Inventory module includes only non-stock        items that can be processed in the Sales Orders and Purchase Orders modules. For more        information, see   ([~/?ScreenId=IN000000|IN000000]) Inventory Management. Sales Orders module: The basic functionality of the Sales Orders module includes        predefined order types, flexible order processing workflows (which include sending orders by        email or printing them and sending them by postal mail), generation of pick lists, and        shipment processing. For more information, see   ([~/?ScreenId=SO000000|SO000000]) Order Management. Purchase Orders module: The basic functionality of the Purchase Orders module includes        purchase orders of multiple types, vendor catalogs, default prices that are updated from        current documents, landed cost tracking, and barcode support. The Purchase Requisitions module is enabled by a separate feature of the Inventory and Order       Management group of features,  Purchase Requisitions . The features are briefly described       below. Feature Overview Inventory Gives you the ability to maintain stock items in the Inventory module and use the Sales          Orders, Purchase Orders, and Purchase Requisitions modules of the Inventory and Order          Management functionality for creating and processing documents that include stock          items. If this feature is not included in your license, you can use the modules of the Inventory          and Order Management functionality only for creating and processing documents that include          non-stock items and services. Multiple Units of Measure Gives you the ability to define for each stock item multiple units of measure (UOMs)         and the rules for conversion between them. With this feature not enabled, for each stock         item, you can define only the base unit of measure that is used for purchasing the item,         selling it, and calculating the available quantity of it. For more information, see  Units of Measure: General Information. Lot and Serial Tracking Gives you an ability to track stock items by lot or serial numbers and by expiration         dates.  Acumatica ERP provides flexible numbering schemes for lot and serial numbers and the ability to track         different products differently. For more information, see  Items with Lot and Serial Numbers: General Information. Blanket and Standard Purchase Orders Makes possible the processing of blanket purchase orders—orders that can be fulfilled         through multiple normal orders. Also, adds the standard purchase orders—orders that include         the products purchased regularly in the same quantities and that can be processed         repeatedly. For more information, see  Blanket and Standard Purchase Orders. Drop Shipments Gives you the ability to create and track orders for goods that should be delivered         directly to a customer location. For more information, see           Processing Sales with Drop-Shipment. Multiple Warehouses Adds the ability to configure multiple warehouses. For more information, see  Warehouses: General Information. Multiple Warehouse Locations Supports multiple locations for each warehouse. Some of these locations can be         reserved for specific inventory transactions, such as receipts, issues, and returns. For         more information, see  Warehouse Locations and Single-Step Transfers: General Information. Inventory Replenishment Automates the generation of purchase and transfer orders for replenishment of stock         items for your warehouse or warehouses. This feature can be enabled only if the  Multiple          Warehouses  feature is enabled. For more information, see  Automated Replenishment. Matrix Items A check box that you use to select the  Matrix Items  feature for enabling. With this feature enabled, functionality of creating and using matrix items becomes          available in the system. For details, see  Matrix Items: General Information. Inventory Subitems Makes possible the use of subitems in your system. With subitems enabled, under the         same inventory ID, there can be a number of products that share all the settings of the         inventory item record but have additional properties that differ, such as size, color, and         material. For details, see  Inventory Subitems. Automatic Packaging Makes it possible for the system to calculate the optimal set of boxes for each sales         order or a consolidated shipment. The system selects the boxes based on the list of carrier         boxes, the item packaging options, and the item quantities on the document. If the items         will be shipped through an integrated carrier, the system calculates the shipping costs for         each carrier, so that you can select the best shipping option. For more information, see           Automatic Packaging for Integrated Carriers. Kit Assembly Makes possible the creation of kit specifications and kit assembly and disassembly         according to specifications. For more information on kits, see  Inventory Item Kits. Advanced Physical Count Supports physical counts by inventory IDs, item classes, user-defined cycles, movement         classes, or ABC codes. For information, see  Configuration of Physical Inventory. Sales Order to Purchase Order Link Supports sales order fulfillment by back ordering. For details, see  Processing Purchases for Sale. Custom Order Types Enables the creation of custom types of sales orders. For more information, see  Custom Sales Order Types. Purchase Requisitions Enables the Purchase Requisitions module in the system. You can use this module to         create requisition requests and requisitions, perform bidding to find the best prices, and         control budget compliance. For more information, see   ([~/?ScreenId=RQ000000|RQ000000]) Processing Purchase Requisitions. Advanced SO Invoices Gives you the ability to add stock items directly to SO invoices without creating and         processing an associated sales order and shipment. For more information, see  Direct Sales: General Information. Vendor Relations Enables a capability of configuring and managing vendor relations. For more         information, see  Managing Vendor Relations. Warehouse Management Enables the ability to perform warehouse operations by using barcode scanners or         mobile devices. Fulfillment Gives you the ability to perform fulfillment operations, such as picking, packing, and         shipping items by using barcode scanners or mobile devices. Advanced Picking Gives you the ability to fulfill sales orders by using advanced picking processes,         such as wave picking and batch picking. Receiving Gives you the ability to perform receiving operations, such as receiving and putting         away items by using barcode scanners or mobile devices. Inventory Operations Gives you the ability to perform inventory operations, such as issuing, receiving,         transferring, and counting items by using barcode scanners or mobile devices. Cart Tracking Enable the ability to configure carts and track them when performing warehouse         operations by using barcode scanners or mobile devices. Third-Party Integrations The features in the  Third-Party Integrations  group of features are      available for all the editions, although the number of features is different in different      editions of  Acumatica ERP. Feature Overview Shipping Carrier Integration Enables you to configure integration with carriers, such as FedEx, or UPS. With this          integration, you can apply real-time rates to shipments and track their delivery.            Integration with any of the carriers does not support international           shipments.  For details, see  Integration with Carriers. Exchange Integration Gives you the ability to integrate  Acumatica ERP with Microsoft Exchange Server. You will be able to configure synchronization, and then          synchronize users' contacts, emails, tasks, and events in  Acumatica ERP with their Exchange mailboxes. For more information, see  Synchronizing Acumatica ERP with Microsoft Exchange Server. External Tax Calculation Integration Enables integration with external tax providers, such as the AvaTax service by Avalara          for automatic calculation of sales and use taxes online. This feature, which is          configurable in the Taxes module, adds related forms to the following modules: Taxes,          Accounts Payable, Accounts Receivable, Sales Orders, Purchase Orders, and Cash Management.          For details, see  Integrating Acumatica ERP with External Tax Providers. Address Validation Integration Provides validation of customer addresses through integrated specialized services, such          as AvaTax by Avalara. The feature can be used with the   External Tax Calculation           Integration  feature or without it. For details, see  Integrating Acumatica ERP with External Tax Providers. Other Features These features are available as add-on features. Feature Related Feature Overview Customer Management This feature adds the Customer Management module: lead and customer tracking, business          opportunities, case management, marketing lists, and campaign management. For more          information, see  Reviewing CRM Processes. Lead/Contact Duplicate Validation This feature provides functionality you can use to configure and perform automatic          validation of lead and contact records for duplicates. Project Accounting This feature adds the Projects module, which can be integrated with certain basic modules          (General Ledger, Accounts Receivable, Accounts Payable, Cash Management, and Time and          Expenses) and add-on modules (Customer Management, Purchase Orders, Inventory, and Sales          Orders). The Projects module includes project costing and project billing. For more          information, see   ([~/?ScreenId=PM000000|PM000000]) Projects. Customer Portal The  Acumatica Self-Service                         Portal provides a solution for you to more efficiently work and communicate with your          customers.  Self-Service Portal is          specifically designed to be the site where your customers can view all the relevant          information about their interactions with you as a vendor and perform needed          activities.  Self-Service Portal          is an additional application that can be installed separately. For more information, see             Self-Service Portal.  B2B Ordering Makes it possible for your customers to view the online catalog and place orders          themselves through  Self-Service Portal. This          feature can be enabled only if the            Advanced           Inventory  group of features is enabled. For more information, see            Managing Online Orders. Case Management on Portal Gives your customers the ability to add cases and track case processing through  Self-Service Portal. This          feature can be enabled only if the  Customer Management  feature is enabled. For more          information, see  Managing Cases with Self-Service Portal. Financials on Portal  Provides a means for your customers to view the documents associated with their company          accounts in  Acumatica ERP. ]]></column>
		</row>
		<row PageID="6d07ee72-aad0-46f2-8398-d151c5e2ac45" Language="en-US" PageRevisionID="1" Content="&#xA;This chapter describes the process of initial Acumatica ERP configuration. &#xA;==Overview==&#xA;During the initial system configuring, you should make important decisions on the number and structure of your organization&amp;rsquo;s branches and the currency to be used as the base currency for financials in Acumatica ERP. Also, you need to specify the site management and security preferences. For users who will perform implementation, you have to create user accounts and set up the security policies.&#xA;==Prerequisites and Dependencies==&#xA;There are no prerequisites for initial system configuration.&#xA;==In This Chapter==[anchor|#ul_ksj_lsp_bs]&#xA;*[HelpRoot_Implement\INIT_Preparation|Preparation for Initial Configuration]: Describes what data should be collected, arranged, and analyzed before you start the implementation process.&#xA;*[HelpRoot_Implement\INIT_Configuration|Initial Configuration]: Guides you through the actual configuration of the system.&#xA;" PlainText="Performing Initial Configuration This chapter describes the process of initial  Acumatica ERP     configuration.  Overview During the initial system configuring, you should make important decisions on the number and     structure of your organization's branches and the currency to be used as the base currency for     financials in  Acumatica ERP.     Also, you need to specify the site management and security preferences. For users who will     perform implementation, you have to create user accounts and set up the security policies. Prerequisites and Dependencies There are no prerequisites for initial system configuration. In This Chapter Preparation for Initial Configuration: Describes what data should be collected, arranged, and      analyzed before you start the implementation process. Initial Configuration: Guides you through the actual configuration of the      system. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="44756b21-bc6e-9ba8-3e48-5d3144c9f195" RecordSourceID="22377" />
		<row PageID="e56149c7-4e28-4e63-8337-60df5bf052ca" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="464af14a-23b0-a98a-723b-1b3389acd53f" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This topic covers the preparation tasks that you have to perform before you begin configuring any modules in Acumatica ERP. Most of these tasks involve collecting and analyzing data and making decisions that will affect the system as a whole. ((({S:Hint} Because this is the preparation phase of implementation, you enter no data into the system at this time.
)))[anchor|#table_zdd_yrp_bs]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Decide on the features to be enabled'''
| Review the core functionality and the list of add-on features included in your edition of Acumatica ERP. For more information, see [HelpRoot_Implement\Impl_Features_Overview|Overview of the Acumatica ERP Features ]. Decide which features to enable. Some of the features (such as ''Multi-Branch Support'' or ''Subaccounts'') should be enabled and configured at this time in the implementation process, while other features (such as ''Allocation Templates'' and ''Volume Pricing'') can be enabled and configured after you initialize the system.((({S:Hint} Think thoroughly before you enable any feature. If you enable a feature you won&rsquo;t need, the users will need to enter additional data that won&rsquo;t be used. On the other hand, disabling some of the features for which some data was entered, may cause unexpected results. 
)))
|- 
| '''Choose the base currency'''
| 
Choose the main currency used by all branches of your organization as the ''base currency''. The base currency is the default currency for recording transactions, budgets, and other GL data, and it is used for reporting, income statements, and balance sheets. The base currency can be the only currency used in the system or one of multiple currencies that are used in operations with customers and vendors.{br}

 Plan the identifier to be used for the base currency (up to five characters in length), the currency symbol, and the required decimal precision.((({S:Warn}To comply with international standards, refer to ISO 4217 when you are specifying foreign currency identifiers and currency symbols.
)))
|- 
| '''Decide how many branches you need'''
| 
In Acumatica ERP, you must define at least one branch to represent your organization. If the ''Multi-Branch Support'' feature is activated, you can create multiple branches. Branches can be configured for points of sale (locations) as well as for separate legal entities within your organization. This multi-branch functionality can be used for organizations with branches that share the following settings:[anchor|#ul_ugd_yrp_bs]
*The base currency
*The chart of accounts (if your real-life branches use similar charts of accounts, consider merging the charts into one chart of accounts that will be used by all branches)
*The financial year and periods
Create a list of branches and specify the following:[anchor|#ul_kzn_l4h_wr]
*Which branches are legal entities and file individual tax reports
*Which branches do not file individual tax reports
*Which branches file consolidated tax reports and which branches are included

 For details, see [HelpRoot_Organization\CS__con_Multiple_Branch_Support|Multiple Branch Support] and [HelpRoot_Organization\CS__con_Basic_Models_for_Multi-Branch_Organization|Basic Models for Multibranch Organization].
|- 
| '''Plan the identifiers for branches based on the ''BIZACCT'' segmented key'''
| 
Plan the identifiers that you will use for branches. Decide whether the identifier will consist of segments, and what segment values may be used. In Acumatica ERP, the structure of identifiers for business accounts—that is, identifiers of branches, vendors, customers, and employees—is defined by the structure of the ''BIZACCT'' segmented key. Define the number, length, and type of each of its segments, as well as the list of values for each segment to be able to create the planned identifiers for branches. For additional information, see [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers].{br}

 The ''BIZACCT'' key will be used for the accounts that represent branches, as well as for all types of business accounts (including identifiers of vendors, customers, and employees), unless you configure specific ''VENDOR'', ''CUSTOMER'' and ''EMPLOYEE'' keys that inherit the general structure of the ''BIZACCT'' key but can have different sets of values for their segments (specific for each key). For more details, see [HelpRoot_Administration\CS__con_Business_Accounts_Identifiers|Business Account Identifiers].
|- 
| '''Prepare country and province or state information'''
| Review the lists of countries on the [HelpRoot_FormReference\CS_20_40_00|Countries/States] ([~/?ScreenId=CS204000|CS204000]) form. Acumatica ERP is installed with a preloaded list of countries and, for certain countries, states or provinces. If no states or provinces are specified for a country in which your organization has operations, prepare a list of states or provinces with the following information for each: [anchor|#ul_gjd_yrp_bs]
*The standard (commonly used) abbreviated name, which will be used as its ID
*Its full name
*Whether tax registration is required in the state or province

You should also plan the mask and regular expression to be used for validation of each country&rsquo;s postal codes and input masks for phone numbers. See [HelpRoot_Administration\CS__con_Examples_Mask_and_RegExp_Usage|Examples of Masks and Regular Expressions Usage ] and [HelpRoot_Administration\CS__con_CountryStatePostalCode_Validation|Country, State and Postal Code Validation].
|- 
| '''Decide which security certificates will be used'''
| 
 The data stored in the database should be encrypted, which requires a security certificate. Another certificate (or certificates) may be needed if you want the employees to sign PDF documents generated in Acumatica ERP. You can purchase certificates from any certification authority. {br}

For more information, see [HelpRoot_Administration\SM__con_Digital_Certificates|Data Encryption in Acumatica ERP].
|- 
| '''Plan site preferences'''
| 
 Decide upon the following other optional global settings of the system: [anchor|#ul_fnd_yrp_bs]
*'''Map viewer''': Choose an Internet map engine to show location of customers and vendors (optional).
*'''Export to Microsoft Excel settings''': Decide how data exported from reports to Microsoft Excel should be formatted, including the following factors: 
**Whether hidden fields should be exported.
**Whether each cell in the Excel worksheet should have a border, and what its color should be.
**What the font, size, style (bold, italic, etc.), font color, and fill color of the report header should be, as well as what these selections should be for the report data rows.
**What background color should be used for the headers, as well as for the data rows.

|- 
| '''Prepare a list of users participating in implementation'''
| 
To sign in to Acumatica ERP, a person must have a user account in the system. Prepare a list of individuals (employees and possibly external staff) who need to access and use the system through its implementation period, with the following information for each user:[anchor|#ul_mkd_yrp_bs]
*Login
*First name
*Last name
*Email address (each user can also specify personal email in his or her profile to be used to restore the user&rsquo;s login or password)
*Password settings, including whether to allow the user to change the password and whether to force the user to change the password on next login
((({S:Hint} Creating user accounts for all users before roles are established and other security restrictions are configured poses a security risk. Plan to configure the integration of Acumatica ERP with Active Directory or create user accounts for employees and users not participating in the implementation process just before live operations begin in Acumatica ERP. 
)))
|- 
| '''Develop security and audit policies for these users'''
| 
 Decide upon the following security and audit options, which will affect the users involved in implementation (later, during the configuration of all other users and employees, you may want to change these policies): [anchor|#ul_tkd_yrp_bs]
* Whether to require password complexity. 
* Whether to use an additional password validation mask, and if so, what mask. This mask can be applied in addition to other password restrictions. This option is used to exclude characters that may not be supported by involved systems. Note that any regularity in passwords greatly diminishes the security level. Use this option only when it&rsquo;s absolutely necessary. If you decide to use this mask, develop a message text to be displayed to the user when the password violates the validation mask.
*Whether to set up an account lock time and what number of unsuccessful login attempts will cause the user to be locked out of the account.

For more information, see [HelpRoot_Administration\SM__con_Site_Security_Options|Security Policies in Acumatica ERP].
|}
 You can print the [HelpRoot_ImplementChecklists\INIT_Preparation_Checklist|Initial Preparation Checklist] and refer to it when you perform the initial preparation tasks. ]]></column>
			<column name="PlainText"><![CDATA[Preparation for Initial Configuration This topic covers the preparation tasks that you have to perform before you begin configuring     any modules in  Acumatica ERP.     Most of these tasks involve collecting and analyzing data and making decisions that will affect     the system as a whole.    Because this is the preparation phase of implementation, you enter no data     into the system at this time. Task  Description Decide on the features to be enabled Review the core functionality and the list of add-on features included in your edition         of  Acumatica ERP. For more information, see  Overview of the Acumatica ERP Features . Decide which         features to enable. Some of the features (such as  Multi-Branch Support  or           Subaccounts ) should be enabled and configured at this time in the implementation         process, while other features (such as  Allocation Templates  and  Volume         Pricing ) can be enabled and configured after you initialize the system.  Think thoroughly before you enable any feature. If you enable a feature you          won't need, the users will need to enter additional data that won't be used. On the other          hand, disabling some of the features for which some data was entered, may cause unexpected          results.  Choose the base currency Choose the main currency used by all branches of your organization as the  base           currency . The base currency is the default currency for recording transactions,          budgets, and other GL data, and it is used for reporting, income statements, and balance          sheets. The base currency can be the only currency used in the system or one of multiple          currencies that are used in operations with customers and vendors.  Plan the identifier to be used for the base currency (up to five characters in length),          the currency symbol, and the required decimal precision. To comply with international standards, refer to ISO 4217 when you are specifying          foreign currency identifiers and currency symbols. Decide how many branches you need In  Acumatica ERP, you must define at least one branch to represent your organization. If the            Multi-Branch Support  feature is activated, you can create multiple branches.          Branches can be configured for points of sale (locations) as well as for separate legal          entities within your organization. This multi-branch functionality can be used for          organizations with branches that share the following settings: The base currency The chart of accounts (if your real-life branches use similar charts of accounts,            consider merging the charts into one chart of accounts that will be used by all            branches) The financial year and periods Create a list of branches and specify the following: Which branches are legal entities and file individual tax reports Which branches do not file individual tax reports Which branches file consolidated tax reports and which branches are included  For details, see  Multiple Branch Support          and  Basic Models for Multibranch Organization. Plan the identifiers for branches based on the  BIZACCT  segmented key Plan the identifiers that you will use for branches. Decide whether the identifier will          consist of segments, and what segment values may be used. In  Acumatica ERP, the structure of  identifiers for business accounts—that is, identifiers of branches,          vendors, customers, and employees—is defined by the structure of the  BIZACCT           segmented key. Define the number, length, and type of each of its segments, as well as the          list of values for each segment to be able to create the planned identifiers for branches.          For additional information, see  Segmented Identifiers.  The  BIZACCT  key will be used for the accounts that represent branches, as well as          for all types of business accounts (including identifiers of vendors, customers, and          employees), unless you configure specific  VENDOR ,  CUSTOMER  and            EMPLOYEE  keys that inherit the general structure of the  BIZACCT  key but can          have different sets of values for their segments (specific for each key). For more details,          see  Business Account Identifiers. Prepare country and province or state information Review the lists of countries on the   ([~/?ScreenId=CS204000|CS204000]) Countries/States (CS204000) form.  Acumatica ERP is installed with a preloaded list of countries and, for certain countries, states or         provinces.  If no states or provinces are specified for a country in which your organization         has operations, prepare a list of states or provinces with the following information for         each:  The standard (commonly used) abbreviated name, which will be used as its ID Its full name Whether tax registration is required in the state or province You should also plan the mask and regular expression to be used for validation of          each country's postal codes and input masks for phone numbers. See  Examples of Masks and Regular Expressions Usage  and  Country, State and Postal Code Validation. Decide which security certificates will be used  The data stored in the database should be encrypted, which requires a security          certificate. Another certificate (or certificates) may be needed if you want the employees          to sign PDF documents generated in  Acumatica ERP. You can purchase certificates from any certification authority.  For more information, see  Data Encryption in Acumatica ERP. Plan site preferences  Decide upon the following other optional global settings of the system:  Map viewer : Choose an Internet map engine to show location of customers and           vendors (optional). Export to Microsoft Excel settings : Decide how data exported from reports to           Microsoft Excel should be formatted, including the following factors:  Whether hidden fields should be exported. Whether each cell in the Excel worksheet should have a border, and what its color             should be. What the font, size, style (bold, italic, etc.), font color, and fill color of the             report header should be, as well as what these selections should be for the report data             rows. What background color should be used for the headers, as well as for the data             rows. Prepare a list of users participating in implementation To sign in to Acumatica ERP, a person must have a user account in the system. Prepare a          list of individuals (employees and possibly external staff) who need to access and use the          system through its implementation period, with the following information for each user: Login First name Last name Email address (each user can also specify personal email in his or her profile to be           used to restore the user's login or password) Password settings, including whether to allow the user to change the password and           whether to force the user to change the password on next login  Creating user accounts for all users before roles are established and          other security restrictions are configured poses a security risk. Plan to configure the          integration of  Acumatica ERP with Active Directory or create user accounts for employees and users not participating          in the implementation process just before live operations begin in  Acumatica ERP.  Develop security and audit policies for these users  Decide upon the following security and audit options, which will affect the users          involved in implementation (later, during the configuration of all other users and          employees, you may want to change these policies):   Whether to require password complexity.   Whether to use an additional password validation mask, and if so, what mask. This mask           can be applied in addition to other password restrictions. This option is used to exclude           characters that may not be supported by involved systems. Note that any regularity in           passwords greatly diminishes the security level. Use this option only when it's absolutely           necessary. If you decide to use this mask, develop a message text to be displayed to the           user when the password violates the validation mask. Whether to set up an account lock time and what number of unsuccessful login attempts           will cause the user to be locked out of the account. For more information, see  Security Policies in Acumatica ERP.  You can print the  Initial Preparation Checklist and refer to it when you     perform the initial preparation tasks.  ]]></column>
		</row>
		<row PageID="26e94e85-6a05-4c4b-8b08-f6161bfc7e3f" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3435ba1b-cd88-537f-2ffd-73158e0ca290" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will help you perform the initial configuration of Acumatica ERP. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform the tasks listed in this topic in the order in which they are listed. ((({S:Warn}The person who performs the initial configuration uses the ''admin'' login and the initial password only until the accounts for the persons participating in implementation are created (in the last task of initial configuration). We recommend that after initial configuration, the users use their personal logins and passwords to access the system.
)))[anchor|#table_rsn_hsp_bs]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Enable the selected features'''{br}

 [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000])
| Enable the features you plan to use in the implementation. Click '''Modify''' on the form toolbar, select the check boxes for the features to be enabled, and click '''Enable'''.((({S:Warn}After you install a new blank instance of Acumatica ERP, most of the product features are disabled and the only form you can access when you sign in is the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] form. 
)))
See [HelpRoot_Administration\CS__con_Managing_Features|Managing Features].
|- 
| '''2'''
| 
 '''Populate the lists of states or provinces'''{br}

 [HelpRoot_FormReference\CS_20_40_00|Countries/States] ([~/?ScreenId=CS204000|CS204000])
| For each country on your list, enter the provinces or states, type an input mask for the postal codes or a regular expression.
|- 
| '''3'''
| 
 '''Create an auto-numbering sequence for the ''BIZACCT'' key'''{br}

 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
|  If you have decided to use auto-numbering in the identifiers of customers and vendors, review the ''CUSTOMER'' numbering sequence for customers and ''VENDOR'' numbering sequence for vendors. These are the preconfigured numbering sequences for use with the ''BIZACCT'' segmented key. If needed, modify the sequence or create a new custom numbering sequence.
|- 
| '''4'''
| 
 '''Configure the ''BIZACCT'' key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| Configure the ''BIZACCT'' segmented key by specifying the following:[anchor|#ul_hdx_wr2_1s]
*The number of segments the key has
*The length of each segment
*The type of each segment and whether it requires validation
*The list of values for each segment

Also, if ''BIZACCT'' will contain an auto-numbering segment, select the '''Auto Number''' option for the segment, and in the '''Numbering ID''' box, select the predefined sequence (''CUSTOMER'' or ''VENDOR'') or the custom sequence you have created.
|- 
| '''5'''
| 
 '''Add segment values for the ''BIZACCT'' key'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| For each segment that requires validation, enter the allowed values that will be used in the identifiers for your organization&rsquo;s branches and other business accounts.
|- 
| '''6'''
| 
 '''Create the first branch'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| Enter the following information about the first branch (which represents your organization):[anchor|#ul_pvy_xlt_1s]
*The identifier (which should comply with the ''BIZACCT ''segmented key) and name
*The default country and the input mask for phone numbers
*The address and the tax registration number
*The base currency to be used by all the branches. Specify the base currency identifier (which is up to five characters in length), the currency symbol, and the required decimal precision.
*:((({S:Warn}To comply with international standards, refer to ISO 4217 when you are specifying foreign currency identifiers and currency symbols.
)))

|- 
| '''7'''
| 
 '''Create other branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
This task is needed only if the ''Multi-Branch Support'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] form. {br}

Enter the following general information about each branch:[anchor|#ul_vqt_cnt_1s]
*Branch identifier (which should comply with the ''BIZACCT ''segmented key)
*Name of the branch
*Address
*Tax registration information

|- 
| '''8'''
| 
 '''Specify the site preferences'''{br}

 [HelpRoot_FormReference\SM_20_05_05|Site Preferences] ([~/?ScreenId=SM200505|SM200505])
| 
Specify the following settings:[anchor|#ul_x3m_4lt_1s]
*The map viewer, to enable the users to view branch, customer, and vendor locations on a map
*The default login time zone as the time zone from which most users will log in to Acumatica ERP
*The interface theme that is most appropriate for your organization
*The options to be used by default when the users export data to Excel

|- 
| '''9'''
| 
 '''Import security certificates'''{br}

 [HelpRoot_FormReference\SM_20_05_30|Encryption Certificates] (SM200530
| 
Import and register the certificates in Acumatica ERP (one for the encryption of the database and one or more for PDF signing). For each certificate: [anchor|#ul_tcn_21f_1s]
*Enter a brief descriptive name.
*Enter the password of the certificate, which is provided by a certification authority.
*Upload the certificate to the system.

See [HelpRoot_Administration\US__How_to_Import_Digital_Certificate|To Import Certificates].
|- 
| '''10'''
| 
 '''Specify security preferences'''{br}

 [HelpRoot_FormReference\SM_20_10_60|Security Preferences] ([~/?ScreenId=SM201060|SM201060])
| 
Specify the security preferences you decided on during the preparation stage for the Acumatica ERP site: [anchor|#ul_hh3_typ_bs]
*'''Password Policy''': Specify the maximum lifetime for user passwords, minimum password length, whether password complexity is required, additional validation mask, and a tip that the user will see if a new password doesn&rsquo;t meet the complexity requirements.
*'''Account Lockout Policy''': Specify the maximum number of unsuccessful attempts, lockout time, and lockout counter reset time. 
*'''Audit policy''': Specify the audited operations and the time to keep the audit history 
*'''Security Certificates:''' Specify the certificates (the default one for PDF signing and another for encryption of database).

|- 
| '''11'''
| 
 '''Apply the security certificate'''{br}

 [HelpRoot_FormReference\SM_20_05_35|Certificate Replacement] (SM200535
| 
Encrypt the data in the database by using the imported certificate. The table on the form shows the types of data that will be stored encrypted.{br}

See [HelpRoot_Administration\US__How_to_Encrypt_Database|To Encrypt the Database].
|- 
| '''12'''
| 
 '''Create user accounts'''{br}

 [HelpRoot_FormReference\SM_20_10_10|Users] ([~/?ScreenId=SM201010|SM201010])
| 
For each user participating in implementation, do the following:[anchor|#ul_uyh_y42_1s]
*Enter a login (username) to be used to sign in the system.
*Clear the '''Generate Password''' check box and enter the password.
*Type the first and last name.
*Enter the email address.
*Specify the following password policies, if appropriate:
**Permit the user to have a never-expiring password. 
**Force the user to change the password on the next login. This option is normally selected for new users.
*Optionally, use the '''Comment''' box to add any relevant information about the user account.
*Assign the ''Administrator'' role. 
*:((({S:Warn}At this implementation stage, when only a few users are involved in the process and they all should have access to all the functionality, this assignment is necessary. Later, once implementation of the financial modules is complete, you can configure user roles and assign them to users. 
)))
*Activate the account.

|}
 You can print the [HelpRoot_ImplementChecklists\INIT_Conf_Checklist|Initial Configuration Checklist] and refer to it when you perform the initial configuration tasks. ]]></column>
			<column name="PlainText"><![CDATA[Initial Configuration This topic will help you perform the initial configuration of  Acumatica ERP. Due to dependencies between the forms, the sequence of actions during configuration is       critical, so you need to perform the tasks listed in this topic in the order in which they are       listed.  The person who performs the initial configuration uses the  admin  login         and the initial password only until the accounts for the persons participating in         implementation are created (in the last task of initial configuration). We recommend that         after initial configuration, the users use their personal logins and passwords to access the         system. No. Task  Description 1 Enable the selected features  ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) Enable the features you plan to use in the implementation. Click  Modify                  on the form toolbar, select the check boxes for the features to be enabled, and                 click  Enable . After you install a new blank instance of  Acumatica ERP, most of the product features are disabled and the only form you can access                   when you sign in is the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features form.                    See  Managing Features. 2 Populate the lists of states or provinces  ([~/?ScreenId=CS204000|CS204000]) Countries/States (CS204000) For each country on your list, enter the provinces or states, type an input                 mask for the postal codes or a regular expression. 3 Create an auto-numbering sequence for the  BIZACCT  key  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201000)  If you have decided to use auto-numbering in the identifiers of customers and                 vendors, review the  CUSTOMER  numbering sequence for customers and                    VENDOR  numbering sequence for vendors. These are the preconfigured                 numbering sequences for use with the  BIZACCT  segmented key. If needed, modify                 the sequence or create a new custom numbering sequence. 4 Configure the  BIZACCT  key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Configure the  BIZACCT  segmented key by specifying the following: The number of segments the key has The length of each segment The type of each segment and whether it requires validation The list of values for each segment Also, if  BIZACCT  will contain an auto-numbering segment, select the                      Auto Number  option for the segment, and in the  Numbering ID  box,                   select the predefined sequence ( CUSTOMER  or  VENDOR ) or the custom                   sequence you have created. 5 Add segment values for the  BIZACCT  key  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) For each segment that requires validation, enter the allowed values  that will                 be used in the identifiers for your organization's branches and other business                 accounts. 6 Create the first branch  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) Enter the following information about the first branch (which represents your                   organization): The identifier (which should comply with the  BIZACCT  segmented key) and                     name The default country and the input mask for phone numbers The address and the tax registration number The base currency to be used by all the branches. Specify the base currency                     identifier (which is up to five characters in length), the currency symbol, and                     the required decimal precision. To comply with international standards,                       refer to ISO 4217 when you are specifying foreign currency identifiers and                       currency symbols. 7 Create other branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) This task is needed only if the  Multi-Branch Support  feature is enabled on                   the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features form.  Enter the following general information about each branch: Branch identifier (which should comply with the  BIZACCT  segmented                     key) Name of the branch Address Tax registration information 8 Specify the site preferences  ([~/?ScreenId=SM200505|SM200505]) Site Preferences (SM200505) Specify the following settings: The map viewer, to enable the users to view branch, customer, and vendor                     locations on a map The default login time zone as the time zone from which most users will log in                     to  Acumatica ERPThe interface theme that is most appropriate for your organization The options to be used by default when the users export data to Excel 9 Import security certificates  ([~/?ScreenId=SM200530|SM200530]) Encryption Certificates (SM200530 Import and register the certificates in  Acumatica ERP (one for the encryption of the database and one or more for PDF signing). For                   each certificate:  Enter a brief descriptive name. Enter the password of the certificate, which is provided by a certification                     authority. Upload the certificate to the system. See  To Import Certificates. 10 Specify security preferences  ([~/?ScreenId=SM201060|SM201060]) Security Preferences (SM201060) Specify the security preferences you decided on during the preparation stage for                   the  Acumatica ERP site:  Password Policy : Specify the maximum lifetime for user passwords,                     minimum password length, whether password complexity is required, additional                     validation mask, and a tip that the user will see if a new password doesn't meet                     the complexity requirements. Account Lockout Policy : Specify the maximum number of unsuccessful                     attempts, lockout time, and lockout counter reset time.  Audit policy : Specify the audited operations and the time to keep the                     audit history  Security Certificates:  Specify the certificates (the default one for                     PDF signing and another for encryption of database). 11 Apply the security certificate  ([~/?ScreenId=SM200535|SM200535]) Certificate Replacement (SM200535 Encrypt the data in the database by using the imported certificate. The table on                   the form shows the types of data that will be stored encrypted. See  To Encrypt the Database. 12 Create user accounts  ([~/?ScreenId=SM201010|SM201010]) Users(SM201010) For each user participating in implementation, do the following: Enter a login (username) to be used to sign in the system. Clear the  Generate Password  check box and enter the                     password. Type the first and last name. Enter the email address. Specify the following password policies, if appropriate: Permit the user to have a never-expiring password.  Force the user to change the password on the next login. This option is                         normally selected for new users. Optionally, use the  Comment  box to add any relevant information about                     the user account. Assign the  Administrator  role.  At this implementation stage, when                       only a few users are involved in the process and they all should have access                       to all the functionality, this assignment is necessary. Later, once                       implementation of the financial modules is complete, you can configure user                       roles and assign them to users.  Activate the account.  You can print the  Initial Configuration Checklist and refer to it when you         perform the initial configuration tasks.  ]]></column>
		</row>
		<row PageID="2942b1b3-fa19-449e-8c68-5ad3c0982d20" Language="en-US" PageRevisionID="1" Content="This chapter describes the configuration of a company has just one office, including the minimum set of features that has to be enabled for this configuration. The chapter also contains an implementation checklist that users can refer to when they are preparing for implementation and configuring the basic Acumatica ERP functionality for the company. " PlainText="Configuring a Company Without Branches This chapter describes the configuration of a company has just one office, including the    minimum set of features that has to be enabled for this configuration. The chapter also contains    an implementation checklist that users can refer to when they are preparing for implementation    and configuring the basic  Acumatica ERP    functionality for the company.  " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="cd7d29a7-c024-a1a5-b224-f8f3ebe7be89" RecordSourceID="22377" />
		<row PageID="5bc4e520-2681-45af-8767-e22b3f80df94" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="5eb7537f-4fd8-1b76-189b-4082b546b0e6" RecordSourceID="22377">
			<column name="Content"><![CDATA[
When you initially implement Acumatica ERP, you perform the company configuration that makes it possible for system implementation to proceed. This configuration includes enabling the default set of features and configuring the company in the system. You can proceed to further Acumatica ERP implementation, which includes specifying the basic settings related to the general ledger and to cash management, accounts payable, and accounts receivable.{br}

When you configure a company in Acumatica ERP, it can be defined as being without branches, as consisting of branches that require balancing entries (if transactions involve multiple branches), or as having branches that do not require balancing entries. The topics of this chapter describe the configuration of a company without branches.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to do the following:[anchor|#_3ca7d9f2-d74e-4f67-abba-918e5a9d8078]
*Enable the default set of features before you start the configuration of a company
*Perform the configuration of a company without branches

==Applicable Scenarios==
You configure a company without branches if the company has only one business location. You perform this company configuration as a first phase of the implementation of Acumatica ERP, before the entities needed for business processes are created. You can also add a new company without branches to the existing companies in an existing tenant at any time.
==Workflow of the Configuration of a Company Without Branches==
To implement the basic configuration of a company without branches in Acumatica ERP, you perform the following general steps:[anchor|#_e0ff54a2-6ece-47ee-afb6-b5b1baf1fea9]
#On the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, you enable the default set of features. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches].
#:((({S:Warn}In a production environment, after the features are enabled, you have to activate the Acumatica ERP license by using the [HelpRoot_FormReference\SM_20_15_10|Activate License] ([~/?ScreenId=SM201510|SM201510]) form. Each particular feature may be subject to additional licensing; please consult the Acumatica ERP sales policy for details.
)))
#On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, you create the company entity in the system; you also create its actual ledger. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#On the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form, you add the accounts that are necessary for performing the financial operations of the company, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_COA|General Ledger: To Create a Chart of Accounts].
#On the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form, you specify the settings for processing transactions in the general ledger. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_GL_Preferences|General Ledger: To Specify General Ledger Preferences].
#On the [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form, you set up the first financial year when the company starts processing its operations in Acumatica ERP. You then generate periods on the [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000]) form and open them on the [HelpRoot_FormReference\GL_50_30_00|Manage Financial Periods] ([~/?ScreenId=GL503000|GL503000]) form. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Fin_Years|General Ledger: To Define a Financial Year].
#On the [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form, you specify the settings to be used in the system for processing cash transactions. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_CA_Preferences|Cash Management: To Specify Cash Management Preferences].
#On the [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form, you add the necessary entry types for processing cash payments. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Entry_Types|Cash Management: To Create an Entry Type].
#On the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form, you define the cash accounts to be used to record cash entries and funds transfers. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Cash_Accounts|Cash Management: To Create Cash Accounts].
#On the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, you define the payment methods that the company uses to pay its vendors, as well as the payment methods that are used by customers to pay the company. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Payment_Methods|Cash Management: To Modify a Payment Method].
#On the [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form, you create the sets of credit terms that are commonly used by vendors in their relations with the company and by the company in its relations with customers. These will be assigned to particular vendors and customers and specified in their bills and invoices, respectively. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].
#On the [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form, you create the default vendor class, which will provide default values for vendor accounts of the class and for other vendor classes you create later. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Vendor_Classes|Accounts Payable: To Create a Vendor Class].
#On the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form, you specify the settings to be used in accounts payable. See [HelpRoot_Implement\config_Basic_Company_Implem_Activity_AP_Preferences|Accounts Payable: To Specify Accounts Payable Preferences] for more information.
#On the [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form, you define the necessary statement cycles to track customers' outstanding balances, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Statement_Cycles|Accounts Receivable: To Create a Statement Cycle]. These cycles will be used later, when you are sending electronic or printed statements to the customers.
#On the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form, you create the default customer class, which will provide default values for customer accounts and for other customer classes you create later. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Customer_Classes|Accounts Receivable: To Create a Customer Class].
#On the [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form, you specify the settings to be used in accounts receivable. See [HelpRoot_Implement\config_Basic_Company_Implem_Activity_AR_Preferences|Accounts Receivable: To Specify Accounts Receivable Preferences] for more information.

==Company Settings==
In Acumatica ERP, you can create new companies or maintain existing companies by using the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form. A company may have no branches, or it may consist of multiple branches, with each being a separate office or point of sale.{br}

To configure the company without branches, you have to specify the company&rsquo;s identifier, name, address, units of measure, and ensure that the ''Without Branches'' type is selected on the [HelpRoot_FormReference\CS_10_15_00|Companies] form. You have to specify the company's identifier, name, address, and units of measure. You also specify the base currency of the company, which you cannot change after you save the newly created company for the first time. If you create multiple companies in the tenant, this base currency will be used automatically for all companies and cannot be changed.{br}

After the company has been configured, the ''Without Branches'' company type can still be changed to ''With Branches Not Requiring Balancing'' and ''With Branches Requiring Balancing'' at any time. (If the ''Multi-Branch Support'' feature is selected on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form.)]]></column>
			<column name="PlainText"><![CDATA[Company Without Branches: General Information When you initially implement  Acumatica ERP, you perform the company configuration that makes it possible for system implementation         to proceed. This configuration includes enabling the default set of features and configuring         the company in the system. You can proceed to further  Acumatica ERP implementation, which includes specifying the basic settings related to the general         ledger and to cash management, accounts payable, and accounts receivable. When you configure a company in  Acumatica ERP, it can be defined as being without branches, as consisting of branches that require         balancing entries (if transactions involve multiple branches), or as having branches that do         not require balancing entries. The topics of this chapter describe the configuration of a         company without branches. Learning Objectives In this chapter, you will learn how to do the following: Enable the default set of features before you start the configuration of a company Perform the configuration of a company without branches Applicable Scenarios You configure a company without branches if the company has only one business location. You         perform this company configuration as a first phase of the implementation of  Acumatica ERP, before the entities needed for business processes are created. You can also add a new         company without branches to the existing companies in an existing tenant at any time. Workflow of the Configuration of a Company Without Branches To implement the basic configuration of a company without branches in  Acumatica ERP, you perform the following general steps: On the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form, you enable the           default set of features. For details, see  Company Without Branches: To Configure a Company Without Branches. In a             production environment, after the features are enabled, you have to activate the  Acumatica ERP license by using the   ([~/?ScreenId=SM201510|SM201510]) Activate License (SM201510) form.             Each particular feature may be subject to additional licensing; please consult the  Acumatica ERP sales policy for details. On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, you create the           company entity in the system; you also create its actual ledger. For details, see  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. On the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form, you add the           accounts that are necessary for performing the financial operations of the company, as           described in  General Ledger: To Create a Chart of Accounts. On the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form, you specify the           settings for processing transactions in the general ledger. For details, see  General Ledger: To Specify General Ledger Preferences. On the   ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form, you set up the           first financial year when the company starts processing its operations in  Acumatica ERP. You then generate periods on the   ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar           (GL201000) form and open them on the   ([~/?ScreenId=GL503000|GL503000]) Manage Financial Periods           (GL503000) form. For more information, see  General Ledger: To Define a Financial Year. On the   ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form, you specify the           settings to be used in the system for processing cash transactions. For details, see  Cash Management: To Specify Cash Management Preferences. On the   ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form, you add the           necessary entry types for processing cash payments. For details, see  Cash Management: To Create an Entry Type. On the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form, you define the cash           accounts to be used to record cash entries and funds transfers. For more information, see              Cash Management: To Create Cash Accounts. On the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form, you define the           payment methods that the company uses to pay its vendors, as well as the payment methods           that are used by customers to pay the company. For more information, see  Cash Management: To Modify a Payment Method. On the   ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form, you create the sets           of credit terms that are commonly used by vendors in their relations with the company and           by the company in its relations with customers. These will be assigned to particular           vendors and customers and specified in their bills and invoices, respectively. For more           information, see  Credit Terms: To Define Credit Terms. On the   ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form, you create the           default vendor class, which will provide default values for vendor accounts of the class           and for other vendor classes you create later. For details, see  Accounts Payable: To Create a Vendor Class. On the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form, you specify the           settings to be used in accounts payable. See  Accounts Payable: To Specify Accounts Payable Preferences for more           information. On the   ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form, you define the           necessary statement cycles to track customers' outstanding balances, as described in  Accounts Receivable: To Create a Statement Cycle. These cycles will           be used later, when you are sending electronic or printed statements to the           customers. On the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form, you create the           default customer class, which will provide default values for customer accounts and for           other customer classes you create later. For details, see  Accounts Receivable: To Create a Customer Class. On the   ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form, you specify the           settings to be used in accounts receivable. See  Accounts Receivable: To Specify Accounts Receivable Preferences for more           information. Company Settings In  Acumatica ERP, you can create new companies or maintain existing companies by using the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form. A company may have no branches, or         it may consist of multiple branches, with each being a separate office or point of sale. To configure the company without branches, you have to specify the company's identifier,         name, address, units of measure, and ensure that the  Without Branches  type is         selected on the   ([~/?ScreenId=CS101500|CS101500]) Companies form. You have to specify the         company's identifier, name, address, and units of measure. You also specify the base         currency of the company, which you cannot change after you save the newly created company         for the first time. If you create multiple companies in the tenant, this base currency will         be used automatically for all companies and cannot be changed. After the company has been configured, the  Without Branches  company type can still         be changed to  With Branches Not Requiring Balancing  and  With Branches Requiring           Balancing  at any time. (If the  Multi-Branch Support  feature is selected on the             ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form.) ]]></column>
		</row>
		<row PageID="6f192ff4-17ae-47d4-a4ba-9e0b688873e6" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="39e2def3-4ef4-42b4-18a4-447b86572e66" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can use the tables in this topic to quickly check whether the basic company configuration steps are being performed in Acumatica ERP. The following tables cover both mandatory configuration steps and recommended configuration steps.[anchor|#_1f63882e-3a95-4866-b1c2-d3b16644d855]
===Mandatory Configuration===To ensure that the basic configuration of a company has been implemented properly, make sure that the necessary features have been enabled and the needed entities have been created, as listed in the following table. 
{| class="checklist" | width="100%" 
|- 
!width="33%" ! Form
!width="33%" ! Things to Check
!width="33%" ! Notes
|- 
| [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form
| Make sure that the ''Standard Financials'' group of features has been enabled.
| 
|- 
| [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form
| Make sure that the necessary company has been created and that the necessary ledger has been created and assigned to it.
| 
|- 
| [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form
| Make sure that the necessary accounts for performing financial operations have been added.
| 
|- 
| [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form
| Make sure that all necessary settings to use the general ledger functionality have been specified, including the YTD Net Income and Retained Earnings accounts.
| 
|- 
| [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form
| Make sure that the first financial year in which the company will operate has been added and the periods have been generated.
| 
|- 
| [HelpRoot_FormReference\GL_20_11_00|Company Financial Calendar] ([~/?ScreenId=GL201100|GL201100]) form
| Make sure that the periods in which the company will operate are open.
| 
|- 
| [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form
| Make sure that all necessary settings to use the cash management functionality have been specified, including the Cash-in-Transit account.
| 
|- 
| [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form
| Make sure that the necessary cash accounts to record cash entries and funds transfers have been created, and that the necessary entry types have been assigned to them.
| 
|- 
| [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form
| Make sure that the payment methods to be used have been created and defined to use the proper accounts.
| 
|- 
| [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form
| Make sure that the necessary entry types for processing cash payments have been created and assigned to the related cash accounts.
| 
|- 
| [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form
| Make sure that the needed credit terms—those that are commonly used by vendors in their relations with your company, and those that are used by your company in its relations with customers—have been created.
| 
|- 
| [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form
| Make sure that the default vendor class, which provides the default values for vendor accounts and for other vendor classes, has been created.
| 
|- 
| [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form
| Make sure that all necessary settings to use the accounts payable functionality have been specified.
| 
|- 
| [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form
| Make sure that the necessary statement cycles, which will later be used to track customers&rsquo; outstanding balances and send electronic or printed statements to the customers, have been created.
| 
|- 
| [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form
| Make sure that the default customer class, which provides the default values for customer accounts and for other customer classes, has been created.
| 
|- 
| [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form
| Make sure that all necessary settings to use the accounts receivable functionality have been specified.
| 
|}[anchor|#_1a310629-1570-4e2c-9bb8-ce078684a34f]
===Recommended Configuration===The settings listed in the following table can be specified to simplify the process of creating entities in the system.
{| class="checklist" | width="100%" 
|- 
!width="33%" ! Form
!width="33%" ! Things to Check
!width="33%" ! Notes
|- 
| [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form
| Make sure that the following settings have been specified:[anchor|#_c65d535d-0e4e-41d7-a2bb-a65a8b098262]
*The '''Automatically Post on Release''' check box is selected.
*The '''Hold Batches on Entry''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form
| Make sure that the following settings have been specified:[anchor|#_22e6de68-4692-4d88-a59a-ed5835996705]
*The '''Automatically Post to GL on Release''' check box is selected.
*The '''Hold Transactions on Entry''' check box is cleared.
*The '''Require Document Ref. Nbr. on Entry''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form
| Make sure that the following settings have been specified:[anchor|#_d4180232-fdaa-4e62-b7bd-d9fe98addd77]
*The '''Automatically Post on Release''' check box is selected.
*A vendor class, which will be used to provide default values for vendor accounts, is selected in the '''Default Vendor Class ID''' box.
*The '''Hold Documents on Entry''' check box is cleared.
*The '''Require Approval of Bills Prior to Payment''' check box is cleared.
*The '''Validate Document Totals on Entry''' check box is cleared.
*The '''Require Vendor Reference''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form
| Make sure that the following settings have been specified:[anchor|#_61bd6fcd-1797-4a73-9ab4-270405d73991]
*The '''Automatically Post on Release''' check box is selected.
*A customer class, which will be used to provide default values for customer accounts, has been selected in the '''Default Customer Class ID''' box.
*The '''Hold Documents on Entry''' check box is cleared.
*The '''Validate Document Totals on Entry''' check box is cleared.
*The '''Require Payment Reference on Entry''' check box is cleared.

| 
|}]]></column>
			<column name="PlainText"><![CDATA[Company Without Branches: Implementation Checklist You can use the tables in this topic to quickly check whether the basic company configuration     steps are being performed in  Acumatica ERP.     The following tables cover both mandatory configuration steps and recommended configuration     steps. Mandatory Configuration To ensure that the basic configuration of a company has been implemented properly, make      sure that the necessary features have been enabled and the needed entities have been created,      as listed in the following table.  Form Things to Check Notes  ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form Make sure that the  Standard Financials  group of features has been         enabled.  ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form Make sure that the necessary company has been created and that the necessary ledger         has been created and assigned to it.  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form Make sure that the necessary accounts for performing financial operations have been         added.  ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form Make sure that all necessary settings to use the general ledger functionality have         been specified, including the YTD Net Income and Retained Earnings accounts.  ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form Make sure that the first financial year in which the company will operate has been         added and the periods have been generated.  ([~/?ScreenId=GL201100|GL201100]) Company Financial Calendar (GL201100) form Make sure that the periods in which the company will operate are open.  ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form Make sure that all necessary settings to use the cash management functionality have         been specified, including the Cash-in-Transit account.  ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form Make sure that the necessary cash accounts to record cash entries and funds transfers         have been created, and that the necessary entry types have been assigned to them.  ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form Make sure that the payment methods to be used have been created and defined to use the         proper accounts.  ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form Make sure that the necessary entry types for processing cash payments have been         created and assigned to the related cash accounts.  ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form Make sure that the needed credit terms—those that are commonly used by vendors         in their relations with your company, and those that are used by your company in its         relations with customers—have been created.  ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form Make sure that the default vendor class, which provides the default values for vendor         accounts and for other vendor classes, has been created.  ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form Make sure that all necessary settings to use the accounts payable functionality have         been specified.  ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form Make sure that the necessary statement cycles, which will later be used to track         customers' outstanding balances and send electronic or printed statements to the customers,         have been created.  ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form Make sure that the default customer class, which provides the default values for         customer accounts and for other customer classes, has been created.  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form Make sure that all necessary settings to use the accounts receivable functionality         have been specified. Recommended Configuration The settings listed in the following table can be specified to simplify the process of      creating entities in the system. Form Things to Check Notes  ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. The  Hold Batches on Entry  check box is cleared.  ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form Make sure that the following settings have been specified: The  Automatically Post to GL on Release  check box is           selected. The  Hold Transactions on Entry  check box is cleared. The  Require Document Ref. Nbr. on Entry  check box is           cleared.  ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. A vendor class, which will be used to provide default values for vendor accounts, is           selected in the  Default Vendor Class ID  box. The  Hold Documents on Entry  check box is cleared. The  Require Approval of Bills Prior to Payment  check box is           cleared. The  Validate Document Totals on Entry  check box is cleared. The  Require Vendor Reference  check box is cleared.  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. A customer class, which will be used to provide default values for customer accounts,           has been selected in the  Default Customer Class ID  box. The  Hold Documents on Entry  check box is cleared. The  Validate Document Totals on Entry  check box is cleared. The  Require Payment Reference on Entry  check box is           cleared. ]]></column>
		</row>
		<row PageID="082a5d06-0e65-44c0-8049-4df32ebf59d3" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="33612579-6c29-ece4-4aa7-f33b84d4f863" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to enable the minimum set of features and define settings for a company without branches.
==Story==
Suppose that as an administrator, you are going to start configuring a new company without branches in Acumatica ERP. The company is going to use the default features. You need to enable these features and then you need to configure a company entity in Acumatica ERP for the SweetLife Fruits & Jams company, which at this time has only one office in New York.
==System Preparation==
Before you start configuring a company without branches, sign in to a tenant with the out-of-the-box company as a system administrator with the ''admin'' login and password.
==Step 1: Enabling the Minimum Set of Features==
To enable the minimum set of features, do the following:[anchor|#_71bbaae4-1bfd-4050-8e4e-e69f1d57d6c1]
#Open the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form.
#On the form toolbar, click '''Enable''' to enable the default set of features, for which the corresponding check boxes have been selected on the form. This set of features consists of ''Finance'', ''Standard Financials'', ''Centralized Period Management'', ''Monitoring & Automation'', ''Scheduled Processing'', ''Workflow Automation'', ''GDPR Compliance Tools'', ''Third-Party Integrations'', and ''Advanced Authentication''.

In a production environment, after the features are enabled and before you proceed with implementation, you have to activate the Acumatica ERP license by using the [HelpRoot_FormReference\SM_20_15_10|Activate License] ([~/?ScreenId=SM201510|SM201510]) form. In this practice activity, you are using Acumatica ERP under the trial license, which doesn&rsquo;t require activation and provides all available features. 
==Step 2: Defining a Company Without Branches==
To configure the company without branches for SweetLife, do the following:[anchor|#_9c9dffc6-2106-4416-be05-88853fc19829]
#Open the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form.
#In the Summary area, specify the following settings: 
#*'''Company ID''': <tt>SWEETLIFE</tt>
#*'''Company Name''': <tt>SweetLife Fruits & Jams</tt>
#:In the '''Company Type''' box, notice that ''Without Branches'' is selected; you will leave this default setting.
#In the '''Main Address''' section of the '''Company Details''' tab, specify the following address settings:
#*'''City''': <tt>New York</tt>
#*'''Country''': ''US - United States of America''
#* '''State''': ''NY - New York''
#In the '''Base Currency Settings (Shared)''' section, specify ''USD'' in the '''Base Currency ID''' box. 
#:The system fills in the '''Description''', '''Currency Symbol''', and '''Decimal Precision''' boxes automatically, based on the currency you have selected.((({S:Warn}The settings you specify in this area for the first company in the tenant will be applied to all companies in the tenant. After you specify the base currency and save your changes, the base currency cannot be overridden.
)))
#In the '''Miscellaneous Settings (Shared)''' section, enter <tt>2</tt> in the '''Price/Cost Decimal Places''' box.
#:((({S:Warn}If you later add additional companies to the tenant, the settings you specify in this area for the first company in the tenant will be applied to all companies in the tenant.
)))
#On the form toolbar, click '''Save'''.

On the same form, you can now create an actual ledger for the company you have created. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].]]></column>
			<column name="PlainText"><![CDATA[Company Without Branches: To Configure a Company Without Branches In this activity, you will learn how to enable the minimum set of features and define                 settings for a company without branches. Story Suppose that as an administrator, you are going to start configuring a new company                 without branches in  Acumatica ERP. The company is going to use the default features. You need to enable these                 features and then you need to configure a company entity in  Acumatica ERP for the SweetLife Fruits & Jams company, which at this time has only one                 office in New York. System Preparation Before you start configuring a company without branches, sign in to a tenant with the                 out-of-the-box company as a system administrator with the  admin  login and                 password. Step 1: Enabling the Minimum Set of Features To enable the minimum set of features, do the following: Open the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form. On the form toolbar, click  Enable  to enable the default                     set of features, for which the corresponding check boxes have been selected on                     the form. This set of features consists of  Finance ,  Standard                         Financials ,  Centralized Period Management ,  Monitoring &                         Automation ,  Scheduled Processing ,  Workflow Automation ,                          GDPR Compliance Tools ,  Third-Party Integrations , and                          Advanced Authentication . In a production environment, after the features are enabled and before you proceed                 with implementation, you have to activate the  Acumatica ERP license by using the   ([~/?ScreenId=SM201510|SM201510]) Activate License (SM201510)                 form.                  In                 this practice activity, you are using  Acumatica ERP under the trial license, which doesn't require activation and provides all                 available features.  Step 2: Defining a Company Without Branches To configure the company without branches for SweetLife, do the following: Open the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form. In the Summary area, specify the following settings:  Company ID :  SWEETLIFE Company Name :  SweetLife Fruits &                                 Jams In the  Company Type  box, notice that  Without                             Branches  is selected; you will leave this default setting. In the  Main Address  section of the  Company                         Details  tab, specify the following address settings: City :  New York Country :  US - United States of                             America State :  NY - New York In the  Base Currency Settings (Shared)  section, specify                          USD  in the  Base Currency ID  box.  The system                         fills in the  Description ,  Currency                             Symbol , and  Decimal Precision  boxes                         automatically, based on the currency you have selected. The settings                             you specify in this area for the first company in the tenant will be                             applied to all companies in the tenant. After you specify the base                             currency and save your changes, the base currency cannot be                             overridden. In the  Miscellaneous Settings (Shared)  section, enter                          2  in the  Price/Cost Decimal                         Places  box. If you later add additional companies to the                         tenant, the settings you specify in this area for the first company in the                         tenant will be applied to all companies in the tenant. On the form toolbar, click  Save . On the same form, you can now create an actual ledger for the company you have                 created. For details, see  General Ledger: To Create an Actual Ledger. ]]></column>
		</row>
		<row PageID="261cf441-8d32-42a5-868a-28646a97c9d6" Language="en-US" PageRevisionID="1" Content="This chapter describes the configuration of a company that has multiple branches in which reports are prepared for the whole company. This configuration includes the minimum set of features that has to be enabled for this configuration. The chapter also contains an implementation checklist that users can refer to when they are preparing for implementation and configuring the basic Acumatica ERP functionality for the company. " PlainText="Configuring a Company with Branches that Do Not Require Balancing This chapter describes the configuration of a company that has multiple branches in which    reports are prepared for the whole company. This configuration includes the minimum set of    features that has to be enabled for this configuration. The chapter also contains an    implementation checklist that users can refer to when they are preparing for implementation and    configuring the basic  Acumatica ERP    functionality for the company.  " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ba2d33f2-ec3f-3130-96ce-f10f378567c0" RecordSourceID="22377" />
		<row PageID="a718a27b-3683-4d86-a26e-4b8fb7981f1c" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8da98ff0-477b-2949-6be6-ed2d9b6a53bd" RecordSourceID="22377">
			<column name="Content"><![CDATA[
When you initially implement Acumatica ERP, you perform the company configuration that makes it possible for system implementation to proceed. This configuration includes enabling the necessary set of features and configuring the company in the system. You can then proceed to further Acumatica ERP implementation, which includes specifying the basic settings related to the general ledger and to cash management, accounts payable, and accounts receivable.{br}

When you configure a company in Acumatica ERP, it can be defined as being without branches, as consisting of branches that require balancing entries (if transactions involve multiple branches), or as having branches that do not require balancing entries. The topics of this chapter describe the configuration of a company with branches that do not require balancing.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to do the following:[anchor|#_3ca7d9f2-d74e-4f67-abba-918e5a9d8078]
*Enable the minimum set of features before starting configuration of a company
*Perform configuration of a company with branches that do not require balancing 

==Applicable Scenarios==
You configure a company with branches that do not require balancing if the company has multiple offices, but balance sheets are provided for the whole company (not separately for each branch). The offices all use the same currency, ledger, units of measure, chart of accounts, and financial year structure.{br}

You perform company configuration as a first phase of the implementation of Acumatica ERP, before the creation of the entities needed for business processes. You can also add a new company or a new branch to the existing companies in the tenant at any time.
==Workflow of the Configuration of a Company With Branches that Do Not Require Balancing==
To implement the basic configuration of a company with branches not requiring balancing in Acumatica ERP, you perform the following general steps:[anchor|#_e0ff54a2-6ece-47ee-afb6-b5b1baf1fea9]
#On the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, you enable the default set of features and the ''Multi-Branch Support'' feature. For details, see [HelpRoot_Implement\config_Company_with_Branches_No_Balacing_Implem_Activity|Company with Branches that Do Not Require Balancing: Implementation Activity].
#:With the ''Multi-Branch Support'' feature enabled, users can create multiple companies without branches, a company with multiple branches, or multiple companies with branches within one tenant. If this feature is disabled, the users can create only one company without branches.
#:((({S:Warn}In a production environment, after the features are enabled, you have to activate the Acumatica ERP license by using the [HelpRoot_FormReference\SM_20_15_10|Activate License] ([~/?ScreenId=SM201510|SM201510]) form. Each particular feature may be subject to additional licensing; please consult the Acumatica ERP sales policy for details.
)))
#On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, you create the company entity in the system, and specify a type. You then add branches on the [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form. You also create its actual ledger. For details, see [HelpRoot_Implement\config_Company_with_Branches_No_Balacing_Implem_Activity|Company with Branches that Do Not Require Balancing: Implementation Activity].
#On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, you also create the company’s actual ledger. All branches of the company will use this single ledger for posting. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#:((({S:Warn}Regardless of the company type, you can configure and use only one actual ledger for a company, which all branches will use.
)))
#On the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form, you add the accounts that are necessary for performing the financial operations of the company, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_COA|General Ledger: To Create a Chart of Accounts].
#On the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form, you specify the settings for processing transactions in the general ledger. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_GL_Preferences|General Ledger: To Specify General Ledger Preferences].
#On the [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form, you set up the first financial year when the company starts processing its operations in Acumatica ERP. You then generate periods on the [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000]) form and open them on the [HelpRoot_FormReference\GL_50_30_00|Manage Financial Periods] ([~/?ScreenId=GL503000|GL503000]) form. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Fin_Years|General Ledger: To Define a Financial Year].
#On the [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form, you specify the settings to be used in the system for processing cash transactions. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_CA_Preferences|Cash Management: To Specify Cash Management Preferences].
#On the [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form, you add the necessary entry types for processing cash payments. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Entry_Types|Cash Management: To Create an Entry Type].
#On the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form, you define the cash accounts to be used to record cash entries and funds transfers. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Cash_Accounts|Cash Management: To Create Cash Accounts].
#On the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, you define the payment methods that the company uses to pay its vendors, as well as the payment methods that are used by customers to pay the company. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Payment_Methods|Cash Management: To Modify a Payment Method].
#On the [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form, you create the sets of credit terms that are commonly used by vendors in their relations with the company and by the company in its relations with customers. These will be assigned to particular vendors and customers and specified in their bills and invoices, respectively. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].
#On the [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form, you create the default vendor class, which will provide default values for vendor accounts of the class and for other vendor classes you create later. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Vendor_Classes|Accounts Payable: To Create a Vendor Class].
#On the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form, you specify the settings to be used in accounts payable. See [HelpRoot_Implement\config_Basic_Company_Implem_Activity_AP_Preferences|Accounts Payable: To Specify Accounts Payable Preferences] for more information.
#On the [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form, you define the necessary statement cycles to track customers' outstanding balances, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Statement_Cycles|Accounts Receivable: To Create a Statement Cycle]. These cycles will be used later, when you are sending electronic or printed statements to the customers.
#On the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form, you create the default customer class, which will provide default values for customer accounts and for other customer classes you create later. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Customer_Classes|Accounts Receivable: To Create a Customer Class].
#On the [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form, you specify the settings to be used in accounts receivable. See [HelpRoot_Implement\config_Basic_Company_Implem_Activity_AR_Preferences|Accounts Receivable: To Specify Accounts Receivable Preferences] for more information.

==Company Settings==
In Acumatica ERP, you create new companies or maintain existing companies by using the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form. On this form, to configure the company with branches that do not require balancing, you have to specify the company's identifier, name, address, and units of measure, and you ensure that the ''With Branches Not Requiring Balancing'' type is selected. You also specify the base currency of the company, which you cannot change after you save the newly created company for the first time. If you create multiple companies in the tenant, this base currency will be used automatically for all companies and cannot be changed. (If the company is not the first company you are creating in the tenant, the base currency is already filled in.){br}

After you have created the company, you add branches to it on the [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form. You can navigate directly to this form or open it by clicking '''Add Branch''' on the [HelpRoot_FormReference\CS_10_15_00|Companies] form. On the [HelpRoot_FormReference\CS_10_20_00|Branches] form, for each branch you want to add, you specify its general information, including its identifier, name, address, default location, and employees.((({S:Warn}After the company has been configured, the ''With Branches Not Requiring Balancing'' company type can still be changed to ''Without Branches'' if the company has only one branch or no branches at all. The type can also be changed to ''With Branches Requiring Balancing'' if no transactions have been posted by company branches or the company has only one branch.
)))]]></column>
			<column name="PlainText"><![CDATA[Company with Branches that Do Not Require Balancing: General Information When you initially implement  Acumatica ERP, you perform the company configuration that makes it possible for system implementation         to proceed. This configuration includes enabling the necessary set of features and         configuring the company in the system. You can then proceed to further  Acumatica ERP implementation, which includes specifying the basic settings related to the general         ledger and to cash management, accounts payable, and accounts receivable. When you configure a company in  Acumatica ERP, it can be defined as being without branches, as consisting of branches that require         balancing entries (if transactions involve multiple branches), or as having branches that do         not require balancing entries. The topics of this chapter describe the configuration of a         company with branches that do not require balancing. Learning Objectives In this chapter, you will learn how to do the following: Enable the minimum set of features before starting configuration of a company Perform configuration of a company with branches that do not require balancing  Applicable Scenarios You configure a company with branches that do not require balancing if the company has         multiple offices, but balance sheets are provided for the whole company (not separately for         each branch). The offices all use the same currency, ledger, units of measure, chart of         accounts, and financial year structure. You perform company configuration as a first phase of the implementation of  Acumatica ERP, before the creation of the entities needed for business processes. You can also add a         new company or a new branch to the existing companies in the tenant at any time. Workflow of the Configuration of a Company With Branches that Do Not Require         Balancing To implement the basic configuration of a company with branches not requiring balancing in            Acumatica ERP, you perform the following general steps: On the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form, you enable the           default set of features and the  Multi-Branch Support  feature. For details, see              Company with Branches that Do Not Require Balancing: Implementation Activity. With the                Multi-Branch Support  feature enabled, users can create multiple companies             without branches, a company with multiple branches, or multiple companies with branches             within one tenant. If this feature is disabled, the users can create only one company             without branches. In a production environment, after the features are enabled,             you have to activate the  Acumatica ERP license by using the   ([~/?ScreenId=SM201510|SM201510]) Activate License (SM201510) form.             Each particular feature may be subject to additional licensing; please consult the  Acumatica ERP sales policy for details. On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, you create the           company entity in the system, and specify a type. You then add branches on the   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000)           form. You also create its actual ledger. For details, see  Company with Branches that Do Not Require Balancing: Implementation Activity. On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, you also create the           company’s actual ledger. All branches of the company will use this single ledger for           posting. For details, see  General Ledger: To Create an Actual Ledger. Regardless of the             company type, you can configure and use only one actual ledger for a company, which all             branches will use. On the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form, you add the           accounts that are necessary for performing the financial operations of the company, as           described in  General Ledger: To Create a Chart of Accounts. On the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form, you specify the           settings for processing transactions in the general ledger. For details, see  General Ledger: To Specify General Ledger Preferences. On the   ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form, you set up the           first financial year when the company starts processing its operations in  Acumatica ERP. You then generate periods on the   ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar           (GL201000) form and open them on the   ([~/?ScreenId=GL503000|GL503000]) Manage Financial Periods           (GL503000) form. For more information, see  General Ledger: To Define a Financial Year. On the   ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form, you specify the           settings to be used in the system for processing cash transactions. For details, see  Cash Management: To Specify Cash Management Preferences. On the   ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form, you add the           necessary entry types for processing cash payments. For details, see  Cash Management: To Create an Entry Type. On the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form, you define the cash           accounts to be used to record cash entries and funds transfers. For more information, see              Cash Management: To Create Cash Accounts. On the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form, you define the           payment methods that the company uses to pay its vendors, as well as the payment methods           that are used by customers to pay the company. For more information, see  Cash Management: To Modify a Payment Method. On the   ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form, you create the sets           of credit terms that are commonly used by vendors in their relations with the company and           by the company in its relations with customers. These will be assigned to particular           vendors and customers and specified in their bills and invoices, respectively. For more           information, see  Credit Terms: To Define Credit Terms. On the   ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form, you create the           default vendor class, which will provide default values for vendor accounts of the class           and for other vendor classes you create later. For details, see  Accounts Payable: To Create a Vendor Class. On the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form, you specify the           settings to be used in accounts payable. See  Accounts Payable: To Specify Accounts Payable Preferences for more           information. On the   ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form, you define the           necessary statement cycles to track customers' outstanding balances, as described in  Accounts Receivable: To Create a Statement Cycle. These cycles will           be used later, when you are sending electronic or printed statements to the           customers. On the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form, you create the           default customer class, which will provide default values for customer accounts and for           other customer classes you create later. For details, see  Accounts Receivable: To Create a Customer Class. On the   ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form, you specify the           settings to be used in accounts receivable. See  Accounts Receivable: To Specify Accounts Receivable Preferences for more           information. Company Settings In  Acumatica ERP, you create new companies or maintain existing companies by using the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form. On this form, to configure the         company with branches that do not require balancing, you have to specify the company's         identifier, name, address, and units of measure, and you ensure that the  With Branches           Not Requiring Balancing  type is selected. You also specify the base currency of the         company, which you cannot change after you save the newly created company for the first         time. If you create multiple companies in the tenant, this base currency will be used         automatically for all companies and cannot be changed. (If the company is not the first         company you are creating in the tenant, the base currency is already filled in.) After you have created the company, you add branches to it on the   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000)         form. You can navigate directly to this form or open it by clicking  Add           Branch  on the   ([~/?ScreenId=CS101500|CS101500]) Companies form. On the   ([~/?ScreenId=CS102000|CS102000]) Branches form, for         each branch you want to add, you specify its general information, including its identifier,         name, address, default location, and employees. After the company has been configured, the  With Branches Not Requiring Balancing          company type can still be changed to  Without Branches  if the company has only one         branch or no branches at all. The type can also be changed to  With Branches Requiring           Balancing  if no transactions have been posted by company branches or the company has         only one branch. ]]></column>
		</row>
		<row PageID="6d2615bd-ca38-4d51-9123-af50c3309978" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a75e7261-42eb-5deb-1ebe-83c2df32b5c9" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can use the tables in this topic to quickly check whether the configuration steps for a company with branches that do not require balancing are being performed in Acumatica ERP. The following tables cover both the mandatory configuration steps and the recommended configuration steps.[anchor|#_1f63882e-3a95-4866-b1c2-d3b16644d855]
===Mandatory Configuration===To ensure that the basic configuration of a company has been implemented properly, make sure that the necessary features have been enabled and the needed entities have been created, as listed in the following table. 
{| class="checklist" | width="100%" 
|- 
!width="33%" ! Form
!width="33%" ! Things to Check
!width="33%" ! Notes
|- 
| [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form
| Make sure that the ''Standard Financials'' group of features and the ''Multi-Branch Support'' feature have been enabled.
| 
|- 
| [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form
| Make sure that the necessary company has been created with the ''With Branches Not Requiring Balancing'' type and that the necessary ledger has been created and assigned to it.
| 
|- 
| [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form
| Make sure that the branches of the company have been created.
| 
|- 
| [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form
| Make sure that the necessary accounts for performing financial operations have been added.
| 
|- 
| [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form
| Make sure that all necessary settings to use the general ledger functionality have been specified, including the YTD Net Income and Retained Earnings accounts.
| 
|- 
| [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form
| Make sure that the first financial year in which the company will operate has been added and the periods have been generated.
| 
|- 
| [HelpRoot_FormReference\GL_20_11_00|Company Financial Calendar] ([~/?ScreenId=GL201100|GL201100]) form
| Make sure that the periods in which the company will operate are open.
| 
|- 
| [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form
| Make sure that all necessary settings to use the cash management functionality have been specified, including the Cash-in-Transit account.
| 
|- 
| [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form
| Make sure that the necessary cash accounts to record cash entries and funds transfers have been created, and that the necessary entry types have been assigned to them.
| 
|- 
| [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form
| Make sure that the payment methods to be used have been created and have been defined to use the proper accounts.
| 
|- 
| [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form
| Make sure that the necessary entry types for processing cash payments have been created and assigned to the related cash accounts.
| 
|- 
| [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form
| Make sure that the needed credit terms—those that are commonly used by vendors in their relations with your company, and those that are used by your company in its relations with customers—have been created.
| 
|- 
| [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form
| Make sure that the default vendor class, which provides the default values for vendor accounts and for other vendor classes, has been created.
| 
|- 
| [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form
| Make sure that all necessary settings to use the accounts payable functionality have been specified.
| 
|- 
| [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form
| Make sure that the necessary statement cycles, which will later be used to track customers&rsquo; outstanding balances and send electronic or printed statements to the customers, have been created.
| 
|- 
| [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form
| Make sure that the default customer class, which provides the default values for customer accounts and for other customer classes, has been created.
| 
|- 
| [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form
| Make sure that all necessary settings to use the accounts receivable functionality have been specified.
| 
|}[anchor|#_1a310629-1570-4e2c-9bb8-ce078684a34f]
===Recommended Configuration===The settings listed in the following table can be specified to simplify the process of creating entities in the system.
{| class="checklist" | width="100%" 
|- 
!width="33%" ! Form
!width="33%" ! Things to Check
!width="33%" ! Notes
|- 
| [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form
| Make sure that the following settings have been specified:[anchor|#_c65d535d-0e4e-41d7-a2bb-a65a8b098262]
*The '''Automatically Post on Release''' check box is selected.
*The '''Hold Batches on Entry''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form
| Make sure that the following settings have been specified:[anchor|#_22e6de68-4692-4d88-a59a-ed5835996705]
*The '''Automatically Post to GL on Release''' check box is selected.
*The '''Hold Transactions on Entry''' check box is cleared.
*The '''Require Document Ref. Nbr. on Entry''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form
| Make sure that the following settings have been specified:[anchor|#_d4180232-fdaa-4e62-b7bd-d9fe98addd77]
*The '''Automatically Post on Release''' check box is selected.
*A vendor class, which will be used to provide default values for vendor accounts (and for other vendor classes), is selected in the '''Default Vendor Class ID''' box.
*The '''Hold Documents on Entry''' check box is cleared.
*The '''Require Approval of Bills Prior to Payment''' check box is cleared.
*The '''Validate Document Totals on Entry''' check box is cleared.
*The '''Require Vendor Reference''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form
| Make sure that the following settings have been specified:[anchor|#_61bd6fcd-1797-4a73-9ab4-270405d73991]
*The '''Automatically Post on Release''' check box is selected.
*A customer class, which will be used to provide default values for customer accounts (and for other customer classes), has been selected in the '''Default Customer Class ID''' box.
*The '''Hold Documents on Entry''' check box is cleared.
*The '''Validate Document Totals on Entry''' check box is cleared.
*The '''Require Payment Reference on Entry''' check box is cleared.

| 
|}]]></column>
			<column name="PlainText"><![CDATA[Company with Branches that Do Not Require Balancing: Implementation Checklist You can use the tables in this topic to quickly check whether the configuration steps for a     company with branches that do not require balancing are being performed in  Acumatica ERP.     The following tables cover both the mandatory configuration steps and the recommended     configuration steps. Mandatory Configuration To ensure that the basic configuration of a company has been implemented properly, make      sure that the necessary features have been enabled and the needed entities have been created,      as listed in the following table.  Form Things to Check Notes  ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form Make sure that the  Standard Financials  group of features and the           Multi-Branch Support  feature have been enabled.  ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form Make sure that the necessary company has been created with the  With Branches Not          Requiring Balancing  type and that the necessary ledger has been created and assigned to         it.  ([~/?ScreenId=CS102000|CS102000]) Branches         (CS102000) form Make sure that the branches of the company have been created.  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form Make sure that the necessary accounts for performing financial operations have been         added.  ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form Make sure that all necessary settings to use the general ledger functionality have         been specified, including the YTD Net Income and Retained Earnings accounts.  ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form Make sure that the first financial year in which the company will operate has been         added and the periods have been generated.  ([~/?ScreenId=GL201100|GL201100]) Company Financial Calendar (GL201100) form Make sure that the periods in which the company will operate are open.  ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form Make sure that all necessary settings to use the cash management functionality have         been specified, including the Cash-in-Transit account.  ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form Make sure that the necessary cash accounts to record cash entries and funds transfers         have been created, and that the necessary entry types have been assigned to them.  ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form Make sure that the payment methods to be used have been created and have been defined         to use the proper accounts.  ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form Make sure that the necessary entry types for processing cash payments have been         created and assigned to the related cash accounts.  ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form Make sure that the needed credit terms—those that are commonly used by vendors         in their relations with your company, and those that are used by your company in its         relations with customers—have been created.  ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form Make sure that the default vendor class, which provides the default values for vendor         accounts and for other vendor classes, has been created.  ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form Make sure that all necessary settings to use the accounts payable functionality have         been specified.  ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form Make sure that the necessary statement cycles, which will later be used to track         customers' outstanding balances and send electronic or printed statements to the customers,         have been created.  ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form Make sure that the default customer class, which provides the default values for         customer accounts and for other customer classes, has been created.  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form Make sure that all necessary settings to use the accounts receivable functionality         have been specified. Recommended Configuration The settings listed in the following table can be specified to simplify the process of      creating entities in the system. Form Things to Check Notes  ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. The  Hold Batches on Entry  check box is cleared.  ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form Make sure that the following settings have been specified: The  Automatically Post to GL on Release  check box is           selected. The  Hold Transactions on Entry  check box is cleared. The  Require Document Ref. Nbr. on Entry  check box is           cleared.  ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. A vendor class, which will be used to provide default values for vendor accounts (and           for other vendor classes), is selected in the  Default Vendor Class            ID  box. The  Hold Documents on Entry  check box is cleared. The  Require Approval of Bills Prior to Payment  check box is           cleared. The  Validate Document Totals on Entry  check box is cleared. The  Require Vendor Reference  check box is cleared.  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. A customer class, which will be used to provide default values for customer accounts           (and for other customer classes), has been selected in the  Default Customer            Class ID  box. The  Hold Documents on Entry  check box is cleared. The  Validate Document Totals on Entry  check box is cleared. The  Require Payment Reference on Entry  check box is           cleared. ]]></column>
		</row>
		<row PageID="7d5a0e00-c471-4c28-85dd-75d630569d43" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7fd46435-d9cd-6bc8-2ae1-be8595eea75c" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to enable the necessary set of features, define settings for a company with branches that do not require balancing, and define settings for the branches of the company.
==Story==
Suppose that as an administrator, you are going to start configuring the SweetLife company with the following branches, which do not require balancing: [anchor|#_79dbf69c-b101-40a1-8cb7-a6d81d158ada]
*SweetLife Office and Wholesale Center
*SweetLife Store
*Service and Equipment Sale Center

The company is going to use the default features and the ''Multi-Branch Support'' feature; you need to enable these features. You then need to configure a company entity in Acumatica ERP for the SweetLife Fruits & Jams company with these three offices in New York.
==System Preparation==
Before you start configuring a company with branches that do not require balancing, sign in to a tenant with the out-of-the-box company as a system administrator with the ''admin'' login.
==Step 1: Enabling the Minimum Set of Features==
To enable the minimum set of features, do the following:[anchor|#_71bbaae4-1bfd-4050-8e4e-e69f1d57d6c1]
#Open the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form.
#:Notice that the check boxes are initially selected for the standard features. These features include ''Finance'', ''Standard Financials'', ''Multi-Branch Support'', ''Centralized Period Management'', ''Monitoring & Automation'', ''Scheduled Processing'', ''Workflow Automation'', ''GDPR Compliance Tools'', and ''Third-Party Integrations''..
#Select the '''Multi-Branch Support''' check box.
#:It is now possible to create multiple companies without batches, a company with multiple branches, or multiple companies with or without branches within one tenant.
#On the form toolbar, click '''Enable''' to enable the selected set of features.

In a production environment, after the features are enabled and before you proceed with implementation, you have to activate the Acumatica ERP license by using the [HelpRoot_FormReference\SM_20_15_10|Activate License] ([~/?ScreenId=SM201510|SM201510]) form. In this practice activity, you are using Acumatica ERP under the trial license, which doesn&rsquo;t require activation and provides all available features. 
==Step 2: Defining a Company with Branches that Do Not Require Balancing==
To configure the company with branches that do not require balancing for SweetLife, do the following:[anchor|#_9c9dffc6-2106-4416-be05-88853fc19829]
#Open the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form.
#In the Summary area, specify the following settings: 
#*'''Company ID''': <tt>SWEETLIFE</tt>
#*'''Company Name''': <tt>SweetLife Fruits & Jams</tt>
#*'''Company Type''': ''With Branches Not Requiring Balancing''
#In the '''Main Address''' section of the '''Company Details''' tab, specify the following address settings:
#*'''City''': <tt>New York</tt>
#*'''Country''': ''US - United States of America''
#* '''State''': ''NY - New York''
#In the '''Base Currency Settings (Shared)''' section, specify ''USD'' in the '''Base Currency ID''' box. 
#:The system fills in the '''Description''', '''Currency Symbol''', and '''Decimal Precision''' boxes automatically, based on the currency you have selected.((({S:Warn}The settings you specify in this section for the first company in the tenant will be applied to all companies in the tenant. After you specify the base currency and save your changes, the base currency cannot be changed.
)))
#In the '''Miscellaneous Settings (Shared)''' section, specify the following settings:
#*'''Price/Cost Decimal Places''': <tt>2</tt>
#*'''Weight UOM''': ''KG''
#* '''Volume UOM''': ''LITER''
#:((({S:Warn}If you later add additional companies to the tenant, the settings you specify in this section for the first company in the tenant will be applied to all companies in the tenant.
)))
#On the form toolbar, click '''Save'''.

==Step 3: Defining the Company’s Branches ==
To define SweetLife’s branches, do the following:[anchor|#_d50a6717-fb8e-43de-9028-8f0ebd4782f4]
#While you are still viewing the SweetLife company on the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, on the '''Branches''' tab, click '''Add Branch'''.
#:The [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form opens with the predefined company. First, you will create a branch for the SweetLife head office and wholesale center.
#In the Summary area, specify the following settings:
#*'''Branch ID''': <tt>SWEETWHOLE</tt>
#*'''Branch Name''':<tt> SweetLife Head Office and Wholesale Center</tt>
#*'''Company''': ''SWEETLIFE''
#In the '''Main Address''' section of the '''Branch Details''' tab, specify the following address settings:
#*'''Address Line 1''': <tt>69 Main St, Flushing</tt>
#*'''City''': <tt>New York</tt>
#*'''Country''': ''US (United States)''
#* '''State''': ''NY - New York''
#On the form toolbar, click '''Save'''.
#On the form toolbar, click '''Add New Record''', and in the Summary area, specify the following settings to create a branch for the SweetLife retail store:
#*'''Branch ID''': <tt>SWEETSTORE</tt>
#*'''Branch Name''': <tt>SweetLife Store</tt>
#*'''Company''': ''SWEETLIFE''
#* '''Address Line 1''': <tt>4899 Bell Street, Staten Island</tt>
#*'''City''': <tt>New York</tt>
#*'''Country''': ''US (United States)''
#* '''State''': ''NY - New York''
#On the form toolbar, click '''Save'''.
#On the form toolbar of the [HelpRoot_FormReference\CS_10_20_00|Branches] form, click '''Add New Record''', and in the Summary area, specify the following settings to create a branch for the service and equipment sales center:
#*'''Branch ID''': <tt>SWEETEQUIP</tt>
#*'''Branch Name''': <tt>Service and Equipment Sales Center</tt>
#*'''Company''': ''SWEETLIFE''
#* '''Address Line 1''': <tt>218 Oakwood Ave</tt>
#*'''City''': <tt>New York</tt>
#*'''Country''': ''US (United States)''
#* '''State''': ''NY - New York''
#On the form toolbar, click '''Save & Close'''.

The system returns you to the [HelpRoot_FormReference\CS_10_15_00|Companies] form, on which you can now create an actual ledger for the company and branches you have created. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].]]></column>
			<column name="PlainText"><![CDATA[Company with Branches that Do Not Require Balancing: Implementation Activity In this activity, you will learn how to enable the necessary set of features, define                 settings for a company with branches that do not require balancing, and define                 settings for the branches of the company. Story Suppose that as an administrator, you are going to start configuring the SweetLife                 company with the following branches, which do not require balancing:  SweetLife Office and Wholesale Center SweetLife Store Service and Equipment Sale Center The company is going to use the default features and the  Multi-Branch Support                  feature; you need to enable these features. You then need to configure a company                 entity in  Acumatica ERP for the SweetLife Fruits & Jams company with these three offices in New                 York. System Preparation Before you start configuring a company with branches that do not require balancing,                 sign in to a tenant with the out-of-the-box company as a system administrator with                 the  admin  login. Step 1: Enabling the Minimum Set of Features To enable the minimum set of features, do the following: Open the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form. Notice                         that the check boxes are initially selected for the standard features. These                         features include  Finance ,  Standard Financials ,  Multi-Branch                             Support ,  Centralized Period Management ,  Monitoring &                             Automation ,  Scheduled Processing ,  Workflow Automation ,                              GDPR Compliance Tools , and  Third-Party                     Integrations .. Select the  Multi-Branch Support  check                         box. It                         is now possible to create multiple companies without batches, a company with                         multiple branches, or multiple companies with or without branches within one                         tenant. On the form toolbar, click  Enable  to enable the selected                     set of features. In a production environment, after the features are enabled and before you proceed                 with implementation, you have to activate the  Acumatica ERP license by using the   ([~/?ScreenId=SM201510|SM201510]) Activate License (SM201510)                 form.                  In                 this practice activity, you are using  Acumatica ERP under the trial license, which doesn't require activation and provides all                 available features.  Step 2: Defining a Company with Branches that Do Not Require Balancing To configure the company with branches that do not require balancing for SweetLife,                 do the following: Open the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form. In the Summary area, specify the following settings:  Company ID :  SWEETLIFE Company Name :  SweetLife Fruits &                                 Jams Company Type :  With Branches Not Requiring                                 Balancing In the  Main Address  section of the  Company                         Details  tab, specify the following address settings: City :  New York Country :  US - United States of                             America State :  NY - New York In the  Base Currency Settings (Shared)  section, specify                          USD  in the  Base Currency ID  box.  The system                         fills in the  Description ,  Currency                             Symbol , and  Decimal Precision  boxes                         automatically, based on the currency you have selected. The settings                             you specify in this section for the first company in the tenant will be                             applied to all companies in the tenant. After you specify the base                             currency and save your changes, the base currency cannot be                             changed. In the  Miscellaneous Settings (Shared)  section, specify                     the following settings: Price/Cost Decimal Places :                                  2 Weight UOM :  KG Volume UOM :  LITER If you later add additional companies to the tenant, the settings you                         specify in this section for the first company in the tenant will be applied                         to all companies in the tenant. On the form toolbar, click  Save . Step 3: Defining the Company’s Branches  To define SweetLife’s branches, do the following: While you are still viewing the SweetLife company on the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, on the                          Branches  tab, click  Add                         Branch . The   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) form opens with the predefined company. First, you will create                         a branch for the SweetLife head office and wholesale center. In the Summary area, specify the following settings: Branch ID :  SWEETWHOLE Branch Name :  SweetLife Head Office and                                 Wholesale Center Company :  SWEETLIFE In the  Main Address  section of the  Branch                         Details  tab, specify the following address settings: Address Line 1 :  69 Main St,                                 Flushing City :  New York Country :  US (United States) State :  NY - New York On the form toolbar, click  Save . On the form toolbar, click  Add New Record , and in the                     Summary area, specify the following settings to create a branch for the                     SweetLife retail store: Branch ID :  SWEETSTORE Branch Name :  SweetLife                                 Store Company :  SWEETLIFE Address Line 1 :  4899 Bell Street,                                 Staten Island City :  New York Country :  US (United States) State :  NY - New York On the form toolbar, click  Save . On the form toolbar of the   ([~/?ScreenId=CS102000|CS102000]) Branches                     form, click  Add New Record , and in the Summary area,                     specify the following settings to create a branch for the service and equipment                     sales center: Branch ID :  SWEETEQUIP Branch Name :  Service and Equipment                                 Sales Center Company :  SWEETLIFE Address Line 1 :  218 Oakwood                                 Ave City :  New York Country :  US (United States) State :  NY - New York On the form toolbar, click  Save & Close . The system returns you to the   ([~/?ScreenId=CS101500|CS101500]) Companies form, on                 which you can now create an actual ledger for the company and branches you have                 created. For details, see  General Ledger: To Create an Actual Ledger. ]]></column>
		</row>
		<row PageID="7f1f34b4-ff34-4a25-9e11-807de2038e7a" Language="en-US" PageRevisionID="1" Content="This chapter describes the configuration of a company that has multiple branches in which reports are prepared separately for each branch. This configuration includes the minimum set of features that has to be enabled for this configuration. The chapter also contains an implementation checklist that users can refer to when they are preparing for implementation and configuring the basic Acumatica ERP functionality for the company. " PlainText="Configuring a Company with Branches that Require Balancing This chapter describes the configuration of a company that has multiple branches in which    reports are prepared separately for each branch. This configuration includes the minimum set of    features that has to be enabled for this configuration. The chapter also contains an    implementation checklist that users can refer to when they are preparing for implementation and    configuring the basic  Acumatica ERP    functionality for the company.  " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="3dec26fe-2a1e-9104-4393-c3833c8fce69" RecordSourceID="22377" />
		<row PageID="a618a27b-3683-4d86-a26e-4b8fb7981f1c" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1671cc0d-96b6-8a7c-d619-cc1de052afbf" RecordSourceID="22377">
			<column name="Content"><![CDATA[
When you initially implement Acumatica ERP, you perform the company configuration that makes it possible for system implementation to proceed. This configuration includes enabling the necessary set of features and configuring the company in the system. You can then proceed to further Acumatica ERP implementation, which includes specifying the basic settings related to the general ledger and to cash management, accounts payable, and accounts receivable.{br}

When you configure a company in Acumatica ERP, it can be defined as being without branches, as consisting of branches that require balancing entries (if transactions involve multiple branches), or as having branches that do not require balancing entries. The topics of this chapter describe the configuration of a company with branches that require balancing.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to do the following:[anchor|#_3ca7d9f2-d74e-4f67-abba-918e5a9d8078]
*Enable the minimum set of features before starting configuration of a company
*Perform configuration of a company with branches that require balancing 

==Applicable Scenarios==
You configure a company with branches that require balancing if the company has multiple offices, but reports are provided separately for each branch. The offices all use the same currency, ledger, units of measure, chart of accounts, and financial year structure.{br}

You perform company configuration as a first phase of the implementation of Acumatica ERP, before the creation of the entities needed for business processes. You can also add a new company or a new branch to the existing companies in the tenant at any time.
==Workflow of the Configuration of a Company With Branches that Require Balancing==
To implement the basic configuration of a company with branches requiring balancing in Acumatica ERP, you perform the following general steps:[anchor|#_e0ff54a2-6ece-47ee-afb6-b5b1baf1fea9]
#On the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, you enable the default set of features and the ''Multi-Branch Support'' and ''Inter-Branch Transactions'' features. For details, see [HelpRoot_Implement\config_Company_with_Branches_with_Balacing_Implem_Activity|Company with Branches that Require Balancing: Implementation Activity].
#:With the ''Multi-Branch Support'' feature enabled, users can create multiple companies without branches, a company with multiple branches, or multiple companies with or without branches within one tenant. If this feature is disabled, the users can create only one company without branches.
#:The ''Inter-Branch Transactions'' feature gives the users the ability to configure the automatic generation of interbranch balancing transactions for each document that involves any of the following: multiple companies, branches of different companies, or branches that belong to one company and require balancing. If this feature is disabled, the users can create interbranch transactions between only branches that belong to one company and do not require balancing.
#:((({S:Warn}In a production environment, after the features are enabled, you have to activate the Acumatica ERP license by using the [HelpRoot_FormReference\SM_20_15_10|Activate License] ([~/?ScreenId=SM201510|SM201510]) form. Each particular feature may be subject to additional licensing; please consult the Acumatica ERP sales policy for details.
)))
#On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, you create the company entity in the system, and specify a type. You then add branches on the [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form. You also create its actual ledger. For details, see [HelpRoot_Implement\config_Company_with_Branches_No_Balacing_Implem_Activity|Company with Branches that Do Not Require Balancing: Implementation Activity].
#On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, you also create the company’s actual ledger. All branches of the company will use this single ledger for posting. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#:((({S:Warn}Regardless of the company type, you can configure and use only one actual ledger for a company, which all branches will use.
)))
#On the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form, you add the accounts that are necessary for performing the financial operations of the company, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_COA|General Ledger: To Create a Chart of Accounts].
#On the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form, you specify the settings for processing transactions in the general ledger. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_GL_Preferences|General Ledger: To Specify General Ledger Preferences].
#On the [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form, you set up the first financial year when the company starts processing its operations in Acumatica ERP. You then generate periods on the [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000]) form and open them on the [HelpRoot_FormReference\GL_50_30_00|Manage Financial Periods] ([~/?ScreenId=GL503000|GL503000]) form. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Fin_Years|General Ledger: To Define a Financial Year].
#On the [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form, you specify the settings to be used in the system for processing cash transactions. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_CA_Preferences|Cash Management: To Specify Cash Management Preferences].
#On the [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form, you add the necessary entry types for processing cash payments. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Entry_Types|Cash Management: To Create an Entry Type].
#On the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form, you define the cash accounts to be used to record cash entries and funds transfers. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Cash_Accounts|Cash Management: To Create Cash Accounts].
#On the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, you define the payment methods that the company uses to pay its vendors, as well as the payment methods that are used by customers to pay the company. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Payment_Methods|Cash Management: To Modify a Payment Method].
#On the [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form, you create the sets of credit terms that are commonly used by vendors in their relations with the company and by the company in its relations with customers. These will be assigned to particular vendors and customers and specified in their bills and invoices, respectively. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].
#On the [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form, you create the default vendor class, which will provide default values for vendor accounts of the class and for other vendor classes you create later. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Vendor_Classes|Accounts Payable: To Create a Vendor Class].
#On the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form, you specify the settings to be used in accounts payable. See [HelpRoot_Implement\config_Basic_Company_Implem_Activity_AP_Preferences|Accounts Payable: To Specify Accounts Payable Preferences] for more information.
#On the [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form, you define the necessary statement cycles to track customers' outstanding balances, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Statement_Cycles|Accounts Receivable: To Create a Statement Cycle]. These cycles will be used later, when you are sending electronic or printed statements to the customers.
#On the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form, you create the default customer class, which will provide default values for customer accounts and for other customer classes you create later. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Customer_Classes|Accounts Receivable: To Create a Customer Class].
#On the [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form, you specify the settings to be used in accounts receivable. See [HelpRoot_Implement\config_Basic_Company_Implem_Activity_AR_Preferences|Accounts Receivable: To Specify Accounts Receivable Preferences] for more information.

==Company Settings==
In Acumatica ERP, you create new companies or maintain existing companies by using the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form. On this form, to configure the company with branches that require balancing, you have to specify the company's identifier, name, address, and units of measure, and you ensure that the ''With Branches Requiring Balancing'' type is selected. You also specify the base currency of the company, which you cannot change after you save the newly created company for the first time. If you create multiple companies in the tenant, this base currency will be used automatically for all companies and cannot be changed. (If the company is not the first company you are creating in the tenant, the base currency is already filled in.){br}

After you have created the company, you add branches to it on the [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form. You can navigate directly to this form or open it by clicking '''Add Branch''' on the [HelpRoot_FormReference\CS_10_15_00|Companies] form. On the [HelpRoot_FormReference\CS_10_20_00|Branches] form, for each branch you want to add, you specify its general information, including its identifier, name, address, default location, and employees.((({S:Warn}After the company has been configured, the ''With Branches Requiring Balancing'' company type can still be changed to ''Without Branches'' if the company has only one branch or no branches at all. The type can also be changed to ''With Branches Not Requiring Balancing'' if no transactions have been posted by company branches or the company has only one branch.
)))]]></column>
			<column name="PlainText"><![CDATA[Company with Branches that Require Balancing: General Information When you initially implement  Acumatica ERP, you perform the company configuration that makes it possible for system implementation         to proceed. This configuration includes enabling the necessary set of features and         configuring the company in the system. You can then proceed to further  Acumatica ERP implementation, which includes specifying the basic settings related to the general         ledger and to cash management, accounts payable, and accounts receivable. When you configure a company in  Acumatica ERP, it can be defined as being without branches, as consisting of branches that require         balancing entries (if transactions involve multiple branches), or as having branches that do         not require balancing entries. The topics of this chapter describe the configuration of a         company with branches that require balancing. Learning Objectives In this chapter, you will learn how to do the following: Enable the minimum set of features before starting configuration of a company Perform configuration of a company with branches that require balancing  Applicable Scenarios You configure a company with branches that require balancing if the company has multiple         offices, but reports are provided separately for each branch. The offices all use the same         currency, ledger, units of measure, chart of accounts, and financial year structure. You perform company configuration as a first phase of the implementation of  Acumatica ERP, before the creation of the entities needed for business processes. You can also add a         new company or a new branch to the existing companies in the tenant at any time. Workflow of the Configuration of a Company With Branches that Require Balancing To implement the basic configuration of a company with branches requiring balancing in  Acumatica ERP, you perform the following general steps: On the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form, you enable the           default set of features and the  Multi-Branch Support  and  Inter-Branch             Transactions  features. For details, see  Company with Branches that Require Balancing: Implementation Activity. With the                Multi-Branch Support  feature enabled, users can create multiple companies             without branches, a company with multiple branches, or multiple companies with or             without branches within one tenant. If this feature is disabled, the users can create             only one company without branches. The  Inter-Branch Transactions  feature             gives the users the ability to configure the automatic generation of interbranch             balancing transactions for each document that involves any of the following: multiple             companies, branches of different companies, or branches that belong to one company and             require balancing. If this feature is disabled, the users can create interbranch             transactions between only branches that belong to one company and do not require             balancing. In a production environment, after the features are enabled, you             have to activate the  Acumatica ERP license by using the   ([~/?ScreenId=SM201510|SM201510]) Activate License (SM201510) form.             Each particular feature may be subject to additional licensing; please consult the  Acumatica ERP sales policy for details. On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, you create the           company entity in the system, and specify a type. You then add branches on the   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000)           form. You also create its actual ledger. For details, see  Company with Branches that Do Not Require Balancing: Implementation Activity. On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, you also create the           company’s actual ledger. All branches of the company will use this single ledger for           posting. For details, see  General Ledger: To Create an Actual Ledger. Regardless of the             company type, you can configure and use only one actual ledger for a company, which all             branches will use. On the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form, you add the           accounts that are necessary for performing the financial operations of the company, as           described in  General Ledger: To Create a Chart of Accounts. On the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form, you specify the           settings for processing transactions in the general ledger. For details, see  General Ledger: To Specify General Ledger Preferences. On the   ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form, you set up the           first financial year when the company starts processing its operations in  Acumatica ERP. You then generate periods on the   ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar           (GL201000) form and open them on the   ([~/?ScreenId=GL503000|GL503000]) Manage Financial Periods           (GL503000) form. For more information, see  General Ledger: To Define a Financial Year. On the   ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form, you specify the           settings to be used in the system for processing cash transactions. For details, see  Cash Management: To Specify Cash Management Preferences. On the   ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form, you add the           necessary entry types for processing cash payments. For details, see  Cash Management: To Create an Entry Type. On the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form, you define the cash           accounts to be used to record cash entries and funds transfers. For more information, see              Cash Management: To Create Cash Accounts. On the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form, you define the           payment methods that the company uses to pay its vendors, as well as the payment methods           that are used by customers to pay the company. For more information, see  Cash Management: To Modify a Payment Method. On the   ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form, you create the sets           of credit terms that are commonly used by vendors in their relations with the company and           by the company in its relations with customers. These will be assigned to particular           vendors and customers and specified in their bills and invoices, respectively. For more           information, see  Credit Terms: To Define Credit Terms. On the   ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form, you create the           default vendor class, which will provide default values for vendor accounts of the class           and for other vendor classes you create later. For details, see  Accounts Payable: To Create a Vendor Class. On the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form, you specify the           settings to be used in accounts payable. See  Accounts Payable: To Specify Accounts Payable Preferences for more           information. On the   ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form, you define the           necessary statement cycles to track customers' outstanding balances, as described in  Accounts Receivable: To Create a Statement Cycle. These cycles will           be used later, when you are sending electronic or printed statements to the           customers. On the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form, you create the           default customer class, which will provide default values for customer accounts and for           other customer classes you create later. For details, see  Accounts Receivable: To Create a Customer Class. On the   ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form, you specify the           settings to be used in accounts receivable. See  Accounts Receivable: To Specify Accounts Receivable Preferences for more           information. Company Settings In  Acumatica ERP, you create new companies or maintain existing companies by using the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form. On this form, to configure the         company with branches that require balancing, you have to specify the company's identifier,         name, address, and units of measure, and you ensure that the  With Branches Requiring           Balancing  type is selected. You also specify the base currency of the company, which         you cannot change after you save the newly created company for the first time. If you create         multiple companies in the tenant, this base currency will be used automatically for all         companies and cannot be changed. (If the company is not the first company you are creating         in the tenant, the base currency is already filled in.) After you have created the company, you add branches to it on the   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000)         form. You can navigate directly to this form or open it by clicking  Add           Branch  on the   ([~/?ScreenId=CS101500|CS101500]) Companies form. On the   ([~/?ScreenId=CS102000|CS102000]) Branches form, for         each branch you want to add, you specify its general information, including its identifier,         name, address, default location, and employees. After the company has been configured, the  With Branches Requiring Balancing          company type can still be changed to  Without Branches  if the company has only one         branch or no branches at all. The type can also be changed to  With Branches Not Requiring           Balancing  if no transactions have been posted by company branches or the company has         only one branch. ]]></column>
		</row>
		<row PageID="7d2615bd-ca38-4d51-9123-af50c3309978" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a99894a1-8e04-6135-aa2d-da31695f0bef" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You can use the tables in this topic to quickly check whether the configuration steps for a company with branches that require balancing are being performed in Acumatica ERP. The following tables cover both the mandatory configuration steps and the recommended configuration steps.[anchor|#_1f63882e-3a95-4866-b1c2-d3b16644d855]
===Mandatory Configuration===To ensure that the basic configuration of a company has been implemented properly, make sure that the necessary features have been enabled and the needed entities have been created, as listed in the following table. 
{| class="checklist" | width="100%" 
|- 
!width="33%" ! Form
!width="33%" ! Things to Check
!width="33%" ! Notes
|- 
| [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form
| Make sure that the ''Standard Financials'' group of features and the ''Multi-Branch Support'' feature have been enabled.
| 
|- 
| [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form
| Make sure that the necessary company has been created with the ''With Branches Requiring Balancing'' type and that the necessary ledger has been created and assigned to it.
| 
|- 
| [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form
| Make sure that the branches of the company have been created.
| 
|- 
| [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form
| Make sure that the necessary accounts for performing financial operations have been added.
| 
|- 
| [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form
| Make sure that all necessary settings to use the general ledger functionality have been specified, including the YTD Net Income and Retained Earnings accounts.
| 
|- 
| [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form
| Make sure that the first financial year in which the company will operate has been added and the periods have been generated.
| 
|- 
| [HelpRoot_FormReference\GL_20_11_00|Company Financial Calendar] ([~/?ScreenId=GL201100|GL201100]) form
| Make sure that the periods in which the company will operate are open.
| 
|- 
| [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form
| Make sure that all necessary settings to use the cash management functionality have been specified, including the Cash-in-Transit account.
| 
|- 
| [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form
| Make sure that the necessary cash accounts to record cash entries and funds transfers have been created, and that the necessary entry types have been assigned to them.
| 
|- 
| [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form
| Make sure that the payment methods to be used have been created and have been defined to use the proper accounts.
| 
|- 
| [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form
| Make sure that the necessary entry types for processing cash payments have been created and assigned to the related cash accounts.
| 
|- 
| [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form
| Make sure that the needed credit terms—those that are commonly used by vendors in their relations with your company, and those that are used by your company in its relations with customers—have been created.
| 
|- 
| [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form
| Make sure that the default vendor class, which provides the default values for vendor accounts and for other vendor classes, has been created.
| 
|- 
| [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form
| Make sure that all necessary settings to use the accounts payable functionality have been specified.
| 
|- 
| [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form
| Make sure that the necessary statement cycles, which will later be used to track customers&rsquo; outstanding balances and send electronic or printed statements to the customers, have been created.
| 
|- 
| [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form
| Make sure that the default customer class, which provides the default values for customer accounts and for other customer classes, has been created.
| 
|- 
| [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form
| Make sure that all necessary settings to use the accounts receivable functionality have been specified.
| 
|}[anchor|#_1a310629-1570-4e2c-9bb8-ce078684a34f]
===Recommended Configuration===The settings listed in the following table can be specified to simplify the process of creating entities in the system.
{| class="checklist" | width="100%" 
|- 
!width="33%" ! Form
!width="33%" ! Things to Check
!width="33%" ! Notes
|- 
| [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form
| Make sure that the following settings have been specified:[anchor|#_c65d535d-0e4e-41d7-a2bb-a65a8b098262]
*The '''Automatically Post on Release''' check box is selected.
*The '''Hold Batches on Entry''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form
| Make sure that the following settings have been specified:[anchor|#_22e6de68-4692-4d88-a59a-ed5835996705]
*The '''Automatically Post to GL on Release''' check box is selected.
*The '''Hold Transactions on Entry''' check box is cleared.
*The '''Require Document Ref. Nbr. on Entry''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form
| Make sure that the following settings have been specified:[anchor|#_d4180232-fdaa-4e62-b7bd-d9fe98addd77]
*The '''Automatically Post on Release''' check box is selected.
*A vendor class, which will be used to provide default values for vendor accounts (and for other vendor classes), is selected in the '''Default Vendor Class ID''' box.
*The '''Hold Documents on Entry''' check box is cleared.
*The '''Require Approval of Bills Prior to Payment''' check box is cleared.
*The '''Validate Document Totals on Entry''' check box is cleared.
*The '''Require Vendor Reference''' check box is cleared.

| 
|- 
| [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form
| Make sure that the following settings have been specified:[anchor|#_61bd6fcd-1797-4a73-9ab4-270405d73991]
*The '''Automatically Post on Release''' check box is selected.
*A customer class, which will be used to provide default values for customer accounts (and for other customer classes), has been selected in the '''Default Customer Class ID''' box.
*The '''Hold Documents on Entry''' check box is cleared.
*The '''Validate Document Totals on Entry''' check box is cleared.
*The '''Require Payment Reference on Entry''' check box is cleared.

| 
|}]]></column>
			<column name="PlainText"><![CDATA[Company with Branches that Require Balancing: Implementation Checklist You can use the tables in this topic to quickly check whether the configuration steps for a     company with branches that require balancing are being performed in  Acumatica ERP.     The following tables cover both the mandatory configuration steps and the recommended     configuration steps. Mandatory Configuration To ensure that the basic configuration of a company has been implemented properly, make      sure that the necessary features have been enabled and the needed entities have been created,      as listed in the following table.  Form Things to Check Notes  ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form Make sure that the  Standard Financials  group of features and the           Multi-Branch Support  feature have been enabled.  ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form Make sure that the necessary company has been created with the  With Branches          Requiring Balancing  type and that the necessary ledger has been created and assigned to         it.  ([~/?ScreenId=CS102000|CS102000]) Branches         (CS102000) form Make sure that the branches of the company have been created.  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form Make sure that the necessary accounts for performing financial operations have been         added.  ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form Make sure that all necessary settings to use the general ledger functionality have         been specified, including the YTD Net Income and Retained Earnings accounts.  ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form Make sure that the first financial year in which the company will operate has been         added and the periods have been generated.  ([~/?ScreenId=GL201100|GL201100]) Company Financial Calendar (GL201100) form Make sure that the periods in which the company will operate are open.  ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form Make sure that all necessary settings to use the cash management functionality have         been specified, including the Cash-in-Transit account.  ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form Make sure that the necessary cash accounts to record cash entries and funds transfers         have been created, and that the necessary entry types have been assigned to them.  ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form Make sure that the payment methods to be used have been created and have been defined         to use the proper accounts.  ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form Make sure that the necessary entry types for processing cash payments have been         created and assigned to the related cash accounts.  ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form Make sure that the needed credit terms—those that are commonly used by vendors         in their relations with your company, and those that are used by your company in its         relations with customers—have been created.  ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form Make sure that the default vendor class, which provides the default values for vendor         accounts and for other vendor classes, has been created.  ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form Make sure that all necessary settings to use the accounts payable functionality have         been specified.  ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form Make sure that the necessary statement cycles, which will later be used to track         customers' outstanding balances and send electronic or printed statements to the customers,         have been created.  ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form Make sure that the default customer class, which provides the default values for         customer accounts and for other customer classes, has been created.  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form Make sure that all necessary settings to use the accounts receivable functionality         have been specified. Recommended Configuration The settings listed in the following table can be specified to simplify the process of      creating entities in the system. Form Things to Check Notes  ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. The  Hold Batches on Entry  check box is cleared.  ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form Make sure that the following settings have been specified: The  Automatically Post to GL on Release  check box is           selected. The  Hold Transactions on Entry  check box is cleared. The  Require Document Ref. Nbr. on Entry  check box is           cleared.  ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. A vendor class, which will be used to provide default values for vendor accounts (and           for other vendor classes), is selected in the  Default Vendor Class            ID  box. The  Hold Documents on Entry  check box is cleared. The  Require Approval of Bills Prior to Payment  check box is           cleared. The  Validate Document Totals on Entry  check box is cleared. The  Require Vendor Reference  check box is cleared.  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form Make sure that the following settings have been specified: The  Automatically Post on Release  check box is selected. A customer class, which will be used to provide default values for customer accounts           (and for other customer classes), has been selected in the  Default Customer            Class ID  box. The  Hold Documents on Entry  check box is cleared. The  Validate Document Totals on Entry  check box is cleared. The  Require Payment Reference on Entry  check box is           cleared. ]]></column>
		</row>
		<row PageID="8d5a0e00-c471-4c28-85dd-75d630569d43" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="4a1754d5-939a-982d-643c-fa64c57bc237" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to enable the necessary set of features, define settings for a company with branches that require balancing, and define settings for the branches of the company.
==Story==
Suppose that as an administrator, you are going to start configuring the Muffins & Cakes company with the following branches, which require balancing: [anchor|#_982039da-4c56-4b81-91f6-e3e0d01e0b7d]
*Muffins Wholesale Center
*Muffins Retail Shop

The company is going to use the default features and the ''Multi-Branch Support'' and ''Inter-Branch Transactions'' features; you need to enable these features. You then need to configure a company entity in Acumatica ERP for the Muffins & Cakes company with these two offices in Denver.
==System Preparation==
Before you start configuring a company with branches that require balancing, sign in to a tenant with the out-of-the-box company as a system administrator with the ''admin'' login.
==Step 1: Enabling the Minimum Set of Features==
To enable the minimum set of features, do the following:[anchor|#_71bbaae4-1bfd-4050-8e4e-e69f1d57d6c1]
#Open the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form.
#:Notice that the check boxes are initially selected for the standard features. These features include ''Finance'', ''Standard Financials'', ''Multi-Branch Support'', ''Centralized Period Management'', ''Monitoring & Automation'', ''Scheduled Processing'', ''Workflow Automation'', ''GDPR Compliance Tools'', and ''Third-Party Integrations''..
#Select the '''Multi-Branch Support''' check box.
#:It is now possible to create multiple companies without batches, a company with multiple branches, or multiple companies with or without branches within one tenant.
#Select the '''Inter-Branch Transactions''' check box.
#:You can now configure account mapping rules that will be used to generate interbranch balancing transactions.
#On the form toolbar, click '''Enable''' to enable the selected set of features.

In a production environment, after the features are enabled and before you proceed with implementation, you have to activate the Acumatica ERP license by using the [HelpRoot_FormReference\SM_20_15_10|Activate License] ([~/?ScreenId=SM201510|SM201510]) form. In this practice activity, you are using Acumatica ERP under the trial license, which doesn&rsquo;t require activation and provides all available features. 
==Step 2: Defining a Company With Branches that Do Not Require Balancing==
To configure the company without branches for Muffins & Cakes, do the following:[anchor|#_9c9dffc6-2106-4416-be05-88853fc19829]
#Open the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form.
#In the Summary area, specify the following settings: 
#*'''Company ID''': <tt>MUFFINS</tt>
#*'''Company Name''': <tt>Muffins & Cakes</tt>
#*'''Company Type''': ''With Branches Requiring Balancing''
#In the '''Main Address''' section of the '''Company Details''' tab, specify the following address settings:
#*'''City''': <tt>Denver</tt>
#*'''Country''': ''US - United States of America''
#* '''State''': ''CO - Colorado''
#In the '''Base Currency Settings (Shared)''' section, specify ''USD'' in the '''Base Currency ID''' box. 
#:The system fills in the '''Description''', '''Currency Symbol''', and '''Decimal Precision''' boxes automatically, based on the currency you have selected.((({S:Warn}The settings you specify in this area for the first company in the tenant will be applied to all companies in the tenant. After you specify the base currency and save your changes, the base currency cannot be overridden.
)))
#In the '''Miscellaneous Settings (Shared)''' section, specify the following settings:
#*'''Price/Cost Decimal Places''': <tt>2</tt>
#*'''Weight UOM''': ''KG''
#* '''Volume UOM''': ''LITER''
#:((({S:Warn}If you later add additional companies to the tenant, the settings you specify in this area for the first company in the tenant will be applied to all companies in the tenant.
)))
#On the form toolbar, click '''Save'''.

==Step 3: Defining Branches for the Company==
To configure branches for Muffins & Cakes, do the following:[anchor|#_d50a6717-fb8e-43de-9028-8f0ebd4782f4]
#While you are still viewing the Muffins & Cakes company of the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, on the '''Branches''' tab, click '''Add Branch'''.
#:The [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form opens with the predefined company. First, you will create a branch for the Muffins & Cakes wholesale center.
#In the Summary area, specify the following settings:
#*'''Branch ID''': <tt>MUFNWHOLE</tt>
#*'''Branch Name''':<tt> Muffins Wholesale Center</tt>
#*'''Company''': ''MUFFINS''
#In the '''Main Address''' section of the '''Branch Details''' tab, specify the following address details:
#*'''City''': <tt>Denver</tt>
#*'''Country''': ''US (United States)''
#* '''State''': ''CO - Colorado''
#On the form toolbar, click '''Save'''.
#On form toolbar of the [HelpRoot_FormReference\CS_10_20_00|Branches] form, click '''Add New Record''' and create a branch for the SweetLife retail store with the following settings:
#*'''Branch ID''': <tt>MUFNRETAIL</tt>
#*'''Branch Name''':<tt>Muffins Retail Shop</tt>
#*'''Company''': ''MUFFINS''
#* '''City''': <tt>Denver</tt>
#*'''Country''': ''US (United States)''
#* '''State''': ''CO - Colorado''
#On the form toolbar, click '''Save & Close'''.

The system returns you to the [HelpRoot_FormReference\CS_10_15_00|Companies] form, on which you can now create an actual ledger for the company and branches you have created. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].]]></column>
			<column name="PlainText"><![CDATA[Company with Branches that Require Balancing: Implementation Activity In this activity, you will learn how to enable the necessary set of features, define                 settings for a company with branches that require balancing, and define settings for                 the branches of the company. Story Suppose that as an administrator, you are going to start configuring the Muffins                 & Cakes company with the following branches, which require balancing:  Muffins Wholesale Center Muffins Retail Shop The company is going to use the default features and the  Multi-Branch Support                  and  Inter-Branch Transactions  features; you need to enable these features.                 You then need to configure a company entity in  Acumatica ERP for the Muffins & Cakes company with these two offices in Denver. System Preparation Before you start configuring a company with branches that require balancing, sign in                 to a tenant with the out-of-the-box company as a system administrator with the                      admin  login. Step 1: Enabling the Minimum Set of Features To enable the minimum set of features, do the following: Open the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form. Notice                         that the check boxes are initially selected for the standard features. These                         features include  Finance ,  Standard Financials ,  Multi-Branch                             Support ,  Centralized Period Management ,  Monitoring &                             Automation ,  Scheduled Processing ,  Workflow Automation ,                              GDPR Compliance Tools , and  Third-Party                     Integrations .. Select the  Multi-Branch Support  check                         box. It                         is now possible to create multiple companies without batches, a company with                         multiple branches, or multiple companies with or without branches within one                         tenant. Select the  Inter-Branch Transactions  check                         box. You                         can now configure account mapping rules that will be used to generate                         interbranch balancing transactions. On the form toolbar, click  Enable  to enable the selected                     set of features. In a production environment, after the features are enabled and before you proceed                 with implementation, you have to activate the  Acumatica ERP license by using the   ([~/?ScreenId=SM201510|SM201510]) Activate License (SM201510)                 form.                  In                 this practice activity, you are using  Acumatica ERP under the trial license, which doesn't require activation and provides all                 available features.  Step 2: Defining a Company With Branches that Do Not  Require Balancing To configure the company without branches for Muffins & Cakes, do the                 following: Open the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form. In the Summary area, specify the following settings:  Company ID :  MUFFINS Company Name :  Muffins &                                 Cakes Company Type :  With Branches Requiring                                 Balancing In the  Main Address  section of the  Company                         Details  tab, specify the following address settings: City :  Denver Country :  US - United States of                             America State :  CO - Colorado In the  Base Currency Settings (Shared)  section, specify                          USD  in the  Base Currency ID  box.  The system                         fills in the  Description ,  Currency                             Symbol , and  Decimal Precision  boxes                         automatically, based on the currency you have selected. The settings                             you specify in this area for the first company in the tenant will be                             applied to all companies in the tenant. After you specify the base                             currency and save your changes, the base currency cannot be                             overridden. In the  Miscellaneous Settings (Shared)  section, specify                     the following settings: Price/Cost Decimal Places :                                  2 Weight UOM :  KG Volume UOM :  LITER If you later add additional companies to the tenant, the settings you                         specify in this area for the first company in the tenant will be applied to                         all companies in the tenant. On the form toolbar, click  Save . Step 3: Defining Branches for the Company To configure branches for Muffins & Cakes, do the following: While you are still viewing the Muffins & Cakes company of the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, on the                          Branches  tab, click  Add                         Branch . The   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) form opens with the predefined company. First, you will create                         a branch for the Muffins & Cakes wholesale center. In the Summary area, specify the following settings: Branch ID :  MUFNWHOLE Branch Name :  Muffins Wholesale                                 Center Company :  MUFFINS In the  Main Address  section of the  Branch                         Details  tab, specify the following address details: City :  Denver Country :  US (United States) State :  CO - Colorado On the form toolbar, click  Save . On form toolbar of the   ([~/?ScreenId=CS102000|CS102000]) Branches                     form, click  Add New Record  and create a branch for the                     SweetLife retail store with the following settings: Branch ID :  MUFNRETAIL Branch Name : Muffins Retail                                 Shop Company :  MUFFINS City :  Denver Country :  US (United States) State :  CO - Colorado On the form toolbar, click  Save & Close . The system returns you to the   ([~/?ScreenId=CS101500|CS101500]) Companies form, on                 which you can now create an actual ledger for the company and branches you have                 created. For details, see  General Ledger: To Create an Actual Ledger. ]]></column>
		</row>
		<row PageID="1cc687f2-d52a-4672-9380-fd948b2603fe" Language="en-US" PageRevisionID="1" Content="&#xA;To make it possible to process GL transactions in the system and to further configure the system, you need to implement the general ledger functionality in the system. This chapter describes the basic configuration to be performed, including creating the company&amp;rsquo;s actual ledger, defining the chart of accounts, specifying the preference settings related to the general ledger, and defining a financial year." PlainText="Implementing the General Ledger To make it possible to process GL transactions in the system and to further configure the     system, you need to implement the general ledger functionality in the system. This chapter     describes the basic configuration to be performed, including creating the company's actual     ledger, defining the chart of accounts, specifying the preference settings related to the     general ledger, and defining a financial year. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="269e1733-053c-2051-64b9-49a173449d7d" RecordSourceID="22377" />
		<row PageID="de1256fd-7e02-465d-9009-9bc8f3769b71" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="d1164528-61dc-c141-695e-ca386e758f6c" RecordSourceID="22377">
			<column name="Content"><![CDATA[
When you initially implement Acumatica ERP, you implement the general ledger functionality that makes it possible for system implementation to proceed and for users to record and track GL transactions in the system. The implementation process includes creating an actual ledger for a company you have created, defining the chart of accounts, specifying the general ledger preference settings, and defining the company&rsquo;s financial year in the system.{br}{TOC}
==Learning Objectives==
In this chapter, you will learn how to implement the basic configuration of the general ledger functionality for a company. In particular, you will learn how to do the following:[anchor|#_90d85275-f4fa-4d4c-8657-aaa1cd742e1b]
*Create an actual ledger
*Define the chart of accounts
*Specify the general ledger preference settings
*Set up the first financial year in the system
*Generate periods for the financial year
*Open the generated periods in the system

==Applicable Scenarios==
You perform the basic configuration of the general ledger functionality during the implementation of Acumatica ERP, after a company has been configured in the system and before other parts of the system have been configured.
==Workflow of the Implementation of the General Ledger Functionality==
To implement the general ledger functionality in Acumatica ERP, you perform the following general steps:[anchor|#_e0ff54a2-6ece-47ee-afb6-b5b1baf1fea9]
#On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, you create the actual ledger for a company. For details, see [HelpRoot_Implement\config_Basic_Company_Actual_Ledger|General Ledger: Actual Ledger].
#On the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form, you add the accounts that are necessary for performing the company's financial operations. For more information, see [HelpRoot_Implement\config_Basic_Company_COA|General Ledger: Chart of Accounts].
#On the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form, you specify the settings for processing transactions in the general ledger, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_GL_Preferences|General Ledger: To Specify General Ledger Preferences].
#On the [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form, you set up the first financial year when the company starts processing its operations in Acumatica ERP. You then generate periods on the [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000]) form and open them on the [HelpRoot_FormReference\GL_50_30_00|Manage Financial Periods] ([~/?ScreenId=GL503000|GL503000]) form. For details, see [HelpRoot_Implement\config_Basic_Company_FinYear|General Ledger: Financial Years].
]]></column>
			<column name="PlainText"><![CDATA[General Ledger: General Information When you initially implement  Acumatica ERP, you implement the general ledger functionality that makes it possible for system         implementation to proceed and for users to record and track GL transactions in the system.         The implementation process includes creating an actual ledger for a company you have         created, defining the chart of accounts, specifying the general ledger preference settings,         and defining the company's financial year in the system. Learning Objectives In this chapter, you will learn how to implement the basic configuration of the general ledger         functionality for a company. In particular, you will learn how to do the following: Create an actual ledger Define the chart of accounts Specify the general ledger preference settings Set up the first financial year in the system Generate periods for the financial year Open the generated periods in the system Applicable Scenarios You perform the basic configuration of the general ledger functionality during the         implementation of  Acumatica ERP, after a company has been configured in the system and before other parts of the system         have been configured. Workflow of the Implementation of the General Ledger Functionality To implement the general ledger functionality in  Acumatica ERP, you perform the following general steps: On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, you create the actual           ledger for a company. For details, see  General Ledger: Actual Ledger. On the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form, you add the accounts           that are necessary for performing the company's financial operations. For more           information, see  General Ledger: Chart of Accounts. On the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form, you specify the           settings for processing transactions in the general ledger, as described in  General Ledger: To Specify General Ledger Preferences. On the   ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form, you set up the first      financial year when the company starts processing its operations in  Acumatica ERP.      You then generate periods on the   ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar (GL201000) form      and open them on the   ([~/?ScreenId=GL503000|GL503000]) Manage Financial Periods (GL503000) form. For details,      see  General Ledger: Financial Years. ]]></column>
		</row>
		<row PageID="98b1a479-9917-4c6c-a267-2164451e38f2" Language="en-US" PageRevisionID="1" PlainText="General Ledger: Configuration Prerequisites Before you start to implement the general ledger functionality, you must be sure that the     system has been configured properly and that all required entities have been created, as     described in the following sections. Enabling the Needed Features On the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features     (CS100000) form, the minimum set of features has to be enabled. For details, see  Company Without Branches: To Configure a Company Without Branches. Configuring the System On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, you need to make sure     that the companies of the organization have been configured and that the appropriate actual     ledger has been assigned to each of them. For more information, see  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e90d1639-faa6-798c-a806-95610b0d3814" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Before you start to implement the general ledger functionality, you must be sure that the system has been configured properly and that all required entities have been created, as described in the following sections.{br}{TOC}
==Enabling the Needed Features==
On the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, the minimum set of features has to be enabled. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches].
==Configuring the System==
On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, you need to make sure that the companies of the organization have been configured and that the appropriate actual ledger has been assigned to each of them. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].]]></column>
		</row>
		<row PageID="1f0bd0a0-bb42-4e75-ae57-9d8e2b9486c6" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="06a6bdfb-a7e4-5fa0-dbee-ce051d00411f" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, a ledger of the ''Actual'' type is at the core of your company’s financial records. The records in the actual ledger make up the history of all financial transactions of your organization. The system updates the actual ledger every time you release and post a financial transaction in the system.{br}

In this topic, you will read about creating actual ledgers in the system.{br}{TOC}
==Creation of an Actual Ledger==
You can specify only one ledger of the ''Actual'' type for each company. You add a new actual ledger in either of the following ways:[anchor|#_528b011c-60b4-4bb7-b9d6-3c476f0ca426]
*To first add a new ledger and then associate it with existing companies and branches, you use the [HelpRoot_FormReference\GL_20_15_00|Ledgers] ([~/?ScreenId=GL201500|GL201500]) form. After you create the actual ledger, you can associate it with existing companies in the system.
*To first create a new company and then add a new ledger, you use the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form. (You create the ledger directly on this form.) 

If you have multiple companies, they can use the same ledger of the ''Actual'' type, or they can use different ledgers, depending on the transaction processing requirements of your organization and its organizational structure.((({S:Warn}You cannot delete a ledger or change its currency or type if the ledger has any journal entries or other records. 
)))]]></column>
			<column name="PlainText"><![CDATA[General Ledger: Actual Ledger In  Acumatica ERP, a ledger of the  Actual  type is at the core of your company’s financial records.         The records in the actual ledger make up the history of all financial transactions of your         organization. The system updates the actual ledger every time you release and post a         financial transaction in the system. In this topic, you will read about creating actual ledgers in the system. Creation of an Actual Ledger You can specify only one ledger of the  Actual  type for each company. You add a new         actual ledger in either of the following ways: To first add a new ledger and then associate it with existing companies and branches,           you use the   ([~/?ScreenId=GL201500|GL201500]) Ledgers (GL201500)           form. After you create the actual ledger, you can associate it with existing companies in           the system. To first create a new company and then add a new ledger, you use the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form. (You create the ledger directly           on this form.)  If you have multiple companies, they can use the same ledger of the  Actual  type, or         they can use different ledgers, depending on the transaction processing requirements of your         organization and its organizational structure. You cannot delete a ledger or change its currency or type if the ledger has any journal         entries or other records.  ]]></column>
		</row>
		<row PageID="fda48dc3-65e6-4ef1-8196-b4b1f9751e91" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="f4a05e3c-825a-5e1f-ce4f-1b7bad17a163" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create an actual ledger for a company in Acumatica ERP.
==Story==
Suppose that as an administrator, you need to create an actual ledger that will hold the history of all financial transactions of the SweetLife Fruits & Jams company.
==System Preparation==
Before you start adding an actual ledger, make sure that the company you plan to associate with this actual ledger has been created, as described in [HelpRoot_Implement\config_GL_Mapref|Implementing the General Ledger].
==Step: Creating an Actual Ledger==
Perform the following instructions to create the actual ledger to be used by the company:[anchor|#_557ebbc3-ab33-42a8-a678-ad6cc289d8e9][anchor|#_bcd0769f-1bd6-4973-bd0f-9e65b9e5332a]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form.
#In the '''Company ID''' box, select ''SWEETLIFE''.
#On the form toolbar, click '''Create Ledger'''.
#In the '''Create Ledger''' dialog box, which opens, in the '''Ledger ID''' box, type <tt>ACTUAL</tt>.
#Click '''Create'''.
#:The system creates and saves the ledger and closes the dialog box.
#On the '''Ledgers''' tab, verify that the ledger you have created is listed in the table.
]]></column>
			<column name="PlainText"><![CDATA[General Ledger: To Create an Actual Ledger In this activity, you will learn how to create an actual ledger for a company in  Acumatica ERP. Story Suppose that as an administrator, you need to create an actual ledger that will hold                 the history of all financial transactions of the SweetLife Fruits & Jams                 company. System Preparation Before you start adding an actual ledger, make sure that the company you plan to                 associate with this actual ledger has been created, as described in  Implementing the General Ledger. Step: Creating an Actual Ledger Perform the following instructions to create the actual ledger to be used by the                 company: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form. In the  Company ID  box, select  SWEETLIFE . On the form toolbar, click  Create Ledger . In the  Create Ledger  dialog box, which opens, in the                          Ledger ID  box, type                      ACTUAL . Click  Create . The system creates and saves the ledger                         and closes the dialog box. On the  Ledgers  tab, verify that the ledger you have                     created is listed in the table. ]]></column>
		</row>
		<row PageID="67394d85-8e3e-4f9b-bcf0-8dfd02e2d15b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="afcbe8e3-84bb-26c7-0915-0729ba32d01b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Each company has its own structured list of general ledger accounts. Acumatica ERP provides you with the ability to define a chart of accounts that suits your company&rsquo;s needs. To define the chart of accounts in the system, you have to perform the following tasks:[anchor|#_56b226b1-87f0-4d2b-a42f-fff9d932ea11]
#Plan account identifiers if they have not yet been defined for the configured company
#Modify the ''ACCOUNT'' segmented key based on your planned structure, if necessary
#Add accounts to the chart of accounts (including the Retained Earnings and YTD Net Income accounts)
#Optional: Restrict user access to accounts
[anchor|#_45520be4-5f34-4f67-979c-7ecfaf120fcb]
==Account Classes==
For convenient grouping, sorting, and filtering of information associated with GL accounts in reports and inquiries, you can assign accounts to account classes on the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form. Acumatica ERP provides predefined account classes, which can be modified if needed, and you can add new account classes on the [HelpRoot_FormReference\GL_20_20_00|Account Classes] ([~/?ScreenId=GL202000|GL202000]) form. For details on how to create an account class in the system, see [HelpRoot_Financials\GL__HOW_To_Create_an_Account_Class|To Create an Account Class].{br}

Before you add accounts to the chart of accounts, you should review the predefined account classes and learn about the capabilities of account classes, so you can determine which classes to assign to accounts.
==Entry of Chart of Accounts==
In Acumatica ERP, you define the chart of accounts on the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form. When you define the chart of accounts, you assign to each account a name, a unique identifier, and an account type. You can prepare the chart of accounts in an <tt>.xlsx</tt> or <tt>.csv</tt> file and upload the file to the system. Alternatively, you can add accounts individually.
==Mandatory Accounts==
In Acumatica ERP, you must create two system-maintained accounts of the ''Liability'' type: YTD (Year-to-Date) Net Income and Retained Earnings. Once you have created these accounts, you need to specify them on the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form.{br}

The YTD Net Income account tracks the net income that has been accumulated since the beginning of the financial year—that is, the difference between the amounts that have been posted to all income accounts and the amounts that have been posted to all expense accounts. The system updates this account for every transaction posted to an income or expense account. For a new financial year, the system resets the balance of the YTD Net Income account to zero.((({S:Warn}Users cannot post transactions directly to the YTD Net Income account. After any transaction has been posted to an income or expense account, the selected YTD Net Income account cannot be changed in the '''YTD Net Income Account''' box on the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] form.
)))
When the system updates the balance of the YTD Net Income account, it also updates the beginning balance of the Retained Earnings account in the next financial year for which financial periods are defined. The Retained Earnings account accumulates the net income or loss that is retained by the company. Retained earnings are summarized over all years, starting with the first year of company operations in Acumatica ERP. Users can also post direct transactions to this account, such as dividends paid to shareholders. This account is normally reported in the Shareholders&rsquo; Equity section of the balance sheet. ]]></column>
			<column name="PlainText"><![CDATA[General Ledger: Chart of Accounts Each company has its own structured list of general ledger accounts.  Acumatica ERP provides you with the ability to define a chart of accounts that suits your company's         needs. To define the chart of accounts in the system, you have to perform the following         tasks: Plan account identifiers if they have not yet been defined for the configured           company Modify the  ACCOUNT  segmented key based on your planned structure, if           necessary Add accounts to the chart of accounts (including the Retained Earnings and YTD Net           Income accounts) Optional: Restrict user access to accounts Account Classes For convenient grouping, sorting, and filtering of information associated with GL accounts         in reports and inquiries, you can assign accounts to account classes on the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form.  Acumatica ERP provides predefined account classes, which can be modified if needed, and you can add new         account classes on the   ([~/?ScreenId=GL202000|GL202000]) Account Classes (GL202000)         form. For details on how to create an account class in the system, see  To Create an Account Class. Before you add accounts to the chart of accounts, you should review the predefined account         classes and learn about the capabilities of account classes, so you can determine which         classes to assign to accounts. Entry of Chart of Accounts In  Acumatica ERP, you define the chart of accounts on the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form. When you define the chart of accounts, you assign to each         account a name, a unique identifier, and an account type. You can prepare the chart of         accounts in an  .xlsx  or  .csv  file and upload the         file to the system. Alternatively, you can add accounts         individually . Mandatory Accounts In  Acumatica ERP, you must create two system-maintained accounts of the  Liability  type: YTD         (Year-to-Date) Net Income and Retained Earnings. Once you have created these accounts, you         need to specify them on the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000)         form. The YTD Net Income account tracks the net income that has been accumulated since the         beginning of the financial year—that is, the difference between the amounts that have         been posted to all income accounts and the amounts that have been posted to all expense         accounts. The system updates this account for every transaction posted to an income or         expense account. For a new financial year, the system resets the balance of the YTD Net         Income account to zero. Users cannot post transactions directly to the YTD Net Income account. After any         transaction has been posted to an income or expense account, the selected YTD Net Income         account cannot be changed in the  YTD Net Income Account  box on the             ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences form. When the system updates the balance of the YTD Net Income account, it also updates the         beginning balance of the Retained Earnings account in the next financial year for which         financial periods are defined. The Retained Earnings account accumulates the net income or         loss that is retained by the company. Retained earnings are summarized over all years,         starting with the first year of company operations in  Acumatica ERP. Users can also post direct transactions to this account, such as dividends paid to         shareholders. This account is normally reported in the Shareholders' Equity section of the         balance sheet.  ]]></column>
		</row>
		<row PageID="535eabd7-26e2-4777-ac7d-fedf23846eb1" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="44c6e6e6-685c-7229-158e-2560d0a5a9cc" RecordSourceID="22377">
			<column name="Content"><![CDATA[In this activity, you will learn how to modify the ''ACCOUNT'' segmented key. You will also define the chart of accounts by uploading a list of GL accounts to the system.
==Story==
Suppose that as an administrator, you need to add the chart of accounts of the SweetLife Fruits & Jams company to Acumatica ERP. Further suppose that an accountant of the company has provided a file that lists the GL accounts to be used and their settings (including the account classes; you will use the predefined classes). You will review the list of accounts, modify the ''ACCOUNT'' segmented key, and create the chart of accounts by uploading the file provided by the accountant.
==System Preparation==
Before you start defining the chart of accounts in the system, make sure that the following tasks have been performed in the system:[anchor|#_ce7cff1c-9537-4d44-9abc-b31b8e2a8842]
#The company with an actual ledger has been created; see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#Download the [{up}ImplementationGuide/Files/Basic_Company_COA.xlsx|Basic&#95;Company&#95;COA] file with the chart of accounts of the SweetLife company.

==Step 1: Modifying the ''ACCOUNT'' Segmented Key==
To modify the ''ACCOUNT'' segmented key, do the following:[anchor|#_f9f93f70-fdd9-4ab2-8cbf-e2aae6add403][anchor|#_1d2164f1-eb91-49f1-9a43-6d2a9c639093]
#Sign in to the company you have prepared with the ''admin'' login.
#Review the [{up}ImplementationGuide/Files/Basic_Company_COA.xlsx|Basic&#95;Company&#95;COA] file that you have downloaded. Notice that the account identifiers consist of only one segment of five characters.
#Open the [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000]) form.
#In the '''Segmented Key ID''' box, select ''ACCOUNT''.
#For the only row in the table, in the '''Length''' column, specify <tt>5</tt>.
#On the form toolbar, click '''Save'''.
#:Users can use account identifiers that are no longer than the specified length for the segmented key.

==Step 2: Uploading the Company&rsquo;s GL Accounts==
You can create the chart of GL accounts in any system by entering the accounts manually or by uploading a file that lists them. In this activity, you will upload the file that SweetLife&rsquo;s accountant has provided. Do the following to upload the chart of accounts:[anchor|#_9b49ecbe-9c86-47fe-882b-6df3576cf098]
#Open the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form.
#On the form toolbar, click '''Load Records from File'''.
#In the '''File Upload''' dialog box, which opens, select the file path to the [{up}ImplementationGuide/Files/Basic_Company_COA.xlsx|Basic&#95;Company&#95;COA] file, and click '''Upload'''.
#In the '''Common Settings''' dialog box, which opens, leave the default settings, and click '''OK'''.
#In the '''Columns''' dialog box, leave the current mapping, and click '''OK'''.
#On the form toolbar, click '''Save'''.

You should review the chart of accounts, which now includes all the necessary accounts, including two accounts that are required for Acumatica ERP: Year-to-Date Net (YTD) Income (''33000'') and Retained Earnings (''32000''). [anchor|#_501b838a-5465-499d-9407-0892c50a806b]
*''20000'': The account to be used to record amounts owed to vendors for items and services purchased on credit. This account will later be specified as the AP account.
*''11000'': The account to be used to record amounts owed by customers for services provided to them on credit. This account will later be specified as the AR account.
*''10500'': The account to be used as the intermediate account for funds transfers. This account will later be specified as the cash-in-transit account. 
]]></column>
			<column name="PlainText"><![CDATA[General Ledger: To Create a Chart of Accounts In this activity, you will learn how to modify the  ACCOUNT  segmented key.             You will also define the chart of accounts by uploading a list of GL accounts to the             system. Story Suppose that as an administrator, you need to add the chart of accounts of the                 SweetLife Fruits & Jams company to  Acumatica ERP. Further suppose that an accountant of the company has provided a file that lists                 the GL accounts to be used and their settings (including the account classes; you                 will use the predefined classes). You will review the list of accounts, modify the                      ACCOUNT  segmented key, and create the chart of accounts by uploading the                 file provided by the accountant. System Preparation Before you start defining the chart of accounts in the system, make sure that the                 following tasks have been performed in the system: The company with an actual ledger has been created; see  Company Without Branches: To Configure a Company Without Branches and                          General Ledger: To Create an Actual Ledger. Download the  Basic_Company_COA Basic&#95;Company&#95;COA file with the chart of accounts of the SweetLife                     company. Step 1: Modifying the  ACCOUNT  Segmented Key To modify the  ACCOUNT  segmented key, do the following: Sign in to the company you have prepared with the                  admin  login. Review the  Basic_Company_COA Basic&#95;Company&#95;COA file that you have downloaded. Notice that the                     account identifiers consist of only one segment of five characters. Open the   ([~/?ScreenId=CS202000|CS202000]) Segmented Keys                     (CS202000) form. In the  Segmented Key ID  box, select  ACCOUNT . For the only row in the table, in the  Length  column,                     specify  5 . On the form toolbar, click  Save . Users can use account                         identifiers that are no longer than the specified length for the segmented                         key. Step 2: Uploading the Company's GL Accounts You can create the chart of GL accounts in any system by entering the accounts                 manually or by uploading a file that lists them. In this activity, you will upload                 the file that SweetLife's accountant has provided. Do the following to upload the                 chart of accounts: Open the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form. On the form toolbar, click  Load Records from File . In the  File Upload  dialog box, which opens, select the                     file path to the  Basic_Company_COA Basic&#95;Company&#95;COA file , and click                          Upload . In the  Common Settings  dialog box, which opens, leave the                     default settings, and click  OK . In the  Columns  dialog box, leave the current mapping, and                     click  OK . On the form toolbar, click  Save . You should review the chart of accounts, which now includes all the necessary                 accounts, including two accounts that are required for  Acumatica ERP: Year-to-Date Net (YTD) Income ( 33000 ) and Retained Earnings                 ( 32000 ).                  20000 : The account to be used to record amounts owed to vendors for items                     and services purchased on credit. This account will later be specified as the AP                     account. 11000 : The account to be used to record amounts owed by customers for                     services provided to them on credit. This account will later be specified as the                     AR account. 10500 : The account to be used as the intermediate account for funds                     transfers. This account will later be specified as the cash-in-transit account.                  ]]></column>
		</row>
		<row PageID="4bf5d099-3060-4f2a-8825-4a8ca71e3e43" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b5e8d9aa-3d78-180b-27db-b969251e5242" RecordSourceID="22377">
			<column name="Content"><![CDATA[In this activity, you will learn how to specify the basic settings to be used for the general ledger functionality.
==Story==
Suppose that a company with an actual ledger has been created and a chart of accounts has been defined in Acumatica ERP. Acting as an administrator, you need to specify the preference settings related to general ledger functionality. You will specify the accounts that are mandatory for the system and other settings that make it easier for users to create entities in the system.
==System Preparation==
Before you start specifying the general ledger preference settings, make sure that the following tasks have been completed in the system:[anchor|#_ce7cff1c-9537-4d44-9abc-b31b8e2a8842]
#The company has been created and its actual ledger has been specified; see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The Year-to-Date (YTD) Net Income and Retained Earnings accounts have been added to the chart of accounts, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_COA|General Ledger: To Create a Chart of Accounts].

==Step: Specifying the General Ledger Preference Settings==
You specify the basic settings related to processing GL transactions as follows:[anchor|#_17817053-d747-429a-9425-71d7eb2e3bd0][anchor|#_05c1989d-0cce-4eb3-b0d1-74a0a5447b87]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form.
#In the '''YTD Net Income Account''' box in the '''Chart of Accounts Settings''' section, select ''33000 - Net Income''. This is a required setting for a company.
#In the '''Retained Earnings Account''' box, select ''32000 - Retained Earnings''. This setting is also required for a company.
#On the form toolbar, click '''Save'''.
#In the '''Posting Settings''' section, make sure the '''Automatically Post on Release''' check box is selected.
#:All batches will be automatically posted to the general ledger after release. This setting simplifies batch processing, because no batches with an ''Unposted'' status will be generated.
#In the '''Data Entry Settings''' section, clear the '''Hold Batches on Entry''' check box.
#:When new batches are saved, they have the ''Balanced'' status. This setting also simplifies the processing of batches.
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[General Ledger: To Specify General Ledger Preferences In this activity, you will learn how to specify the basic settings to be used for             the general ledger functionality. Story Suppose that a company with an actual ledger has been created and a chart of accounts                 has been defined in  Acumatica ERP. Acting as an administrator, you need to specify the preference settings related                 to general ledger functionality. You will specify the accounts that are mandatory                 for the system and other settings that make it easier for users to create entities                 in the system. System Preparation Before you start specifying the general ledger preference settings, make sure that                 the following tasks have been completed in the system: The company has been created and its actual ledger has been specified; see  Company Without Branches: To Configure a Company Without Branches and                          General Ledger: To Create an Actual Ledger. The Year-to-Date (YTD) Net Income and Retained Earnings accounts have been added                     to the chart of accounts, as described in  General Ledger: To Create a Chart of Accounts. Step: Specifying the General Ledger Preference Settings You specify the basic settings related to processing GL transactions as follows: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form. In the  YTD Net Income Account  box in the  Chart                         of Accounts Settings  section, select  33000 - Net Income .                     This is a required setting for a company. In the  Retained Earnings Account  box, select  32000 -                         Retained Earnings . This setting is also required for a company. On the form toolbar, click  Save . In the  Posting Settings  section, make sure the                          Automatically Post on Release  check box is                         selected. All batches will be automatically posted to the general ledger                         after release. This setting simplifies batch processing, because no batches                         with an  Unposted  status will be generated. In the  Data Entry Settings  section, clear the                          Hold Batches on Entry  check box. When new batches                         are saved, they have the  Balanced  status. This setting also                         simplifies the processing of batches. On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="8dd17de3-461d-4d20-a4c7-8736d1313b9d" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="40d5b180-8323-057f-ac02-73cdf72b8e91" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, transactions are posted to the financial periods that have been defined in the system. Thus, before any transactions are posted, you have to define the structure of the financial year in the system. Based on this structure of the financial year, you can generate periods for any number of financial years and then open the periods.
==Financial Year Setup==
You define the financial year on the [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form by doing the following:[anchor|#_2026b79e-7fde-4cec-b52f-a93433eb7725]
#You decide which year should be the first year, and specify it in the system. The first financial year usually designates the year when the company starts processing its operations in Acumatica ERP. However, we recommend that you define the first financial year so that it includes the last period before the company started to use Acumatica ERP, even if this means defining an extra financial year. 
#:You can upload the ending balances of accounts to that period later, after periods have been defined.
#You define the structure of the financial year that your company will use—that is, you define the periods of the year in the system.
#If it is necessary to have a special period for posting adjustments at the end of the year, you add an adjustment period.

After you have set up the financial year, you need to generate a master calendar.
==Master Calendar Generation==
You generate a master financial calendar on the [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000]) form for any number of financial years by clicking '''Generate Calendar''' on the form toolbar. {br}

After periods have been generated, you can modify them before any transactions have been made. To do so, you select the '''User-Defined Periods''' check box. {br}

After you have generated the master calendar, you open any number of periods for posting.
==Period Opening==
You have to open the periods to which users will post transactions and documents. To open periods, on the [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000]) form, you first make sure the necessary year is selected in the '''Financial Year''' box, and then click '''Actions''' > '''Open Periods''' on the form toolbar.{br}

After you have opened periods, they can be used in transactions and documents. At any time, you can have multiple open periods; opening one period does not require you to close the previous one.]]></column>
			<column name="PlainText"><![CDATA[General Ledger: Financial Years In  Acumatica ERP,     transactions are posted to the financial periods that have been defined in the system. Thus,     before any transactions are posted, you have to define the structure of the financial year in     the system. Based on this structure of the financial year, you can generate periods for any     number of financial years and then open the periods. Financial Year Setup You define the financial year on the   ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form by doing the following: You decide which year should be the first year, and specify it in the system. The first      financial year usually designates the year when the company starts processing its operations in        Acumatica ERP.      However, we recommend that you define the first financial year so that it includes the last      period before the company started to use  Acumatica ERP,      even if this means defining an extra financial year.  You can upload the ending balances of       accounts to that period later, after periods have been defined. You define the structure of the financial year that your company will use—that is, you      define the periods of the year in the system. If it is necessary to have a special period for posting adjustments at the end of the year,      you add an adjustment period. After you have set up the financial year, you need to generate a master calendar. Master Calendar Generation You generate a master financial calendar on the   ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar (GL201000) form     for any number of financial years by clicking  Generate Calendar  on the     form toolbar.  After periods have been generated, you can modify them before any transactions have been made.     To do so, you select the  User-Defined Periods  check box.  After you have generated the master calendar, you open any number of periods for posting. Period Opening You have to open the periods to which users will post transactions and documents. To open     periods, on the   ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar (GL201000) form, you first make sure the necessary year is selected in the       Financial Year  box, and then click  Actions Open Periods  on the form toolbar. After you have opened periods, they can be used in transactions and documents. At any time,     you can have multiple open periods; opening one period does not require you to close the     previous one. ]]></column>
		</row>
		<row PageID="bbfe5ea4-00c8-421d-9efc-f426f6edc3aa" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="be14f168-d4c6-4e86-24b8-31fa403b863e" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to set up a financial year, generate periods for the first year, and open the generated periods.
==Story==
Suppose that the SweetLife company starts its operations in January 2020, each of its financial periods lasts one month, and an additional period for posting adjustments is necessary. Acting as an administrator, you need to set up the financial year that meets these criteria, generate periods for the financial year, and open them. 
==System Preparation==
Before you start defining the financial year, make sure that the company with an actual ledger has been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
==Step 1: Setting Up a Financial Year==
To set up the first financial year, you do the following:[anchor|#_2392d0e3-363a-4e5d-8a32-e6acc97543b0][anchor|#_1e112774-4edf-41c3-8c41-8372fbe73f5c]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\GL_10_10_00|Financial Year] ([~/?ScreenId=GL101000|GL101000]) form.
#In the '''Financial Year Starts On''' box of the Summary area, select ''1/1/2020''.
#In the '''Period Type''' box, make sure ''Month'' is selected.
#Select the '''Has Adjustment Period''' check box.
#On the form toolbar, click '''Create Periods'''.
#Click '''Save''' to save the settings of the financial year.

==Step 2: Generating Periods for the First Financial Year==
To generate the financial periods for the first financial year, you do the following:[anchor|#_6eff0674-930d-4bdb-a281-eceb3d39dad6]
#Open the [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000]) form.
#In the '''Financial Year''' box of the Summary area, make sure ''2020'' is selected.
#On the form toolbar, click '''Generate Calendar'''.
#In the '''Generate GL Calendars''' dialog box, which opens, make sure that ''2020'' is selected in the '''From Year''' and '''To Year''' box, and click '''OK'''.
#:The system generates periods for the ''2020'' financial year.
#:((({S:Warn}We do not recommend generating financial periods far into the future, because this limits and complicates any changes to the configuration of the financial year that may be needed due to organizational changes.
)))
#On the form toolbar, click '''Generate Calendar'''.
#In the '''Generate GL Calendars''' dialog box, which opens, make sure that ''2020'' is selected in the '''From Year''' and '''To Year''' box, and click '''OK'''.
#:The system generates periods for the ''2020'' financial year.
#:((({S:Warn}We do not recommend generating financial periods far into the future, because this limits and complicates any changes to the configuration of the financial year that may be needed due to organizational changes.
)))

==Step 3: Opening the Periods==
To open the periods you have generated, you do the following:[anchor|#_f914b5c3-a7aa-4e25-b31c-9dcda83d17e6]
#While you are still on the [HelpRoot_FormReference\GL_20_10_00|Master Financial Calendar] ([~/?ScreenId=GL201000|GL201000]) form, on the form toolbar, click '''Actions''' > '''Open Periods'''.
#:The [HelpRoot_FormReference\GL_50_30_00|Manage Financial Periods] ([~/?ScreenId=GL503000|GL503000]) form opens with the ''Open'' option selected in the '''Action''' box of the Summary area.
#On the form toolbar, click '''Process All'''.
#:The system opens the '''Processing''' dialog box and runs the process of opening periods.
#Close the '''Processing''' dialog box.
]]></column>
			<column name="PlainText"><![CDATA[General Ledger: To Define a Financial Year In this activity, you will learn how to set up a financial year, generate periods for                 the first year, and open the generated periods. Story Suppose that the SweetLife company starts its operations in January  2020, each of its financial periods lasts one month, and an additional period for                 posting adjustments is necessary. Acting as an administrator, you need to set up the                 financial year that meets these criteria, generate periods for the financial year,                 and open them.  System Preparation Before you start defining the financial year, make sure that the company with an                 actual ledger has been created, as described in  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. Step 1: Setting Up a Financial Year To set up the first financial year, you do the following: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=GL101000|GL101000]) Financial Year (GL101000) form. In the  Financial Year Starts On  box of the Summary area,                     select  1/1/ 2020. In the  Period Type  box, make sure  Month  is                     selected. Select the  Has Adjustment Period  check box. On the form toolbar, click  Create Periods . Click  Save  to save the settings of the financial                     year. Step 2: Generating Periods for the First Financial Year To generate the financial periods for the first financial year, you do the                 following: Open the   ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar (GL201000) form. In the  Financial Year  box of the Summary area, make sure                              2020 is selected. On the form toolbar, click  Generate Calendar . In the  Generate GL Calendars  dialog box, which opens,                     make sure that  2020 is selected in the  From Year  and  To                         Year  box, and click  OK . The system                         generates periods for the  2020 financial year. We do not recommend generating financial                         periods far into the future, because this limits and complicates any changes                         to the configuration of the financial year that may be needed due to                         organizational changes. On the form toolbar, click  Generate Calendar . In the  Generate GL Calendars  dialog box, which opens,                     make sure that  2020 is selected in the  From Year                      and  To Year  box, and click                          OK . The system generates periods for the                              2020 financial year. We do not recommend generating                         financial periods far into the future, because this limits and complicates                         any changes to the configuration of the financial year that may be needed                         due to organizational changes. Step 3: Opening the Periods To open the periods you have generated, you do the following: While you are still on the   ([~/?ScreenId=GL201000|GL201000]) Master Financial Calendar                     (GL201000) form, on the form toolbar, click  Actions Open Periods . The   ([~/?ScreenId=GL503000|GL503000]) Manage Financial Periods (GL503000)                         form opens with the  Open  option selected in the                              Action  box of the Summary area. On the form toolbar, click  Process                         All . The                         system opens the  Processing  dialog box and runs the                         process of opening periods. Close the  Processing  dialog box. ]]></column>
		</row>
		<row PageID="2cc687f2-d52a-4672-9380-fd948b2603fe" Language="en-US" PageRevisionID="1" Content="&#xA;For your users to process cash transactions in the system, the cash management functionality has to be implemented in the system. This chapter describes the basic configuration to be performed, including specifying the preference settings for cash management, creating entry types, creating cash accounts, and modifying payment methods." PlainText="Implementing Cash Management For your users to process cash transactions in the system, the cash management functionality     has to be implemented in the system. This chapter describes the basic configuration to be     performed, including specifying the preference settings for cash management, creating entry     types, creating cash accounts, and modifying payment methods. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="5b8f5a75-8597-484e-def8-2e7973a19fde" RecordSourceID="22377" />
		<row PageID="ec369a9a-a57f-41e5-a954-a5f57c1ca928" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="46b525cf-e130-5de2-3051-0fb384cf6b50" RecordSourceID="22377">
			<column name="Content"><![CDATA[
For users to be able to record cash transactions in the system and for you to continue implementing financial functionality in the system, the cash management functionality has to be implemented in Acumatica ERP. The process of implementing the cash management functionality includes specifying cash management preference settings, creating entry types for cash transactions, creating cash accounts, and modifying the payment methods that have been predefined in the system.
==Learning Objectives==
In this chapter, you will learn how to implement the basic configuration of the cash management for a company.
==Applicable Scenarios==
You perform the basic configuration of the cash management functionality during the implementation of Acumatica ERP, after a company has been configured in the system and the general ledger functionality has been implemented, and before other parts of the system have been configured.
==Workflow of the Implementation of the Cash Management Functionality==
To implement the cash management functionality, you perform the following general steps:[anchor|#_e0ff54a2-6ece-47ee-afb6-b5b1baf1fea9]
#On the [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form, you specify the settings related to the processing of cash transactions. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_CA_Preferences|Cash Management: To Specify Cash Management Preferences].
#On the [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form, you add the necessary entry types for processing cash payments.
#On the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form, you define the cash accounts to be used to record cash entries and funds transfers. For details, see [HelpRoot_Implement\config_Basic_Company_Cash_Accounts|Cash Management: Cash Accounts].
#On the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, you define the payment methods that the company uses to pay its vendors, as well as the payment methods that customers use to pay the company. 
]]></column>
			<column name="PlainText"><![CDATA[Cash Management: General Information For users to be able to record cash transactions in the system and for you to continue         implementing financial functionality in the system, the cash management functionality has to         be implemented in  Acumatica ERP. The process of implementing the cash management functionality includes specifying cash         management preference settings, creating entry types for cash transactions, creating cash         accounts, and modifying the payment methods that have been predefined in the system. Learning Objectives In this chapter, you will learn how to implement the basic configuration of the cash         management for a company. Applicable Scenarios You perform the basic configuration of the cash management functionality during the         implementation of  Acumatica ERP, after a company has been configured in the system and the general ledger functionality         has been implemented, and before other parts of the system have been configured. Workflow of the Implementation of the Cash Management Functionality To implement the cash management functionality, you perform the following general         steps: On the   ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA102000) form, you specify the           settings related to the processing of cash transactions. For details, see  Cash Management: To Specify Cash Management Preferences. On the   ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form, you add the           necessary entry types for processing cash payments. On the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form, you define the cash           accounts to be used to record cash entries and funds transfers. For details, see  Cash Management: Cash Accounts. On the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form, you define the           payment methods that the company uses to pay its vendors, as well as the payment methods           that customers use to pay the company.  ]]></column>
		</row>
		<row PageID="6fad0c26-6e1e-4a80-b42a-3af479b40107" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ee111894-4468-78db-ec3a-1156316a119c" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Before you start to implement cash management, you must be sure that the system has been configured properly and that all required entities have been created, as described in the following sections.{br}{TOC}
==Enabling the Needed Features==
On the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, the minimum set of features has to be enabled. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches].
==Configuring the System==
You need to make sure that the following implementation tasks have been performed in Acumatica ERP before you begin implementing cash management:[anchor|#_4c34829d-fae3-4a26-8078-5d64b000acc3]
*On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, the companies of the organization have been configured, and the appropriate actual ledger has been assigned to each company. For more information , see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
*On the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form, the accounts to be used with the cash management functionality have been defined, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_COA|General Ledger: To Create a Chart of Accounts].
*On the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form, the preference settings for the general ledger functionality have been specified. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_GL_Preferences|General Ledger: To Specify General Ledger Preferences].
]]></column>
			<column name="PlainText"><![CDATA[Cash Management: Configuration Prerequisites Before you start to implement cash management, you must be sure that the system has been     configured properly and that all required entities have been created, as described in the     following sections. Enabling the Needed Features On the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features     (CS100000) form, the minimum set of features has to be enabled. For details, see  Company Without Branches: To Configure a Company Without Branches. Configuring the System You need to make sure that the following implementation tasks have been performed in  Acumatica ERP     before you begin implementing cash management: On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, the companies of the      organization have been configured, and the appropriate actual ledger has been assigned to each      company. For more information , see  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. On the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form, the      accounts to be used with the cash management functionality have been defined, as described in        General Ledger: To Create a Chart of Accounts. On the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form, the preference settings      for the general ledger functionality have been specified. For details, see  General Ledger: To Specify General Ledger Preferences. ]]></column>
		</row>
		<row PageID="a519da15-93a5-4d02-a008-23c76e003497" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="5b69ae2a-a47c-0dff-f993-ee1214ac4517" RecordSourceID="22377">
			<column name="Content"><![CDATA[In this activity, you will learn how to specify the basic settings to be used for the cash management functionality.
==Story==
Suppose that the SweetLife company with an actual ledger has been created and the company&rsquo;s chart of accounts has been defined in Acumatica ERP. Acting as an administrator, you need to specify the cash management preference settings. You will specify the cash-in-transit account to be used, which is mandatory in the system, and the settings that make it easier for users to create entities when using the cash management functionality.
==System Preparation==
Before you start specifying the cash management preference settings, make sure that the following tasks have been performed in the system:[anchor|#_f563973b-e471-4676-835e-bf7274c0c249]
#The company has been created and its actual ledger has been specified; see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The account that you plan to specify as the cash-in-transit account, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_COA|General Ledger: To Create a Chart of Accounts].

==Step: Specifying the Cash Management Preferences==
You specify the basic settings the system will use for the cash management functionality as follows:[anchor|#_1fd256f3-287c-4a7f-9959-3280239503a4][anchor|#_15e745eb-efde-4b6d-9de4-82304dfab0b9]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\CA_10_10_00|Cash Management Preferences] ([~/?ScreenId=CA101000|CA101000]) form.
#In the '''Cash-In-Transit Account''' box of the '''Reconciliation Settings''' section, select the ''10500 - Cash in Transit'' account.
#:This account is the only cash management setting that is required for a company. 
#In the '''Posting and Release Settings''' section, make sure the '''Automatically Post to GL on Release''' check box is selected.
#:With this setting, all cash transactions will be automatically posted to the general ledger after release.
#In the '''Data Entry Settings''' section, clear the '''Hold Transactions on Entry''' check box.
#:With this setting, when new cash documents are saved, they have the ''Balanced'' status, which simplifies the processing of these documents.
#Clear the '''Require Document Ref. Nbr. on Entry''' check box.
#:This setting prevents users from having to specify a reference number for cash transactions and deposits created in the system.
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Cash Management: To Specify Cash Management Preferences In this activity, you will learn how to specify the basic settings to be used for             the cash management functionality. Story Suppose that the SweetLife company with an actual ledger has been created and the                 company's chart of accounts has been defined in  Acumatica ERP. Acting as an administrator, you need to specify the cash management preference                 settings. You will specify the cash-in-transit account to be used, which is                 mandatory in the system, and the settings that make it easier for users to create                 entities when using the cash management functionality. System Preparation Before you start specifying the cash management preference settings, make sure that                 the following tasks have been performed in the system: The company has been created and its actual ledger has been specified; see  Company Without Branches: To Configure a Company Without Branches and                          General Ledger: To Create an Actual Ledger. The account that you plan to specify as the cash-in-transit account, as                     described in  General Ledger: To Create a Chart of Accounts. Step: Specifying the Cash Management Preferences You specify the basic settings the system will use for the cash management                 functionality as follows: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=CA101000|CA101000]) Cash Management Preferences (CA101000) form. In the  Cash-In-Transit Account  box of the                          Reconciliation Settings  section, select the  10500                         - Cash in Transit  account. This account is the only cash management                         setting that is required for a company.  In the  Posting and Release Settings  section, make sure                     the  Automatically Post to GL on Release  check box is                         selected. With this setting, all cash transactions will be automatically                         posted to the general ledger after release. In the  Data Entry Settings  section, clear the                          Hold Transactions on Entry  check box. With this                         setting, when new cash documents are saved, they have the  Balanced                          status, which simplifies the processing of these documents. Clear the  Require Document Ref. Nbr. on Entry  check                         box. This setting prevents users from having to specify a reference number                         for cash transactions and deposits created in the system. On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="db6258e1-3609-4dcd-b3be-7d8fcefe8505" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="18f9843f-0428-102a-90a0-18e201f0ccfa" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, you use entry types to classify cash transactions for correct processing and to provide default values for transaction settings. 
==Entry Types==
An entry type functions like a transaction template, providing default values for a transaction and indicating how the transaction should be processed in the system. When you define an entry type on the [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form, you specify the type of transactions and documents for which the entry type can be used in the '''Module''' column, selecting one of the following options:[anchor|#_72359df9-2280-444a-87d3-6a6003337ec6]
*''CA'' (default option): The entry type that is used for creating cash entry transactions (receipts and disbursements) or recording bank service charges on cash management, accounts receivable, and accounts payable forms. These transactions affect the balances of GL accounts only; that is, they do not affect customer or vendor balances.
*''AP'': The entry type that is used for creating cash management transactions for which the system creates prepayments (for transactions that are disbursements) or vendor refunds (for transactions that are receipts) in accounts payable, which affect vendor balances. ''AP'' entry types are used only on cash management forms.
*''AR'': The entry type that is used for creating cash management transactions for which the system creates payments (if the transaction is a receipt) or customer refunds (if the transaction is a disbursement) in accounts receivable, which affect customer balances. ''AR'' entry types are used only on cash management forms.

In general, the configuration of entry types consists of the following steps:[anchor|#_ab63e775-3705-4423-8618-8ed17fdf97de]
#You determine which types of cash transactions the company usually generate.
#You create the required entry types by using the [HelpRoot_FormReference\CA_20_30_00|Entry Types] form.
#On the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form, you associate each entry type you have created with the cash account that is involved in the cash transactions of the entry type.
]]></column>
			<column name="PlainText"><![CDATA[Cash Management: Entry Types In  Acumatica ERP, you use entry types to classify cash transactions for correct processing and to provide         default values for transaction settings.  Entry Types An entry type functions like a transaction template, providing default values for a         transaction and indicating how the transaction should be processed in the system. When you         define an entry type on the   ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form,         you specify the type of transactions and documents for which the entry type can be used in         the  Module  column, selecting one of the following options: CA  (default option): The entry type that is used for creating cash entry           transactions (receipts and disbursements) or recording bank service charges on cash           management, accounts receivable, and accounts payable forms. These transactions affect the           balances of GL accounts only; that is, they do not affect customer or vendor           balances. AP : The entry type that is used for creating cash management transactions for           which the system creates prepayments (for transactions that are disbursements) or vendor           refunds (for transactions that are receipts) in accounts payable, which affect vendor           balances.  AP  entry types are used only on cash management forms. AR : The entry type that is used for creating cash management transactions for           which the system creates payments (if the transaction is a receipt) or customer refunds           (if the transaction is a disbursement) in accounts receivable, which affect customer           balances.  AR  entry types are used only on cash management forms. In general, the configuration of entry types consists of the following steps: You determine which types of cash transactions the company usually generate. You create the required entry types by using the   ([~/?ScreenId=CA203000|CA203000]) Entry Types form. On the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form, you associate each           entry type you have created with the cash account that is involved in the cash           transactions of the entry type. ]]></column>
		</row>
		<row PageID="81a7ae15-fd4b-4ddf-b118-980c74139155" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1b1a4f7f-31ff-e9f0-4787-70c3565891c0" RecordSourceID="22377">
			<column name="Content"><![CDATA[In this activity, you will learn how to define an entry type, which categorizes cash operations in the system.
==Story==
Suppose that as an administrator, you need to define entry types for cash operations of the SweetLife company. For now, an entry type for recording bank service charges is needed.
==System Preparation==
Before you start creating the entry type, make sure that the following tasks have been performed in the system:[anchor|#_f563973b-e471-4676-835e-bf7274c0c249]
#The company has been created, as has its actual ledger, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Checklist|Company Without Branches: Implementation Checklist] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The cash management preference settings have been defined, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_CA_Preferences|Cash Management: To Specify Cash Management Preferences].

==Step: Defining an Entry Type==
To define an entry type, perform the following instructions:[anchor|#_f421e43a-7f1a-404a-b5db-ec9dc476ef71][anchor|#_57e15335-0713-453f-80cd-0bb5398d5d8a]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\CA_20_30_00|Entry Types] ([~/?ScreenId=CA203000|CA203000]) form, and click '''Add Row'''.
#In the '''Entry Type ID''' column, type <tt>BANKFEE</tt>.
#In the '''Disb./Receipt''' column, select ''Disbursement''.
#In the '''Entry Type Description''' column, type <tt>Bank Fees</tt>.
#In the '''Module''' column, make sure that ''CA'' (the default setting) is selected. 
#In the '''Default Offset Account''' column, select ''61100''.
#Save the entry type.

When you create cash accounts, you can assign this entry type to the necessary cash accounts. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Cash_Accounts|Cash Management: To Create Cash Accounts].]]></column>
			<column name="PlainText"><![CDATA[Cash Management: To Create an Entry Type In this activity, you will learn how to define an entry type, which categorizes             cash operations in the system. Story Suppose that as an administrator, you need to define entry types for cash operations                 of the SweetLife company. For now, an entry type for recording bank service charges                 is needed. System Preparation Before you start creating the entry type, make sure that the following tasks have                 been performed in the system: The company has been created, as has its actual ledger, as described in  Company Without Branches: Implementation Checklist and  General Ledger: To Create an Actual Ledger. The cash management preference settings have been defined, as described in  Cash Management: To Specify Cash Management Preferences. Step: Defining an Entry Type To define an entry type, perform the following instructions: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=CA203000|CA203000]) Entry Types (CA203000) form, and click                          Add Row . In the  Entry Type ID  column, type                          BANKFEE . In the  Disb./Receipt  column, select                      Disbursement . In the  Entry Type Description  column, type                          Bank Fees . In the  Module  column, make sure that  CA  (the                     default setting) is selected.                      In the  Default Offset Account  column, select                      61100 . Save the entry type. When you create cash accounts, you can assign this entry type to the necessary cash                 accounts. For details, see  Cash Management: To Create Cash Accounts. ]]></column>
		</row>
		<row PageID="2f56337a-d98d-4f85-8f3b-54cf3b931a55" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="ca91c714-fce7-5f19-7420-4af42dcb1a9d" RecordSourceID="22377">
			<column name="Content"><![CDATA[Cash accounts are used to keep records of the outgoing and incoming payments and cash. You can create cash accounts that represent bank accounts, amounts of cash on hand, or amounts of cash in transit. Each cash account is linked to a general ledger account.
==Configuration of Cash Accounts==
In general, the configuration process of a cash account involves the following steps:[anchor|#_db2cc1c5-3865-46b8-b2a8-2bf9fe0aac68]
#You determine which existing GL account the cash transactions will be recorded to, or you create a GL account designated for this purpose. 
#You create the cash account and link it to the GL account that you decided to use for this purpose. 
#In case any transactions were posted to the GL account before you created the cash account and linked it to the GL account, you run validation of the cash account balance.

This configuration is enough for you to start making funds transfers between your cash accounts. To be able to record transactions other than funds transfers (cash entry transactions and incoming and outgoing payments), you also need to perform the following steps:[anchor|#ol_tzh_s2s_k4]
#You configure the following entities:
#*''Entry types'': You use entry types to classify cash transactions for correct processing. For details on entry types, see [HelpRoot_Implement\config_Basic_Company_Entry_Types|Cash Management: Entry Types].
#*''Payment methods'': You use payment methods to define the way the money is transferred into and out of the organization.  For details on payment methods, see [HelpRoot_Implement\config_Basic_Company_Payment_Methods|Cash Management: Payment Methods]. 
#You associate entry types and payment methods with the appropriate cash accounts.
]]></column>
			<column name="PlainText"><![CDATA[Cash Management: Cash Accounts Cash accounts are used to keep records of the outgoing and incoming payments and cash.    You can create cash accounts that represent bank accounts, amounts of cash on hand, or amounts of    cash in transit. Each cash account is linked to a general ledger account. Configuration of Cash Accounts In general, the configuration process of a cash account involves the following steps: You determine which existing GL account the cash transactions will be recorded to, or you      create a GL account designated for this purpose.  You create the cash account and link it to the GL account that you decided to use for this      purpose.  In case any transactions were posted to the GL account before you created the cash account      and linked it to the GL account, you run validation of the cash account balance. This configuration is enough for you to start making funds transfers between your cash     accounts. To be able to record transactions other than funds transfers (cash entry transactions     and incoming and outgoing payments), you also need to perform the following steps: You configure the following entities: Entry types : You use entry types to classify cash transactions for correct        processing. For details on entry types, see  Cash Management: Entry Types. Payment methods : You use payment methods to define the way the money is transferred        into and out of the organization.                 For details on payment methods, see  Cash Management: Payment Methods.        You associate entry types and payment methods with the appropriate cash accounts. ]]></column>
		</row>
		<row PageID="df2987db-747f-452f-b2a8-21ec50f54750" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="cbcfe8ca-8ca5-fb48-5a13-3a94c58197ef" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to create cash accounts in the system.
==Story==
Suppose that as an administrator, you need to add cash accounts to the system, as requested by the accountant of the SweetLife company. You will create cash accounts that correspond to the following GL accounts: ''10100-Petty Cash'' and ''10200-Company Checking Account''.
==System Preparation==
Before you start creating the cash accounts, make sure that the following tasks have been performed in the system:[anchor|#_f563973b-e471-4676-835e-bf7274c0c249]
#The company and its actual ledger have been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The cash management preference settings have been defined, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_CA_Preferences|Cash Management: To Specify Cash Management Preferences].
#The entry types of cash operations has been defined in the system, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Entry_Types|Cash Management: To Create an Entry Type].

==Step 1: Creating the Petty Cash Account==
You perform the following instructions to configure Sweet Life&rsquo;s petty cash account:[anchor|#_a00350f2-1567-469c-a628-aa306d8a9ebe][anchor|#_34092d1e-6c4b-4dbe-96f9-687a68145853]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form, and click '''Add New Record''' on the form toolbar.
#In the Summary area, specify the following settings:
#*'''Cash Account''': <tt>10100</tt>
#*'''Account''': ''10100 - Petty Cash''
#*:This box holds the GL account to which this cash account is linked, so that cash transactions can be traced in the general ledger.
#*'''Description''': <tt>Petty Cash</tt>
#On the table toolbar of the '''Payment Methods''' tab, click '''Add Row'''.
#In the '''Payment Method''' column, select ''CASH''.
#On the form toolbar, click '''Save'''.

==Step 2: Creating the Company Checking Account==
You perform the following instructions to configure a cash account to be used with the company checking account:[anchor|#_75d372a0-cce3-4711-b77e-c606228b4027]
#While you are still on the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form, click '''Add New Record''' on the form toolbar.
#In the Summary area, specify the following settings:
#*'''Cash Account''': <tt>10200</tt>
#*'''Account''': ''10200 - Company Checking Account''
#* '''Description''': <tt>Checking Account</tt>
#On the table toolbar of the '''Payment Methods''' tab, click '''Add Row'''.
#In the '''Payment Method''' column of the added row, select ''CHECK''.
#On the table toolbar of the '''Entry Types''' tab, click '''Add Row'''.
#In the '''Entry Type ID''' column of the new row, select ''BANKFEE''.
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Cash Management: To Create Cash Accounts In this activity, you will learn how to create cash accounts in the system. Story Suppose that as an administrator, you need to add cash accounts to the system, as                 requested by the accountant of the SweetLife company. You will create cash accounts                 that correspond to the following GL accounts:  10100-Petty Cash  and                      10200-Company Checking Account . System Preparation Before you start creating the cash accounts, make sure that the following tasks have                 been performed in the system: The company and its actual ledger have been created, as described in  Company Without Branches: To Configure a Company Without Branches and                          General Ledger: To Create an Actual Ledger. The cash management preference settings have been defined, as described in  Cash Management: To Specify Cash Management Preferences. The entry types of cash operations has been defined in the system, as described                     in  Cash Management: To Create an Entry Type. Step 1: Creating the Petty Cash Account You perform the following instructions to configure Sweet Life's petty cash                 account: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form, and click                          Add New Record  on the form toolbar. In the Summary area, specify the following settings: Cash Account :  10100 Account :  10100 - Petty Cash This box                                 holds the GL account to which this cash account is linked, so that                                 cash transactions can be traced in the general ledger. Description :  Petty                             Cash On the table toolbar of the  Payment Methods  tab, click                          Add Row . In the  Payment Method  column, select  CASH . On the form toolbar, click  Save . Step 2: Creating the Company Checking Account You perform the following instructions to configure a cash account to be used with                 the company checking account: While you are still on the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts                     (CA202000) form, click  Add New Record  on the form                     toolbar. In the Summary area, specify the following settings: Cash Account :  10200 Account :  10200 - Company Checking                             Account Description :  Checking                                 Account On the table toolbar of the  Payment Methods  tab, click                          Add Row . In the  Payment Method  column of the added row, select                          CHECK . On the table toolbar of the  Entry Types  tab, click                          Add Row . In the  Entry Type ID  column of the new row, select                          BANKFEE . On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="69a90616-7eba-4c89-8c96-0ba2e29071c8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="484ea249-241f-4220-c1c8-eab1678d977b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, you can configure the payment methods that your organization uses to pay its vendors, as well as the payment methods that are used by customers to pay your organization. The settings of the payment methods describe how the particular payment is done and provide the default cash account to be used to record payments. {br}

 Acumatica ERP has predefined payment methods that can be adjusted to the business needs of an organization. 
==Payment Method Setup==
You use the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form to review the predefined payment methods and update them. (You can also define new payment methods on this form.) {br}

On this form, you perform the following general steps to set up a payment method:[anchor|#ol_xw2_5kv_np]
#In the Summary area, you specify the identifier, the means of payment (''Credit Card'', ''Cash/Check'', or ''Direct Deposit''), and the description. 
#You use the appropriate check boxes to specify how you want the payment method to be used. If it will be used for customer payments, select the '''Use in AR''' check box. If the payment method will be used for payments to vendors, select the '''Use in AP''' check box.
#On the '''Allowed Cash Accounts''' tab, you add rows for each of the cash accounts to be linked to this payment method, and you specify the appropriate settings for each listed account. The linked cash accounts can include regular cash accounts and clearing accounts.
#If necessary, you modify the settings on the '''Settings for Use in AR''' and '''Settings for Use in AP''' tabs.
#In the Summary area, you make sure the '''Active '''check box is selected so that the payment method can be used.

==Payment Method Deactivation==
On the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, you can deactivate a payment method if you do not want to use it for new payments. {br}

If a payment method has been deactivated, the unreleased payments that use this payment method cannot be processed on the [HelpRoot_FormReference\AP_50_50_00|Process Payments / Print Checks] ([~/?ScreenId=AP505000|AP505000]) form, but they can be released. You can select inactive payment methods in the '''Payment Method''' box on the [HelpRoot_FormReference\AP_50_52_00|Release Payments] ([~/?ScreenId=AP505200|AP505200]) form to release them.]]></column>
			<column name="PlainText"><![CDATA[Cash Management: Payment Methods In  Acumatica ERP, you can configure the payment methods that your organization uses to pay its vendors, as         well as the payment methods that are used by customers to pay your organization. The         settings of the payment methods describe how the particular payment is done and provide the         default cash account to be used to record payments.   Acumatica ERP has predefined payment methods that can be adjusted to the business needs of an         organization.  Payment Method Setup You use the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form to review the         predefined payment methods and update them. (You can also define new payment methods on this         form.)  On this form, you perform the following general steps to set up a payment method: In the Summary area, you specify the identifier, the means of payment ( Credit             Card ,  Cash/Check , or  Direct Deposit ), and the description.  You use the appropriate check boxes to specify how you want the payment method to be           used. If it will be used for customer payments, select the  Use in             AR  check box. If the payment method will be used for payments to vendors,           select the  Use in AP  check box. On the  Allowed Cash Accounts  tab, you add rows for each of the           cash accounts to be linked to this payment method, and you specify the appropriate           settings for each listed account. The linked cash accounts can include regular cash           accounts and clearing accounts. If necessary, you modify the settings on the  Settings for Use in             AR  and  Settings for Use in AP  tabs. In the Summary area, you make sure the  Active  check box is           selected so that the payment method can be used. Payment Method Deactivation On the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form, you can deactivate a         payment method if you do not want to use it for new payments.  If a payment method has been deactivated, the unreleased payments that use this payment         method cannot be processed on the   ([~/?ScreenId=AP505000|AP505000]) Process Payments / Print Checks (AP505000)         form, but they can be released. You can select inactive payment methods in the            Payment Method  box on the   ([~/?ScreenId=AP505200|AP505200]) Release Payments (AP505200) form to release them. ]]></column>
		</row>
		<row PageID="9f09318a-fc8b-4115-898a-71b037a6f9ac" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="6bd63871-3395-fc2d-326d-b091be7c9ad8" RecordSourceID="22377">
			<column name="Content"><![CDATA[In this activity, you will learn how to set up a payment method for use with the accounts receivable functionality.
==Story==
Suppose that customers of the SweetLife company use checks to pay for invoices. Acting as an administrator, you will modify the ''CHECK'' payment method (which is predefined in the system) so that it can be used with the accounts receivable functionality.
==System Preparation==
Before you start modifying any existing payment method, make sure that the following tasks have been performed in the system:[anchor|#_f563973b-e471-4676-835e-bf7274c0c249]
#The company and its actual ledger have been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The cash management preference settings have been defined, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_CA_Preferences|Cash Management: To Specify Cash Management Preferences].
#The cash accounts related to the payment method have been linked (in the cash account settings) to the payment method, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Cash_Accounts|Cash Management: To Create Cash Accounts].

==Step: Setup of the ''CHECK'' Payment Method for Use in AP and AR==
To make the needed changes to the ''CHECK'' payment method, which will be used in accounts payable and accounts receivable, do the following:[anchor|#_b1a097f0-88ae-46a7-8c7e-7817bc854869][anchor|#_0ddb6a61-6aad-48c4-98ee-3a226de794a1]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, and select the ''CHECK'' payment method.
#In the Summary area, select the '''Use in AR''' check box.
#Make sure that the '''Use in AP''' check box is selected.
#On the '''Allowed Cash Accounts''' tab, for the ''10200'' cash account, select the '''AP Default''', '''Use in AR''', and '''AR Default''' check boxes. 
#:Payment methods are linked to cash accounts, and you have selected the ''10200'' cash account as the default one for the payment method used in accounts payable and in the accounts receivable. 
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Cash Management: To Modify a Payment Method In this activity, you will learn how to set up a payment method for use with the             accounts receivable functionality. Story Suppose that customers of the SweetLife company use checks to pay for invoices.                 Acting as an administrator, you will modify the  CHECK  payment method (which                 is predefined in the system) so that it can be used with the accounts receivable                 functionality. System Preparation Before you start modifying any existing payment method, make sure that the following                 tasks have been performed in the system: The company and its actual ledger have been created, as described in  Company Without Branches: To Configure a Company Without Branches and                          General Ledger: To Create an Actual Ledger. The cash management preference settings have been defined, as described in  Cash Management: To Specify Cash Management Preferences. The cash accounts related to the payment method have been linked (in the cash                     account settings) to the payment method, as described in  Cash Management: To Create Cash Accounts. Step: Setup of the  CHECK  Payment Method for Use in AP and AR To make the needed changes to the  CHECK  payment method, which will be used in                 accounts payable and accounts receivable, do the following: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form, and                     select the  CHECK  payment method. In the Summary area, select the  Use in AR  check box. Make sure that the  Use in AP  check box is selected. On the  Allowed Cash Accounts  tab, for the  10200                      cash account, select the  AP Default ,  Use in                         AR , and  AR Default  check boxes.                          Payment methods are linked to cash accounts, and you have selected the                              10200  cash account as the default one for the payment method used                         in accounts payable and in the accounts receivable.  On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="4ec07880-1c62-4437-886c-7c331018f23a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c46b9269-0c38-1446-d5ba-0c367a374cd3" RecordSourceID="22377">
			<column name="Content"><![CDATA[
The following activity will walk you through the process of deactivating a payment method in the system.[anchor|#_94456a17-6c69-4bd6-9d94-e6911b31721d]((({S:Warn}The following activity is based on the ''U100'' dataset. If you are using another dataset, or if any system settings have been changed in ''U100'', these changes can affect the workflow of the activity and the results of the processing. To avoid any issues, restore the ''U100'' dataset to its initial state.
)))
==Story==
Suppose that the SweetLife company decided to stop using one of the payment methods for accounts payable—FEDWIRE. Acting as an administrator, you have to deactivate this payment method in the system.
==Process Overview==
You deactivate a payment method on the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, to make it unavailable for selection for new documents on entry forms.
==Step: Deactivating a Payment Method==
To deactivate a payment method, do the following:[anchor|#_fa742785-635f-4638-890f-918dff014a89]
#Open the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form.
#In the '''Payment Method ID''' box, select ''FEDWIRE''.
#In the Summary area, clear the '''Active''' check box.
#On the form toolbar, click '''Save''' to save your changes.

In a production environment, after you have deactivated a payment method, you can process documents that use this payment method on the [HelpRoot_FormReference\AP_50_52_00|Release Payments] ([~/?ScreenId=AP505200|AP505200]) form.]]></column>
			<column name="PlainText"><![CDATA[Cash Management: To Deactivate a Payment Method The following activity will walk you through the process of deactivating a payment                 method in the system. The following activity is based on the                  U100  dataset. If you are using another dataset, or if any system settings             have been changed in  U100 , these changes can affect the workflow of the activity             and the results of the processing. To avoid any issues, restore the  U100  dataset             to its initial state. Story Suppose that the SweetLife company decided to stop using one of the payment methods                 for accounts payable—FEDWIRE. Acting as an administrator, you have to                 deactivate this payment method in the system. Process Overview You deactivate a payment method on the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods                 (CA204000) form, to make it unavailable for selection for new documents on entry                 forms. Step: Deactivating a Payment Method To deactivate a payment method, do the following: Open the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form. In the  Payment Method ID  box, select  FEDWIRE . In the Summary area, clear the  Active  check box. On the form toolbar, click  Save  to save your                     changes. In a production environment, after you have deactivated a payment method, you can                 process documents that use this payment method on the   ([~/?ScreenId=AP505200|AP505200]) Release Payments (AP505300) form. ]]></column>
		</row>
		<row PageID="06c9b500-a6e1-4311-bc73-164593d569e4" Language="en-US" PageRevisionID="1" Content="&#xA;In Acumatica ERP, users have to define the credit terms to be used by vendors in their relations with the company and by the company in its relations with customers. In this chapter, you will find general information on credit terms and an activity that provides instructions on how to implement credit terms in the system." PlainText="Configuring Credit Terms In  Acumatica ERP, users have to define the credit terms to be used by vendors in their relations with the         company and by the company in its relations with customers. In this chapter, you will find         general information on credit terms and an activity that provides instructions on how to         implement credit terms in the system. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="256fe48f-8d68-617c-da3b-18ed7e5045e4" RecordSourceID="22377" />
		<row PageID="cd40807d-6b7b-416e-9c3f-6a8023d48f70" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="db87912b-0b59-c6bb-0972-5cd641f9219b" RecordSourceID="22377">
			<column name="Content"><![CDATA[In Acumatica ERP, the credit terms that a company offers to customers and the terms the company uses to pay vendors need to be defined. When users select credit terms in a document, the credit terms provide automatic calculation of the due date and the end date of the cash discount period, as well as the cash discount amount in the document. You can define credit terms for payments as having a single installment or multiple installments.
==Learning Objectives==
In this chapter, you will learn how to define credit terms in the system.
==Applicable Scenarios==
You define credit terms before you start operations in the system, and when new credit terms need to be defined for customers and vendors.
==Creation of Credit Terms==
These are the general steps you need to perform to create a set of credit terms on the [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form:[anchor|#_d40e6b6d-8d93-4ce1-b422-000e9f9ac02a]
#You enter a descriptive identifier for the credit terms you want to configure. 
#You define the scope of the credit terms: whether they can be applied to only customer documents, only vendor documents, or both types of documents.
#You specify how a due date is calculated for a document.
#Optional: You configure the cash discount conditions for single-installment credit terms.
#Optional: If needed, you change the default installment type of credit terms, which is ''Single'', to ''Multiple''; you then define the number of installments and their payment schedule.

If the company has been operating for some time, it already has established its credit terms. We recommend that you compare the credit terms the company offers to customers and the credit terms offered to the company by vendors, looking for overlap, because in Acumatica ERP, you can use the same credit terms for both customer payments and payments to vendors.]]></column>
			<column name="PlainText"><![CDATA[Credit Terms: General Information In  Acumatica ERP, the credit terms that a company offers to customers and the terms the company uses to pay       vendors need to be defined. When users select credit terms in a document, the credit terms       provide automatic calculation of the due date and the end date of the cash discount period, as       well as the cash discount amount in the document. You can define credit terms for payments as       having a single installment or multiple installments. Learning Objectives In this chapter, you will learn how to define credit terms in the system. Applicable Scenarios You define credit terms before you start operations in the system, and when new credit         terms need to be defined for customers and vendors. Creation of Credit Terms These are the general steps you need to perform to create a set of credit terms on the   ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form: You enter a descriptive identifier for the credit terms you want to configure.  You define the scope of the credit terms: whether they can be applied to only customer           documents, only vendor documents, or both types of documents. You specify how a due date is calculated for a document. Optional: You configure the cash discount conditions for single-installment credit           terms. Optional: If needed, you change the default installment type of credit terms, which is              Single , to  Multiple ; you then define the number of installments and their           payment schedule. If the company has been operating for some time, it already has established its credit terms.     We recommend that you compare the credit terms the company offers to customers and the credit     terms offered to the company by vendors, looking for overlap, because in  Acumatica ERP,     you can use the same credit terms for both customer payments and payments to vendors. ]]></column>
		</row>
		<row PageID="fa096b1c-d608-413f-805f-0a48d3c4c001" Language="en-US" PageRevisionID="1" PlainText="Credit Terms: Configuration Prerequisites Before you start to configure credit terms, you must be sure that the system has been     configured properly and that all required entities have been created, as described in the     following sections. Enabling the Needed Features On the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features     (CS100000) form, the minimum set of features has to be enabled. For details, see  Company Without Branches: To Configure a Company Without Branches. Configuring the System On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, you need to make sure     that the companies of the organization have been configured and that the appropriate actual     ledger has been assigned to each of them. For more information, see  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="69ea3265-9186-2377-a59a-7bc53d7ad74c" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Before you start to configure credit terms, you must be sure that the system has been configured properly and that all required entities have been created, as described in the following sections.{br}{TOC}
==Enabling the Needed Features==
On the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, the minimum set of features has to be enabled. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches].
==Configuring the System==
On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, you need to make sure that the companies of the organization have been configured and that the appropriate actual ledger has been assigned to each of them. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].]]></column>
		</row>
		<row PageID="ecb8dcdd-729d-4f38-9e77-7b3c28f4e052" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="878b7051-b193-fb70-39c2-62ca0949eb39" RecordSourceID="22377">
			<column name="Content"><![CDATA[In this activity, you will learn how to define credit terms, which can be used by vendors in their relations with the company and by the company in its relations with customers.
==Story==
Suppose that SweetLife has agreements with its customers and vendors stipulating that the full amount of each document will be paid within 30 days; no cash discounts are provided. Acting as an administrator, you have to define one set of credit terms, which indicate that the full amount of each document must be paid within 30 days.
==System Preparation==
Before you start defining the credit terms, make sure that the company and its actual ledger has been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
==Step: Defining Credit Terms==
Perform the following instructions to define the needed set of credit terms:[anchor|#_5ea150a5-15db-43d0-b264-ce38a80ab7a4][anchor|#_bac843ff-b0d2-4a51-ad56-4383a178ef63]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form.
#On the form toolbar, click '''Add New Record'''.
#In the '''General Settings''' section, specify the following settings:
#*'''Terms ID''': <tt>30D</tt>
#*'''Description''': <tt>30 Days</tt>
#In the '''Due Day Settings''' section, specify the following settings:
#*'''Due Day Type''': ''Fixed Number of Days''
#* '''Due Day 1''': <tt>30</tt>
#In the '''Installment Type''' box of the '''Installment Settings''' section, make sure ''Single'' is selected.
#On the form toolbar, click '''Save'''.

When the applicable credit terms have been defined in the system, vendor and customer classes (and vendors and customers) can be created.]]></column>
			<column name="PlainText"><![CDATA[Credit Terms: To Define Credit Terms In this activity, you will learn how to define credit terms, which can be used by             vendors in their relations with the company and by the company in its relations with             customers. Story Suppose that SweetLife has agreements with its customers and vendors stipulating that                 the full amount of each document will be paid within 30 days; no cash discounts are                 provided. Acting as an administrator, you have to define one set of credit terms,                 which indicate that the full amount of each document must be paid within 30                 days. System Preparation Before you start defining the credit terms, make sure that the company and its actual                 ledger has been created, as described in  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. Step: Defining Credit Terms Perform the following instructions to define the needed set of credit terms: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form. On the form toolbar, click  Add New Record . In the  General Settings  section, specify the following                         settings: Terms ID :  30D Description :  30 Days In the  Due Day Settings  section, specify the following                         settings: Due Day Type :  Fixed Number of Days Due Day 1 :  30 In the  Installment Type  box of the  Installment                         Settings  section, make sure  Single  is selected. On the form toolbar, click  Save . When the applicable credit terms have been defined in the system, vendor and customer                 classes (and vendors and customers) can be created. ]]></column>
		</row>
		<row PageID="3cc687f2-d52a-4672-9380-fd948b2603fe" Language="en-US" PageRevisionID="1" Content="&#xA;Before users can start adding vendors and documents related to vendors in the system, the basic accounts payable functionality has to be implemented in the system. This chapter describes the basic configuration to be performed, including creating vendor classes and specifying the preference settings for accounts payable." PlainText="Implementing Accounts Payable Before users can start adding vendors and documents related to vendors in the system, the     basic accounts payable functionality has to be implemented in the system. This chapter describes     the basic configuration to be performed, including creating vendor classes and specifying the     preference settings for accounts payable. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e3d86df0-c93b-40d1-db1b-b00688cf60da" RecordSourceID="22377" />
		<row PageID="94b88557-fb99-494e-b27c-b931f2feb4cf" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="4dde9684-8df7-e292-2145-17fa858e16c7" RecordSourceID="22377">
			<column name="Content"><![CDATA[
For users to be able to define vendors and enter and process documents to vendors in the system, the accounts payable functionality has to be implemented in Acumatica ERP. The implementation process includes creating vendor classes and specifying the accounts payable preference settings.
==Learning Objectives==
In this chapter, you will learn how to implement the basic configuration of the accounts payable functionality for a company.
==Applicable Scenarios==
You perform the basic configuration of the accounts payable functionality during the implementation of Acumatica ERP, after a company has been configured in the system and the general ledger functionality and cash management functionality have been implemented.
==Workflow of the Implementation of the Accounts Payable Functionality==
To implement the accounts payable functionality, you perform the following general steps:[anchor|#_e0ff54a2-6ece-47ee-afb6-b5b1baf1fea9]
#On the [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form, you create the default vendor class, which will be used to provide default values for vendor accounts of the class when these vendors are created and for other vendor classes that may be created. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Vendor_Classes|Accounts Payable: To Create a Vendor Class].
#On the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form, you specify the necessary settings (and any optional settings) to be used in accounts payable. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_AP_Preferences|Accounts Payable: To Specify Accounts Payable Preferences].
]]></column>
			<column name="PlainText"><![CDATA[Accounts Payable: General Information For users to be able to define vendors and enter and process documents to vendors in the         system, the accounts payable functionality has to be implemented in  Acumatica ERP. The implementation process includes creating vendor classes and specifying the accounts         payable preference settings. Learning Objectives In this chapter, you will learn how to implement the basic configuration of the accounts         payable functionality for a company. Applicable Scenarios You perform the basic configuration of the accounts payable functionality during the         implementation of  Acumatica ERP, after a company has been configured in the system and the general ledger functionality         and cash management functionality have been implemented. Workflow of the Implementation of the Accounts Payable Functionality To implement the accounts payable functionality, you perform the following general steps: On the   ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form, you create the default           vendor class, which will be used to provide default values for vendor accounts of the           class when these vendors are created and for other vendor classes that may be created. For           details, see  Accounts Payable: To Create a Vendor Class. On the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form, you specify the           necessary settings (and any optional settings) to be used in accounts payable. For           details, see  Accounts Payable: To Specify Accounts Payable Preferences. ]]></column>
		</row>
		<row PageID="1cda5f18-a45e-40d6-bc31-ff223018590a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="248720ce-ff36-6d5a-ab27-f01969a1161a" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Before you start to implement accounts payable, you must be sure that the system has been configured properly and that all required entities have been created, as described in the following sections.{br}{TOC}
==Enabling the Needed Features==
On the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, the minimum set of features has to be enabled. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches].
==Configuring the System==
You need to make sure the following implementation tasks have been performed in Acumatica ERP before you begin implementing accounts payable:[anchor|#_4c34829d-fae3-4a26-8078-5d64b000acc3]
*On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, the companies of the organization have been configured, and the appropriate actual ledger has been assigned to each company. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
*On the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form, the accounts to be used with the accounts payable functionality have been defined. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_COA|General Ledger: To Create a Chart of Accounts].
*On the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form, the preference settings for the general ledger functionality have been specified. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_GL_Preferences|General Ledger: To Specify General Ledger Preferences].
*On the [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000]) form, the cash accounts to be used for recording payments to vendors have been created. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Cash_Accounts|Cash Management: To Create Cash Accounts].
*On the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, the payment methods to be used in accounts payable have been properly configured. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Payment_Methods|Cash Management: To Modify a Payment Method].
*On the [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form, the credit terms to be used by vendors in their relations with the company have been configured. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].
]]></column>
			<column name="PlainText"><![CDATA[Accounts Payable: Configuration Prerequisites Before you start to implement accounts payable, you must be sure that the system has been         configured properly and that all required entities have been created, as described in the         following sections. Enabling the Needed Features On the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features         (CS100000) form, the minimum set of features has to be enabled. For details, see  Company Without Branches: To Configure a Company Without Branches. Configuring the System You need to make sure the following implementation tasks have been performed in  Acumatica ERP before you begin implementing accounts payable: On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, the companies of the           organization have been configured, and the appropriate actual ledger has been assigned to           each company. For details, see  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. On the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form, the           accounts to be used with the accounts payable functionality have been defined. For           details, see  General Ledger: To Create a Chart of Accounts. On the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form, the preference           settings for the general ledger functionality have been specified. For more information,           see  General Ledger: To Specify General Ledger Preferences. On the   ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) form, the cash accounts to be      used for recording payments to vendors have been created. For details, see  Cash Management: To Create Cash Accounts. On the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form, the payment methods to           be used in accounts payable have been properly configured. For more information, see  Cash Management: To Modify a Payment Method. On the   ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form, the credit terms to be      used  by vendors in their relations with the company have been configured. For details, see        Credit Terms: To Define Credit Terms. ]]></column>
		</row>
		<row PageID="59923682-1eb5-4edd-8a53-2080ddb7a561" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7ca27fb2-bd5b-d90b-150a-a0d422de3723" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A vendor class groups vendors that have similar characteristics. Vendor classes can be based on the types of goods or services you purchase from vendors of the class or on other properties, such as the vendors&rsquo; currency and payment methods. For instance, you might find it useful to create one vendor class for tax agencies and another for 1099 vendors.
==Creation of a Vendor Class==
You define vendor classes and their settings on the [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form. You can then select the appropriate vendor class when you are creating a vendor account on the [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000]) form, which causes the system to fill in the values of the class for the vendor. Any of these default values can be overridden. {br}

During basic system configuration, you need to create only the vendor class to be used by default; you then specify it as the default vendor class on the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form. After you specify the default vendor class, when you create another vendor class, the system automatically inserts the values of the default vendor class, any of which can be overridden. When you create a new vendor account, the default vendor class is initially specified as the vendor class, but you can change it to any other class.]]></column>
			<column name="PlainText"><![CDATA[Accounts Payable: Vendor Classes A vendor class groups vendors that have similar characteristics. Vendor classes can be based     on the types of goods or services you purchase from vendors of the class or on other properties,     such as the vendors' currency and payment methods. For instance, you might find it useful to     create one vendor class for tax agencies and another for 1099 vendors. Creation of a Vendor Class You define vendor classes and their settings on the   ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form. You can then select the appropriate vendor class when you are creating a     vendor account on the   ([~/?ScreenId=AP303000|AP303000]) Vendors (AP303000) form, which causes     the system to fill in the values of the class for the vendor. Any of these default values can be     overridden.  During basic system configuration, you need to create only the vendor class to be used by     default; you then specify it as the default vendor class on the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form. After you specify the default vendor     class, when you create another vendor class, the system automatically inserts the values of the     default vendor class, any of which can be overridden. When you create a new vendor account, the     default vendor class is initially specified as the vendor class, but you can change it to any     other class. ]]></column>
		</row>
		<row PageID="90a53490-44c9-42c8-8b4d-b3e036551c41" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="9705bd51-50eb-254a-3a16-f34f464edc99" RecordSourceID="22377">
			<column name="Content"><![CDATA[
You will now define the default vendor class in the system, which will provide many of the settings for newly created vendors and for other vendor classes you create, thus easing the creation of these entities during the next phase of implementation. Among other settings for the vendor class, you will specify the credit terms you have created.
==Story==
Suppose that most of the vendors of the SweetLife company use the same settings, such as credit terms, payment method, cash account, AP account, and cash discount account. Acting as an administrator, you will create a default vendor class with these settings so that it can supply default settings when vendors and other vendor classes are created in the system.
==System Preparation==
Before you start creating the vendor class, make sure that the following tasks have been performed in the system:[anchor|#_f563973b-e471-4676-835e-bf7274c0c249]
#The company has been created and an actual ledger has been assigned to it; see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The credit terms that are used by vendors have been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].

==Step: Creating the Default Vendor Class==
To create the default vendor class, you perform the following instructions:[anchor|#_a6b336d2-0ede-4f27-8944-7e6aa131963f][anchor|#_fa91cfbf-a796-4b18-bbc6-90cceac97496]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000]) form. 
#On the form toolbar, click '''Add New Record'''.
#In the Summary area, specify the following settings:
#*'''Class ID''': <tt>DEFAULT</tt>
#*'''Description''': <tt>Default Vendor Class</tt>
#In the '''Default General Settings''' section of the '''General Settings''' tab, select ''US - United States of America'' in the '''Country''' box.
#In the '''Default Financial Settings''' section of the '''General Settings''' tab, specify the following settings:
#*'''Terms''': ''30D - 30 Days''
#* '''Payment Method''': ''CHECK - Check Payment''
#* '''Cash Account''': ''10200 - Checking Account''
#On the '''GL Accounts''' tab, specify the following accounts:
#*'''AP Account''': ''20000 - Accounts Payable''
#* '''Cash Discount Account''': ''52600 - Cash Discount''
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Accounts Payable: To Create a Vendor Class You will now define the default vendor class in the system, which will provide many                 of the settings for newly created vendors and for other vendor classes you create,                 thus easing the creation of these entities during the next phase of implementation.                 Among other settings for the vendor class, you will specify the credit terms you                 have created. Story Suppose that most of the vendors of the SweetLife company use the same settings, such                 as credit terms, payment method, cash account, AP account, and cash discount                 account. Acting as an administrator, you will create a default vendor class with                 these settings so that it can supply default settings when vendors and other vendor                 classes are created in the system. System Preparation Before you start creating the vendor class, make sure that the following tasks have                 been performed in the system: The company has been created and an actual ledger has been assigned to it; see                          Company Without Branches: To Configure a Company Without Branches                     and  General Ledger: To Create an Actual Ledger. The credit terms that are used by vendors have been created, as described in                          Credit Terms: To Define Credit Terms. Step: Creating the Default Vendor Class To create the default vendor class, you perform the following instructions: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) form.  On the form toolbar, click  Add New Record . In the Summary area, specify the following settings: Class ID :  DEFAULT Description :  Default Vendor                                 Class In the  Default General Settings  section of the                          General Settings  tab, select  US - United States of                         America  in the  Country  box. In the  Default Financial Settings  section of the                          General Settings  tab, specify the following                         settings: Terms :  30D - 30 Days Payment Method :  CHECK - Check Payment Cash Account :  10200 - Checking                             Account On the  GL Accounts  tab, specify the following                         accounts: AP Account :  20000 - Accounts Payable Cash Discount Account :  52600 - Cash                                 Discount On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="931e7038-3340-4b61-a88a-46de8670f376" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="904d2d34-bde4-5b8a-9523-9cdc7d46a8f6" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to specify the basic settings to be used in accounts payable.
==Story==
Suppose that as an administrator, you need to define preference settings for the accounts payable functionality. You need to specify the default vendor class and other settings that will make it easier for users to create AP documents.
==System Preparation==
Before you start specifying the accounts payable preference settings, make sure that the following tasks have been performed in the system:[anchor|#_f563973b-e471-4676-835e-bf7274c0c249]
#The company has been created and its actual ledger has been specified; [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The credit terms that are used by vendors have been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].
#The default vendor class has been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Vendor_Classes|Accounts Payable: To Create a Vendor Class].

==Step: Specifying the Accounts Payable Preferences==
You specify the required and recommended settings that apply to accounts payable as follows:[anchor|#_b238d742-b931-4d8c-bb59-d29a404db1fb][anchor|#_566ba65a-9044-4862-b0b1-1a01916808ff]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form.
#:Note that all the required settings (that is, those marked with an asterisk) have already been specified by default. 
#In the '''Posting Settings''' section of the '''General Settings''' tab, make sure the '''Automatically Post on Release''' check box is selected. With this setting, transactions related to AP documents will be automatically posted to the general ledger once they are released.
#In the '''Data Entry Settings''' section of the '''General Settings''' tab, specify the following settings, which simplify the processing of AP documents:
#*'''Default Vendor Class ID''': ''DEFAULT''
#* '''Hold Documents on Entry''': Cleared
#*'''Require Approval of Bills Prior to Payment''': Cleared
#*'''Validate Document Totals on Entry''': Cleared
#*'''Require Vendor Reference''': Cleared
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Accounts Payable: To Specify Accounts Payable Preferences In this activity, you will learn how to specify the basic settings to be used in                 accounts payable. Story Suppose that as an administrator, you need to define preference settings for the                 accounts payable functionality. You need to specify the default vendor class and                 other settings that will make it easier for users to create AP documents. System Preparation Before you start specifying the accounts payable preference settings, make sure that                 the following tasks have been performed in the system: The company has been created and its actual ledger has been specified;  Company Without Branches: To Configure a Company Without Branches and                          General Ledger: To Create an Actual Ledger. The credit terms that are used by vendors have been created, as described in                          Credit Terms: To Define Credit Terms. The default vendor class has been created, as described in  Accounts Payable: To Create a Vendor Class. Step: Specifying the Accounts Payable Preferences You specify the required and recommended settings that apply to accounts payable as                 follows: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form. Note                         that all the required settings (that is, those marked with an asterisk) have                         already been specified by default.  In the  Posting Settings  section of the  General                         Settings  tab, make sure the  Automatically Post on                         Release  check box is selected. With this setting, transactions                     related to AP documents will be automatically posted to the general ledger once                     they are released. In the  Data Entry Settings  section of the                          General Settings  tab, specify the following settings,                     which simplify the processing of AP documents: Default Vendor Class ID :  DEFAULT Hold Documents on Entry : Cleared Require Approval of Bills Prior to Payment :                             Cleared Validate Document Totals on Entry : Cleared Require Vendor Reference : Cleared On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="4cc687f2-d52a-4672-9380-fd948b2603fe" Language="en-US" PageRevisionID="1" Content="&#xA;Before users can start adding customer accounts and documents into the system, the basic accounts receivable functionality has to be implemented in the system. This chapter describes the basic configuration to be performed, including defining statement cycles, creating customer classes, and specifying the preference settings for accounts receivable." PlainText="Implementing Accounts Receivable Before users can start adding customer accounts and documents into the system, the basic     accounts receivable functionality has to be implemented in the system. This chapter describes     the basic configuration to be performed, including defining statement cycles, creating customer     classes, and specifying the preference settings for accounts receivable. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e0fae7d7-4443-5699-dcbe-df413539c81d" RecordSourceID="22377" />
		<row PageID="bdf4f0fb-661f-4a67-80e2-f84139972c05" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="1ff3dcdc-a2a2-b174-72e6-4502d368ebb2" RecordSourceID="22377">
			<column name="Content"><![CDATA[
For users to be able to define customers and enter and process customer documents in the system, the accounts receivable functionality has to be implemented in Acumatica ERP. The implementation process includes defining statement cycles, creating vendor classes, and specifying the accounts receivable preference settings.
==Learning Objectives==
In this chapter, you will learn how to implement the basic configuration of the accounts receivable functionality for a company.
==Applicable Scenarios==
You perform the basic configuration of the accounts receivable functionality during the implementation of Acumatica ERP, after the company has been configured in the system and the general ledger functionality and cash management functionality have been implemented.
==Workflow of the Implementation of the Accounts Receivable Functionality==
To implement the accounts receivable functionality, you perform the following general steps:[anchor|#_e0ff54a2-6ece-47ee-afb6-b5b1baf1fea9]
#On the [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form, you define the necessary statement cycles to track customers' outstanding balances. These cycles will later be used for sending electronic or printed statements to the customers.
#On the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form, you create the default customer class, which will be used to provide default values for customer accounts of the class when they are created and for other customer classes that may be created.
#On the [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form, you specify the settings to be used in accounts receivable.
]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivable: General Information For users to be able to define customers and enter and process customer documents in the         system, the accounts receivable functionality has to be implemented in  Acumatica ERP. The implementation process includes defining statement cycles, creating vendor classes,         and specifying the accounts receivable preference settings. Learning Objectives In this chapter, you will learn how to implement the basic configuration of the accounts         receivable functionality for a company. Applicable Scenarios You perform the basic configuration of the accounts receivable functionality during the         implementation of  Acumatica ERP, after the company has been configured in the system and the general ledger functionality         and cash management functionality have been implemented. Workflow of the Implementation of the Accounts Receivable Functionality To implement the accounts receivable functionality, you perform the following general         steps: On the   ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form, you define the           necessary statement cycles to track customers' outstanding balances. These cycles will           later be used for sending electronic or printed statements to the customers. On the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form, you create the default           customer class, which will be used to provide default values for customer accounts of the           class when they are created and for other customer classes that may be created. On the   ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form, you specify the           settings to be used in accounts receivable. ]]></column>
		</row>
		<row PageID="9a18535f-2fa5-4ce3-a381-666d63859001" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b6220e10-1dc1-7195-b680-7e9bcb48bd37" RecordSourceID="22377">
			<column name="Content"><![CDATA[
Before you start to implement accounts receivable, you must be sure that the system has been configured properly and that all required entities have been created, as described in the following sections.{br}{TOC}
==Enabling the Needed Features==
On the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form, the minimum set of features has to be enabled. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches].
==Configuring the System==
You need to make sure the following implementation tasks have been performed in Acumatica ERP before you begin implementing accounts receivable:[anchor|#_4c34829d-fae3-4a26-8078-5d64b000acc3]
*On the [HelpRoot_FormReference\CS_10_15_00|Companies] ([~/?ScreenId=CS101500|CS101500]) form, the companies of the organization have been configured, and the appropriate actual ledger has been assigned to each company. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
*On the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form, the accounts to be used with the accounts receivable functionality have been defined. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_COA|General Ledger: To Create a Chart of Accounts].
*On the [HelpRoot_FormReference\GL_10_20_00|General Ledger Preferences] ([~/?ScreenId=GL102000|GL102000]) form, the preference settings for the general ledger functionality have been specified. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_GL_Preferences|General Ledger: To Specify General Ledger Preferences].
*On the [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000]) form, the payment methods to be used in accounts receivable have been properly configured. For more information, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Payment_Methods|Cash Management: To Modify a Payment Method].
*On the [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500]) form, the credit terms to be used by the company in its relations with customers have been configured. For details, see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].
]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivable: Configuration Prerequisites Before you start to implement accounts receivable, you must be sure that the system has been         configured properly and that all required entities have been created, as described in the         following sections. Enabling the Needed Features On the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features         (CS100000) form, the minimum set of features has to be enabled. For details, see  Company Without Branches: To Configure a Company Without Branches. Configuring the System You need to make sure the following implementation tasks have been performed in  Acumatica ERP before you begin implementing accounts receivable: On the   ([~/?ScreenId=CS101500|CS101500]) Companies (CS101500) form, the companies of the           organization have been configured, and the appropriate actual ledger has been assigned to           each company. For details, see  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. On the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form, the           accounts to be used with the accounts receivable functionality have been defined. For more           information, see  General Ledger: To Create a Chart of Accounts. On the   ([~/?ScreenId=GL102000|GL102000]) General Ledger Preferences (GL102000) form, the preference settings           for the general ledger functionality have been specified. For details, see  General Ledger: To Specify General Ledger Preferences. On the   ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) form, the payment methods to           be used in accounts receivable have been properly configured. For more information, see              Cash Management: To Modify a Payment Method. On the   ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) form, the credit terms to be      used by the company in its relations with customers have been configured. For details, see        Credit Terms: To Define Credit Terms. ]]></column>
		</row>
		<row PageID="780169a6-b692-41fd-a5ba-775cc9135810" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="0cc21265-ad5a-06f3-778b-b36e2851268d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In Acumatica ERP, you can define any number of statement cycles to be used for collecting payments from customers. At the end of each statement cycle, the company prepares statements and sens them to its customers. Statements provide customers with records of their financial activity for a specific period, including the ending balance.
==Statement Cycle Setup==
 You use the [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form to create new statement cycles and modify existing ones. For each statement cycle, you define the following:[anchor|#ul_x1t_mwb_c4]
*The schedule according to which statements will be generated. 
*The aging periods to be used. You can define five aging periods for each statement cycle, to group the sums of the balances of open invoices, overdue charges, and debit memos by the number of days they are past due. The system uses the aging period settings in accounts receivable aging reports, which users can analyze to identify potential cash flow problems.
*The statement processing options.
*The overdue charges. 

You can assign a statement cycle to a customer class by using the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form and directly to a customer on the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form. ]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivable: Statement Cycles In  Acumatica ERP, you can define any number of statement cycles to be used for collecting payments from         customers. At the end of each statement cycle, the company prepares statements and sens them         to its customers. Statements provide customers with records of their financial activity for         a specific period, including the ending balance. Statement Cycle Setup  You use the   ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form to create new         statement cycles and modify existing ones. For each statement cycle, you define the         following: The schedule according to which statements will be generated.  The aging periods to be used. You can define five aging periods for each statement           cycle, to group the sums of the balances of open invoices, overdue charges, and debit           memos by the number of days they are past due. The system uses the aging period settings           in accounts receivable aging reports, which users can analyze to identify potential cash           flow problems. The statement processing options. The overdue charges.  You can assign a statement cycle to a customer class by using the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form and directly to a         customer on the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form.        ]]></column>
		</row>
		<row PageID="98d9bb2a-43ff-40b7-bfbc-f0b49c771e6f" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e3781a1a-8f0c-8eb8-a638-73cb2cabe987" RecordSourceID="22377">
			<column name="Content"><![CDATA[In this activity, you will learn how to define a statement cycle in the system.
==Story==
Suppose that the SweetLife company informs its customers about their current balances and outstanding documents by sending the customers statements at the end of every month. In the statements, the outstanding customer documents should be broken down by the following aging periods: 0 to 10 days, 11 to 20 days, 21 to 45 days, and more than 30 days. The outstanding documents are aged based on their due dates. Acting as an administrator, you need to define the statement cycle in the system.
==System Preparation==
Before you start defining statement cycles, make sure that the company has been created and its actual ledger has been specified; see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
==Step: Defining a Statement Cycle==
You define the statement cycle as follows:[anchor|#_620936d3-5df4-4bb0-9709-2c97e05a36b1][anchor|#_f65512d7-3830-4038-8ccf-1d925175e8b2]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\AR_20_28_00|Statement Cycles] ([~/?ScreenId=AR202800|AR202800]) form.
#On the form toolbar, click '''Add New Record'''.
#In the '''General Settings''' section, specify the following settings:
#*'''Cycle ID''': <tt>EOM</tt>
#*'''Description''': <tt>End of Month</tt>
#*'''Schedule Type''': ''End of Month''
#In the '''Aging Settings''' section, specify the following settings:
#*'''Use Financial Periods for Aging''': Cleared
#*'''Aging Period (Days), 1 –''': <tt>10</tt>
#*:Once you specify the first aging period, the system automatically specifies the other aging periods, based on the assumption that all the aging periods will have the same length. The system also automatically specifies the descriptions for aging periods. If needed, you can change the automatically specified settings of aging periods to custom ones.
#*'''Age Based On''': ''Due Date''
#*:This setting means that the system will use the due dates of the outstanding documents to determine the appropriate aging period in customer statements and accounts receivable aging reports for outstanding invoices, debit memos, and overdue charges.
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivable: To Create a Statement Cycle In this activity, you will learn how to define a statement cycle in the             system. Story Suppose that the SweetLife company informs its customers about their current balances                 and outstanding documents by sending the customers statements at the end of every                 month. In the statements, the outstanding customer documents should be broken down                 by the following aging periods: 0 to 10 days, 11 to 20 days, 21 to 45 days, and more                 than 30 days. The outstanding documents are aged based on their due dates. Acting as                 an administrator, you need to define the statement cycle in the system. System Preparation Before you start defining statement cycles, make sure that the company has been                 created and its actual ledger has been specified; see  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. Step: Defining a Statement Cycle You define the statement cycle as follows: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=AR202800|AR202800]) Statement Cycles (AR202800) form. On the form toolbar, click  Add New Record . In the  General Settings  section, specify the following                         settings: Cycle ID :  EOM Description :  End of                             Month Schedule Type :  End of Month In the  Aging Settings  section, specify the following                         settings: Use Financial Periods for Aging : Cleared Aging Period (Days), 1 – :                                  10 Once you specify the first aging period,                                 the system automatically specifies the other aging periods, based on                                 the assumption that all the aging periods will have the same length.                                 The system also automatically specifies the descriptions for aging                                 periods. If needed, you can change the automatically specified                                 settings of aging periods to custom ones. Age Based On :  Due Date This setting                                 means that the system will use the due dates of the outstanding                                 documents to determine the appropriate aging period in customer                                 statements and accounts receivable aging reports for outstanding                                 invoices, debit memos, and overdue charges. On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="c90069cc-5719-4ebc-997a-a92f831e57da" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="70ddc7b6-b11c-f4bc-d9ce-7740602d2c5b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
A customer class groups customers that have similar characteristics. Customer classes can be based on the types of goods or services the customers buy or on other properties, such as each customer&rsquo;s currency and payment method.
==Defining a Customer Class==
You define customer classes and their settings on the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form. You specify a customer class when you create a customer account on the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form, which causes the system to fill in the values of the class for the customer. Any of these default values can be overridden. {br}

During basic system configuration, you need to create only the customer class to be used by default; you then specify it as the default customer class on the [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form. When you create a customer class, the system automatically inserts the values of the default customer class, any of which can be overridden. When you create a new customer account, the default customer class is initially specified as the customer class, but you can change it to any other class.{br}{TOC}]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivable: Customer Classes A customer class groups customers that have similar characteristics. Customer classes can         be based on the types of goods or services the customers buy or on other properties, such as         each customer's currency and payment method. Defining a Customer Class You define customer classes and their settings on the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form. You specify a customer class when         you create a customer account on the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000)         form, which causes the system to fill in the values of the class for the customer. Any of         these default values can be overridden.  During basic system configuration, you need to create only the customer class to be used by         default; you then specify it as the default customer class on the   ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form. When you create a customer class,         the system automatically inserts the values of the default customer class, any of which can         be overridden. When you create a new customer account, the default customer class is         initially specified as the customer class, but you can change it to any other class. ]]></column>
		</row>
		<row PageID="9c04e7d3-f378-497e-857f-04d6f9ea5125" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b96d3221-a5a7-0b2e-ee53-c3e06b97fe8b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will create a default customer class in the system. This class will provide many of the settings for newly created customers and for other customer classes you create, thus easing the creation of these entities during the next phase of implementation. Among other settings for the customer class, you will specify the credit terms you have created.
==Story==
Suppose that most of the customers of the SweetLife company use the same settings, such as credit terms, statement cycle, payment method, sales account, AR account, and cash discount account. Acting as an administrator, you will create a default customer class with these settings so that it can supply default settings when customers and other customer classes are created in the system.
==System Preparation==
Before you start creating the default customer class, make sure that the following tasks have been performed in the system:[anchor|#_f563973b-e471-4676-835e-bf7274c0c249]
#The company has been created and an actual ledger has been specified for it; see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The credit terms that are used by customers have been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].
#At least one statement cycle has been defined in the system, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Customer_Classes|Accounts Receivable: To Create a Customer Class].

==Step: Creating the Default Customer Class==
To create the default customer class, perform the following instructions:[anchor|#_7a038881-8c3a-40bb-b413-8f26dc3814e9][anchor|#_3a50e8dd-69a8-4e53-9b44-2f397dd9a0f3]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form.
#On the form toolbar, click '''Add New Record'''.
#In the Summary area, specify the following settings:
#*'''Class ID''': <tt>DEFAULT</tt>
#*'''Description''': <tt>Default Customer Class</tt>
#In the '''Default General Settings''' section of the '''General Settings''' tab, select ''US - United States of America'' in the '''Country''' box.
#In the '''Default Financial Settings''' section of the '''General Settings''' tab, specify the following settings:
#*'''Terms''': ''30D - 30 Days''
#* '''Statement Cycle ID''': ''EOM''
#* '''Payment Method''': ''CHECK - Check Payment''
#On the '''GL Accounts''' tab, specify the following accounts:
#*'''AR Account''': ''11000 - Accounts Receivable''
#* '''Sales Account''': ''40000 - Sales Revenue''
#* '''Cash Discount Account''': ''52600 - Cash Discount''
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivable: To Create a Customer Class In this activity, you will create a default customer class in the system. This class                 will provide many of the settings for newly created customers and for other customer                 classes you create, thus easing the creation of these entities during the next phase                 of implementation. Among other settings for the customer class, you will specify the                 credit terms you have created. Story Suppose that most of the customers of the SweetLife company use the same settings,                 such as credit terms, statement cycle, payment method, sales account, AR account,                 and cash discount account. Acting as an administrator, you will create a default                 customer class with these settings so that it can supply default settings when                 customers and other customer classes are created in the system. System Preparation Before you start creating the default customer class, make sure that the following                 tasks have been performed in the system: The company has been created and an actual ledger has been specified for it; see                          Company Without Branches: To Configure a Company Without Branches                     and  General Ledger: To Create an Actual Ledger. The credit terms that are used by customers have been created, as described in                          Credit Terms: To Define Credit Terms. At least one statement cycle has been defined in the system, as described in                          Accounts Receivable: To Create a Customer Class. Step: Creating the Default Customer Class To create the default customer class, perform the following instructions: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form. On the form toolbar, click  Add New Record . In the Summary area, specify the following settings: Class ID :  DEFAULT Description :  Default Customer                                 Class In the  Default General Settings  section of the                          General Settings  tab, select  US - United States of                         America  in the  Country  box. In the  Default Financial Settings  section of the                          General Settings  tab, specify the following                         settings: Terms :  30D - 30 Days Statement Cycle ID :  EOM Payment Method :  CHECK - Check Payment On the  GL Accounts  tab, specify the following                         accounts: AR Account :  11000 - Accounts                             Receivable Sales Account :  40000 - Sales Revenue Cash Discount Account :  52600 - Cash                                 Discount On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="7d50ea5c-cda7-44ca-8fc5-23c9f353297b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8a6cadc8-eae9-4a3a-1fa1-5774c1d48833" RecordSourceID="22377">
			<column name="Content"><![CDATA[
In this activity, you will learn how to define the basic settings to be used for the accounts receivable functionality.
==Story==
Suppose that as an administrator, you need to define the preference settings for the accounts receivable functionality. You need to specify the default customer class and other settings that will make it easier for users to create AR documents.
==System Preparation==
Before you start specifying accounts receivable preference settings, make sure that the following tasks have been performed in the system:[anchor|#_f563973b-e471-4676-835e-bf7274c0c249]
#The company has been created and its actual ledger has been specified; see [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
#The credit terms that are used by customers have been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Credit_Terms|Credit Terms: To Define Credit Terms].
#The default customer class has been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Customer_Classes|Accounts Receivable: To Create a Customer Class].

==Step: Specifying the Accounts Receivable Preferences==
You specify the basic settings that will apply to accounts receivable as follows:[anchor|#_9c5e5dcc-1899-42ae-832e-5c24dcb23508][anchor|#_b90b64e2-c2ed-4f48-a43e-524db3b39239]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]) form.
#:Note that all the required settings (that is, those marked with an asterisk) have already been specified by default. 
#In the '''Posting Settings''' section of the '''General Settings''' tab, make sure the '''Automatically Post on Release''' check box is selected. With this setting, AR transactions will be automatically posted to the general ledger once they are released.
#In the '''Data Entry Settings''' section of the '''General Settings''' tab, specify the following settings, which simplify the processing of AR documents:
#*'''Default Customer Class ID''': ''DEFAULT''
#* '''Hold Documents on Entry''': Cleared
#*'''Validate Document Totals on Entry''': Cleared
#*'''Require Payment Reference on Entry''': Cleared
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Accounts Receivable: To Specify Accounts Receivable Preferences In this activity, you will learn how to define the basic settings to be used for the                 accounts receivable functionality. Story Suppose that as an administrator, you need to define the preference settings for the                 accounts receivable functionality. You need to specify the default customer class                 and other settings that will make it easier for users to create AR documents. System Preparation Before you start specifying accounts receivable preference settings, make sure that                 the following tasks have been performed in the system: The company has been created and its actual ledger has been specified; see  Company Without Branches: To Configure a Company Without Branches and                          General Ledger: To Create an Actual Ledger. The credit terms that are used by customers have been created, as described in                          Credit Terms: To Define Credit Terms. The default customer class has been created, as described in  Accounts Receivable: To Create a Customer Class. Step: Specifying the Accounts Receivable Preferences You specify the basic settings that will apply to accounts receivable as follows: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000) form. Note                         that all the required settings (that is, those marked with an asterisk) have                         already been specified by default.  In the  Posting Settings  section of the  General                         Settings  tab, make sure the  Automatically Post on                         Release  check box is selected. With this setting, AR                     transactions will be automatically posted to the general ledger once they are                     released. In the  Data Entry Settings  section of the                          General Settings  tab, specify the following settings,                     which simplify the processing of AR documents: Default Customer Class ID :  DEFAULT Hold Documents on Entry : Cleared Validate Document Totals on Entry : Cleared Require Payment Reference on Entry : Cleared On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="d2c84446-9419-47ef-8a58-5d70c39b673e" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="bc8f6854-e81b-d434-d832-7288112964b3" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter describes the process of implementing the Currency Management module of Acumatica ERP. This module appears in the Finance suite only if the ''Multi-Currency Accounting'' feature in Acumatica ERP is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. This feature also enables the currency-related UI elements across other modules of the system. {br}

With multicurrency functionality enabled in your instance of Acumatica ERP, you can invoice your customers and receive vendors&rsquo; bills in a foreign currency and maintain bank accounts denominated in a foreign currency. By implementing this module, you can translate statements of your organization to other currencies, or import and consolidate (for corporate reporting) statements of subsidiaries of your organization that operate in different currencies. {br}

((({S:Hint}Enable this feature and implement the Currency Management module only if your organization needs to use multiple currencies for Gl accounts (without this feature you can enter foreign currencies on the fly and cross rates for expense claims). Once you have enabled the feature, disabling it may cause unexpected results. 
))){br}

For more information on using multiple currencies in Acumatica ERP, see [HelpRoot_Financials\CM_00_00_00|Currency Management].[anchor|#1]
==Prerequisites and Dependencies==
The General Ledger and Currency Management modules are highly interdependent. General Ledger must be set up before you enable multiple currencies; however, the General Ledger accounts denominated in foreign currencies can be configured only after the Currency Management module is implemented. 
==In This Chapter==[anchor|#ul_qbm_f32_cs]
*[HelpRoot_Implement\CM_Preparation|Currency Management: Preparation]: Describes what data should be collected, arranged, and analyzed before you take action.
*[HelpRoot_Implement\CM_Configuration|Currency Management: Configuration]: Guides you through actually setting up multiple currencies in Acumatica ERP.
]]></column>
			<column name="PlainText"><![CDATA[Implementing Currency Management This chapter describes the process of implementing the Currency Management module of  Acumatica ERP. This module appears in the Finance suite only if the  Multi-Currency Accounting          feature in  Acumatica ERP is enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form. This         feature also enables the currency-related UI elements across other modules of the system.  With multicurrency functionality enabled in your instance of  Acumatica ERP, you can invoice your customers and receive vendors' bills in a foreign currency and         maintain bank accounts denominated in a foreign currency. By implementing this module, you         can translate statements of your organization to other currencies, or import and consolidate         (for corporate reporting) statements of subsidiaries of your organization that operate in         different currencies.  Enable this feature and implement the Currency Management module only           if your organization needs to use multiple currencies for Gl accounts (without this           feature you can enter foreign currencies on the fly and cross rates for expense claims).           Once you have enabled the feature, disabling it may cause unexpected results.  For more information on using multiple currencies in  Acumatica ERP, see   ([~/?ScreenId=CM000000|CM000000]) Currency Management. Prerequisites and Dependencies The General Ledger and Currency Management modules are highly interdependent. General Ledger         must be set up before you enable multiple currencies; however, the General Ledger accounts         denominated in foreign currencies can be configured only after the Currency Management         module is implemented.  In This Chapter Currency Management: Preparation: Describes what data should be collected, arranged, and      analyzed before you take action. Currency Management: Configuration: Guides you through actually setting up multiple      currencies in  Acumatica ERP. ]]></column>
		</row>
		<row PageID="90669852-2917-45d6-ad27-8bcb45201908" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="935ffe43-4b65-b5ce-0291-5a483152d698" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This topic covers the preparation that you have to perform before you begin configuring the Currency Management module in Acumatica ERP. [anchor|#table_in2_1j2_cs]((({S:Warn}The links in the table are the links to topics in the Financial Management Guide and System Administration Guide.
)))
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="66%" ! Description
!width="13%" ! Feature
|- 
| '''Prepare the list of currencies'''
| 
Prepare the list of currencies that are used in transactions with vendors and customers. Add the currencies of bank accounts. Also, add the currency of the headquarters or the currencies of subsidiaries which one is applicable (for the ''General Ledger Consolidation ''feature).{br}

For each currency, decide upon its identifier, description, symbol, and decimal precision (the number of digits following the decimal point that are used in operations with the currency). ((({S:Hint}We recommend that you refer to the ISO 4217 standard when assigning IDs to the currencies.
)))
| 
|- 
| '''Plan GL accounts for the currencies'''
| 
For the base currency, plan the GL accounts you will use for the following:[anchor|#ul_vtg_2t2_cs]
*Realized gain account
*Realized loss account
*Translation gain account
*Translation loss account

For foreign currencies, plan the GL accounts you will use for the following:: [anchor|#ul_ip2_1j2_cs]
*Realized gain account
*Realized loss account
*Unrealized gain account
*Unrealized loss account
*AP provisioning account
*AR provisioning account
*Revaluation gain account
*Revaluation loss account
*Translation gain account
*Translation loss account
*Rounding gain account
*Rounding loss account
{br}

You can use one set of accounts for all foreign currencies, or you can create a set of accounts for each foreign currency. write down the accounts you will need to create.
| 
|- 
| '''Plan subaccounts for the currencies'''
| (This task is performed only if the ''Subaccounts'' feature is enabled.)
For the base currency, decide on the following subaccounts:[anchor|#ul_sk1_kt2_cs]
*Realized gain subaccount
*Realized loss subaccount
*Translation gain subaccount
*Translation loss subaccount

For each currency, decide which subaccounts to use for the following: [anchor|#ul_vp2_1j2_cs]
*Realized gain subaccount
*Realized loss subaccount
*Unrealized gain subaccount
*Unrealized loss subaccount
*AP provisioning subaccount
*AR provisioning subaccount
*Revaluation gain subaccount
*Revaluation loss subaccount
*Translation gain subaccount
*Translation loss subaccount
*Rounding gain subaccount
*Rounding loss subaccount
{br}

Decide whether you need to combine subaccounts for gains and losses from segment values of subaccounts associated with currencies and branches. 
| Subaccounts
|- 
| '''Define rate types'''
| 
Prepare a list of the required exchange rate types. This list should include the rates used in daily operations with customers and vendors and the rates needed for revaluation and translation. Choose which of the rates should be default rates for General Ledger, Accounts Payable, Accounts Receivable, and Cash Management transactions, General Ledger, Accounts Payable, and Accounts Receivable revaluations. {br}

With Acumatica ERP, you can set up automatic updating of the exchange rates by using the [https://openexchangerates.org/|''Open Exchange Rates API''] online service. You can choose the rates for updating by this service and specify the adjustment percent if needed. Decide on the frequency of updating the rates—you can set up a schedule for automatic updating of the rates through this online service.{br}

 By default, an identifier for a rate type may include up to six alphanumeric characters. {br}

 For more information, see [HelpRoot_Financials\CM__con_Currency_Rate_Type_Setup|Currency Rate Type Creation] and [HelpRoot_Financials\CM__Refreshing_Currency_Rates|Ability to Refresh Currency Rates]. 
| 
|- 
| '''Decide on the allowed rate variance'''
|  Decide if the user should be warned when an exchange rate manually entered for a transaction differs too much from the rate maintained in the rate table, and what should be the maximum allowed variance should be. 
| 
|- 
| '''Plan the numbering sequences'''
| 
Plan the numbering sequence for unrealized gain/loss batches generated for Accounts Payable or Accounts Receivable revaluation; you can reuse an existing numbering sequence. For example, unrealized gain/loss batches can share a numbering sequence with General Ledger batches. {br}

For more information, see [HelpRoot_Administration\CS__con_Multiple_Numbering_Sequences|Numbering Sequence Usage]. 
| 
|- 
| '''Decide on auto-posting of Currency Management batches'''
|  Decide whether Currency Management batches generated for revaluations should be posted automatically to general ledger. 
| 
|- 
| '''Identify denominated accounts'''
| 
Prepare a list of General Ledger accounts to be denominated in foreign currencies with their account numbers and the currencies. Balances of denominated accounts are maintained in both the base currency and in the currency of denomination.{br}

For each account that is not listed on the chart of accounts yet, also indicate the description, account class, and account type.{br}

See [HelpRoot_Financials\GL__con_Denominated_Accounts|Denominated Accounts].
| 
|- 
| '''Plan translations of financial statements'''
| 
 For the translation from the base currency to a reporting currency, plan a destination ledger of the ''Reporting'' type, rate types, and the rules that include the ranges of accounts, each translated by using a specific rate type.{br}

Prepare a list of accounts (and subaccounts) to be used to record translation gains and losses. {br}

For more information, see [HelpRoot_Financials\CM__con_Overview_of_Translations|Translation Processing Workflow].
| Translation of Fin. Statements
|}
 You can print the [HelpRoot_ImplementChecklists\CM_Preparation_Checklist|Currency Management Preparation Checklist] and refer to it when you prepare to implement the Currency Management module. ]]></column>
			<column name="PlainText"><![CDATA[Currency Management: Preparation This topic covers the preparation that you have to perform before you begin configuring the         Currency Management module in  Acumatica ERP.  The links in the table are the links to topics in the Financial Management Guide and             System Administration Guide. Task  Description Feature Prepare the list of currencies Prepare the list of currencies that are used in transactions with vendors and                   customers. Add the currencies of bank accounts. Also, add the currency of the                   headquarters or the currencies of subsidiaries which one is applicable (for the                      General Ledger Consolidation  feature). For each currency, decide upon its identifier, description, symbol, and decimal                   precision (the number of digits following the decimal point that are used in                   operations with the currency).  We recommend that you refer to the ISO 4217 standard when                   assigning IDs to the currencies. Plan GL accounts for the currencies For the base currency, plan the GL accounts you will use for the following: Realized gain account Realized loss account Translation gain account Translation loss account For foreign currencies, plan the GL accounts you will use for the following::  Realized gain account Realized loss account Unrealized gain account Unrealized loss account AP provisioning account AR provisioning account Revaluation gain account Revaluation loss account Translation gain account Translation loss account Rounding gain account Rounding loss account You can use one set of accounts for all foreign currencies, or you can create a                   set of accounts for each foreign currency. write down the accounts you will need                   to create. Plan subaccounts for the currencies (This task is performed only if the  Subaccounts  feature is enabled.) For                   the base currency, decide on the following subaccounts: Realized gain subaccount Realized loss subaccount Translation gain subaccount Translation loss subaccount For each currency, decide which subaccounts to use for the following:  Realized gain subaccount Realized loss subaccount Unrealized gain subaccount Unrealized loss subaccount AP provisioning subaccount AR provisioning  subaccount Revaluation gain subaccount Revaluation loss subaccount Translation gain subaccount Translation loss subaccount Rounding gain subaccount Rounding loss subaccount Decide whether you need to combine subaccounts for gains and losses                   from segment values of subaccounts associated with currencies and branches.                  Subaccounts Define rate types Prepare a list of the required exchange rate types. This list should include the                   rates used in daily operations with customers and vendors and the rates needed for                   revaluation and translation. Choose which of the rates should be default rates for                   General Ledger, Accounts Payable, Accounts Receivable, and Cash Management                   transactions, General Ledger, Accounts Payable, and Accounts Receivable                   revaluations.  With  Acumatica ERP, you can set up automatic updating of the exchange rates by using the  Open                       Exchange Rates API ''Open Exchange Rates API'' online service. You can choose the rates for                   updating by this service and specify the adjustment percent if needed. Decide on                   the frequency of updating the rates—you can set up a schedule for automatic                   updating of the rates through this online service.  By default, an identifier for a rate type may include up to six alphanumeric                   characters.   For more information, see  Currency Rate Type Creation and  Ability to Refresh Currency Rates.  Decide on the allowed rate variance  Decide if the user should be warned when an exchange rate manually entered for                 a transaction differs too much from the rate maintained in the rate table, and what                 should be the maximum allowed variance should be.  Plan the numbering sequences Plan the numbering sequence for unrealized gain/loss batches generated for                   Accounts Payable or Accounts Receivable revaluation; you can reuse an existing                   numbering sequence. For example, unrealized gain/loss batches can share a                   numbering sequence with General Ledger batches.  For more information, see  Numbering Sequence Usage.                  Decide on auto-posting of Currency Management batches  Decide whether Currency Management batches generated for revaluations should                 be posted automatically to general ledger.  Identify denominated accounts Prepare a list of General Ledger accounts to be denominated in foreign currencies                   with their account numbers and the currencies. Balances of denominated accounts                   are maintained in both the base currency and in the currency of denomination. For each account that is not listed on the chart of accounts yet, also indicate                   the description, account class, and account type. See  Denominated Accounts. Plan translations of financial statements  For the translation from the base currency to a reporting currency, plan a                   destination ledger of the  Reporting  type, rate types, and the rules that                   include the ranges of accounts, each translated by using a specific rate type. Prepare a list of accounts (and subaccounts) to be used to record  translation                   gains and losses.  For more information, see  Translation Processing Workflow. Translation of Fin. Statements  You can print the  Currency Management Preparation Checklist and refer to it when you         prepare to implement the Currency Management module.  ]]></column>
		</row>
		<row PageID="bbbd3ec8-14c1-4f92-b4bd-7634fd70d2ae" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="578b240a-a7cb-1190-e0fa-26c8a7b397cb" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will guide you through the process of configuring the Currency Management module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform these tasks in the order in which they are presented.[anchor|#table_v2f_nk2_cs]
{| class="checklist" | width="100%" 
|- 
!width="3%" ! '''No.'''
!width="22%" ! Task 
!width="59%" ! Description
!width="14%" ! Feature
|- 
| '''1'''
| 
 '''Create GL accounts for the currencies'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| Create the accounts you have planned for foreign currencies:[anchor|#ul_ip2_1j2_cs]
*Realized gain account
*Realized loss account
*Unrealized gain account
*Unrealized loss account
*AP provisioning account
*AR provisioning account
*Revaluation gain account
*Revaluation loss account
*Rounding gain account
*Rounding loss account

For the base currency, create the following GL accounts:[anchor|#ul_vtg_2t2_cs]
*Realized gain account
*Realized loss account

See also [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts]. 
| 
|- 
| '''2'''
| 
 '''Create GL accounts for translations'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| 
 Create the following gain and loss accounts for translations to be performed from a foreign currency to the base currency or to another foreign currency:[anchor|#ul_mjb_pgc_2s]
*Translation gain account
*Translation loss account

See also [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts].
| Translation of Fin. Statements
|- 
| '''3'''
| 
 '''Create subaccounts for foreign currencies'''{br}

 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| 
Create all identified subaccounts to be used for exchange gains and losses: [anchor|#ul_ow2_rfc_2s]
* Realized Gain 
* Realized Loss 
* Unrealized Gain 
* Unrealized Loss 
* AP Provisioning
* AR Provisioning 
* Revaluation Gain 
* Revaluation Loss 
* Rounding Gain 
* Rounding Loss 

See also [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount]. 
| Subaccounts
|- 
| '''4'''
| 
 '''Create subaccounts for translations'''{br}

 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| Create all planned subaccounts to be used for translation gains and losses: [anchor|#ul_y11_mhc_2s]
* Translation Gain 
* Translation Loss 

See also [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount]. 
| Subaccounts, Translation of Fin. Statements
|- 
| '''5'''
| 
 '''Create rate types'''{br}

 [HelpRoot_FormReference\CM_20_10_00|Currency Rate Types] ([~/?ScreenId=CM201000|CM201000])
| 
Create each of the planned rate types as follows:[anchor|#ul_ztb_qfy_js]
*Type the rate type identifier and the description.
*Select the '''Refresh Online''' check box if the exchange rates of the type should be updated through the ''Open Exchange Rates API'' online service.
*To automatically adjust the rates of the type, specify the percent of change to the online value.

| 
|- 
| '''6'''
| 
 '''Set up a schedule for updating the exchange rates'''{br}

 [HelpRoot_FormReference\SM_20_50_20|Automation Schedules] ([~/?ScreenId=SM205020|SM205020]) 
| 
Create a schedule for updating the exchange rates by using the online service as follows:[anchor|#ol_cbn_hky_js]
#Select the [HelpRoot_FormReference\CM_20_10_00|Currency Rate Types] ([~/?ScreenId=CM201000|CM201000]) form in the '''Screen ID''' box.
#Provide a description of the schedule.
#Select the start and expiration dates for the schedule, or specify the maximum number of executions.
#Specify how often updates should be performed.

For details, see [HelpRoot_Administration\SM__con_Scheduled_Processing|Scheduled Processing] and [HelpRoot_Administration\SM__how_Scheduling_the_Desired_Processing|To Schedule Processing].
| 
|- 
| '''7'''
| 
 '''Specify the Currency Management preferences'''{br}

 [HelpRoot_FormReference\CM_10_10_00|Currency Management Preferences] ([~/?ScreenId=CM101000|CM101000])
| 
Do the following on this form:[anchor|#ul_bhf_nk2_cs]
* Enter the planned '''Rate Variance Allowed'''. 
* Select the '''Warn About Rate Variance''' check box if a warning should be displayed when the variance is exceeded. 
* Select the '''Automatically Post to GL on Release''' check box if Currency Management batches should be posted automatically. 
* Enter the applicable '''Default Rate Types'''. 
*Select the rate types to be used as the default rate types in the General Ledger, Cash Management, Accounts Payable, and Accounts Receivable modules, and for revaluations in the General Ledger, Accounts Payable, and Accounts Receivable modules.

| 
|- 
| '''8'''
| 
 '''Create currencies'''{br}

 [HelpRoot_FormReference\CM_20_20_00|Currencies] ([~/?ScreenId=CM202000|CM202000])
| 
Create all planned foreign currencies. For each currency, enter the following: [anchor|#ul_zhf_nk2_cs]
*Currency ID 
*Description 
*Decimal precision 
*Currency symbol 
((({S:Hint} You create only foreign currencies using this form. The base currency was defined on the [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form.
)))
| 
|- 
| '''9'''
| 
 '''Configure denominated accounts'''{br}

 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
|  For each account to be denominated in a foreign currency, select the currency and the rate type. 
| 
|- 
| '''10'''
| 
 '''Create ledgers of the Reporting type'''{br}

 [HelpRoot_FormReference\GL_20_15_00|Ledgers] ([~/?ScreenId=GL201500|GL201500])
| 
Create a ledger with a ''Reporting''-type balance to store the account balances that have been converted (translated) from the base currency into a reporting currency. Alternatively, if you have to perform multistep translations from one reporting currency to another, create multiple ledgers of the ''Reporting'' type. For each ledger, select the currency. {br}

For details, see [HelpRoot_Financials\GL__HOW_To_Add_Reporting_Ledger|To Add a Reporting Ledger].
| Translation of Fin. Statements
|- 
| '''11'''
| 
 '''Create translation definitions'''{br}

 [HelpRoot_FormReference\CM_20_30_00|Translation Definition] ([~/?ScreenId=CM203000|CM203000])
| For each required translation definition, specify the following settings:[anchor|#ul_tgx_h3c_2s]
*Identifier and description
*Source ledger (of the ''Reporting'' type)
*Destination ledger (of the ''Reporting'' type)
*Branch

| Translation of Fin. Statements
|- 
| '''12'''
| 
 '''Select the default translation definition'''{br}

 [HelpRoot_FormReference\CM_10_10_00|Currency Management Preferences] ([~/?ScreenId=CM101000|CM101000])
| Set as the default translation definition the one that you expect will be used more often than the others.
| Translation of Fin. Statements
|}
 You can print the [HelpRoot_ImplementChecklists\CM_Conf_Checklist|Currency Management Configuration Checklist] and refer to it when you configure the Currency Management module. ]]></column>
			<column name="PlainText"><![CDATA[Currency Management: Configuration This topic will guide you through the process of configuring the Currency       Management module. Due to dependencies between the forms, the sequence of actions during       configuration is critical, so you need to perform these tasks in the order in which they are         presented. No. Task  Description Feature 1 Create GL accounts for the currencies  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) Create the accounts you have planned for foreign currencies: Realized gain account Realized loss account Unrealized gain account Unrealized loss account AP provisioning account AR provisioning account Revaluation gain account Revaluation loss account Rounding gain account Rounding loss account For the base currency, create the following GL accounts: Realized gain account Realized loss account See also  To Add an Account to the Chart of Accounts.                  2 Create GL accounts for translations  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500)  Create the following gain and loss accounts for translations to be performed                   from a foreign currency to the base currency or to another foreign currency: Translation gain account Translation loss account See also  To Add an Account to the Chart of Accounts. Translation of Fin. Statements 3 Create subaccounts for foreign currencies  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) Create all identified subaccounts to be used for exchange gains and losses:   Realized Gain   Realized Loss   Unrealized Gain   Unrealized Loss   AP Provisioning  AR Provisioning   Revaluation Gain   Revaluation Loss   Rounding Gain   Rounding Loss  See also  To Add a Subaccount.  Subaccounts 4 Create subaccounts for translations  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) Create all planned subaccounts to be used for translation gains and losses:   Translation Gain   Translation Loss  See also  To Add a Subaccount.                  Subaccounts, Translation of Fin. Statements 5 Create rate types  ([~/?ScreenId=CM201000|CM201000]) Currency Rate Types (CM201000) Create each of the planned rate types as follows: Type the rate type identifier and the description. Select the  Refresh Online  check box if the exchange rates of the type                     should be updated through the  Open Exchange Rates API  online                     service. To automatically adjust the rates of the type, specify the percent of change                     to the online value. 6 Set up a schedule for updating the exchange rates  ([~/?ScreenId=SM205020|SM205020]) Automation Schedules (SM205020)  Create a schedule for updating the exchange rates by using the online service as                   follows: Select the   ([~/?ScreenId=CM201000|CM201000]) Currency Rate Types                     (CM201000) form in the  Screen ID  box. Provide a description of the schedule. Select the start and expiration dates for the schedule, or specify the maximum                     number of executions. Specify how often updates should be performed. For details, see  Scheduled Processing                   and  To Schedule Processing. 7 Specify the Currency Management preferences  ([~/?ScreenId=CM101000|CM101000]) Currency Management Preferences (CM101000) Do the following on this form:  Enter the planned  Rate Variance Allowed .   Select the  Warn About Rate Variance  check box if a warning should be                     displayed when the variance is exceeded.   Select the  Automatically Post to GL on Release  check box if Currency                     Management batches should be posted automatically.   Enter the applicable  Default Rate Types .  Select the rate types to be used as the default rate types in the General                     Ledger, Cash Management, Accounts Payable, and Accounts Receivable modules, and                     for revaluations in the General Ledger, Accounts Payable, and Accounts                     Receivable modules. 8 Create currencies  ([~/?ScreenId=CM202000|CM202000]) Currencies (CM202000) Create all planned foreign currencies. For each currency, enter the following:  Currency ID  Description  Decimal precision  Currency symbol   You create only foreign currencies using this form. The base                   currency was defined on the   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) form. 9 Configure denominated accounts  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500)  For each account to be denominated in a foreign currency, select the currency                 and the rate type.  10 Create ledgers of the Reporting type  ([~/?ScreenId=GL201500|GL201500]) Ledgers (GL201500) Create a ledger with a  Reporting -type balance to store the account                   balances that have been converted (translated) from the base currency into a                   reporting currency. Alternatively, if you have to perform multistep translations                   from one reporting currency to another, create multiple ledgers of the                      Reporting  type. For each ledger, select the currency.  For details, see  To Add a Reporting Ledger. Translation of Fin. Statements 11 Create translation definitions  ([~/?ScreenId=CM203000|CM203000]) Translation Definition (CM203000) For each required translation definition, specify the following settings: Identifier and description Source ledger (of the  Reporting  type) Destination ledger (of the  Reporting  type) Branch Translation of Fin. Statements 12 Select the default translation definition  ([~/?ScreenId=CM101000|CM101000]) Currency Management Preferences (CM101000) Set as the default translation definition the one that you expect will be used                 more often than the others. Translation of Fin. Statements  You can print the  Currency Management Configuration Checklist and refer to it when you         configure the Currency Management module.  ]]></column>
		</row>
		<row PageID="e0539f1a-075a-4f42-865a-d5e8420f3492" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="2c5fe4d4-d593-e177-91be-8ba9bcab72fa" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter briefly describes the process of implementing the Taxes module in Acumatica ERP. {br}

The Taxes module stores and manages your definitions of taxes, tax categories, and tax zones that are used across the system for automatic tax calculation for every document and transaction. For organizations that conduct business in the United States, Acumatica ERP provides the functionality that enables integration with Avalara&rsquo;s AvaTax service. In case your organization plan on using such integration, you will not need to implement the Taxes module. {br}

For more information about forms and capabilities of the Taxes module, see the [HelpRoot_Financials\TX_00_00_00|Taxes] part of the Financial Management guide. [anchor|#2]
==Prerequisites and Dependencies==
Before you start configuring the Taxes module, you have to implement the Accounts Payable module. However, perform the preparation part of the work for the Taxes module along with the preparation work for the Accounts Payable module before you start configuring the Accounts Payable module.
==In This Chapter==[anchor|#ul_fyg_vwj_cs]
*[HelpRoot_Implement\TX_Preparation|Taxes: Preparation]: Describes data you should collect and decisions you should make before you take action.
*[HelpRoot_Implement\AvaTax_Configuration|Taxes: Configuration of AvaTax Integration]: Guides you through the configuration of the integration with AvaTax.
*[HelpRoot_Implement\TX_Configuration|Taxes: Configuration]: Guides you through the actual configuration of the Taxes module.
]]></column>
			<column name="PlainText"><![CDATA[Implementing Taxes This chapter briefly describes the process of implementing the Taxes module in  Acumatica ERP.  The Taxes module stores and manages your definitions of taxes, tax categories, and tax zones         that are used across the system for automatic tax calculation for every document and         transaction. For organizations that conduct business in the United States,  Acumatica ERP provides the functionality that enables integration with Avalara's AvaTax service. In         case your organization plan on using such integration, you will not need to implement the         Taxes module.  For more information about forms and capabilities of the Taxes module, see the   ([~/?ScreenId=TX000000|TX000000]) Taxes part of the Financial Management         guide.  Prerequisites and Dependencies Before you start configuring the Taxes module, you have to implement the Accounts Payable         module. However, perform the preparation part of the work for the Taxes module along with         the preparation work for the Accounts Payable module before you start configuring the         Accounts Payable module. In This Chapter Taxes: Preparation: Describes data you should collect and decisions you      should make before you take action. Taxes: Configuration of AvaTax Integration: Guides you through the configuration of the           integration with AvaTax. Taxes: Configuration: Guides you through the actual configuration of the           Taxes module. ]]></column>
		</row>
		<row PageID="370c1796-3ebf-402a-a9e2-9edf656cee03" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="92341bd0-3d4f-67f2-e9ec-7d952f144090" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#1]
This topic covers the preparation that you have to perform before you begin configuring the Taxes module. 
==Alternative Ways to Implement Taxes==
Before you start implementing the Taxes module, you have to decide whether you need to set up integration with Avalara&rsquo;s AvaTax service. For organizations that conduct their business in the United States, such integration provides the following benefits:[anchor|#ul_unj_zbt_cs]
*Real-time calculation of taxes on all transactions
*Up-to-date tax rates for all tax jurisdictions in the U.S.
*Verification of customer addresses for determining the correct tax jurisdiction
*Management of permits and exemption certificates for resellers
*The ability to easily create tax rules and automatically use them for the appropriate transactions 
*Filing of tax reports on behalf of each branch that reports separately to each taxing authority involved
{br}

If you plan to integrate with AvaTax, prepare for this integration, as described in the [[#10|Prepare to Integrate with AvaTax] section. {br}

If you do not plan to integrate with AvaTax, follow the steps in the [[#20|Prepare to implement Taxes] section.[anchor|#10]
==Prepare to Integrate with AvaTax==
Perform the following steps before you actually start configuring the integration with AvaTax. [anchor|#table_xrn_zmn_ds]
{| class="checklist" | width="100%" 
|- 
!width="23%" ! Task 
!width="76%" ! Description
|- 
| '''Subscribe for the AvaTax service'''
| 
Subscribe to the AvaTax service ([http://www.avalara.com/|http://www.avalara.com]) to configure and maintain the integration with AvaTax. {br}

We recommend that you subscribe to the AvaTax Pro service, which has the features to meet most of your tax-related needs. It validates addresses, maintains up-to-date tax rates, stores customer exemption certificates, and files tax returns. {br}

When you subscribe to the AvaTax service, you will get the license key and password to your organization’s account in AvaTax, and the credentials (user name and password) to the AvaTax admin console. 
|- 
| '''Make sure the ''External Tax Calculation Integration'' feature is included in your license'''
| 
To enable this integration, make sure that your license includes ''External Tax Calculation Integration'' and ''Address Validation Integration'' features. You will later enable the features.
|- 
| '''Decide whether to use AvaTax&rsquo;s tax codes'''
| 
Decide whether you will use tax categories or Avalara tax codes. Avalara has developed and maintains the tax codes for thousands of products and services for correct tax calculation. We recommend that you import these tax codes and use them as tax categories in Acumatica ERP. Alternatively, you can design tax categories in Acumatica ERP and map them to the AvaTax system tax codes by using your AvaTax admin console.
|- 
| '''Choose the tax agency name'''
| 
Choose the name for the tax agency that indicates that the taxes for any agency are calculated by AvaTax—for instance, ''AVATAX'' or ''AVALARA''. (If your organization will process taxes through online integration with AvaTax and prepare tax returns also through this integration, you will need only one tax agency for all taxes.) 
|- 
| '''Choose a name for the tax zone'''
| 
Choose a name for the tax zone that indicates that the taxes for this tax zone are calculated by AvaTax—for instance, ''AVATAX'' or ''AVALARA''. If your organization implements integration with AvaTax, the applicable taxes will be determined based on tax codes of the products and the addresses of the branches, vendors, or customers and hence, the tax zones are actually not needed. However, because tax zones are required in transactions, you have to create a single tax zone.
|}
If you plan to integrate Acumatica ERP with AvaTax, you don&rsquo;t need to implement the Taxes module. Once preparation is done, proceed to [HelpRoot_Implement\AvaTax_Configuration|Taxes: Configuration of AvaTax Integration].[anchor|#50]
==Prepare to Implement Taxes==
Perform the following preparation steps before you start configuring the Taxes module. ((({S:Hint} Because this is the preparation phase of implementation, you should enter no data into the system at this time.
)))[anchor|#table_eyj_vwj_cs]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action 
!width="80%" ! Description
|- 
| '''Decide on the types of taxes'''
| Decide which types of tax you will configure in the system. Acumatica ERP supports the following types of taxes: ''VAT (GST)'', ''Sales'', ''Use'', or ''Withholding''. If you are going to configure taxes of the VAT or GST type, make sure the ''VAT Reporting'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form.
|- 
| '''Decide on the VAT entry mode'''
| If you going to use VATs, consider enabling the the ''Net/Gross Entry Mode'' feature. Acumatica ERP supports the following modes of entering VATs on documents: ''Gross'' for inclusive taxes, and ''Net'' for add-on taxes. 
|- 
| '''Prepare the list of taxes applicable to your business'''
| 
Make a list of taxes applicable to the products and services you purchase at various vendor locations and to the products and services you sell to various customer locations.{br}

 For each tax, indicate the following: [anchor|#ul_j1j_pb4_ds]
*Tax ID to be used (up to 10 alphanumeric characters)
*Description
*Tax type: ''VAT (GST)'', ''Sales'', ''Use'', or ''Withholding''
* For a VAT, whether the following VAT-specific options apply (see [HelpRoot_FormReference\TX_20_50_00|Taxes] ([~/?ScreenId=TX205000|TX205000]) for details on each option): ''Reverse VAT'', ''Pending VAT'', ''Statistical VAT'', ''Include in VAT Exempt Total'', ''Include in VAT Taxable Total''
*Tax agency that collects the tax
*Tax schedule, which includes the following:
**Start date and the tax rate
**Minimum and maximum taxable amounts, if applicable
*Basis of tax calculation: 
**Line amount or document total amount
**Line amount (first-level tax) or line amount + tax amount (second-level)
**For a first-level tax, whether it should be excluded from second-level tax calculation
*Cash discount handling: Whether the taxable amount is reduced by the cash discount
*GL accounts (and subaccounts): 
**Liability account (and subaccount) for tax on sales: Accumulates taxes collected from sales and ''payable'' to the tax agency
**Assets account (and subaccount) for tax on purchases: Accumulates taxes paid in purchases and ''claimable'' from the tax agency
**Expense account (and subaccount) for use tax

|- [anchor|#20]
| '''Decide on tax categories'''
| 
Plan tax categories as groups of products and services with identical taxation (in all tax zones). For each category, indicate the following: [anchor|#ul_i1l_vwj_cs]
*Category ID
*Brief description
*Whether the category is inclusive or exclusive
*Taxes of the category

For details, see [HelpRoot_Financials\Taxes_TaxZones_and_Categories_Mapref|Creating Tax Zones and Tax Categories].
|- 
| '''Plan tax zones'''
| 
Plan tax zones for all the territories with different sets of taxes that apply to purchases and sales. For each zone, indicate the following: [anchor|#ul_wdl_vwj_cs]
* Zone ID (up to 10 alphanumeric characters)
* Brief description ( up to 60 Unicode characters)
* Taxes of the zone 

Identify the tax zones of your company&rsquo;s branches.{br}

 For details on tax zones, see [HelpRoot_Financials\Taxes_TaxZones_and_Categories_Mapref|Creating Tax Zones and Tax Categories].
|- 
| '''Identify tax agencies'''
|  Identify all tax agencies your organization reports to. For each tax agency, specify the following details: [anchor|#ul_bns_ktj_cs]
*The frequency of tax reporting to the agency
*The account (and subaccount) to accumulate tax amounts paid to the agency
*The account (and subaccount) to accumulate tax amounts to be claimed from the agency
*The account (and subaccount) to accumulate tax-related expenses
*Vendor ID, address, and contact information

For details, see [HelpRoot_Financials\Taxes_TaxAgency_Mapref|Creating a Tax Agency].
|- 
| '''Plan report lines'''
|  For your organization&rsquo;s tax report to each tax agency, define the report lines. For each report line, indicate the following: [anchor|#ul_ppk_vwj_cs]
* Whether the line is updated with a tax or taxable amount 
*Which update rule will be used: 
**'''+Output-Input''': Sales are added to the box amount and purchases are deducted from the box amount 
**'''+Input-Output''': Purchases are added to the box amount and sales are deducted from the box amount 
*What description should be specified for the report line (should be as close as possible to that of the box on the tax form)
* Whether the tax report replicates the report line for each applicable tax zone 
*Whether this report line is the one selected as the net tax

 For details about reporting settings, see [HelpRoot_Financials\Taxes_TaxReport_Mapref|Configuring a Tax Report].
|- 
| '''Plan reporting groups'''
|  For each tax agency, define reporting groups, indicating for each group: [anchor|#ul_urk_vwj_cs]
*Group type, which should be output (sales) or input (purchases) to accumulate taxable and tax amounts for specific taxes
*The taxes included
*Brief description
*Report lines to display reporting group amounts

For information about reporting groups, see [HelpRoot_Financials\Taxes_TaxReport_Mapref|Configuring a Tax Report].
|}You can print the [HelpRoot_ImplementChecklists\TX_Preparation_Checklist|Taxes Preparation Checklist] and refer to it when you prepare to implement the Taxes module. ]]></column>
			<column name="PlainText"><![CDATA[Taxes: Preparation This topic covers the preparation that you have to perform before you begin configuring the         Taxes module.  Alternative Ways to Implement Taxes Before you start implementing the Taxes module, you have to decide whether you need to set         up integration with Avalara's AvaTax service. For organizations that conduct their business         in the United States, such integration provides the following benefits: Real-time calculation of taxes on all transactions Up-to-date tax rates for all tax jurisdictions in the U.S. Verification of customer addresses for determining the correct tax jurisdiction Management of permits and exemption certificates for resellers The ability to easily create tax rules and automatically use them for the appropriate             transactions  Filing of tax reports on behalf of each branch that reports separately to each taxing             authority involved If you plan to integrate with AvaTax, prepare for this integration, as described in the            Prepare to Integrate           with AvaTax Prepare to Integrate with AvaTax section.  If you do not plan to integrate with AvaTax, follow the steps in the  Prepare to implement           Taxes Prepare to implement Taxes section. Prepare to Integrate with AvaTax Perform the following steps before you actually start configuring the integration with         AvaTax.  Task  Description Subscribe for the AvaTax service Subscribe to the AvaTax service ( http://www.avalara.com http://www.avalara.com) to configure and                   maintain the integration with AvaTax.  We recommend that you subscribe to the AvaTax Pro service, which has the features                   to meet most of your tax-related needs. It validates addresses, maintains                   up-to-date tax rates, stores customer exemption certificates, and files tax                   returns.  When you subscribe to the AvaTax service, you will get the license key and                   password to your organization’s account in AvaTax, and the credentials (user name                   and password) to the AvaTax admin console.  Make sure the  External Tax Calculation  Integration  feature is                   included in your license To enable this integration, make sure that your license includes  External Tax                     Calculation Integration  and  Address Validation Integration  features.                   You will later enable the features. Decide whether to use AvaTax's tax codes Decide whether you will use tax categories or Avalara tax codes. Avalara has                   developed and maintains the tax codes for thousands of products and services for                   correct tax calculation. We recommend that you import these tax codes and use them                   as tax categories in  Acumatica ERP. Alternatively, you can design tax categories in  Acumatica ERP and map them to the AvaTax system tax codes by using your AvaTax admin                   console. Choose the tax agency name Choose the name for the tax agency that indicates that the taxes for any agency                   are calculated by AvaTax—for instance,  AVATAX  or  AVALARA . (If your                   organization will process taxes through online integration with AvaTax and prepare                   tax returns also through this integration, you will need only one tax agency for                   all taxes.)  Choose a name for the tax zone Choose a name for the tax zone that indicates that the taxes for this tax zone                   are calculated by AvaTax—for instance,  AVATAX  or  AVALARA . If your                   organization implements integration with AvaTax, the applicable taxes will be                   determined based on tax codes of the products and the addresses of the branches,                   vendors, or customers and hence, the tax zones are actually not needed. However,                   because tax zones are required in transactions, you have to create a single tax                   zone. If you plan to integrate  Acumatica ERP with AvaTax, you don't need to implement the Taxes module. Once preparation is done,         proceed to  Taxes: Configuration of AvaTax Integration. Prepare to Implement Taxes Perform the following preparation         steps before you start configuring the Taxes module.   Because this is           the preparation phase of implementation, you should enter no data into the system at this           time. Action  Description Decide on the types of taxes Decide which types of tax you will configure in the system.  Acumatica ERP supports the following types of taxes:  VAT (GST) ,  Sales ,                  Use , or  Withholding . If you are going to configure taxes of the VAT or                 GST type, make sure the  VAT Reporting  feature is enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form. Decide on the VAT entry mode If you going to use VATs, consider enabling the the  Net/Gross Entry Mode                  feature.  Acumatica ERP supports the following modes of entering VATs on documents:  Gross  for                 inclusive taxes, and  Net  for add-on taxes.  Prepare the list of taxes applicable to your business Make a list of taxes applicable to the products and services you purchase at                   various vendor locations and to the products and services you sell to various                   customer locations.  For each tax, indicate the following:  Tax ID to be used (up to 10 alphanumeric characters) Description Tax type:  VAT (GST) ,  Sales ,  Use , or                      Withholding  For a VAT, whether the following VAT-specific options apply (see   ([~/?ScreenId=TX205000|TX205000]) Taxes (TX205000) for details on                     each option):  Reverse VAT ,  Pending VAT ,  Statistical VAT ,                        Include in VAT Exempt Total ,  Include in VAT Taxable Total Tax agency that collects the tax Tax schedule, which includes the following: Start date and the tax rate Minimum and maximum taxable amounts, if applicable Basis of tax calculation:  Line amount or document total amount Line amount (first-level tax) or line amount + tax amount                         (second-level) For a first-level tax, whether it should be excluded from second-level tax                         calculation Cash discount handling: Whether the taxable amount is reduced by the cash                     discount GL accounts (and subaccounts):  Liability account (and subaccount) for tax on sales: Accumulates taxes                         collected from sales and  payable  to the tax agency Assets account (and subaccount) for tax on purchases: Accumulates taxes                         paid in purchases and  claimable  from the tax agency Expense account (and subaccount) for use tax Decide on tax categories Plan tax categories as groups of products and services with identical taxation                   (in all tax zones). For each category, indicate the following:  Category ID Brief description Whether the category is inclusive or exclusive Taxes of the category For details, see  Creating Tax Zones and Tax Categories. Plan tax zones Plan tax zones for all the territories with different sets of taxes that apply to                   purchases and sales. For each zone, indicate the following:   Zone ID (up to 10 alphanumeric characters)  Brief description ( up to 60 Unicode characters)  Taxes of the zone  Identify the tax zones of your company's branches.  For details on tax zones, see  Creating Tax Zones and Tax Categories. Identify tax agencies  Identify all tax agencies your organization reports to. For each tax agency,                 specify the following details:  The frequency of tax reporting to the agency The account (and subaccount) to accumulate tax amounts paid to the agency The account (and subaccount) to accumulate tax amounts to be claimed from the                     agency The account (and subaccount) to accumulate tax-related expenses Vendor ID, address, and contact information For details, see  Creating a Tax Agency. Plan report lines  For your organization's tax report to each tax agency, define the report                 lines. For each report line, indicate the following:   Whether the line is updated with a tax or taxable amount  Which update rule will be used:  +Output-Input : Sales are added to the box amount and purchases are                         deducted from the box amount  +Input-Output : Purchases are added to the box amount and sales are                         deducted from the box amount  What description should be specified for the report line (should be as close                     as possible to that of the box on the tax form)  Whether the tax report replicates the report line for each applicable tax                     zone  Whether this report line is the one selected as the net tax  For details about reporting settings, see  Configuring a Tax Report. Plan reporting groups  For each tax agency, define reporting groups, indicating for each group:  Group type, which should be output (sales) or input (purchases) to accumulate                     taxable and tax amounts for specific taxes The taxes included Brief description Report lines to display reporting group amounts For information about reporting groups, see  Configuring a Tax Report. You can print the  Taxes Preparation Checklist and refer to it when       you prepare to implement the Taxes module.  ]]></column>
		</row>
		<row PageID="e9eed4bb-abd8-4c86-a5bf-d8e615141c51" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="666fd2ad-8e49-0f51-8831-452dbe7a1d5a" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]
This topic will guide you through the process of configuring the taxes in Acumatica ERP.[anchor|#table_d2l_vwj_cs]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
|  '''Create GL accounts for tax agencies'''
 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
| 
Make sure the accounts you plan to use for the following are defined on the chart of accounts:[anchor|#ul_w4g_4q4_ps]
*Tax Payable
*Tax Claimable
*Tax Expense
*Pending Tax Payable (only if the ''VAT Reporting'' feature is enabled)
*Pending Tax Claimable (only if the ''VAT Reporting'' feature is enabled)

|- 
| '''2'''
|  '''Create subaccounts'''
 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
| 
(This task is needed only if the ''Subaccounts'' feature is enabled in your system.) {br}

Make sure the following subaccounts are available:
*Tax payable
*Tax claimable
*Tax expense
*Pending tax payable (only if the ''VAT Reporting'' feature is enabled)
*Pending tax claimable (only if the ''VAT Reporting'' feature is enabled)

|- 
| '''3'''
|  '''Create vendor accounts for tax agencies'''
 [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000])
| 
 Create vendor accounts for the tax agencies you have planned. Enter the vendor ID and name, address, and contact information. Select the '''Vendor is Tax Agency''' check box, which adds the '''Tax Agency Settings''' tab; enter all relevant information on the tab. {br}

For details, see [HelpRoot_Financials\Taxes_TaxAgency_Mapref|Creating a Tax Agency].
|- 
| '''4'''
|  '''Configure report lines'''
 [HelpRoot_FormReference\TX_20_51_00|Reporting Settings] ([~/?ScreenId=TX205100|TX205100])
| 
For each tax agency, create the following entities: [anchor|#ul_tpl_vwj_cs]
*Report lines
*Reporting groups

For details, see [HelpRoot_Financials\Taxes_TaxReport_Mapref|Configuring a Tax Report].
|- 
| '''5'''
|  '''Configure reporting groups'''
 [HelpRoot_FormReference\TX_20_52_00|Reporting Groups] ([~/?ScreenId=TX205200|TX205200])
| 
 For each reporting group of each tax agency, link report lines. For details, see [HelpRoot_Financials\Taxes_TaxReport_Mapref|Configuring a Tax Report].
|- 
| '''6'''
|  '''Define taxes'''
 [HelpRoot_FormReference\TX_20_50_00|Taxes] ([~/?ScreenId=TX205000|TX205000])
| 
First, create taxes of the first level. Then, create document-level taxes and second-level taxes. For each tax, do the following:[anchor|#ul_cvl_vwj_cs]
*Enter the tax ID and description.
*Select the tax type. Select the appropriate VAT options if the tax is of the VAT type.
*Select the tax agency.
*Select one of the following calculation types: 
**''Extract From Item Amount'' (inclusive tax, always item-level)
**''Calc. On Item Amount'' (item-level, first-level tax)
**''Calc. On Item + Tax Amount'' (item-level, second-level tax)
**''Calc. On Document Amount'' (document-level, first-level tax)
**''Calc. On Document + Tax Amount'' (document-level, second-level tax)
*Select whether cash discounts affect the taxable amount.
*Specify a tax schedule that includes the start date, tax rate, minimum and maximum taxable amounts (if applicable), and reporting group to be updated by taxable and tax amounts
*Select the General Ledger accounts and subaccounts for the tax.

For details, see [HelpRoot_Financials\Taxes_SalesTaxes_Mapref|Configuring Sales Taxes] and [HelpRoot_Financials\TX__how_To_Create_a_Value_Added_Tax|To Create a Value-Added Tax].
|- 
| '''7'''
|  '''Create tax categories'''
 [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500])
|  Create the planned categories. For each tax category: [anchor|#ul_bzl_vwj_cs]
*Enter the category ID and description.
*Select the '''Exclude Listed Taxes''' check box if the category is exclusive.
*In the '''Taxes Included''' area, add taxes to the category.

For details, see [HelpRoot_Financials\TX__how_To_Create_a_Tax_Category|Tax Zones and Categories: To Create a Tax Category].
|- 
| '''8'''
|  '''Configure tax zones'''
 [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000])
| 
Review the tax zones you have created for vendors, and add the tax zones that can be used for customers. Populate the tax zones with taxes. {br}

See [HelpRoot_Financials\TX__how_To_Create_a_Tax_Zone|Tax Zones and Categories: To Create a Tax Zone].
|- 
| '''9'''
|  '''Assign tax zones to vendor classes'''
 [HelpRoot_FormReference\AP_20_10_00|Vendor Classes] ([~/?ScreenId=AP201000|AP201000])
| Make sure that each vendor class has a tax zone assigned.
|- 
| '''10'''
|  '''Assign tax zones to branches'''
 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
|  Assign tax zones to the company branches.
|- 
| '''11'''
|  '''Update single-zone report lines'''
 [HelpRoot_FormReference\TX_20_51_00|Reporting Settings] ([~/?ScreenId=TX205100|TX205100])
|  For each tax agency, specify tax zones for single-zone report lines.
|}
 You can print the [HelpRoot_ImplementChecklists\TX_Conf_Checklist|Taxes Configuration Checklist] and refer to it when you configure the Taxes module. ]]></column>
			<column name="PlainText"><![CDATA[Taxes: Configuration This topic will guide you through the process of configuring the taxes in  Acumatica ERP. No. Task  Description 1 Create GL accounts for tax agencies  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) Make sure the accounts you plan to use for the following are defined on the chart                   of accounts: Tax Payable Tax Claimable Tax Expense Pending Tax Payable (only if the  VAT Reporting  feature is enabled) Pending Tax Claimable (only if the  VAT Reporting  feature is                     enabled) 2 Create subaccounts  ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) (This task is needed only if the  Subaccounts  feature is enabled in your                   system.)  Make sure the following subaccounts are available: Tax payable Tax claimable Tax expense Pending tax payable (only if the  VAT Reporting  feature is enabled) Pending tax claimable (only if the  VAT Reporting  feature is                     enabled) 3 Create vendor accounts for tax agencies  ([~/?ScreenId=AP303000|AP303000]) Vendors                 (AP303000)  Create vendor accounts for the tax agencies you have planned. Enter the vendor                   ID and name, address, and contact information. Select the  Vendor is Tax                     Agency  check box, which adds the  Tax Agency Settings                    tab; enter all relevant information on the tab.  For details, see  Creating a Tax Agency. 4 Configure report lines  ([~/?ScreenId=TX205100|TX205100]) Reporting Settings                 (TX205100) For each tax agency, create the following entities:  Report lines Reporting groups For details, see  Configuring a Tax Report. 5 Configure reporting groups  ([~/?ScreenId=TX205200|TX205200]) Reporting Groups                 (TX205200)  For each reporting group of each tax agency, link report lines. For details, see                      Configuring a Tax Report. 6 Define taxes  ([~/?ScreenId=TX205000|TX205000]) Taxes                 (TX205000) First, create taxes of the first level. Then, create document-level taxes and                   second-level taxes. For each tax, do the following: Enter the tax ID and description. Select the tax type. Select the appropriate VAT options if the tax is of the                     VAT type. Select the tax agency. Select one of the following calculation types:  Extract From Item Amount  (inclusive tax, always item-level) Calc. On Item Amount  (item-level, first-level tax) Calc. On Item + Tax Amount  (item-level, second-level tax) Calc. On Document Amount  (document-level, first-level tax) Calc. On Document + Tax Amount  (document-level, second-level                         tax) Select whether cash discounts affect the taxable amount. Specify a tax schedule that includes the start date, tax rate, minimum and                     maximum taxable amounts (if applicable), and reporting group to be updated by                     taxable and tax amounts Select the General Ledger accounts and subaccounts for the tax. For details, see  Configuring Sales Taxes and                      To Create a Value-Added Tax. 7 Create tax categories  ([~/?ScreenId=TX205500|TX205500]) Tax Categories                 (TX205500)  Create the planned categories. For each tax category:  Enter the category ID and description. Select the  Exclude Listed Taxes  check box if the category is                     exclusive. In the  Taxes Included  area, add taxes to the category. For details, see  Tax Zones and Categories: To Create a Tax Category. 8 Configure tax zones  ([~/?ScreenId=TX206000|TX206000]) Tax Zones                 (TX206000) Review the tax zones you have created for vendors, and add the tax zones that can                   be used for customers. Populate the tax zones with taxes.  See  Tax Zones and Categories: To Create a Tax Zone. 9 Assign tax zones to vendor classes  ([~/?ScreenId=AP201000|AP201000]) Vendor Classes (AP201000) Make sure that each vendor class has a tax zone assigned. 10 Assign tax zones to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000)  Assign tax zones to the company branches. 11 Update single-zone report lines  ([~/?ScreenId=TX205100|TX205100]) Reporting Settings (TX205100)  For each tax agency, specify tax zones for single-zone report lines.  You can print the  Taxes Configuration Checklist and refer to it when you configure         the Taxes module.  ]]></column>
		</row>
		<row PageID="53715193-a3ec-4ba0-b4dc-5ddf52657303" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="da4b59a7-5ca4-a3e5-96e0-dbeb23bdf757" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]
This topic will guide you through the process of configuring the integration between Acumatica ERP and Avalara&rsquo;s AvaTax. This integration is available if the ''External Tax Calculation Integration'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]). Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to complete these tasks in the order in which they are listed. [anchor|#table_d2l_vwj_cs]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Create a vendor account for the Avalara tax agency'''{br}

 [HelpRoot_FormReference\AP_30_30_00|Vendors] ([~/?ScreenId=AP303000|AP303000])
| 
Create the vendor account for the Avalara tax agency and select the '''Vendor Is Tax Agency''' check box. If your organization will process taxes through online integration with AvaTax and is going to prepare tax returns through this integration, you will need only this tax agency.{br}

See [HelpRoot_Integration\TX__how_To_Configure_Integration_with_AvaTax|To Set Up Integration With AvaTax].
|- 
| '''2'''
| 
 '''Configure your AvaTax account'''{br}

AvaTax admin console
| 
Use the username and password provided with the subscription to AvaTax to access the AvaTax admin console, and do the following: [anchor|#ol_sxq_x2t_cs]
#By using the AvaTax admin console, create an organizational structure for taxes that is similar to the structure of branches of your organization in Acumatica ERP. To do this, use the'' parent company'', ''child company,'' and ''separate reporting entity'' properties for the companies you create in AvaTax (which represent branches of your organization). Later you will associate each branch of your organization in Acumatica ERP with the corresponding company that you have created in AvaTax.
#Create a tax profile for each company (that is, each branch in Acumatica ERP) by selecting the states where each company has a nexus—a significant business presence.
#Depending on your subscription level to AvaTax and the stage in initializing Acumatica ERP, either import AvaTax tax codes (to be used as tax categories) or map your existing tax categories to AvaTax tax codes (which are created on the Avalara website).
#Optional: Create and maintain tax rules—for example, define tax holidays for specific products for certain periods of time.

|- 
| '''3'''
| 
 '''Set up and test the connection between Acumatica ERP and AvaTax'''{br}

 [HelpRoot_FormReference\TX_10_20_00|Tax Providers] ([~/?ScreenId=TX102000|TX102000])
| 
To set up the connection between Acumatica ERP and your AvaTax account, enter the account number your organization has in AvaTax, your license key, and the URL of the AvaTax service. {br}

Activate and test the connection. Once the connection has been established successfully, on the '''Company Code Mapping''' tab, in the '''Branch''' box, for each branch of your organization, enter the name of the company you have created in your AvaTax account. 
|- 
| '''4'''
| 
 '''Configure the special tax zone'''{br}

 [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000])
| 
For the tax zone for this integration—which you created while configuring the Accounts Payable module, select the '''External Tax Provider''' check box, which appears once the integration is active. In the '''Provider ID''' and '''Tax Agency ID''' boxes, select the tax provider and the tax agency that you created for integration. {br}

See [HelpRoot_Integration\TX__how_To_Configure_Integration_with_AvaTax|To Set Up Integration With AvaTax].
|- 
| '''5'''
| 
 '''Set up address validation''' [HelpRoot_FormReference\CS_10_30_00|Address Validation Providers] ([~/?ScreenId=CS103000|CS103000])
| 
If the ''Address Validation Integration'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] form, set up the Avalara address validation provider by using the built-in plug-in, and specify the parameters for connection to the AvaTax account.
|- 
| '''6'''
|  '''Set up address verification'''
 [HelpRoot_FormReference\CS_20_40_00|Countries/States] ([~/?ScreenId=CS204000|CS204000])
| 
For the required state, in the '''Address Verification Plugin''' box, select the Avalara address verification plug-in.
|- 
| '''6'''
| 
 '''Assign the tax zone to branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
Assign the ''AVALARA'' tax zone to your organization&rsquo;s branches.
|}
 You can print the [HelpRoot_ImplementChecklists\AvaTax_Conf_Checklist|AvaTax Integration Configuration Checklist] and refer to it when you configure the Accounts Payable module. ]]></column>
			<column name="PlainText"><![CDATA[Taxes: Configuration of AvaTax Integration This topic will guide you through the process of configuring the integration between  Acumatica ERP and Avalara's AvaTax. This integration is available if the  External Tax Calculation           Integration  feature is enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features         (CS100000). Due to dependencies between the forms, the sequence of actions during         configuration is critical, so you need to complete these tasks in the order in which they         are listed.  No. Task  Description 1 Create a vendor account for the Avalara tax agency  ([~/?ScreenId=AP303000|AP303000]) Vendors (AP303000) Create the vendor account for the Avalara tax agency and select the                      Vendor Is Tax Agency  check box. If your organization will                   process taxes through online integration with AvaTax and is going to prepare tax                   returns through this integration, you will need only this tax agency. See  To Set Up Integration With AvaTax. 2 Configure your AvaTax account AvaTax admin console Use the username and password provided with the subscription to AvaTax to access                   the AvaTax admin console, and do the following:  By using the AvaTax admin console, create an organizational structure for                     taxes that is similar to the structure of branches of your organization in  Acumatica ERP. To do this, use the  parent company ,  child company,  and                        separate reporting entity  properties for the companies you create in                     AvaTax (which represent branches of your organization). Later you will associate                     each branch of your organization in  Acumatica ERP with the corresponding company that you have created in AvaTax. Create a tax profile for each company (that is, each branch in  Acumatica ERP) by selecting the states where each company has a nexus—a significant                     business presence. Depending on your subscription level to AvaTax and the stage in initializing                        Acumatica ERP, either import AvaTax tax codes (to be used as tax categories) or map your                     existing tax categories to AvaTax tax codes (which are created on the Avalara                     website). Optional: Create and maintain tax rules—for example, define tax holidays for                     specific products for certain periods of time. 3 Set up and test the connection between  Acumatica ERP and AvaTax  ([~/?ScreenId=TX102000|TX102000]) Tax Providers (TX102000) To set up the connection between  Acumatica ERP and your AvaTax account, enter the account number your organization has in                   AvaTax, your license key, and the URL of the AvaTax service.  Activate and test the connection. Once the connection has been established                   successfully, on the  Company Code Mapping  tab, in the                      Branch  box, for each branch of your organization, enter                   the name of the company you have created in your AvaTax account.  4 Configure the special tax zone  ([~/?ScreenId=TX206000|TX206000]) Tax Zones (TX206000) For the tax zone for this integration—which you created while configuring the                   Accounts Payable module, select the  External Tax Provider                    check box, which appears once the integration is active. In the                      Provider ID  and  Tax Agency ID                    boxes, select the tax provider and the tax agency that you created for                   integration.  See  To Set Up Integration With AvaTax. 5 Set up address validation  ([~/?ScreenId=CS103000|CS103000]) Address Validation Providers (CS103000) If the  Address Validation Integration  feature is enabled on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features form, set up the Avalara address                   validation provider by using the built-in plug-in, and specify the parameters for                   connection to the AvaTax account. 6 Set up address verification  ([~/?ScreenId=CS204000|CS204000]) Countries/States (CS204000) For the required state, in the  Address Verification Plugin                    box, select the Avalara address verification plug-in. 6 Assign the tax zone to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) Assign the  AVALARA  tax zone to your organization's branches.  You can print the  AvaTax Integration Configuration Checklist and refer to it when you         configure the Accounts Payable module.  ]]></column>
		</row>
		<row PageID="a793aa24-a83e-4f99-9bbc-cb7152894535" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="666506c5-d17e-91de-a9f0-9a9945c7c64c" RecordSourceID="22377">
			<column name="Content"><![CDATA[In this activity, you will learn how to define a tax-exempt category in the system.
==Story==
Suppose that the SweetLife company is going to purchase services from vendors and provide services to customers. All of these services are tax-exempt. Acting as an administrator, you need to define a tax category in Acumatica ERP.
==System Preparation==
Before you start defining the credit terms, make sure that the company and its actual ledger has been created, as described in [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Enabling_Features|Company Without Branches: To Configure a Company Without Branches] and [HelpRoot_Implement\config_Basic_Company_Implem_Activity_Actual_Ledger|General Ledger: To Create an Actual Ledger].
==Step: Defining a Tax Category==
To define a tax-exempt category, do the following:[anchor|#_eda299f0-30db-45b6-9633-ea468be3f54d][anchor|#_685531af-c8b6-42a8-a520-7de4e0e4127b]
#Sign in to the company you have prepared with the ''admin'' login.
#Open the [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500]) form.
#On the form toolbar, click '''Add New Record'''.
#In the Summary area, specify the following settings:
#*'''Tax Category ID''': <tt>EXEMPT</tt>
#*'''Description''': <tt>Exempt Tax Category</tt>
#On the form toolbar, click '''Save'''.
]]></column>
			<column name="PlainText"><![CDATA[Taxes: To Define a Tax Category In this activity, you will learn how to define a tax-exempt category in the    system. Story Suppose that the SweetLife company is going to purchase services from vendors and provide     services to customers. All of these services are tax-exempt. Acting as an administrator, you     need to define a tax category in  Acumatica ERP. System Preparation Before you start defining the credit terms, make sure that the company and its actual ledger     has been created, as described in  Company Without Branches: To Configure a Company Without Branches and  General Ledger: To Create an Actual Ledger. Step: Defining a Tax Category To define a tax-exempt category, do the following: Sign in to the company you have prepared with the                  admin  login. Open the   ([~/?ScreenId=TX205500|TX205500]) Tax Categories (TX205500) form. On the form toolbar, click  Add New Record . In the Summary area, specify the following settings: Tax Category ID :  EXEMPT Description :  Exempt Tax Category On the form toolbar, click  Save . ]]></column>
		</row>
		<row PageID="88823a48-b550-444d-851e-64106b7538a9" Language="en-US" PageRevisionID="1" Content="This chapter describes the process of configuring email system accounts in Acumatica ERP. [anchor|#1]&#xA;==Prerequisites and Dependencies==&#xA;There is no prerequisites for configuring the email system accounts. &#xA;==Limitations==&#xA;The Uuencode format, which is used for embedding binary attachments into an email body, is not supported in Acumatica ERP.&#xA;==In This Chapter==[anchor|#ul_psd_y3m_3h]&#xA;*[HelpRoot_Implement\EM_Preparation|Email: Preparation]: Describes what data should be collected, arranged, and analyzed before you can configure email accounts.&#xA;*[HelpRoot_Implement\EM_Configuration|Email: Configuration]: Guides you through the actual configuration of the email accounts.&#xA;" PlainText="Configuring Email This chapter describes the process of configuring email system accounts in  Acumatica ERP.  Prerequisites and Dependencies There is no prerequisites for configuring the email system accounts.  Limitations The Uuencode format, which is used for embedding binary attachments into an email body, is not     supported in  Acumatica ERP. In This Chapter Email: Preparation: Describes what data should be collected, arranged, and      analyzed before you can configure email accounts. Email: Configuration: Guides you through the actual configuration of the      email accounts. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="2a7afb4b-397e-2e01-1c7b-4fafb1004b36" RecordSourceID="22377" />
		<row PageID="3dedb86d-7e84-4551-87e6-2551569da984" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b9d9d114-38c6-a93d-c1eb-9284fd57d534" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
This topic covers the preparation that you have to perform before you begin configuring the Email module in Acumatica ERP. ((({S:Hint} Because this is the preparation phase of implementation, you should enter no data into the system at this time.
)))[anchor|#table_rpw_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Plan system email accounts'''
| 
Collect the following information on the configuration of the system email accounts: [anchor|#ul_yld_yrp_bs]
*Outgoing and incoming mail servers (indicate whether the connection to the mail server should be secured by SSL); incoming mail protocol; server port numbers
*Username and password to be used for the account
*Whether incoming mail processing will be performed
*Allowed message size and attachment types
*The default email workgroups and the default owners if the emails to this account should be automatically assigned to employees, plan the default email workgroups and the default owners

Decide which of the accounts will be used as the default system email account.{br}

For more information, see [HelpRoot_Administration\EM__con_System_Email_Accounts|System Email Accounts].
|- 
| '''Plan templates for notification emails'''
| 
Review the standard set of templates that comes with Acumatica ERP, and decide whether you will use them as is or you need to modify them or create new templates. {br}

Prepare the email templates for the following:[anchor|#ul_qdg_tnf_ht]
*New User Welcome template 
*Password Changed template
*Login Recovery template
*Password Recovery template
{br}

See [HelpRoot_FormReference\SM_20_40_03|Notification Templates].
|- 
| '''Plan integration with Exchange Server'''
| This task is needed only if the ''Exchange Integration'' feature is enabled on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. 
Decide whether you need to synchronize contacts, emails, tasks, and events between your users&rsquo; Exchange Server accounts and their Acumatica ERP email accounts.{br}

Plan synchronization policies. For each synchronization policy, decide on the record types to be synchronized, the synchronization direction, and the way the synchronized records will be marked; list the employees.{br}

Decide whether you need to perform the synchronization on schedule. Plan the schedules if needed. {br}

For more information, see [HelpRoot_Integration\EM__mng_Exchange_server|Synchronizing Acumatica ERP with Microsoft Exchange Server].
|}
 You can print [HelpRoot_ImplementChecklists\EM_Preparation_Checklist|Email Preparation Checklist] and refer to it when you prepare to implement the Email module. ]]></column>
			<column name="PlainText"><![CDATA[Email: Preparation This topic covers the preparation that you have to perform before you begin configuring the     Email module in  Acumatica ERP.   Because this is the preparation phase of implementation, you should enter     no data into the system at this time. Task  Description Plan system email accounts Collect the following information on the configuration of the system email accounts:  Outgoing and incoming mail servers (indicate whether the connection to the mail server           should be secured by SSL); incoming mail protocol; server port numbers Username and password to be used for the account Whether incoming mail processing will be performed Allowed message size and attachment types The default email workgroups and the default owners if  the emails to this account           should be automatically assigned to employees, plan the default email workgroups and the           default owners Decide which of the accounts will be used as the default system email account. For more information, see  System Email Accounts. Plan templates for notification emails Review the standard set of templates that comes with  Acumatica ERP, and decide whether you will use them as is or you need to modify them or create new          templates.  Prepare the email templates for the following: New User Welcome template  Password Changed template Login Recovery template Password Recovery template See   ([~/?ScreenId=SM204003|SM204003]) Notification Templates. Plan integration with Exchange Server This task is needed only if the  Exchange Integration  feature is enabled on the            ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form.  Decide whether you need          to synchronize contacts, emails, tasks, and events between your users' Exchange Server          accounts and their  Acumatica ERP email accounts. Plan synchronization policies. For each synchronization policy,          decide on the record types to be synchronized, the synchronization direction, and the way          the synchronized records will be marked; list the employees. Decide whether you need          to perform the synchronization on schedule. Plan the schedules if needed.  For more          information, see  Synchronizing Acumatica ERP with Microsoft Exchange Server.  You can print  Email Preparation Checklist and refer to it when you prepare     to implement the Email module.  ]]></column>
		</row>
		<row PageID="46560a7a-0811-4e58-b735-c40ce866e87a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="89f619f0-5d67-076a-e091-b8e55fe73997" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This topic will guide you through the process of configuring the Email module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to follow the order of tasks.[anchor|#table_cmx_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="22%" ! Task 
!width="64%" ! Description
!width="8%" ! Feature
|- 
| '''1'''
| 
 '''Configure system email accounts'''{br}

 [HelpRoot_FormReference\SM_20_40_02|System Email Accounts] ([~/?ScreenId=SM204002|SM204002])
| 
For each system email account, specify the following: [anchor|#ul_yld_yrp_bs]
*Identifier of the account
*Outgoing and incoming mail servers; indicate whether the connection to the mail server should be secured by SSL and whether the outgoing server requires authentication 
*Incoming mail protocol 
*Server port numbers
*Login and password to be used for the account
*Maximum message size allowed for an incoming message
*Attachments: whether they are allowed, and what types of attachments are permitted
*Allowed message size and attachment types
{br}

For details, see [HelpRoot_Administration\EM__HOW_To_Create_a_System_Email_Account|To Create a System Email Account].
| 
|- 
| '''2'''
| 
 '''Set up email preferences'''{br}

 [HelpRoot_FormReference\SM_20_40_01|Email Preferences] ([~/?ScreenId=SM204001|SM204001])
| 
Review the system email accounts listed in the table on the form and select one of them as the default one—then it will appear by default on the forms that the users use to create emails. {br}

Select the email templates to be used for the following:[anchor|#ul_qdg_tnf_ht]
*New User Welcome template 
*Password Changed template
*Login Recovery template
*Password Recovery template

If you are going to schedule the processes of sending and receiving emails, enter the number of times the system will attempt to resend emails that are not sent successfully. 
| 
|- 
| '''3'''
| 
 '''Create the roles to control user access to email accounts'''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
'''''Configuration &gt; User Security &gt; Manage &gt; User Roles (SM201005)'''''{br}

Create the roles to control user access to email accounts
| 
|- 
| '''4'''
|  '''Configure the roles&rsquo; access to email accounts'''
 [HelpRoot_FormReference\SM_20_10_25|Access Rights by Role] ([~/?ScreenId=SM201025|SM201025])
| 
For each role, set its access rights to the System Email Accounts (SM204002) form to ''Revoked'', ''View Only'', or ''Delete''.
| 
|- 
| '''5'''
|  '''Create restriction groups'''
 [HelpRoot_FormReference\SM_20_10_50|Email Account Access] ([~/?ScreenId=SM201050|SM201050])
| 
For each system email account (or group of email accounts intended for a special use), create a restriction group of type ''A'' and add the users who should have access to the system email account or the group of email accounts. The system email account or accounts in each restriction group will not be available for users not included in the group. System email accounts not included in any group will be available to all users.
| Row-Level Security
|- 
| '''6'''
| 
 '''Schedule the send/receive processes'''{br}

 [HelpRoot_FormReference\SM_20_50_20|Automation Schedules] ([~/?ScreenId=SM205020|SM205020]) 
| 
Create a schedule as follows:[anchor|#ol_s4p_qvj_qs]
#Select the '''''Configuration &gt; Email &gt; Schedule &gt; Send and Receive Email (SM507010)''''' form in the '''Screen ID''' box.
#Provide the description of the schedule.
#Select the start and expiration dates for the schedule, or specify the maximum number of executions.
#Specify how often the operation should be performed.

For details, see [HelpRoot_Administration\EM__con_Sending_and_Receiving_Emails|Mail Sending and Receipt] and [HelpRoot_Administration\SM__how_Scheduling_the_Desired_Processing|To Schedule Processing].
| Scheduled Processing
|- 
| '''7'''
| 
 '''Create synchronization policies'''{br}

 [HelpRoot_FormReference\SM_20_40_10|Exchange Synchronization Policies] ([~/?ScreenId=SM204010|SM204010])
| 
For each policy, specify the following:[anchor|#ul_j4p_2fm_ht]
*Policy name
*Category name and color
*Record types that should be synchronized
*Synchronization direction
*If you synchronize contacts, the folder for synchronized contacts
*If you synchronize emails, the folder for synchronized emails and specify other options
*Employee email accounts to be synchronized

See [HelpRoot_Integration\EM__how_Policy_Add|To Add a Synchronization Policy].
| Exchange Integration
|- 
| '''8'''
| 
 '''Set up integration with Exchange Server'''{br}

 [HelpRoot_FormReference\SM_20_40_15|Exchange Server Configuration] ([~/?ScreenId=SM204015|SM204015])
| 
Configure synchronization between your Microsoft Exchange Server and the Acumatica ERP instance.{br}

See [HelpRoot_Integration\EM__how_Add_Server|To Set Up a Connection with an Exchange Server].
| Exchange Integration
|- 
| '''9'''
| 
 '''Set up automatic synchronization with Exchange Server'''{br}

 [HelpRoot_FormReference\SM_20_40_30|Exchange Synchronization Process] ([~/?ScreenId=SM204030|SM204030]) 
| 
For the selected exchange server and each policy, select the employees and click '''Add Schedule'''. Specify the schedule name and the settings you want to use for automatic synchronization. {br}

See [HelpRoot_Integration\EM__how_Schedule_synch|To Set Up Automatic Synchronization with Exchange Server].
| Scheduled Processing and Exchange Integration
|}
 You can print [HelpRoot_ImplementChecklists\EM_Conf_Checklist|Email Configuration Checklist] and refer to it when you configure the Email module. ]]></column>
			<column name="PlainText"><![CDATA[Email: Configuration This topic will guide you through the process of configuring the Email module.       Due to dependencies between the forms, the sequence of actions during configuration is       critical, so you need to follow the order of tasks. No. Task  Description Feature 1 Configure system email accounts  ([~/?ScreenId=SM204002|SM204002]) System Email Accounts (SM204002) For each system email account, specify the following:  Identifier of the account Outgoing and incoming mail servers; indicate whether the connection to the                       mail server should be secured by SSL and whether the outgoing server requires                       authentication  Incoming mail protocol  Server port numbers Login and password to be used for the account Maximum message size allowed for an incoming message Attachments: whether they are allowed, and what types of attachments are                       permitted Allowed message size and attachment types For details, see  To Create a System Email Account. 2 Set up email preferences  ([~/?ScreenId=SM204001|SM204001]) Email Preferences (SM204001) Review the system email accounts listed in the table on the form and select one                   of them as the default one—then it will appear by default on the forms that the                   users use to create emails.  Select the email templates to be used for the following: New User Welcome template  Password Changed template Login Recovery template Password Recovery template If you are going to schedule the processes of sending and receiving emails, enter                   the number of times the system will attempt to resend emails that are not sent                   successfully.  3 Create the roles to control user access to email accounts  ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005) Configuration > User Security > Manage > User Roles                       (SM201005) Create the roles to control user access to email accounts 4 Configure the roles' access to email accounts  ([~/?ScreenId=SM201025|SM201025]) Access Rights by Role (SM201025) For each role, set its access rights to the System Email Accounts (SM204002)                   form to  Revoked ,  View Only , or  Delete . 5 Create restriction groups  ([~/?ScreenId=SM201050|SM201050]) Email Account Access                   (SM201050) For each system email account (or group of email accounts intended for a special                   use), create a restriction group of type  A  and add the users who should                   have access to the system email account or the group of email accounts. The system                   email account or accounts in each restriction group will not be available for                   users not included in the group. System email accounts not included in any group                   will be available to all users. Row-Level Security 6 Schedule the send/receive processes  ([~/?ScreenId=SM205020|SM205020]) Automation Schedules (SM205020)  Create a schedule as follows: Select the  Configuration > Email >  Schedule > Send and Receive                         Email (SM507010)  form in the  Screen ID                      box. Provide the description of the schedule. Select the start and expiration dates for the schedule, or specify the maximum                     number of executions. Specify how often the operation should be performed. For details, see  Mail Sending and Receipt and  To Schedule Processing. Scheduled Processing 7 Create synchronization policies  ([~/?ScreenId=SM204010|SM204010]) Exchange Synchronization Policies (SM204010) For each policy, specify the following: Policy name Category name and color Record types that should be synchronized Synchronization direction If you synchronize contacts, the folder for synchronized contacts If you synchronize emails, the folder for synchronized emails and specify                     other options Employee email accounts to be synchronized See  To Add a Synchronization Policy. Exchange Integration 8 Set up integration with Exchange Server  ([~/?ScreenId=SM204015|SM204015]) Exchange Server Configuration (SM204015) Configure synchronization between your Microsoft Exchange Server and the                   Acumatica ERP instance. See  To Set Up a Connection with an Exchange Server. Exchange Integration 9 Set up automatic synchronization with Exchange Server  ([~/?ScreenId=SM204030|SM204030]) Exchange Synchronization Process (SM204030)  For the selected exchange server and each policy, select the employees and click                      Add Schedule . Specify the schedule name and the settings                   you want to use for automatic synchronization.  See  To Set Up Automatic Synchronization with Exchange Server. Scheduled Processing and Exchange Integration  You can print  Email Configuration Checklist and refer to it when you         configure the Email module.  ]]></column>
		</row>
		<row PageID="022fd54b-71a3-4515-a2af-092e509150fb" Language="en-US" PageRevisionID="1" Content="&#xA;This chapter describes the process of configuring users in Acumatica ERP. &#xA;==Prerequisites and Dependencies==There are no prerequisites for configuring users, however, create user accounts for employees and users not participating in the implementation process after you configured at least the Finance suite and became familiar with the functionality of modules and forms in these modules.&#xA;==In This Chapter==[anchor|#ul_psd_y3m_3h]&#xA;*[HelpRoot_Implement\US_Preparation|Users: Preparation]: Describes what data should be collected, arranged, and analyzed before you can configure users.&#xA;*[HelpRoot_Implement\US_Configuration|Users: Configuration]: Guides you through the actual configuration of the user accounts and roles.&#xA;" PlainText="Configuring Users This chapter describes the process of configuring users in  Acumatica ERP.  Prerequisites and Dependencies There are no prerequisites for configuring    users, however, create user accounts for employees and users not participating in the    implementation process after you configured at least the Finance suite and became familiar with    the functionality of modules and forms in these modules. In This Chapter Users: Preparation: Describes what data should be collected, arranged, and      analyzed before you can configure users. Users: Configuration: Guides you through the actual configuration of the      user accounts and roles. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="78710018-6847-51ea-1dcf-12f2709317ab" RecordSourceID="22377" />
		<row PageID="fc17a2c6-9949-4099-b3c2-62956e4f9324" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="11b27eca-acd3-54b2-8f0b-11d52e581da0" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
Once you have finished configuring the modules of the Finance suite, you are ready to start configuring users. This topic covers the preparation that you have to perform before you begin configuring the users in Acumatica ERP. Complete the following tasks before you actually start configuring the system. [anchor|#table_rpw_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Decide on integration with Active Directory or another system'''
| 
Consider whether you want to integrate Acumatica ERP with Microsoft Active Directory (AD) or Microsoft Azure Active Directory (Azure AD), so that your organization can maintain user accounts and password policies at the domain level. {br}

Identify any domain users that do not need access to Acumatica ERP. Also, review any user groups to be mapped to user roles in Acumatica ERP.{br}

For more information, see [HelpRoot_Integration\US__con_Integration_with_Active_Directory|Integration with Active Directory] and [HelpRoot_Integration\US__con_AzureAD_Integration|Integration with Azure Active Directory].
|- 
| '''Develop a convention for logins (usernames)'''
| 
Each user of Acumatica ERP must have a unique login (''username''). If Acumatica ERP is integrated with Active Directory (AD), consider using domain logins as users&rsquo; logins to Acumatica ERP. Then domain users can sign in to Acumatica ERP by using their domain logins and passwords, with password and login policy set at the domain level.{br}

If no integration is planned, develop a convention for creating logins in Acumatica ERP.
|- 
| '''Prepare a list of users'''
| 
Prepare a list of individuals (employees and possibly external staff, such as consultants) who will need to access and use Acumatica ERP. For each user, list the following information:[anchor|#ul_o1x_yl2_1s]
*The name of the user.
*The login to be used to access the system.
*The email address of the user.
*The initial password.
*Password options. Decide whether to apply the following options for the user:
**Allow password recovery if the user provides an answer to a question maintained in his or her profile.
**Allow password changes. When users change their passwords regularly, their accounts are more secure.
**Permit the user to have a never-expiring password. This option is normally cleared for all users, but in rare instances, you might want to allow it for a particular user.
**Force the user to change the password on the next login. This option is normally selected for new users.
*The user&rsquo;s job responsibilities. List the duties the user performs on a regular basis, such as creating invoices, generating statements, and collecting payments; sometimes employees with the same job title actually have different responsibilities. Users&rsquo; responsibilities are used to define the roles they belong to.
*Optional: IP addresses from which the user may access the system.

For more information, see [HelpRoot_Administration\US__con_User_Accounts|User Accounts in Acumatica ERP].
|- 
| '''Design user roles'''
| 
Analyze the responsibilities of individual users and identify typical sets of related duties, which you will define in Acumatica ERP as roles that can be shared by multiple users. In the system, access is defined for roles rather than for individual users. {br}

For each identified role, plan the following: [anchor|#ul_wcx_yl2_1s]
*Role name.
*Description.
*List of users who will be assigned to the role.
*List of Acumatica ERP modules, forms, and reports that the users with the role may access. Also, determine the level of access to modules (''Granted'', ''View Only'', or ''Revoked'') and to forms (''Delete'', ''Edit'', ''View Only'', or ''Revoked'') that you will assign.

 Access can be controlled not only for forms but also for individual elements and actions on forms. Defining such access, however, can quickly become time-consuming. During implementation, we recommend that you define roles only at the module and form levels, and fine-tune the access, if needed, after the start of actual operations. ((({S:Warn}In addition to controlling access to Acumatica ERP functionality by roles, you can control access to particular GL accounts and customer and vendor accounts by using ''restriction groups''. For more information, see [HelpRoot_Administration\SM__con_Overview_of_Restriction_Groups|Restriction Groups in Acumatica ERP].
)))
For more details about roles and their access rights, see [HelpRoot_Administration\SM__con_Role-Based_Access|Role-Based Access], [HelpRoot_Administration\SM__con_Roles_and_Access_Rights|Levels of Access Rights], and [HelpRoot_Administration\SM__con_Role_Configuration|Access Rights for Roles]. 
|- 
| '''Plan user types'''
| 
If you are going to implement Self-Service Portal, create user types to group the roles created for internal users and the roles intended for external users (the users of Self-Service Portal). For more information, see [HelpRoot_Administration\US__con_User_Accounts#_775858a7-972a-4226-ac5d-7e74ae894419|User Types].{br}

Identifiers for user types can be Unicode strings of up to 50 characters. 
|- 
| '''Redefine security and audit policies'''
| 
If no AD integration is planned, review your security and audit options, which will affect all local users, as follows: [anchor|#ul_tkd_yrp_bs]
*Decide whether to require password complexity. Complex passwords include at least three of these four features: 
**Uppercase letters
**Lowercase letters
**Numbers
**Special symbols
*Decide whether to force users to change passwords and how often.
*Determine whether to apply a mask in addition to other password restrictions. This mask involves excluding characters that may not be supported by the involved systems. Use this option only when it&rsquo;s absolutely necessary. If you decide to use this mask, develop a message text to be displayed to the user when the password violates the validation mask.
* Determine whether to set up an account lock time and how many unsuccessful login attempts are allowed before users&rsquo; accounts will be locked.
*Decide how long you want to keep security audit logs and which of these security events should be logged: 
** Successful login attempt 
** Failed login attempt (this event should always be audited, because it helps you detect possible break-ins to the system)
** Logout 
** Session expiration 
** Screen access (the log will grow very fast if you log this event, so we recommend that you not do so)
** Successful sending of email 
** Failure sending email 

For more information, see [HelpRoot_Administration\SM__con_Site_Security_Options|Security Policies in Acumatica ERP].
|- 
| '''Review the security preferences'''
| 
Review the following security preferences that may be in place, and decide whether your current settings are those you will need in the live system: [anchor|#ul_hh3_typ_bs]
*'''Password Policy''': Decide on the maximum lifetime for user passwords, minimum password length, password complexity (whether it is required), additional validation mask (if required), and tip that the user will see if a new password doesn&rsquo;t meet the complexity requirements.
*'''Account Lockout Policy''': Decide on the maximum number of unsuccessful attempts, lockout time, and lockout counter reset time. 
*'''Audit policy''': Decide on the audited operations and the time to keep the audit history 
*'''Security Certificates:''' If you have not done this during the initial configuration, decide on the default certificate to be used for PDF signing and on the certificate to be used for encryption of the database.

|- 
| '''Decide on user access to branches'''
| 
This task is needed only if the ''Multiple Branch Support'' feature is enabled in your system on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. {br}

Decide which of the users will have access to all branches and which will access only a particular branch. You manage users&rsquo; ability to log in to a specific branch and view the branch data by using the branch access roles. {br}

If no role is assigned to any branch, all users have access to all the data. Once a role has been assigned to one of the branches, roles will be required to access other branches too, and a branch with no role assigned will be inaccessible to any user. {br}

Do not create access roles for branches in the following cases:[anchor|#ul_op3_rq4_ds]
*Your organization has only one branch.
*Your organization has more than one branch, but all users should have access to all branch-specific data.

For more information, see [HelpRoot_Organization\CS__con_Branch_Security_Administration|Security of Organization Branches].
|}
 You can print the [HelpRoot_ImplementChecklists\US_Preparation_Checklist|Users Preparation Checklist] and refer to it when you prepare to implement the User Security module. ]]></column>
			<column name="PlainText"><![CDATA[Users: Preparation Once you have finished configuring the modules of the Finance suite, you are ready to start     configuring users. This topic covers the preparation that you have to perform before you begin     configuring the users in  Acumatica ERP.     Complete the following tasks before you actually start configuring the system.  Task  Description Decide on integration with Active Directory or another system Consider whether you want to integrate  Acumatica ERP with Microsoft Active Directory (AD) or Microsoft Azure Active Directory (Azure AD), so          that your organization can maintain user accounts and password policies at the domain          level.  Identify any domain users that do not need access to  Acumatica ERP. Also, review any user groups to be mapped to user roles in  Acumatica ERP. For more information, see  Integration with Active Directory and  Integration with Azure Active Directory. Develop a convention for logins (usernames) Each user of  Acumatica ERP must have a unique login ( username ). If  Acumatica ERP is integrated with Active Directory (AD), consider using domain logins as users' logins          to  Acumatica ERP. Then domain users can sign in to  Acumatica ERP by using their domain logins and passwords, with password and login policy set at the          domain level. If no integration is planned, develop a convention for creating logins in  Acumatica ERP. Prepare a list of users Prepare a list of individuals (employees and possibly external staff, such as          consultants) who will need to access and use  Acumatica ERP. For each user, list the following information: The name of the user. The login to be used to access the system. The email address of the user. The initial password. Password options. Decide whether to apply the following options for the user: Allow password recovery if the user provides an answer to a question maintained in             his or her profile. Allow password changes. When users change their passwords regularly, their accounts             are more secure. Permit the user to have a never-expiring password. This option is normally cleared             for all users, but in rare instances, you might want to allow it for a particular             user. Force the user to change the password on the next login. This option is normally             selected for new users. The user's job responsibilities. List the duties the user performs on a regular basis,           such as creating invoices, generating statements, and collecting payments; sometimes           employees with the same job title actually have different responsibilities. Users'           responsibilities are used to define the roles they belong to. Optional: IP addresses from which the user may access the system. For more information, see  User Accounts in Acumatica ERP. Design user roles Analyze the responsibilities of individual users and identify typical sets of related          duties, which you will define in  Acumatica ERP as roles that can be shared by multiple users. In the system, access is defined for          roles rather than for individual users.  For each identified role, plan the following:  Role name. Description. List of users who will be assigned to the role. List of  Acumatica ERP modules, forms, and reports that the users with the role may access. Also, determine           the level of access to modules ( Granted ,  View Only , or  Revoked ) and           to forms ( Delete ,  Edit ,  View Only , or  Revoked ) that you will           assign.  Access can be controlled not only for forms but also for individual elements and actions          on forms. Defining such access, however, can quickly become time-consuming. During          implementation, we recommend that you define roles only at the module and form levels, and          fine-tune the access, if needed, after the start of actual operations.  In addition to controlling access to  Acumatica ERP functionality by roles, you can control access to particular GL accounts and customer          and vendor accounts by using  restriction groups . For more information, see  Restriction Groups in Acumatica ERP. For more details about roles and their access rights, see  Role-Based Access,  Levels of Access Rights, and  Access Rights for Roles.  Plan user types If you are going to implement  Self-Service Portal,          create user types to group the roles created for internal users and the roles intended for          external users (the users of  Self-Service Portal). For          more information, see  User Types. Identifiers for user types can be Unicode strings of up to 50 characters.  Redefine security and audit policies If no AD integration is planned, review your security and audit options, which will          affect all local users, as follows:  Decide whether to require password complexity. Complex passwords include at least three           of these four features:  Uppercase letters Lowercase letters Numbers Special symbols Decide whether to force users to change passwords and how often. Determine whether to apply a mask in addition to other password restrictions. This mask           involves excluding characters that may not be supported by the involved systems. Use this           option only when it's absolutely necessary. If you decide to use this mask, develop a           message text to be displayed to the user when the password violates the validation           mask.  Determine whether to set up an account lock time and how many unsuccessful login           attempts are allowed before users' accounts will be locked. Decide how long you want to keep security audit logs and which of these security events           should be logged:   Successful login attempt   Failed login attempt (this event should always be audited, because it helps you             detect possible break-ins to the system)  Logout   Session expiration   Screen access (the log will grow very fast if you log this event, so we recommend             that you not do so)  Successful sending of email   Failure sending email  For more information, see  Security Policies in Acumatica ERP. Review the security preferences Review the following security preferences that may be in place, and decide whether your          current settings are those you will need in the live system:  Password Policy : Decide on the maximum lifetime for user passwords, minimum           password length, password complexity (whether it is required), additional validation mask           (if required), and tip that the user will see if a new password doesn't meet the           complexity requirements. Account Lockout Policy : Decide on the maximum number of unsuccessful attempts,           lockout time, and lockout counter reset time.  Audit policy : Decide on the audited operations and the time to keep the audit           history  Security Certificates:  If you have not done this during the initial           configuration, decide on the default certificate to be used for PDF signing and on the           certificate to be used for encryption of the database. Decide on user access to branches This task is needed only if the  Multiple Branch Support  feature is enabled in your          system on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form.  Decide which of the users will have access to all branches and which will access only a          particular branch. You manage users' ability to log in to a specific branch and view the          branch data by using the branch access roles.  If no role is assigned to any branch, all users have access to all the data. Once a role          has been assigned to one of the branches, roles will be required to access other branches          too, and a branch with no role assigned will be inaccessible to any user.  Do not create access roles for branches in the following cases: Your organization has only one branch. Your organization has more than one branch, but all users should have access to all           branch-specific data. For more information, see  Security of Organization Branches.  You can print the  Users Preparation Checklist and refer to it when you     prepare to implement the User Security module.  ]]></column>
		</row>
		<row PageID="688d82af-33e3-4a9a-9251-bbec002b55c1" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c65fa12a-6a57-fff8-23c7-eeb65722c68f" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]
This topic will guide you through the process of configuring the users of Acumatica ERP. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to perform these tasks in the order in which they are listed.[anchor|#table_cmx_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Create user roles'''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
Create the roles you identified during the preparation phase.{br}

For each role, specify the role name and description. 
|- 
| '''2'''
| 
 '''Configure role access'''{br}

 [HelpRoot_FormReference\SM_20_10_25|Access Rights by Role] ([~/?ScreenId=SM201025|SM201025])
| 
Set up each role&rsquo;s access rights for the suites that have been used in the implementation process (Organization, Configuration, Finance, and User Security) to specify the default levels of access rights to modules of the suites. Configure each role&rsquo;s access rights to each module and its forms as follows: [anchor|#ol_xq1_scl_hl]
*If the new role should have the ''Revoked'' level of access rights to most forms in the module:
*#Specify the ''Revoked'' level of access rights to the module; this will set the ''Revoked'' access rights to all forms in the module.
*#Specify more permissive levels of access (''Delete'', ''Edit'', or ''View Only'') to certain forms of the module, as planned. 
*#Change the level of access rights to the module to ''Granted''.
*If the new role should have the ''Delete'' level of access to most forms in the module, do the following: 
*#Specify the ''Granted'' level of access rights to the module—the role will inherit the ''Delete'' level of access to all the forms of the module.
*#Specify the ''Revoked'' level of access rights to the forms to which the role should not have access.
*#If needed, select other levels of access rights (''Edit'' or ''View Only'') to other forms of the module as planned. 

If necessary, set up access rights for the form elements. {br}

See [HelpRoot_Administration\SM__con_Role_Configuration|Access Rights for Roles].
|- 
| '''3'''
| 
 '''Create user types'''{br}

 [HelpRoot_FormReference\EP_20_25_00|User Types] ([~/?ScreenId=EP202500|EP202500])
| 
If you are going to use the Self-Service Portal, do the following:[anchor|#ul_e22_c5z_1t]
*Create at least two user types: one to group the default roles created for internal users, and another to group the default roles intended for external users (the users of Self-Service Portal).
*Assign the default roles to the user types.

|- 
| '''4'''
| 
 '''Redefine the security preferences'''{br}

 [HelpRoot_FormReference\SM_20_10_60|Security Preferences] ([~/?ScreenId=SM201060|SM201060])
| 
Update the security settings with those you will need in the live system: [anchor|#ul_hh3_typ_bs]
*'''Password Policy''': Specify the maximum lifetime for user passwords, minimum password length, password complexity (whether it is required), additional validation mask (if required), and the tip that the user will see if a new password doesn&rsquo;t meet the complexity requirements.
*'''Account Lockout Policy''': Specify the maximum number of unsuccessful attempts, lockout time, and lockout counter reset time. 
*'''Audit policy''': Specify the audited operations and the time to keep the audit history. 
*'''Security Certificates:''' If you have not done this during the initial configuration, specify the certificates, the default certificate to be used for PDF signing, and the certificate to be used for encryption of the database.

|- 
| '''5'''
| 
 '''Create user accounts'''{br}

 [HelpRoot_FormReference\SM_20_10_10|Users] ([~/?ScreenId=SM201010|SM201010])
| 
If no AD integration is planned, create user accounts as planned: [anchor|#ul_kjy_yl2_1s]
*Enter the appropriate username, first name, last name, and email address.
*Type a login.
*Enter the initial user password. Select the '''Force User to Change Password on Next Log in''' check box to the right of this box if you want the user to change this password when logging in to the system.
*Optional: Type a '''Comment''' to the user account.
*Set the password options as follows:
**'''Allow Password Recovery''': Select if the user can reset his or her password by answering a recovery question.
**'''Allow Password Changes''': Select if the user is allowed to change his or her password anytime.
**'''Password Never Expires''': Select if the password should never expire.
*Activate the account.
*Optional: In the '''IP Filter''' tab, add IP addresses from which the user is allowed to access the system. Do not add anything here if the user has no such restrictions.
*On the '''Membership''' tab, add the roles of the user.

|- 
| '''6'''
| 
 '''Enable integration with Active Directory'''{br}

{{web.config }}
| 
Enable the integration between Acumatica ERP and Active Directory. {br}

For details, see [HelpRoot_Integration\US__how_Active_Directory_Integration__Enable|To Enable Active Directory Integration] or [HelpRoot_Integration\US__how_ADFS_Enable_Integration|To Enable AD FS Integration with Acumatica ERP].
|- 
| '''7'''
| 
 '''Map AD groups to user roles '''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
Map user roles to user groups available in Active Directory. Note that new AD users will get access to Acumatica ERP automatically depending on the AD group to which they are assigned.{br}

See [HelpRoot_Integration\US__how_Active_Directory_Integration__Map_Roles|To Map Active Directory Groups to Roles in Acumatica ERP] or [HelpRoot_Integration\US__how_ADFS_map_claims|To Map AD FS Claims to Roles in Acumatica ERP].
|- 
| '''8'''
| 
 '''Assign roles to AD users'''{br}

 [HelpRoot_FormReference\SM_20_10_10|Users] ([~/?ScreenId=SM201010|SM201010])
| 
Once the integration between Acumatica ERP and AD has been activated, assign to the users whose accounts were created automatically due to integration the roles that have not been mapped to AD groups.
|- 
| '''9'''
| 
 '''Create branch access roles'''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
(This task is needed only if the ''Multiple Branch Support'' feature is enabled in your system.){br}

For each branch access role, specify the following:[anchor|#ul_lvr_cdf_ft]
*A role name and description that clearly indicates the branch
*The list of users who should have access to the branch data
{br}

See [HelpRoot_Organization\CS__con_Branch_Security_Administration|Security of Organization Branches].
|- 
| '''10'''
| 
 '''Assign branch access roles to branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
(This task is needed only if the ''Multiple Branch Support'' feature is enabled in your system.){br}

Assign to each branch one of the branch roles you have created, which would allow the users to access the data associated with this branch. The roles should be assigned to all branches because once a role is assigned to one of the branches, roles will be required to access other branches too, and a branch with no role assigned will be inaccessible to any user. 
|}
 You can print the [HelpRoot_ImplementChecklists\US_Conf_Checklist|Users Configuration Checklist] and refer to it when you configure the User Security module. ]]></column>
			<column name="PlainText"><![CDATA[Users: Configuration This topic will guide you through the process of configuring the users of  Acumatica ERP. Due to dependencies between the forms, the sequence of actions during configuration is         critical, so you need to perform these tasks in the order in which they are listed. No. Task  Description 1 Create user roles  ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005) Create the roles you identified during the preparation phase. For each role, specify the role name and description.   2 Configure role access  ([~/?ScreenId=SM201025|SM201025]) Access Rights by Role (SM201025) Set up each role's access rights for the suites that have been used in the                   implementation process (Organization, Configuration, Finance, and User Security)                   to specify the default levels of access rights to modules of the suites. Configure                   each role's access rights to each module and its forms as follows:  If the new role should have the  Revoked  level of access rights to most                     forms in the module: Specify the  Revoked  level of access rights to the module; this will                         set the  Revoked  access rights to all forms in the module. Specify more permissive levels of access ( Delete ,  Edit , or                            View Only ) to certain forms of the module, as planned.  Change the level of access rights to the module to  Granted . If the new role should have the  Delete  level of access to most forms in                     the module, do the following:  Specify the  Granted  level of access rights to the module—the role                         will inherit the  Delete  level of access to all the forms of the                         module. Specify the  Revoked  level of access rights to the forms to which                         the role should not have access. If needed, select other levels of access rights ( Edit  or  View                           Only ) to other forms of the module as planned.  If necessary, set up access rights for the form elements.  See  Access Rights for Roles. 3 Create user types  ([~/?ScreenId=EP202500|EP202500]) User Types (EP202500) If you are going to use the  Self-Service Portal, do the following: Create at least two user types: one to group the default roles created for                     internal users, and another to group the default roles intended for external                     users (the users of  Self-Service Portal). Assign the default roles to the user types. 4 Redefine the security preferences  ([~/?ScreenId=SM201060|SM201060]) Security Preferences (SM201060) Update the security settings with those you will need in the live system:  Password Policy : Specify the maximum lifetime for user passwords,                     minimum password length, password complexity (whether it is required),                     additional validation mask (if required), and the tip that the user will see if                     a new password doesn't meet the complexity requirements. Account Lockout Policy : Specify the maximum number of unsuccessful                     attempts, lockout time, and lockout counter reset time.  Audit policy : Specify the audited operations and the time to keep the                     audit history.  Security Certificates:  If you have not done this during the initial                     configuration, specify the certificates, the default certificate to be used for                     PDF signing, and the certificate to be used for encryption of the database. 5 Create user accounts  ([~/?ScreenId=SM201010|SM201010]) Users(SM201010) If no AD integration is planned, create user accounts as planned:  Enter the appropriate username, first name, last name, and email address. Type a login. Enter the initial user password. Select the  Force User to Change Password                       on Next Log in  check box to the right of this box if you want the user to                     change this password when logging in to the system. Optional: Type a  Comment  to the user account. Set the password options as follows: Allow Password Recovery : Select if the user can reset his or her                         password by answering a recovery question. Allow Password Changes : Select if the user is allowed to change his                         or her password anytime. Password Never Expires : Select if the password should never                         expire. Activate the account. Optional: In the  IP Filter  tab, add IP addresses from which the user is                     allowed to access the system. Do not add anything here if the user has no such                     restrictions. On the  Membership  tab, add the roles of the user. 6 Enable integration with Active Directory web.config  Enable the integration between  Acumatica ERP and Active Directory.  For details, see  To Enable Active Directory Integration or  To Enable AD FS Integration with Acumatica ERP. 7 Map AD groups to user roles   ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005) Map user roles to user groups available in Active Directory. Note that new AD                   users will get access to  Acumatica ERP automatically depending on the AD group to which they are assigned. See  To Map Active Directory Groups to Roles in Acumatica ERP or                      To Map AD FS Claims to Roles in Acumatica ERP. 8 Assign roles to AD users  ([~/?ScreenId=SM201010|SM201010]) Users(SM201010) Once the integration between  Acumatica ERP and AD has been activated, assign to the users whose accounts were created                   automatically due to integration the roles that have not been mapped to AD                   groups. 9 Create branch access roles  ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005) (This task is needed only if the  Multiple Branch Support  feature is                   enabled in your system.) For each branch access role, specify the following: A role name and description that clearly indicates the branch The list of users who should have access to the branch data See  Security of Organization Branches. 10 Assign branch access roles to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) (This task is needed only if the  Multiple Branch Support  feature is                   enabled in your system.) Assign to each branch one of the branch roles you have created, which would allow                   the users to access the data associated with this branch. The roles should be                   assigned to all branches because once a role is assigned to one of the branches,                   roles will be required to access other branches too, and a branch with no role                   assigned will be inaccessible to any user.   You can print the  Users Configuration Checklist and refer to it when you configure         the User Security module.  ]]></column>
		</row>
		<row PageID="79666a55-0061-4666-9988-f9ec06e55f2c" Language="en-US" PageRevisionID="1" Content="This chapter describes the process of configuring non-stock items in Acumatica ERP in case the inventory and order management functionality is not used in the implementation.[anchor|#1]&#xA;==Prerequisites and Dependencies==&#xA;You can configure non-stock items any time after you have configured the General Ledger and Taxes modules. ((({S:Warn}If you plan to use the inventory and order management functionality, do not configure non-stock items separately (as described in this topic)—they should be configured along with stock items in the process of implementing the Inventory module.&#xA;)))&#xA;==In This Chapter==[anchor|#ul_psd_y3m_3h]&#xA;*[HelpRoot_Implement\NS_Preparation|Non-Stock Items: Preparation]: Describes what data should be collected, arranged, and analyzed before you can configure non-stock items.&#xA;*[HelpRoot_Implement\NS_Configuration|Non-Stock Items: Configuration]: Guides you through the actual configuration of non-stock items.&#xA;" PlainText="Configuring Non-Stock Items This chapter describes the process of configuring non-stock items in  Acumatica ERP in    case the inventory and order management functionality is not used in the    implementation. Prerequisites and Dependencies You can configure non-stock items any time after you have configured the General Ledger and     Taxes modules.  If you plan to use the inventory and order management functionality, do not      configure non-stock items separately (as described in this topic)—they should be configured      along with stock items in the process of implementing the Inventory module. In This Chapter Non-Stock Items: Preparation: Describes what data should be collected, arranged, and      analyzed before you can configure non-stock items. Non-Stock Items: Configuration: Guides you through the actual configuration of      non-stock items. " ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="c8fcc710-1431-761c-11f4-6d38992d2621" RecordSourceID="22377" />
		<row PageID="c741b1c5-801f-4386-b58d-7cd8d9fd779b" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="31bf48ba-504a-ca72-1a79-8ecd54b079ca" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This topic covers the preparation that you have to perform before you begin configuring non-stock items in Acumatica ERP. Complete the following tasks before you actually start configuring the system. [anchor|#table_lyn_4w2_4s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Plan identifiers for non-stock items'''
| 
Decide how the ''INVENTORY'' segmented key, which defines the structure of inventory IDs, should be configured: how many segments it should have, what the length of each segment is, which segments should be validated (and for validated segments, which values are valid), and whether auto-numbering should be used for one of the segments.{br}

By default, the ''INVENTORY'' key has one segment with 10 characters.
|- 
| '''Plan the non-stock items to be defined'''
| 
List all the non-stock items to be defined to the system, which are the following:[anchor|#ul_ib1_c2v_2t]
*All per-hour rates (for work hours and overtime) you will need to calculate employee compensation for case activities that employees will list on time sheets and time cards
*The default labor rates and overtime labor rates to be used for all employees on projects, if the ''Project Accounting'' feature is enabled in your system on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form
*The services and warranties your organization purchases from vendors
*The services and warranties your organization sells to customers
*Various expenses and charges that your organization may incur
Also, prepare the following information for each listed item:[anchor|#ul_xly_xqp_ps]
*Type of non-stock item (''Labor'', ''Service'', ''Charge'', ''Expense'', or ''Non-Stock'')
*Unit of measure
*Sales account (and sales subaccount)
*Expense account (and sales subaccount)
*Expense accrual account (and expense subaccount)
*Purchase price variance account (and purchase price variance subaccount)
*Tax category (if integration with Avalara is not configured) 

For more information on non-stock items, see [HelpRoot_InvMgmt\IN__con_Non-Stock_Item_Support|Non-Stock Items in Sales and Purchases].
|- 
| '''Plan units of measure'''
| 
List the units of measure that are needed for the planned non-stock items; specify the conversions between the listed units. {br}

See [HelpRoot_InvMgmt\UOMs_GeneralInfo|Units of Measure: General Information].
|- 
| '''Decide on using attributes for non-stock items'''
| 
 Decide on attributes you may want to add to further categorize particular non-stock items, if any. For example, an attribute to be used for items might be any property of the service or warranty you sell or purchase. {br}

For each attribute, plan the following:[anchor|#ul_gps_cxb_lt]
*The name
*The type of control (free text, masked text, date/time, check box, or combo box)
*Whether it is required
*The values (if the attribute is a combo box)
{br}

For more information, see [HelpRoot_Administration\CS__con_Attributes|Attributes] and [HelpRoot_InvMgmt\IN__con_Inventory_Item_Attributes|Inventory Item Attributes].
|- 
| '''Plan item price classes'''
| Design item classes that you will use in item pricing, and group the items whose prices should be calculated similarly.
|- 
| '''Design item classes'''
| 
Group items in item classes by their type, price class, tax category, and applicable attributes. {br}

Create a naming convention for the item class identifiers. By default, an identifier may be a string of up to 10 unicode characters.
|- 
| '''Consider creating an import scenario for non-stock items'''
| If you have fewer than 15 to 20 non-stock items, you can create these items manually during configuration. However, if you have a considerable number of non-stock items in your legacy system, consider creating an import scenario, as described in [HelpRoot_Integration\IS__con_Simplified_Import_Scenarios|Simplified Scenarios for Data Import]. Review the records in the legacy system and remove the obsolete records.
|}
 You can print [HelpRoot_ImplementChecklists\NS_Preparation_Checklist|Non-Stock Items Preparation Checklist] and refer to it when you prepare to define non-stock items. ]]></column>
			<column name="PlainText"><![CDATA[Non-Stock Items: Preparation This topic covers the preparation that you have to perform before you begin configuring     non-stock items in  Acumatica ERP.     Complete the following tasks before you actually start configuring the system.  Task  Description Plan identifiers for non-stock items Decide how the  INVENTORY  segmented key, which defines the structure of inventory          IDs, should be configured: how many segments it should have, what the length of each          segment is, which segments should be validated (and for validated segments, which values          are valid), and whether auto-numbering should be used for one of the segments. By default, the  INVENTORY  key has one segment with 10 characters. Plan the non-stock items to be defined List all the non-stock items to be defined to the system, which are the          following: All per-hour rates (for work hours and overtime) you will need to calculate employee           compensation for case activities that employees will list on time sheets and time           cards The default labor rates and overtime labor rates to be used for all employees on           projects, if the  Project Accounting  feature is enabled in your system on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000) form The services and warranties your organization purchases from vendors The services and warranties your organization sells to customers Various expenses and charges that your organization may incur Also, prepare the following information for each listed item: Type of non-stock item ( Labor ,  Service ,  Charge ,  Expense ,           or  Non-Stock ) Unit of measure Sales account (and sales subaccount) Expense account (and sales subaccount) Expense accrual account (and expense subaccount) Purchase price variance account (and purchase price variance subaccount) Tax category (if integration with Avalara is not configured)  For more information on non-stock items, see  Non-Stock Items in Sales and Purchases. Plan units of measure List the units of measure that are needed for the planned non-stock items; specify the          conversions between the listed units.  See  Units of Measure: General Information. Decide on using  attributes for non-stock items  Decide on attributes you may want to add to further categorize particular non-stock          items, if any. For example, an attribute to be used for items might be any  property of the          service or warranty you sell or purchase.  For each attribute, plan the following: The name The type of control (free text, masked text, date/time, check box, or combo box) Whether it is required The values (if the attribute is a combo box) For more information, see  Attributes and  Inventory Item Attributes. Plan item price classes Design item classes that you will use in item pricing, and group the items whose         prices should be calculated similarly. Design item classes Group items in item classes by their type, price class, tax category, and applicable          attributes.  Create a naming convention for the item class identifiers. By default, an identifier may          be a string of up to 10 unicode characters. Consider creating an import scenario for non-stock items If you have fewer than 15 to 20 non-stock items, you can create these items manually         during configuration. However, if you have a considerable number of non-stock items in your         legacy system, consider creating an import scenario, as described in  Simplified Scenarios for Data Import. Review the records in the         legacy system and remove the obsolete records.  You can print  Non-Stock Items Preparation Checklist and refer to it when you prepare     to define non-stock items.  ]]></column>
		</row>
		<row PageID="ee86b0b2-8537-4402-954b-bf2a529ecfc8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="db7d7bc3-f29f-022e-c459-2e4b030a34c5" RecordSourceID="22377">
			<column name="Content"><![CDATA[This topic will guide you through the process of configuring the non-stock items that can be used in the modules of the Finance suite. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to follow the order of tasks.
==Prerequisites and Dependencies==
Non-stock items can be configured after you complete configuration of the Taxes module. Although, we recommend that you first configure the Organization Structure module so that you will be able to assign product workgroups and product managers to non-stock items.[anchor|#table_mxw_tw2_4s]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Update the predefined list of units of measure'''{br}

 [HelpRoot_FormReference\CS_20_31_00|Units of Measure] ([~/?ScreenId=CS203100|CS203100])
| 
Review the predefined units of measure (UOMs) and add the UOMs your organization will use for various non-stock items, including non-stock items of the ''Labor'' type. Define the conversion rules between the UOMs. 
|- 
| '''2'''
| 
 '''Configure the ''INVENTORY ''segmented key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
Specify how the inventory IDs should be structured: [anchor|#ul_wy3_2y2_4s]
*How many segments they should have
*What the length of each segment is
*Which segments should be validated (and for such segments, list the values)
*Whether auto-numbering should be used for one of the segments

By default, the inventory IDs are one-segment, 10-character strings.
|- 
| '''3'''
| 
 '''Add segment values for the ''INVENTORY ''key'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| 
If you have configured the ''INVENTORY'' segmented key with multiple segments, add segment values for the validated segments.
|- 
| '''4'''
| 
 '''Create attributes for non-stock items'''{br}

 [HelpRoot_FormReference\CS_20_50_00|Attributes] ([~/?ScreenId=CS205000|CS205000])
| 
Create attributes to further categorize particular non-stock items. For each attribute, specify what type of control should be used, what values can be used (if it is a combo box), and whether the attribute is required. 
|- 
| '''5'''
| 
 '''Create item price classes'''{br}

 [HelpRoot_FormReference\IN_20_90_00|Item Price Classes] ([~/?ScreenId=IN209000|IN209000])
| Create the planned item price classes. For price class identifiers, strings of up to 10 characters may be used.
|- 
| '''6'''
| 
 '''Create item classes'''{br}

 [HelpRoot_FormReference\IN_20_10_00|Item Classes] ([~/?ScreenId=IN201000|IN201000])
| Create the planned item classes. For each class, specify its identifier, description, type of non-stock items, price class, tax category, and attributes. For class identifiers, strings of up to 10 characters may be used.
|- 
| '''7'''
| 
 '''Create non-stock items'''{br}

 [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000]) 
| 
If you have a relatively small number of non-stock items, create the non-stock items manually. Make sure that you specify the following details for each non-stock item:[anchor|#ul_bpj_vcf_4s]
*Inventory ID, which must be based on the structure of the ''INVENTORY'' segmented key 
*Description that includes all information about the item that is required on invoices
*The ''Active'' status—only active items can be selected for transactions
*Item class
*One of the following types: ''Non-Stock Item'', ''Labor, Service, Charge'', or'' Expense ''
*The base unit of measure
*The default price for the base unit of the item (optional)
*Default vendor
*GL accounts (and subaccounts)
*Tax category
*Attribute values
*Whether the item is subjected to sales commission

|- 
| '''8'''
| 
 '''Create an import scenario for non-stock items'''{br}

(Optional){br}

[HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
If you have many non-stock items in a legacy system, create an import scenario. Make sure that the source file includes at least the following details for each non-stock item: [anchor|#ul_qby_qcf_4s]
*Inventory ID, which must be based on the structure of the'' INVENTORY'' segmented key
*Description of the item
*Item class, to provide the default values for some other settings
*Optionally, the default cost and price

For details, see [HelpRoot_Integration\IS__mng_Configuring_Import_Scenarios|Configuring Import Scenarios].
|- 
| '''9'''
| 
 '''Import non-stock items'''{br}

(Optional){br}

[HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
Before you import item records by using the developed import scenario, review the source data to make sure that all the data matches the formats defined in the scenario. {br}

To test the scenario, import only a few records and make sure that valid records have been created. After that, import all the records.{br}

If the item has settings that differ from those of the class, assign the settings after import is completed. 
|}
 You can print [HelpRoot_ImplementChecklists\NS_Conf_Checklist|Non-Stock Items Configuration Checklist] and refer to it when you configure non-stock items. ]]></column>
			<column name="PlainText"><![CDATA[Non-Stock Items: Configuration This topic will guide you through the process of configuring the non-stock items that       can be used in the modules of the Finance suite. Due to dependencies between the forms, the       sequence of actions during configuration is critical, so you need to follow the order of       tasks. Prerequisites and Dependencies Non-stock items can be configured after you complete configuration of the Taxes module.         Although, we recommend that you first configure the Organization Structure module so that         you will be able to assign product workgroups and product managers to non-stock items. No. Task  Description 1 Update the predefined list of units of measure  ([~/?ScreenId=CS203100|CS203100]) Units of Measure (CS203100) Review the predefined units of measure (UOMs) and add the UOMs your organization                   will use for various non-stock items, including non-stock items of the                      Labor  type. Define the conversion rules between the UOMs.  2 Configure the  INVENTORY  segmented key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Specify how the inventory IDs should be structured:  How many segments they should have What the length of each segment is Which segments should be validated (and for such segments, list the                     values) Whether auto-numbering should be used for one of the segments By default, the inventory IDs are one-segment, 10-character strings. 3 Add segment values for the  INVENTORY  key  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) If you have configured the  INVENTORY  segmented key with multiple segments,                   add segment values for the validated segments. 4 Create attributes for non-stock items  ([~/?ScreenId=CS205000|CS205000]) Attributes (CS205000) Create attributes to further categorize particular non-stock items. For each                   attribute, specify what type of control should be used, what values can be used                   (if it is a combo box), and whether the attribute is required.  5 Create item price classes  ([~/?ScreenId=IN209000|IN209000]) Item Price Classes (IN209000) Create the planned item price classes. For price class identifiers, strings of                 up to 10 characters may be used. 6 Create item classes  ([~/?ScreenId=IN201000|IN201000]) Item Classes (IN201000) Create the planned item classes. For each class, specify its identifier,                 description, type of non-stock items, price class, tax category, and attributes. For                 class identifiers, strings of up to 10 characters may be used. 7 Create non-stock items  ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items (IN202000)  If you have a relatively small number of non-stock items, create the non-stock                   items manually. Make sure that you specify the following details for each                   non-stock item: Inventory ID, which must be based on the structure of the  INVENTORY                      segmented key  Description that includes all information about the item that is required on                     invoices The  Active  status—only active items can be selected for                     transactions Item class One of the following types:  Non-Stock Item ,  Labor, Service,                       Charge , or  Expense  The base unit of measure The default price for the base unit of the item (optional) Default vendor GL accounts (and subaccounts) Tax category Attribute values Whether the item is subjected to sales commission 8 Create an import scenario for non-stock items (Optional)  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  If you have many non-stock items in a legacy system, create an import scenario.                   Make sure that the source file includes at least the following details for each                   non-stock item:  Inventory ID, which must be based on the structure of the  INVENTORY                      segmented key Description of the item Item class, to provide the default values for some other settings Optionally, the default cost and price For details, see  Configuring Import Scenarios. 9 Import non-stock items (Optional)  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  Before you import item records by using the developed import scenario, review the                   source data to make sure that all the data matches the formats defined in the                   scenario.  To test the scenario, import only a few records and make sure that valid records                   have been created. After that, import all the records. If the item has settings that differ from those of the class, assign the settings                   after import is completed.   You can print  Non-Stock Items Configuration Checklist and refer to it when you configure         non-stock items.  ]]></column>
		</row>
		<row PageID="cf6176b0-d731-462f-8023-6038badc4ffa" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="7adf4700-7d12-6564-995f-046ed95fbf23" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This chapter describes the process of implementing the Organization Structure module in Acumatica ERP. {br}

The Organization Structure module provides the functionality to let you effectively manage employees of your organization. The Organization Structure module also lets you configure automatic assignment of documents for approval and assignment of orders for processing. For detailed descriptions of Organization Structure forms and capabilities, see the [HelpRoot_Organization\OS_00_00_00|Organization Structure] chapter of the Organization guide.[anchor|#1]
==Prerequisites and Dependencies==
If you are not going to use the inventory and order management functionality, you must configure the General Ledger, Cash Management, and Accounts Payable modules before you implement the Organization Structure module. {br}

If you plan to use the inventory and order management functionality, proceed with configuring the inventory and order management functionality (at least, configure the Inventory module) and then, configure the Organization Structure module. 
==In This Chapter==[anchor|#ul_qjy_jjn_cs]
*[HelpRoot_Implement\OS_Preparation|Organization Structure: Preparation]: Describes data you should collect, arrange, and analyze.
*[HelpRoot_Implement\OS_Configuration|Organization Structure: Configuration]: Guides you through the actual configuration of the Organization Structure module.
]]></column>
			<column name="PlainText"><![CDATA[Configuring Organization Structure This chapter describes the process of implementing the Organization Structure module in  Acumatica ERP.  The Organization Structure module provides the functionality to let you effectively manage     employees of your organization. The Organization Structure module also lets you configure     automatic assignment of documents for approval and assignment of orders for processing. For     detailed descriptions of Organization Structure forms and capabilities, see the   ([~/?ScreenId=OS000000|OS000000]) Organization Structure chapter of the Organization guide. Prerequisites and Dependencies If you are not going to use the inventory and order management functionality, you must     configure the General Ledger, Cash Management, and Accounts Payable modules before you implement     the Organization Structure module.  If you plan to use the inventory and order management functionality, proceed with configuring     the inventory and order management functionality (at least, configure the Inventory module) and     then, configure the Organization Structure module.  In This Chapter Organization Structure: Preparation: Describes data you should collect, arrange, and      analyze. Organization Structure: Configuration: Guides you through the actual configuration of the      Organization Structure module. ]]></column>
		</row>
		<row PageID="90b75941-8444-4fdd-950b-d4f05a403c96" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="076a699a-ae4e-0b1c-e200-22d8c04ab326" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#2]
This section covers the preparation that you have to perform before you begin configuring the Organization Structure module in Acumatica ERP. When you have completed configuring the General Ledger, the Accounts Payable, and the taxes modules, you are ready to start configuring employees. Complete the following tasks before you actually start configuring the system. [anchor|#table_rpw_yl2_1s]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Task 
!width="80%" ! Description
|- 
| '''Design employee identifiers'''
| Depending on what you decided earlier in the implementation process, proceed as follows:. [anchor|#ul_ghs_ktj_cs]
*If you decided to use the ''BIZACCT'' segmented key directly to define employee identifiers, prepare a list of employee-specific segment values (for the ''BIZACCT'' segments to be validated). 
*If you decided to use the ''EMPLOYEE'' segmented key, prepare a list of values for segments that should be validated and plan the numbering sequence for the auto-numbered segment (if applicable).

For additional information, see [HelpRoot_Administration\CS__con_Business_Accounts_Identifiers|Business Account Identifiers] and [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers]. 
|- 
| '''Collect employee information'''
| 
Create a list of employees who should have access to the system. For each employee, collect the following information: [anchor|#ul_o3j_1g1_ws]
*Full name, address, phone number, date of birth
*Hire date, position, department
*Duties (tasks) the employee performs in each module
*Branch or branches to which the employee should have access 
*Work hours, and time zone from which the employee works
*Currency the employee is paid in, and rate type used for payments to the employee
*Cash account and payment method
*Frequency with which the employee is paid
*Employment type and salary or hourly rate
*Regular and overtime rates used to pay the employee
*Employee IDs if you do not plan to use an auto-numbering for one of the segments
*User account

|- 
| '''Design any attributes you want to track for employees'''
| 
 Design attributes you may want to add to further categorize particular employees, if any. For example, an attribute to be used for employees might be gender, education, number of children, marital status, or any other additional information. {br}

For each attribute, plan the following:[anchor|#ul_gps_cxb_lt]
*What its name will be
*What type of control will be used (free text, masked text, date/time, check box, or combo box)
*Whether it is required
*What values can be selected (if the attribute is a combo box)

|- 
| '''Create the list of departments'''
| 
Create a list of departments by using the information compiled in the list of employees, and check with human resources personnel to make sure this list is complete. In Acumatica ERP, departments are used for informational purposes only. {br}

Plan identifiers for departments (up to 10 unicode characters). 
|- 
| '''Create the list of positions'''
| 
 Create a list of positions by using the employee information; check with human resources personnel to be sure the list is complete. {br}

Plan identifiers for positions (up to 10 unicode characters). 
|- 
| '''Decide on work calendars'''
| 
Determine which calendars are used in your organization. For each calendar, write down the following: [anchor|#ul_oyn_mmc_lt]
*Calendar ID (alphanumeric string of up to 10 characters) and description (alphanumeric string of up to 60 characters)
*Work hours during each week
*Time zone
*Exceptions

For more information, see [HelpRoot_Organization\EP__con_Multiple_Calendar_Support|Support of Multiple Work Calendars].
|- 
| '''Plan credit terms'''
| 
Create a list of credit terms that will be needed to schedule payments to employees (to pay salaries or wages, or to reimburse expenses).
|- 
| '''Define payment methods and cash accounts'''
| 
 Determine the payment methods that are used to pay the employees when they are reimbursed for expenses, compensated for labor performed on contracts or projects, and paid commissions earned on sales. Plan the cash accounts to be used for these payments.{br}

 For information about payment methods, see [HelpRoot_Financials\CA__MNG_PaymentMethods|Managing Payment Methods].
|- 
| '''Design employee classes'''
| 
Group employees into employee classes based on similar settings: [anchor|#ul_jwk_rnc_lt]
*Currency of the payments 
*Cash account used to pay for their expenses, labor, and commissions 
*Accounts (and subaccounts) to record payments and prepayments to employees of the class 
*Credit terms

Plan identifiers for employee classes (as strings of up to 10 characters) and description (up to 50 characters).{br}

Decide which class will be defined as the default one; this class should have the settings that apply to the largest number of employees. 
|- 
| '''Design the company tree'''
| 
Determine whether you need approval workgroups, which would approve documents (such as for cash transactions, expense claims, or time cards), and product workgroups. If you need workgroups of any type, design the company tree as a hierarchy of workgroups.{br}

For more information, see [HelpRoot_Organization\EP__con_Assignment_Automation|Managing Assignment and Approval Maps] and [HelpRoot_Organization\EP__con_Company_Organizational_Chart|Company Tree and Workgroups].
|- 
| '''Design roles for the Organization Structure module'''
| 
 Analyze user responsibilities related to the management of employees, and identify each set of closely related duties that can be associated with a role in Acumatica ERP. These duties might include the following: [anchor|#ul_ubt_wpf_1s]
*Entering expense claims and time cards
*Creating employee accounts
*Approving expense claims and time cards
*Releasing expense claims and time cards
*Maintaining departments and positions
*Maintaining the company tree and designing assignment and approval maps

For each role, plan the following: [anchor|#ul_sdt_wpf_1s]
*Role name and description
*List of users
*List of Acumatica ERP forms and reports that users with the role should be able to access

Access can be controlled not only for the forms and reports but also for the elements and actions on these forms and reports.{br}

For details about roles and access rights, see [HelpRoot_Administration\SM__con_Role-Based_Access|Role-Based Access] and [HelpRoot_Administration\SM__con_Roles_and_Access_Rights|Levels of Access Rights].
|- 
| '''Decide whether to import employee accounts'''
| 
Decide whether you need to import the employee accounts from your legacy system or you will create them by entering each employee&rsquo;s specific information and selecting the employee class. {br}

If you are going to import them, review the employee records in the legacy system and remove the obsolete records.{br}

See [HelpRoot_Integration\IS__con_Simplified_Import_Scenarios|Simplified Scenarios for Data Import].
|- 
| '''Decide on numbering sequences for expense claims and time cards'''
| 
Decide whether expense claims and time cards will be used in your organization. Decide on the numbering sequences to be used for documents of these types.
|}
 You can print [HelpRoot_ImplementChecklists\OS_Preparation_Checklist|Organization Structure Preparation Checklist] and refer to it when you prepare to implement the Organization Structure module. ]]></column>
			<column name="PlainText"><![CDATA[Organization Structure: Preparation This section covers the preparation that you have to perform before you begin configuring the     Organization Structure module in  Acumatica ERP.     When you have completed configuring the General Ledger, the Accounts Payable, and the taxes     modules, you are ready to start configuring employees. Complete the following tasks before you     actually start configuring the system.  Task  Description Design employee identifiers Depending on what you decided earlier in the implementation process, proceed as         follows:.  If you decided to use the  BIZACCT  segmented key directly to define employee           identifiers, prepare a list of employee-specific segment values (for the  BIZACCT            segments to be validated).  If you decided to use the  EMPLOYEE  segmented key, prepare a list of values for           segments that should be validated and plan the numbering sequence for the auto-numbered           segment (if applicable). For additional information, see  Business Account Identifiers and  Segmented Identifiers.  Collect employee information Create a list of employees who should have access to the system. For each employee,          collect the following information:  Full name, address, phone number, date of birth Hire date, position, department Duties (tasks) the employee performs in each module Branch or branches to which the employee should have access  Work hours, and time zone from which the employee works Currency the employee is paid in, and rate type used for payments to the employee Cash account and payment method Frequency with which the employee is paid Employment type and salary or hourly rate Regular and overtime rates used to pay the employee Employee IDs if you do not plan to use an auto-numbering for one of the segments User account Design any attributes you want to track for employees  Design attributes you may want to add to further categorize particular employees, if          any. For example, an attribute to be used for employees might be gender, education, number          of children, marital status, or any other additional information.  For each attribute, plan the following: What its name will be What type of control will be used (free text, masked text, date/time, check box, or            combo box) Whether it is required What values can be selected (if the attribute is a combo box) Create the list of departments Create a list of departments by using the information compiled in the list of employees,          and check with human resources personnel to make sure this list is complete. In  Acumatica ERP, departments are used for informational purposes only.  Plan identifiers for departments (up to 10 unicode characters).  Create the list of positions  Create a list of positions by using the employee information; check with human resources          personnel to be sure the list is complete.  Plan identifiers for positions (up to 10 unicode characters).  Decide on work calendars Determine which calendars are used in your organization. For each calendar, write down          the following:  Calendar ID (alphanumeric string of up to 10 characters) and description (alphanumeric           string of up to 60 characters) Work hours during each week Time zone Exceptions For more information, see  Support of Multiple Work Calendars. Plan credit terms Create a list of credit terms that will be needed to schedule payments to employees (to          pay salaries or wages, or to reimburse expenses). Define payment methods and cash accounts  Determine the payment methods that are used to pay the employees when they are          reimbursed for expenses, compensated for labor performed on contracts or projects, and paid          commissions earned on sales. Plan the cash accounts to be used for these payments.  For information about payment methods, see  Managing Payment Methods. Design employee classes Group employees into employee classes based on similar settings:  Currency of the payments  Cash account used to pay for their expenses, labor, and commissions  Accounts (and subaccounts) to record payments and prepayments to employees of the class  Credit terms Plan identifiers for employee classes (as strings of up to 10 characters) and description          (up to 50 characters). Decide which class will be defined as the default one; this class should have the          settings that apply to the largest number of employees.  Design the company tree Determine whether you need approval workgroups, which would approve documents (such as          for cash transactions, expense claims, or time cards), and product workgroups. If you need          workgroups of any type, design the company tree as a hierarchy of workgroups. For more information, see  Managing Assignment and Approval Maps          and  Company Tree and Workgroups. Design roles for the Organization Structure module  Analyze user responsibilities related to the management of employees, and identify each          set of closely related duties that can be associated with a role in  Acumatica ERP. These duties might include the following:  Entering expense claims and time cards Creating employee accounts Approving expense claims and time cards Releasing expense claims and time cards Maintaining departments and positions Maintaining the company tree and designing assignment and approval maps For each role, plan the following:  Role name and description List of users List of  Acumatica ERP forms and reports that users with the role should be able to access Access can be controlled not only for the forms and reports but also for the elements and          actions on these forms and reports. For details about roles and access rights, see  Role-Based Access and  Levels of Access Rights. Decide whether to import employee accounts Decide whether you need to import the employee accounts from your legacy system or you          will create them by entering each employee's specific information and selecting the          employee class.  If you are going to import them, review the employee records in the legacy system and          remove the obsolete records. See  Simplified Scenarios for Data Import. Decide on numbering sequences for expense claims and time cards Decide whether expense claims and time cards will be used in your organization. Decide on          the numbering sequences to be used for documents of these types.  You can print  Organization Structure Preparation Checklist and refer to it when you prepare     to implement the Organization Structure module.  ]]></column>
		</row>
		<row PageID="1cbd281f-d25a-4286-aaec-728a700113ab" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="a6c82bb8-b7d7-50a2-fa53-a62a86452860" RecordSourceID="22377">
			<column name="Content"><![CDATA[[anchor|#3]This section will guide you through the process of configuring the General Ledger module. Due to dependencies between the forms, the sequence of actions during configuration is critical, so you need to follow the order of tasks.[anchor|#table_mxw_tw2_4s]
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Task 
!width="72%" ! Description
|- 
| '''1'''
| 
 '''Create auto-numbering sequences'''{br}

 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
| 
Create numbering sequences for expense claims and for time cards. {br}

Also, create a sequence for the segment of the ''EMPLOYEE'' key (if the employee ID is based on the ''EMPLOYEE'' segmented key and it has an auto-numbered segment).
|- 
| '''2'''
| 
 '''Configure the ''EMPLOYEE'' segmented key'''{br}

 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
| 
Specify the structure of the ''EMPLOYEE'' segmented key if it is different from the structure of the ''BIZACCT'' key.
|- 
| '''3'''
| 
 '''Add segment values for employee IDs'''{br}

 [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000])
| 
If the employee ID is based on the segmented key ''BIZACCT'', add employee-specific segment values for segments that require validation. {br}

If not, populate the segments of the ''EMPLOYEE'' key.
|- 
| '''4'''
| 
 '''Create departments'''{br}

 [HelpRoot_FormReference\EP_20_15_00|Departments] ([~/?ScreenId=EP201500|EP201500])
| 
Create the departments available in your organization. 
|- 
| '''5'''
| 
 '''Create positions'''{br}

 [HelpRoot_FormReference\EP_20_10_00|Positions] ([~/?ScreenId=EP201000|EP201000])
| 
Create the positions held by employees in your organization. Positions are used for informational purposes only in Acumatica ERP.{br}

For positions, you can use identifiers of up to 10 unicode characters.
|- 
| '''6'''
| 
 '''Create work calendars'''{br}

 [HelpRoot_FormReference\CS_20_90_00|Work Calendar] ([~/?ScreenId=CS209000|CS209000])
| 
Create as many work calendars as are used in your organization. Specify work hours for weekdays, weekends (if any), holidays, early closing days, and any other exceptions.{br}

As a calendar identifier, you can use an alphanumeric string of up to 10 characters. For description, use a string of up to 60 characters.
|- 
| '''7'''
| 
 '''Create attributes for employees'''{br}

(Optional){br}

[HelpRoot_FormReference\CS_20_50_00|Attributes] ([~/?ScreenId=CS205000|CS205000])
| 
For each attribute, specify the following:[anchor|#ul_gps_cxb_lt]
*What name will be used
*What type of control will be used (free text, masked text, date/time, check box, or combo box)
*Whether the attribute is required
*What values users can select from (if the attribute is a combo box)

|- 
| '''8'''
| 
 '''Create credit terms for employees'''{br}

 [HelpRoot_FormReference\CS_20_65_00|Credit Terms] ([~/?ScreenId=CS206500|CS206500])
| Create credit terms to be used to schedule payments to employees (to pay salaries or wages, or to reimburse expenses).
|- 
| '''9'''
| 
 '''Create cash accounts'''{br}

 [HelpRoot_FormReference\CA_20_20_00|Cash Accounts] ([~/?ScreenId=CA202000|CA202000])
| 
Create the cash accounts to be used when employees are reimbursed for expenses, compensated for labor performed on contracts, and paid commissions earned on sales.{br}

 For information about cash accounts, see [HelpRoot_Financials\CA__How_to_Create_Cash_Account|To Create a Cash Account].
|- 
| '''10'''
| 
 '''Create payment methods'''{br}

 [HelpRoot_FormReference\CA_20_40_00|Payment Methods] ([~/?ScreenId=CA204000|CA204000])
| 
Create the payment methods to be used when employees are reimbursed for expenses, compensated for labor performed on contracts, and paid commissions earned on sales. {br}

 For information about payment methods, see [HelpRoot_Financials\CA__MNG_PaymentMethods|Managing Payment Methods].
|- 
| '''11'''
|  '''Configure employee classes'''
 [HelpRoot_FormReference\EP_20_20_00|Employee Classes] ([~/?ScreenId=EP202000|EP202000])
| 
Create employee classes. {br}

At minimum, you need to create one employee class that will include the largest number of employees and will be used as the default class. 
|- 
| '''12'''
| 
 '''Create labor items'''{br}

 [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000])
| 
Create the labor items that are needed for all employees for all available earning types. 
|- 
| '''13'''
| 
 '''Create employee accounts'''{br}

 [HelpRoot_FormReference\EP_20_30_00|Employees] ([~/?ScreenId=EP203000|EP203000])
| 
If you have a small number of employees, enter the employee accounts manually. For each employee, specify the following data:[anchor|#ul_ohk_n4y_gt]
*Employee ID, which must be based on the structure of the ''EMPLOYEE'' segmented key
*First and last name of the employee, and address
*Department and position
*Employment type and the salary amount or an hourly rate
*Employee class
*GL accounts (and subaccounts), if these are different from those specified in the class settings
*The credit terms, payment method, and cash account if different from the class settings

If you have not configured the non-stock items (if the ''Inventory and Order Management'' group of features is enabled in your system), you can specify the default labor item and the labor items for available earning types later.
|- 
| '''14'''
| 
 '''Create an import scenario to import employee accounts (optional)'''{br}

(Optional){br}

[HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
If you have many employee accounts in a legacy system, create an import scenario. Make sure that the source file includes at least the following details for each employee:[anchor|#ul_qby_qcf_4s]
*Employee ID, which must be based on the structure of the ''EMPLOYEE'' segmented key
*First and last name of the employee, and address
*Department, position, and calendar
*Employee class, to provide the default values for some other settings
*GL accounts (and subaccounts)
*Earning types and labor items
*The credit terms, payment method, and cash account

For details, see [HelpRoot_Integration\IS__mng_Configuring_Import_Scenarios|Configuring Import Scenarios].
|- 
| '''15'''
| 
 '''Import employee accounts (optional)'''{br}

(Optional){br}

[HelpRoot_FormReference\SM_20_60_36|Import by Scenario] ([~/?ScreenId=SM206036|SM206036]) 
| 
Before you import employee accounts by using the developed import scenario, review the source data to make sure that all the data matches the formats defined in the scenario. {br}

To test the scenario, import only a few accounts and make sure that valid accounts have been created. After that, import all the accounts.{br}

If the employee account has settings that differ from those of the class, assign the settings after the import is done. 
|- 
| '''16'''
| 
 '''Assign employees to branches'''{br}

 [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000])
| 
This task is needed only if the ''Multiple Branch Support'' feature is enabled in your system on the [HelpRoot_FormReference\CS_10_00_00|Enable/Disable Features] ([~/?ScreenId=CS100000|CS100000]) form. {br}

For each branch, assign the employees.
|- 
| '''17'''
| 
 '''Build the company tree'''{br}

 [HelpRoot_FormReference\EP_20_40_60|Import Company Tree] ([~/?ScreenId=EP204060|EP204060])
| 
Build the company tree with the hierarchy of approval and product workgroups.{br}

For more information, see [HelpRoot_Organization\EP__con_Assignment_Automation|Managing Assignment and Approval Maps].
|- 
| '''18'''
| 
 '''Create roles to manage the Organization Structure module'''{br}

 [HelpRoot_FormReference\SM_20_10_05|User Roles] ([~/?ScreenId=SM201005|SM201005])
| 
 For each role, specify the following: [anchor|#ul_wrd_q3d_qs]
*Role name and description
*List of users

Add users to the list of role members.
|- 
| '''19'''
| 
 '''Configure the access rights of each role'''{br}

 [HelpRoot_FormReference\SM_20_10_25|Access Rights by Role] ([~/?ScreenId=SM201025|SM201025])
| 
Configure each role&rsquo;s access rights within the Organization Structure and Time and Expenses modules as follows:[anchor|#ol_xq1_scl_hl]
*If the new role should have the ''Revoked'' level of access rights to most forms in the module, do the following:
*#Specify the ''Revoked'' level of access rights to the module; this will set the ''Revoked'' access rights to all forms in the module.
*#Specify more permissive levels of access (''Delete'', ''Edit'', or ''View Only'') to certain forms of the module, as planned. 
*#Change the level of access rights for the module to ''Granted''.
*If the new role should have the ''Delete'' level of access to most forms in the module, do the following: 
*#Specify the ''Granted'' level of access rights to the module. The role will inherit the ''Delete'' level of access to all the forms of the module.
*#Specify the ''Revoked'' level of access rights to the forms to which the role should not have access.
*#If needed, select other levels of access rights (''Edit'' or ''View Only'') to other forms of the module as planned. 

See [HelpRoot_Administration\SM__con_Role_Configuration|Access Rights for Roles].
|}
 You can print [HelpRoot_ImplementChecklists\OS_Conf_Checklist|Organization Structure Configuration Checklist] and refer to it when you configure the Organization Structure module. ]]></column>
			<column name="PlainText"><![CDATA[Organization Structure: Configuration This section will guide you through the process of configuring the General       Ledger module. Due to dependencies between the forms, the sequence of actions during       configuration is critical, so you need to follow the order of tasks. No. Task  Description 1 Create auto-numbering sequences  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) Create numbering sequences for expense claims and for time cards.  Also, create a sequence for the segment of the  EMPLOYEE  key (if the                   employee ID is based on the  EMPLOYEE  segmented key and it has an                   auto-numbered segment). 2 Configure the  EMPLOYEE  segmented key  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) Specify the structure of the  EMPLOYEE  segmented key if it is different                   from the structure of the  BIZACCT  key. 3 Add segment values for employee IDs  ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) If the employee ID is based on the segmented key  BIZACCT , add                   employee-specific segment values for segments that require validation.  If not, populate the segments of the  EMPLOYEE  key. 4 Create departments  ([~/?ScreenId=EP201500|EP201500]) Departments (EP201500) Create the departments available in your organization.  5 Create positions  ([~/?ScreenId=EP201000|EP201000]) Positions (EP201000) Create the positions held by employees in your organization. Positions are used                   for informational purposes only in  Acumatica ERP. For positions, you can use identifiers of up to 10 unicode characters. 6 Create work calendars  ([~/?ScreenId=CS209000|CS209000]) Work Calendar (CS209000) Create as many work calendars as are used in your organization. Specify work                   hours for weekdays, weekends (if any), holidays, early closing days, and any other                   exceptions. As a calendar identifier, you can use an alphanumeric string of up to 10                   characters. For description, use a string of up to 60 characters. 7 Create attributes for employees (Optional)  ([~/?ScreenId=CS205000|CS205000]) Attributes (CS205000) For each attribute, specify the following: What name will be used What type of control will be used (free text, masked text, date/time, check                       box, or combo box) Whether the attribute is required What values users can select from (if the attribute is a combo box) 8 Create credit terms for employees  ([~/?ScreenId=CS206500|CS206500]) Credit Terms (CS206500) Create credit terms to be used to schedule payments to employees (to pay                 salaries or wages, or to reimburse expenses). 9 Create cash accounts  ([~/?ScreenId=CA202000|CA202000]) Cash Accounts (CA202000) Create the cash accounts to be used when employees are reimbursed for expenses,                   compensated for labor performed on contracts, and paid commissions earned on                   sales.  For information about cash accounts, see  To Create a Cash Account. 10 Create payment methods  ([~/?ScreenId=CA204000|CA204000]) Payment Methods (CA204000) Create the payment methods to be used when employees are reimbursed for expenses,                   compensated for labor performed on contracts, and paid commissions earned on                   sales.   For information about payment methods, see  Managing Payment Methods. 11 Configure employee classes  ([~/?ScreenId=EP202000|EP202000]) Employee Classes (EP202000) Create employee classes.  At minimum, you need to create one employee class that will include the largest                   number of employees and will be used as the default class.  12 Create labor items  ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items (IN202000) Create the labor items that are needed for all employees for all available                   earning types.  13 Create employee accounts  ([~/?ScreenId=EP203000|EP203000]) Employees (EP203000) If you have a small number of employees, enter the employee accounts manually.                   For each employee, specify the following data: Employee ID, which must be based on the structure of the  EMPLOYEE                      segmented key First and last name of the employee, and address Department and position Employment type and the salary amount or an hourly rate Employee class GL accounts (and subaccounts), if these are different from those specified in                     the class settings The credit terms, payment method, and cash account if different from the class                     settings If you have not configured the non-stock items (if the  Inventory and Order                     Management  group of features is enabled in your system), you can specify the                   default labor item and the labor items for available earning types later. 14 Create an import scenario to import employee accounts (optional) (Optional)  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  If you have many employee accounts in a legacy system, create an import scenario.                   Make sure that the source file includes at least the following details for each                   employee: Employee ID, which must be based on the structure of the  EMPLOYEE                      segmented key First and last name of the employee, and address Department, position, and calendar Employee class, to provide the default values for some other settings GL accounts (and subaccounts) Earning types and labor items The credit terms, payment method, and cash account For details, see  Configuring Import Scenarios. 15 Import employee accounts (optional) (Optional)  ([~/?ScreenId=SM206036|SM206036]) Import by Scenario (SM206036)  Before you import employee accounts by using the developed import scenario,                   review the source data to make sure that all the data matches the formats defined                   in the scenario.  To test the scenario, import only a few accounts and make sure that valid                   accounts have been created. After that, import all the accounts. If the employee account has settings that differ from those of the class, assign                   the settings after the import is done.  16 Assign employees to branches  ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) This task is needed only if the  Multiple Branch Support  feature is enabled                   in your system on the   ([~/?ScreenId=CS100000|CS100000]) Enable/Disable Features (CS100000)                   form.  For each branch, assign the employees. 17 Build the company tree  ([~/?ScreenId=EP204060|EP204060]) Import Company Tree (EP204060) Build the company tree with the hierarchy of approval and product workgroups. For more information, see  Managing Assignment and Approval Maps. 18 Create roles to manage the Organization Structure module  ([~/?ScreenId=SM201005|SM201005]) User Roles (SM201005)  For each role, specify the following:  Role name and description List of users Add users to the list of role members. 19 Configure the access rights of each role  ([~/?ScreenId=SM201025|SM201025]) Access Rights by Role (SM201025) Configure each role's access rights within the Organization Structure and Time                   and Expenses modules as follows: If the new role should have the  Revoked  level of access rights to most                     forms in the module, do the following: Specify the  Revoked  level of access rights to the module; this will                         set the  Revoked  access rights to all forms in the module. Specify more permissive levels of access ( Delete ,  Edit , or                            View Only ) to certain forms of the module, as planned.  Change the level of access rights for the module to  Granted . If the new role should have the  Delete  level of access to most forms in                     the module, do the following:  Specify the  Granted  level of access rights to the module. The role                         will inherit the  Delete  level of access to all the forms of the                         module. Specify the  Revoked  level of access rights to the forms to which                         the role should not have access. If needed, select other levels of access rights ( Edit  or  View                           Only ) to other forms of the module as planned.  See  Access Rights for Roles.  You can print  Organization Structure Configuration Checklist and refer to it when you         configure the Organization Structure module.  ]]></column>
		</row>
		<row PageID="7d13aebb-6c5d-4e21-b45c-f50bd2cec10d" Language="en-US" PageRevisionID="1" Content="&#xA;This part of the Implementation Guide includes the topics on implementation of the order management and inventory functionality.&#xA;==In This Part==[anchor|#ul_vb2_zmd_2t]&#xA;*[HelpRoot_Implement\Implementing_Inventory_Management|Implementing Inventory]&#xA;*[HelpRoot_Implement\Implementing_Purchasing_Management|Implementing Purchase Orders]&#xA;*[HelpRoot_Implement\Implementing_Sales_Order_Management|Implementing Sales Orders]&#xA;" PlainText="Implementing Order Management and Inventory This part of the Implementation Guide includes the topics on implementation of the order     management and inventory functionality. In This Part Implementing InventoryImplementing Purchase OrdersImplementing Sales Orders" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e0394fb9-3048-0b16-063c-e68483525dd1" RecordSourceID="22377" />
		<row PageID="386b3622-e9ae-4b16-95f6-7ae3edca33f8" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="e1451ac7-41a9-4a38-fb7c-894ec80e6d8b" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes the process of implementing the Inventory module in Acumatica ERP. 
==Overview==
The Inventory module is at the heart of Acumatica ERP inventory and order management functionality, which also include Purchase Orders and Sales Orders. The Inventory module is the first module you implement; the Purchase Orders and Sales Orders modules depend on it. The inventory and order management functionality facilitates and adapts to the complexity and variety of organizations&rsquo; daily operations, so you can implement virtually any kind of inventory and order management model.{br}

This document is divided into four parts: 
*[[#1|'''Prerequisites and Dependencies''']: Describes what modules must be set up and configured before you begin implementing this module.
*[[#2|'''Preparation''']: Describes the data you should collect and analyze.
*[[#3|'''Configuration''']: Guides you through the actual configuration of the Inventory module.
*[[#4|'''Initialization''']: Describes how current inventory stock details can be brought into the system.
*[[#5|'''Other Considerations''']: Covers other aspects pertaining to the implementation of this module. 

This chapter is meant only to guide you through Inventory implementation. For detailed descriptions of Inventory forms and capabilities, see the [HelpRoot_InvMgmt\IN__IN_Features|Overview of the Inventory Processes].[anchor|#1]
==Prerequisites and Dependencies==
The implementation of the Finance suite must be completed, before you implement the Inventory module. [anchor|#2]
==Preparation==
This section covers the needed preparation before you begin configuring the Inventory module. When you are ready to implement this module, begin collecting and analyzing the necessary information. Do the following steps (although not necessarily in the listed order; many steps can be done in parallel) before you actually configure the Inventory module. ((({S:Warn}Because this is the preparation phase of implementation, enter no data into the system at this time. 
)))[anchor|#table_mxk_hdq_tl]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action
!width="80%" ! Description
|- 
| '''Develop conventions for identifying inventory items'''
| 
Plan the inventory ID, which is based on the ''INVENTORY'' segmented key. Each inventory item, stock or non-stock, has an inventory ID. Identifiers (inventory IDs) can be segmented, with each segment providing specific information about the item.((({S:Hint} Acumatica ERP also supports subitems. They can be useful when almost-identical products differ in size, color, and material. These variations can be represented by the same inventory ID and different subitem codes. Subitem codes can also be segmented, for greater detail classification of the products. 
)))
Decide how the inventory ID should be structured: how many segments it should have, what the length of each segment is, which segments should be validated (and for validated segments, which of the segment values are valid), and whether auto-numbering should be used for a segment. {br}

Also, decide whether you&rsquo;ll use subitems and if so, make sure the license includes the ''Inventory Subitems'' feature. To use subitems, you should decide how subitem codes will be structured and segmented. {br}

For details, see [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers] and [HelpRoot_InvMgmt\IN__con_Inventory_IDs_and_Subitem_Codes|Inventory Subitems]. 
|- 
| '''Define Reason Codes'''
| 
Plan reason codes, which determine the offset account and subaccount for receipts, issues, adjustments, and physical inventory adjustments. The reason code provides the offset account and, If ''Subaccounts'' are used in your system, the reason code defines the sources of the offset subaccount segment values. {br}

You need at least four reason codes to be used as default codes for each transaction type: receipts, issues, adjustments, and physical inventory adjustments. For more information, see [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000]) and [HelpRoot_InvMgmt\Reason_Codes_GeneralInfo|Reason Codes: General Information].
|- 
| '''Plan posting classes'''
|  To automate accurate postings to General Ledger for every stock movement, plan appropriate posting classes. A posting class is a collection of settings assigned to an item that defines the source of accounts and subaccounts for transactions: the inventory item, the warehouse where the transaction occurs, or the posting class itself. It also provides particular accounts and subaccounts, if the source is the posting class. For subaccounts, you can define rules for combining subaccounts from segments of other subaccounts. 
You can define just one class (this would mean that all inventory transactions are posted based on the same rules) or several classes (if different items or group of items update GL differently). Define the rule for the names of posting classes.{br}

The following accounts and subaccounts are defined by the posting class: [anchor|#ul_sdl_hdq_tl]
*Inventory account and subaccount (asset)
*Reason code subaccount
*Sales account and subaccount (revenue)
*Cost of sales account and subaccount (expense)
*Standard cost variance account and subaccount (expense)
*Standard cost revaluation account and subaccount (expense)
*PO accrual account and subaccount (liability)
*Purchase price variance account and subaccount (expense)
*Landed cost variance account and subaccount (expense)

 For details, see [HelpRoot_FormReference\IN_20_60_00|Posting Classes] and [HelpRoot_InvMgmt\Posting_Classes_GeneralInfo|Posting Classes: General Information].
|- 
| '''Define additional posting settings'''
| 
Analyze the accounting requirements for integration with GL, deciding upon the following: [anchor|#ul_nlc_5lr_tl]
*Should inventory transactions update General Ledger? Should transactions be posted to General Ledger in summary or in detail?
*Should transactions be automatically posted to General Ledger upon release, or should posting be done as a separate operation?
Decide on using two Inventory processing options that can help your users avoid the accidental release of incomplete or incorrect transactions. These settings, listed below, require additional data entry effort (if selected) but provide a better quality of data: [anchor|#ul_y2l_hdq_tl]
*'''Hold Documents on Entry''': When the option is selected, each new document is created with the status ''On Hold'' and cannot be released immediately. To release the transaction, it should be taken off hold first and then released as usual.
*'''Validate Document Totals on Entry''': When this option is selected, each transaction requires entry of control totals for cost and quantity. A transaction can be released only if the system-calculated totals equal the control totals.

 For more details, see [HelpRoot_InvMgmt\IN__con_GL_Accounts_Inventory|Posting Settings in the Inventory Module].
|- 
| '''Collect information about warehouses and locations'''
|  Decide which warehouses you need. A warehouse in Acumatica ERP does not necessarily represent a physical building; you can divide a building into multiple areas and define each area as a warehouse. A warehouse can even be virtual; for example, goods that are between the supplier and your company can be considered in the ''GIT'' (goods in transit) warehouse. 
First, plan the structure of the warehouse ID and the location ID; these identifiers are based, respectively, on the ''INSITE'' and ''INLOCATION'' segmented keys. Decide whether you will use segmented IDs (alternatively, you can instead configure the segmented key as one segment with up to 10 alphanumeric characters). If the key is segmented, determine how many segments (and of what length) will be used, whether the segments should be validated (and if so, what kind of values are allowed), and whether an auto-numbering segment will be used. {br}

Collect the following information about each warehouse you will define in Acumatica ERP: [anchor|#ul_ofl_hdq_tl]
*The warehouse&rsquo;s unique identifier, which can be up to 10 characters and should comply with your design of the ''INSITE'' segmented key. 
*The description, or name, of the warehouse. 
*The address of the warehouse. 
*The organization&rsquo;s branch the warehouse is assigned to. 
*The General Ledger accounts and subaccounts to be used if the account source is ''Warehouse'': inventory, reason code, sales, cost of sales, standard cost variance, standard cost revaluation, purchase order accrual, purchase price variance, and landed cost variance. 
*Indicate what cost (average or last) should be used for customer returns of average-costed and FIFO-costed inventories. 
*List of this warehouse&rsquo;s locations to be configured, noting the following information for each: 
**Location ID, which can be up to 10 characters and should comply with your design of the ''INLOCATION'' segmented key. 
**Description 
**Processing options: 
***Whether sales are allowed from the location 
***Whether receipts are allowed at the location 
***Whether transfers are allowed at the location 
***Whether assembly operations are allowed at the location 
***Pick priority of the location 
***Whether separate cost layers will be created for this location 
***Whether the quantities of goods at this location will be included in the quantities of available goods and included in inventory transactions 
***Whether the location should be restricted for specific item or item class (you may need to return to this setting after defining item classes) 
*Optionally, indicate preferred locations for: receipts, outgoing shipments, customer returns, and drop-ships. 
*Decide whether users should be able to add new locations for this warehouse by entering them directly in inventory documents: 
**'''Do Not Allow On-the-Fly Entry''': This option means that all locations of the warehouse must be defined before they can be used. This is the safest option but can create problems during data entry if the list of locations is incomplete. 
**'''Allow On-the-Fly Entry''': In this case, locations do not need to be defined in advance. If a user types a nonexistent location ID on a data entry screen, the system will automatically add the location to the warehouse. While this option provides greater flexibility, your site may end up with many locations defined due to typos. 
**'''Warn but Allow On-the-Fly Entry''': Here, too, locations can be created on the fly, but the user is warned and can opt out of creating the new location. If the user has made a data entry error, he or she can correct it instead of defining a new location. 

For more information, see [HelpRoot_InvMgmt\Warehouses_GeneralInfo|Warehouses: General Information] and [HelpRoot_InvMgmt\Warehouse_Locations_GeneralInfo|Warehouse Locations and Single-Step Transfers: General Information]. For details on warehouse settings, see [HelpRoot_FormReference\IN_20_40_00|Warehouses] ([~/?ScreenId=IN204000|IN204000]).
|- 
| '''Develop conventions for and plan lot/serial classes'''
|  If you use lot or serial numbers to identify and trace your company&rsquo;s stock, review your existing numbering conventions, and plan the lot/serial classes that can be assigned to stock items. ((({S:Hint}Acumatica ERP supports multiple concurrent lot or serial numbering schemes, so that different items can be numbered differently. 
)))
Lot and serial numbers are defined at the item class level. Some classes include items tracked by lot numbers, some include items tracked by serial numbers, and others include items that are not tracked by either number (you should define at least one lot/serial class for such items.) For each class, decide which group of items it will include. {br}

In addition to deciding which tracking method is used for the class, decide upon the following: [anchor|#ul_ihl_hdq_tl]
*Whether to track expiration dates or not.
*How the numbers are assigned. The assignment method can be one of the following: 
**When received: Items get a lot/serial number when they are received.
**When used: Items don’t get a lot/serial number until they&rsquo;re issued them from stock or used in assembly. 
*What the issue method is for items of the class: 
**'''FIFO''': Lot/serial numbers are picked for issue by receipt date (oldest first).
**'''LIFO''': Lot/serial numbers are picked for issue by receipt date (newest first).
**'''Sequential''': Lot/serial numbers are picked in alphabetic order.
**'''Expiration''': Lot/serial numbers are picked by expiration date (faster-expiring first).

Numbering conventions for lot and serial numbers, numbering conventions can be shared among stock items in two ways: [anchor|#ul_p3l_hdq_tl]
*Stock items with different inventory IDs may have the same serial number. To implement this numbering scheme in Acumatica ERP, assign these stock items to the same lot/serial class but specify for each a separate numbering sequence.
*Stock items with different inventory IDs have unique serial numbers. To implement this numbering scheme in Acumatica ERP, have these items belong to the same lot/serial class and share an auto-generated numbering sequence. This guarantees that all automatically generated lot or serial numbers will be unique. You still can manually assign the same serial number to multiple items with different inventory IDs; Acumatica ERP ensures uniqueness between items with the same inventory ID.

You should decide upon the structure of the lot or serial number for each lot/serial class you will define: the number of segments, the type of each segment, and the possible values for each validated segment. Acumatica ERP supports the following types of segments: [anchor|#ul_cjl_hdq_tl]
*''Constant'': The segment is a predefined alphanumeric string that is replicated to all lot or serial numbers.
*''Date'': The segment shows any of the following parts of the date: day, month number, month name, and two- or four-digit year.
*''Auto-incrementing value'': The system automatically assigns the segment value, based on the numbering sequence, when a new lot/serial number is generated.

Decide which of the defined classes will serve as the default lot/serial class.{br}

For details about classes and possible settings, see [HelpRoot_FormReference\IN_20_70_00|Lot/Serial Classes] ([~/?ScreenId=IN207000|IN207000]); for more information about lot and serial numbers, see [HelpRoot_InvMgmt\Lot_and_Serial_Numbers_GeneralInfo|Items with Lot and Serial Numbers: General Information].
|- 
| '''Define global units of measure'''
|  Review the units of measure used for different items, and identify those applicable to most of the items. Write down the list of global UOMs and define conversion rules. Choose the UOMs to be the basic UOMs for specifying weights and volumes, respectively. See the [HelpRoot_InvMgmt\UOMs_GeneralInfo|Units of Measure: General Information] for more information.
|- 
| '''Collect information about stock items'''
|  Collect the following general details about stock items. ((({S:Warn}Instead of creating records for each item manually, you can import the stock item records from your legacy system. Consider mapping the item properties used in the old system to the properties used in Acumatica ERP (with simultaneous conversion if needed).
)))[anchor|#ul_mjl_hdq_tl]
*'''Inventory ID''': Consider creating a rule for assigning identifiers, based on the structure you&rsquo;ve planned for the ''INVENTORY'' segmented key.
*'''Description''': Define a rule for providing brief descriptions of the products.
*'''Status''': Choose the appropriate status from the options listed below; normally, only active products are migrated: 
**''Active''
** ''No Sales'' (item cannot be sold)
**''No Purchases'' (item cannot be purchased)
**''No Request'' (item can&rsquo;t be used in requisition requests)
**''Inactive''
* '''Type''': Select one of Acumatica ERP&rsquo;s product types, which can be useful in reports but don&rsquo;t affect processing: 
**''Finished Good''
** ''Component Part''
** ''Subassembly''
* '''Is a Kit''': Indicate whether the stock item is a kit assembled from other items; if so, list components and quantities. See the [HelpRoot_InvMgmt\IN__con_Accounting_for_Kits|Inventory Item Kits] article for more information about kits.
*'''Units of measure''': First, assign the stock item a base or primary unit of measure. Acumatica ERP uses this required unit to maintain the stock level for the item. If the item can be counted in multiple units (such as pieces, packs, or boxes), list all of them before choosing which should be used as the base unit of measure. We recommend that you use the smallest unit as the base unit, to avoid complications. Also choose the default sales and purchase units of measure (the units used most frequently in sales and purchases).
*'''Default storage''': Indicate whether the stock item is mostly stored in, received to, and/or issued from one particular warehouse and location (and if so, which).
Also collect the following accounting and processing details for stock items: [anchor|#ul_ell_hdq_tl]
*'''Valuation Method''': Choose an appropriate valuation method for the stock item: 
**''Average'': The entire quantity of the item on hand is valued with the same cost, which is the total cost of all quantities of the items at the warehouses divided by the total quantity. No distinction is made regarding whether a particular unit was purchased cheaply or expensively; all are valued equally. This is a moving average cost: each receipt adds to total cost and total quantity, causing average cost to be recalculated.
**''FIFO'' (First In, First Out): Each receipt creates a separate cost layer. Stock issue takes the cost from cost layers, starting from the oldest one; when the first cost layer is depleted, the second oldest layer is used, and so on until all issued quantity is costed.
**''Standard'': The entire on-hand quantity of the item is valued with the same cost. Unlike average cost, standard cost is not built by actual receipts; it is defined by the product manager (from analysis of production, storage, handling costs, and the like). Standard cost is reviewed regularly through standard cost revaluation.
**''Specific'': Each piece of the stock item has its own individual cost, which is defined by its purchase price. This valuation method is used for items with lot or serial numbers. The lot/serial number identifies the product piece and its cost layer.
*'''Lot or serial numbering''': If the stock item requires lot or serial numbering, specify an appropriate lot/serial class.
*'''Posting class''': Select the appropriate posting class for the item&rsquo;s transactions.
*'''GL accounts and subaccounts''' (inventory, reason code, sales, cost of sales, standard cost variance, standard cost revaluation, purchase order accrual, purchase price variance, and landed cost variance): The accounts and subaccounts assigned to the item can be different from those in the selected posting class. They will be used if the account source is ''Inventory Item''.
*'''Taxes''': List taxes that apply to purchases and sales of the stock item in the countries and states where your company operates. If an appropriate tax category is already created in Acumatica ERP, indicate it instead of a tax list.
*'''Commissionable''': Indicate if salesperson commission is to be calculated for sales of the item.

For standard-cost items, indicate current standard cost. For details, see the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]), [HelpRoot_InvMgmt\IN__con_Inventory_Items|Inventory Items], and [HelpRoot_InvMgmt\IN__con_Item_Costs_and_Valuation_Methods|Item Costs and Valuation Methods] articles.
|- 
| '''Collect information about non-stock items'''
|  Gather information about all ''non-stock items'': items such as services or licenses for which you do not need to monitor quantity in warehouses, and that are probably not stored in warehouses at all. Purchases and sales of such items do not affect company assets but are debited or credited directly to income and expense accounts. Collect the following details for each type of non-stock items and consider mapping of those details to the details used for stock items in your legacy system to perform import of the items. [anchor|#ul_iml_hdq_tl]
*'''Inventory ID''': Assign the item a unique identifier, based on the structure you&rsquo;ve planned for the ''INVENTORY'' segmented key.
*'''Description''': Provide a brief description of the item.
*'''Status''': Choose a status; the available statuses are the same as those for stock items.
*'''Type''': Select one of the following types: 
**''Non-Stock Item'': A general type of non-stock item
**''Labor'': A type of non-stock item to be used as labor hour rates
**''Service'': A type of non-stock item to be used as service fees
**''Charge'': A type of non-stock item to be used as charge rates
**''Expense'': A type of non-stock item to designate specific expenses
*Whether the item is a kit item; for details, see [HelpRoot_InvMgmt\IN__con_Accounting_for_Kits|Inventory Item Kits].
*'''Units of measure''': If units of measure apply, specify the base, sales, and purchase units.
*'''GL accounts and subaccounts''': Note the default General Ledger accounts used to post inventory transactions: the sales accounts, expense accounts, and accounts for posting transactions related to kit assembly (if the item is a kit).
*'''Taxes''': Describe which taxes apply to purchases and sales of the non-stock item. If an appropriate tax category is already created in Acumatica ERP, indicate it instead of a list of taxes.
*'''Commissionable''': Indicate if salesperson commission is to be calculated for sales of the item.
For details, see [HelpRoot_InvMgmt\IN__con_Non-Stock_Item_Support|Non-Stock Items in Sales and Purchases] and [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000]).
|- 
| '''Identify taxes and tax categories'''
|  Analyze the tax requirements for stock and non-stock items, and identify new taxes and tax categories required for the items. For details, see [HelpRoot_FormReference\TX_20_50_00|Taxes] ([~/?ScreenId=TX205000|TX205000]). 
|- 
| '''Define item classes'''
|  Item classes provide default settings for stock or non-stock items when you create new items. Group items with similar settings into item classes, which can include any of the following settings: [anchor|#ul_fnl_hdq_tl]
*Item type
*Valuation method
*Tax category
*Posting class
*Lot/serial class
*Units of measure
*Price class
*Availability settings
*Whether negative quantities will be allowed for items of the class
For each identified class, decide how available quantity should be estimated for items of the class. Possible deductions from the quantity on hand can be any of the following: quantity on issues, quantity on customer orders, back-ordered quantity, quantity shipping, quantity shipped, and quantity on kit assembly demand. Possible additions to the quantity on hand can be any of these: quantity on receipts, quantity in transit, quantity on purchase orders and purchase order receipts, and quantity in kit assembly supply. ((({S:Hint}Most of the class settings are copied from the item class to a new item once you select the item class, but you can select other values for this item. Rules on availability and whether to allow negative quantities, however, are defined at the item class level and cannot be changed for a particular item of the class.
))) For more information, see [HelpRoot_InvMgmt\Availability_Calculation_Rules_GeneralInfo|Availability Calculation: General Information].
|- 
| '''Define attributes'''
| With Acumatica ERP, to additional properties of items, you can add user-defined attributes and make some of them ''Required''. The attributes are defined at the item class level. For more information, see [HelpRoot_Administration\CS__con_Attributes|Attributes].
|- 
| '''Plan physical inventory counts'''
| 
Partial or full inventory counts are mandatory for any resale business. Decide how often you need to perform full counts. Decide whether you need to perform partial counts (based on item classes, specific items, ABC or movement classes) and how often. {br}

Plan physical inventory types, for each type collect the following information:[anchor|#ul_zfb_mlp_xl]
*Unique identifier of the type and description
*Generation method:'' Full Inventory, By Inventory Item, By item Class, By ABC code, By Movement Class, By Cycle''.
*Optionally, whether to perform counts of this type in a particular warehouse and particular locations only
*How to organize data on count sheets

|- 
| '''Plan Physical Inventory Cycles'''
| Decide how many cycles you need for the inventory types you will use. A cycle defines how often the counting should be performed.
|- 
| '''Create a list of GL accounts used in Inventory'''
| 
Check that all the accounts needed for the Inventory module exist on the chart of accounts, and write down the missing ones:[anchor|#ul_elc_5lr_tl]
*The Accounts Receivable clearing account and subaccount, used to offset the sales revenue posting for the invoice transaction type
*The in-transit account and subaccount, used in two-step transfers to hold the cost of stock issued from the source warehouse and not yet received at the destination
*The work-in-progress account and subaccount, used in kit assembly to hold the cost of the kit&rsquo;s components

|- 
| '''Plan numbering sequences'''
| 
 Acumatica ERP provides default numbering sequences for Inventory batches as well as for each type of inventory transactions: receipt (transfer), issue, adjustment, assembly, replenishment, and physical inventory counts.((({S:Hint}You do not have to use a separate numbering sequence for each type of transactions— multiple transaction types can share a numbering sequence.
)))
You can use the default sequences or create custom numbering sequences—for example, if you want to split a numbering sequence between the branches. If you have branches, the same sequence will be used by all branches by default so that the transactions with subsequent reference numbers may belong to different branches. However, you can split a sequence between branches so that different ranges of reference numbers will belong to different branches. {br}

 You should also define the numbering sequences for the auto-numbered segments of the ''INVENTORY'' and ''INSITE'' segmented keys (used for inventory IDs and warehouse IDs), if such a segment is used. For each of these, plan the numbering sequence: the start number, the numbering step or increment, and the end number.{br}

For more information, see [HelpRoot_Administration\CS__con_Multiple_Numbering_Sequences|Numbering Sequence Usage].
|- 
| '''Review other settings for Inventory configuration'''
|  Define the number of decimal places to be used for the following: [anchor|#ul_gfl_hdq_tl]
*The quantity of stock and non-stock items throughout Acumatica ERP.
*Unit price and unit cost (both are controlled by one setting); total price and cost follow currency settings.
*:((({S:Hint}These settings are also used in the Sales Orders and Purchase Orders modules.
)))

Define the global units of weight and volume to be used in the Inventory module as well as in the Purchase Orders and Sales Orders modules to evaluate weights and volumes.For details, refer to the [HelpRoot_FormReference\IN_10_10_00|Inventory Preferences] ([~/?ScreenId=IN101000|IN101000]) article.
|- 
| '''Plan Roles'''
| Review the duties of all employees who handle stock items in warehouses and who monitor non-stock items. Define a role required for each typical task performed by employees. 
For example, for the ability to receive the purchased goods at specific warehouse, a user should have a role that has the ''Insert'' or ''Delete'' access to the [HelpRoot_FormReference\IN_30_10_00|Receipts] ([~/?ScreenId=IN301000|IN301000]) form, at least the ''View-Only'' access to the [HelpRoot_FormReference\IN_20_40_00|Warehouses] ([~/?ScreenId=IN204000|IN204000]) form, and the ''View-Only'' access to the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]) form.{br}

For more information on roles, see [HelpRoot_Administration\SM__con_Role-Based_Access|Role-Based Access].
|- 
| '''Plan Restriction Groups'''
| 
With a collection of roles, that grant rights to create inventory transactions, a user can receive and issue any items at any warehouse. In Acumatica ERP, you can control visibility of individual items within classes and particular warehouses to users by using restriction groups. For more information, see [HelpRoot_Administration\RS__con_Restriction_Groups_for_Subitems|Inventory Item Security] and [HelpRoot_InvMgmt\IN__con_Inventory_and_Warehouse_Security|Warehouse Security].{br}

 Collect security requirements: [anchor|#ul_zlj_jkx_tl]
*List all users who have to have enter and process inventory transactions. 
*If the user should work with a large number of items list only items that the user should not see and mark the list as &ldquo;Inverse&ldquo;; after configuration of the restriction group, the user will see all unlisted items. 
((({S:Hint}Remember that once you set up these restriction groups, users not included in the group will not see any item and warehouse. Although they may have access to the Inventory forms, they will not be able to select items using those forms. 
)))
|}
You can download and print the [HelpRoot_ImplementChecklists\IN_Preparation_Checklist|Inventory Preparation Checklist] to assist you in collecting the data for Inventory implementation. [anchor|#3]
==Configuration==
This section walks you through the process of actually configuring the Inventory module in Acumatica ERP. 
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="19%" ! Action
!width="75%" ! Description
|- 
| '''1'''
|  '''Define auto-numbering sequences'''
 [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010])
|  Use the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form in the Configuration Settings module to define the numbering sequences for all types of inventory documents: 
*Receipts (transfers)
*Issues
*Adjustments
*Assemblies
*Replenishments
*Physical inventory counts
If the ''INVENTORY'', ''INSITE'', and ''INLOCATION'' segmented keys (used for inventory IDs, warehouse IDs, and warehouse location IDs) use an auto-numbering segment, define these numbering sequences as well. 
|- 
| '''2'''
|  '''Define segmented keys'''
 [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000])
|  Use the [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000]) form in the Configuration Settings module to implement the chosen structure of the following segmented keys planned during the preparation stage: 
*The ''INVENTORY'' segmented key, which inventory IDs are based on
*The ''INSITE'' segmented key, which warehouse IDs are based on
*The ''INLOCATION'' segmented key, which warehouse location IDs are based on

|- 
| '''3'''
|  '''Maintain validation table for key segments'''
 [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500])
|  Use the [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000]) form in the Configuration Settings module to enter valid codes for any ''INVENTORY'', ''INSITE'', and ''INLOCATION'' segments that are validated. (Non-validated and auto-numbered segments do not require maintenance of segment values.)
|- 
| '''4'''
|  '''Create General Ledger accounts'''
|  Use the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form to add any needed General Ledger accounts identified during preparation (especially the '''Consider general posting settings for Inventory setup''' step). For details, see [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts]. 
|- 
| '''5'''
|  '''Create General Ledger subaccounts'''
 [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000])
|  Use the [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]) form to create any necessary subaccounts. See [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount] for more information. 
|- 
| '''6'''
|  '''Create tax categories'''
 [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500])
|  Use the [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500]) form to create any additional tax categories you identified during preparation. Enter the following for each category: 
*Tax category ID
*Description
*Inclusive/exclusive (select the '''Exclude Listed Taxes''' check box to make the tax category exclusive)
*List of taxes (select taxes that have been defined by their ID, and their information will be filled in)

|- 
| '''7'''
|  '''Create reason codes'''
 [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000])
|  Use the [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000]) form to create the reason codes you designed for the following: 
*Receipts
*Issues
*Transfers
*Adjustments
There should be at least one reason code for each transaction type.
|- 
| '''8'''
|  '''Create posting classes'''
 [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000])
|  Use the [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000]) form to create the posting classes you have planned. Enter the following for each class: 
*Class ID
*Description
*Account sources and subaccount combination rules
*GL accounts and subaccounts

|- 
| '''9'''
|  '''Create lot/serial classes'''
 [HelpRoot_FormReference\IN_20_70_00|Lot/Serial Classes] ([~/?ScreenId=IN207000|IN207000])
|  Use the [HelpRoot_FormReference\IN_20_70_00|Lot/Serial Classes] ([~/?ScreenId=IN207000|IN207000]) form to create defined lot/serial classes. Enter applicable settings for each class: 
*Class ID
*Description
*Tracking method
*Track expiration date (yes/no)
*Assignment method
*Issue method
*Auto-incremental value
*Share auto-incremental value among class items (yes/no)
*Lot/serial number segments, types, and values (for ''Constant'' types)

|- 
| '''10'''
|  '''Create units of measure'''
|  Use the [HelpRoot_FormReference\CS_20_31_00|Units of Measure] ([~/?ScreenId=CS203100|CS203100])form to create global units of measure and their conversions. You identified these units during the preparation phase of implementation.
|- 
| '''11'''
|  '''Create item classes'''
 [HelpRoot_FormReference\IN_20_10_00|Item Classes] ([~/?ScreenId=IN201000|IN201000])
|  Use the [HelpRoot_FormReference\IN_20_10_00|Item Classes] ([~/?ScreenId=IN201000|IN201000]) form to create the planned item classes. Enter the applicable settings for each class, which may include the following: 
*Class ID
*Description
*Stock item (yes/no)
*Allow negative inventory
*Item type
*Valuation method
*Tax category
*Posting class
*Lot/serial class
*Unit conversions
*Availability calculation options
If you plan to use attributes for the items of this class, first define the attributes and then assign them to the item class.
|- 
| '''12'''
|  '''Complete Inventory Setup settings'''
 [HelpRoot_FormReference\IN_10_10_00|Inventory Preferences] ([~/?ScreenId=IN101000|IN101000])
|  Use the form to maintain the Inventory module global options and defaults you decided upon while preparing for Inventory configuration: 
*Numbering sequences
*Posting and retention settings
*Data entry settings
*Account settings (Accounts Receivable clearing, in-transit, work-in-progress)
*Default item class
*Default reason codes
*Number of decimals for quantity and unit price/cost
*Use of subitems (yes/no)

|- 
| '''13'''
|  '''Create warehouses'''
 [HelpRoot_FormReference\IN_20_40_00|Warehouses] ([~/?ScreenId=IN204000|IN204000])
|  Use the form to create the necessary warehouse master records. Enter the following information, at minimum, for each warehouse: 
*Warehouse ID
*Branch ID
*Description
*Address
*GL accounts and subaccounts
*All planned locations for the warehouse: 
**Location ID
**Description
**Processing options (include in available, cost separately, allowed transactions, pick priority)
*On-the-fly location maintenance (allow, do not allow, allow with warning)
*Preferred locations for receipts, outgoing shipments, customer returns, and drop-ships.

|- 
| '''14'''
|  '''Create stock items'''
 [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500])
|  Use the form to create master records of stock items. Enter the following information, at minimum, for each item: 
*Inventory ID
*Description
*Status
*Item class
*Lot/serial class

Override the settings copied from the item class, if necessary. If the item belongs to a class with attributes specified, enter the appropriate settings for attributes of the item.{br}

For standard-cost items, enter current cost as pending standard cost with effective date prior to first day of live use of the Inventory module
|- 
| '''15'''
|  '''Create non-stock items'''
 [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000])
| 
Use the form to create master records of non-stock items. Enter the applicable information for each item, including the following: 
*Inventory ID
*Description
*Status
*Item class

Override the settings copied from the item class, if necessary, and add any additional information for each item. 
|- 
| '''16'''
|  '''Define inventory cycles'''
 [HelpRoot_FormReference\IN_50_20_00|Update Standard Costs] ([~/?ScreenId=IN502000|IN502000])
| 
|}
You can download and print the [HelpRoot_ImplementChecklists\IN_Configuration_Checklist|Inventory Configuration Checklist] to assist you in configuring the Inventory module. [anchor|#4]
==Initialization==
Once configuration, described in the previous section, is complete, the Inventory module is ready for use. But to move daily operations from your old system to Acumatica ERP, you should migrate current stock data, which this section describes. ((({S:Hint}'''Physical Inventory Count'''
 Ideally, you should perform a physical inventory count to verify and correct stock quantities in the legacy system before migration to Acumatica ERP, so that you do not carry any existing problems to the new system. However, a complete physical inventory count can be a tremendous effort. Consider performing at least a partial physical inventory count in the most crucial areas.
)))((({S:Hint}'''Stock Cost'''
 Inventory items with average and standard cost valuation have only one current cost, which makes them easy to migrate. {br}

Inventory items with FIFO and specific cost valuation can have multiple cost layers. If each cost layer needs to be recreated in Acumatica ERP, this can require a substantial effort. Consider the possibility of migrating a FIFO (specific-cost) item with a single cost layer at the current average cost. (This will not make it an average-costed item; cost layers from the old system are merged into one layer, while new receipts after migration will build new cost layers.) 
)))
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action
!width="80%" ! Description
|- 
| '''Data Preparation'''
| 
 Print detailed stock status and stock valuation reports in the legacy system, and then review and adjust inventory stock in the legacy system. If you do a physical inventory count, stock adjustments and corrections will be its natural result. If you have decided not to do an inventory count, review the stock report for unusual, undesired, or incorrect cases, such as negative stock and too high, too low, or negative cost. Investigate such cases and make necessary adjustments.{br}

Reprint detailed stock status and stock valuation reports. For easier data handling, export them into spreadsheets. This would allow more automated data transformation and import in Acumatica ERP. {br}

Because inventory, warehouse, and location identifiers in the legacy system can be different from those in Acumatica ERP, prepare mapping tables to convert old identifiers to new ones. Using these mapping tables, transform the exported stock reports into Acumatica ERP stock reports in order to get a stock status report with new Acumatica ERP items, warehouses, and locations. In the simplest case, this transformation would be a substitution of old IDs with new IDs. It can also be a merge of records if, for example, you want to reduce the number or locations of warehouses.{br}

If you need to split warehouses and locations, do this either before migration in the legacy system or after migration in Acumatica ERP. If you use automated procedures or scripts for stock migration, format the transformed data according to requirements for input data. In case of manual migration, format the data for better readability to reduce mistakes during data entry.
|- 
| '''Pre-migration'''
|  If you have stardard-cost item, verify and update, if necessary, their costs.
|- 
| '''Migration'''
|  You perform migration manually by entering the stock quantities by using the [HelpRoot_FormReference\IN_30_10_00|Receipts] ([~/?ScreenId=IN301000|IN301000]) form. Open the [HelpRoot_FormReference\IN_30_10_00|Receipts] ([~/?ScreenId=IN301000|IN301000]) form now. ((({S:Hint}Pay special attention for FIFO items: In order to preserve to cost layers, you must enter each cost layer as a separate receipt with an appropriate transaction date. Similar care should be taken for lot- and serial-numbered items if they use the FIFO or LIFO issue method. 
)))
Because the General Ledger module is implemented before the Inventory module, General Ledger accounts will have the full value of the inventory stocks and Inventory migration will double the figures. To eliminate this: 
*Print the [HelpRoot_ReportReference\GL_63_30_00|Transactions for Period] ([~/?ScreenId=GL633000|GL633000]) report, filtered for Inventory transactions. 
*On the [HelpRoot_FormReference\GL_30_10_00|Journal Transactions] ([~/?ScreenId=GL301000|GL301000]) form, enter reversals of the Inventory transactions for the same financial period as the migrated documents. Use the account total amounts from the General Ledger Transactions for Period report, changing debit to credit and vice versa. 
*Verify that all General Ledger accounts have the same balances as before Inventory migration. 

In case of automated migration, seek assistance from your consultant.
|}[anchor|#5]
==Other Considerations==
*'''Physical Inventory''': Physical inventory count is a common method to ensure that data in Inventory is accurate and reliable. Acumatica ERP supports several approaches: full physical inventory count, cycle count, count by movement class, by ABC code, etc. Using Acumatica ERP, your company can create a physical inventory system that best fits its policies and goals. You can perform physical inventories based on various types of physical inventory counts based on different generation methods. 
*:Refer to [HelpRoot_InvMgmt\IN__con_Planning_for_Physical_Inventory|Configuration of Physical Inventory] article for assistance and details.
*'''Replenishment''': Acumatica ERP offers a range of replenishment methods, configurable and adjustable through item-specific parameters, and enables you to automate your material replenishment to high degree. 
*:Refer to [HelpRoot_InvMgmt\IN__con_Configuration_of_Automated_Replenishment|Configuration of Automated Replenishment] article for assistance and details. 
*'''Access restriction''': With standard security settings, every user who is granted rights to create or process inventory transactions can receive and issue any item at any location. In Acumatica ERP, you can control access to item classes, individual items, and warehouses using restriction groups. 
*:Use the following steps to implement customer access restrictions via restriction groups: 
*:1. Collect access requirements: 
**List all users who have to have enter and process inventory transactions. 
**For each listed user, indicate item classes (or items) and warehouses to which the user must have access; after configuration, the user will have no access to unlisted objects. 
**If the user should access a large number of items and cannot access only a small number, list only no-access items and mark the list as &ldquo;Inverse&ldquo;; after configuration of the restriction group, the user will have access to all unlisted items. Alternatively, you can special item class for such items, an set security for the classes rather than items. 
**Remember that once you set up these restriction groups, users not included in the access lists will have no access to any item and warehouse. Although they may have access to the Inventory forms, they will not be able to select items using those forms. 
*:2. Analyze the collected access lists and combine users with identical access requirements into groups. Assign a unique name to each group. 
*:3. Use [HelpRoot_FormReference\SM_20_10_30|Restriction Groups] ([~/?ScreenId=SM201030|SM201030]) to create the identified group. 
*:4. Use [HelpRoot_FormReference\IN_10_20_10|Restriction Groups by Warehouse] ([~/?ScreenId=IN102010|IN102010]), [HelpRoot_FormReference\IN_10_30_10|Restriction Groups by Item Class] ([~/?ScreenId=IN103010|IN103010]), and [HelpRoot_FormReference\IN_10_30_20|Restriction Groups by Item] ([~/?ScreenId=IN103020|IN103020]) form to configure up the restriction groups you have designed 
]]></column>
			<column name="PlainText"><![CDATA[Implementing Inventory This document describes the process of implementing the Inventory module in  Acumatica ERP.  Overview The Inventory module is at the heart of  Acumatica ERP inventory and order management functionality, which also include Purchase Orders 				and Sales Orders. The Inventory module is the first module you implement; the 				Purchase Orders and Sales Orders modules depend on it. The inventory and order 				management functionality facilitates and adapts to the complexity and variety of 				organizations' daily operations, so you can implement virtually any kind of 				inventory and order management model. This document is divided into four parts:  Prerequisites and Dependencies '''Prerequisites and Dependencies''': Describes what modules 					must be set up and configured before you begin implementing this module. Preparation '''Preparation''': Describes the data you should collect and 					analyze. Configuration '''Configuration''': Guides you through the actual 					configuration of the Inventory module. Initialization '''Initialization''': Describes how current inventory stock 					details can be brought into the system. Other 							Considerations '''Other Considerations''': Covers other aspects pertaining to the 					implementation of this module.  This chapter is meant only to guide you through Inventory implementation. For detailed 				descriptions of Inventory forms and capabilities, see the  Overview of the Inventory Processes. Prerequisites and Dependencies The implementation of the Finance suite must be completed,  before you implement the Inventory 				module.  Preparation This section covers the needed preparation before you begin configuring the Inventory 				module. When you are ready to implement this module, begin collecting and analyzing 				the necessary information. Do the following steps (although not necessarily in the 				listed order; many steps can be done in parallel) before you actually configure the 				Inventory module.  Because this is the preparation phase of implementation, 					enter no data into the system at this time.  Action Description Develop conventions for identifying inventory 								items Plan the inventory ID, which is based on the  INVENTORY  									segmented key. Each inventory item, stock or non-stock, has an 									inventory ID. Identifiers (inventory IDs) can be segmented, with 									each segment providing specific information about the item.  Acumatica ERP also supports subitems. They can be useful when 									almost-identical products differ in size, color, and material. 									These variations can be represented by the same inventory ID and 									different subitem codes. Subitem codes can also be segmented, 									for greater detail classification of the products.  Decide how the inventory ID should be structured: how many 									segments it should have, what the length of each segment is, 									which segments should be validated (and for validated segments, 									which of the segment values are valid), and whether 									auto-numbering should be used for a segment.  Also, decide whether you'll use subitems and if so, make sure the 									license includes the  Inventory Subitems  feature. To use 									subitems, you should decide how subitem codes will be structured 									and segmented.  For details, see  Segmented Identifiers 									and  Inventory Subitems.  Define Reason Codes Plan reason codes, which determine the offset account and 									subaccount for receipts, issues, adjustments, and physical 									inventory adjustments. The reason code provides the offset 									account and, If  Subaccounts  are used in your system, the 									reason code defines the sources of the offset subaccount segment 									values.  You need at least four reason codes to be used as default codes for each transaction 									type: receipts, issues, adjustments, and physical inventory 									adjustments. For more information, see   ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) and  Reason Codes: General Information. Plan posting classes  To automate accurate postings to General Ledger for every stock movement, plan 								appropriate posting classes. A posting class is a collection of 								settings assigned to an item that defines the source of accounts and 								subaccounts for transactions: the inventory item, the warehouse 								where the transaction occurs, or the posting class itself. It also 								provides particular accounts and subaccounts, if the source is the 								posting class. For subaccounts, you can define rules for combining 								subaccounts from segments of other subaccounts.  You can define 									just one class (this would mean that all inventory transactions 									are posted based on the same rules) or several classes (if 									different items or group of items update GL differently). Define 									the rule for the names of posting classes. The following 									accounts and subaccounts are defined by the posting class: 									 Inventory account and subaccount (asset) Reason code subaccount Sales account and subaccount (revenue) Cost of sales account and subaccount (expense) Standard cost variance account and subaccount (expense) Standard cost revaluation account and subaccount 										(expense) PO accrual account and subaccount (liability) Purchase price variance account and subaccount 										(expense) Landed cost variance account and subaccount (expense)  For details, see   ([~/?ScreenId=IN206000|IN206000]) Posting Classes and  Posting Classes: General Information. Define additional posting settings Analyze the accounting requirements for integration with GL, deciding upon the 									following:  Should inventory transactions update General Ledger? Should 										transactions be posted to General Ledger in summary or in 										detail? Should transactions be automatically posted to General 										Ledger upon release, or should posting be done as a separate 										operation? Decide on using two Inventory processing options that can help 								your users avoid the accidental release of incomplete or incorrect 								transactions. These settings, listed below, require additional data 								entry effort (if selected) but provide a better quality of data:  Hold Documents on Entry : When the option is selected, 										each new document is created with the status  On Hold  										and cannot be released immediately. To release the 										transaction, it should be taken off hold first and then 										released as usual. Validate Document Totals on Entry : When this option 										is selected, each transaction requires entry of control 										totals for cost and quantity. A transaction can be released 										only if the system-calculated totals equal the control 										totals.  For more details, see  Posting Settings in the Inventory Module. Collect information about warehouses and locations  Decide which warehouses you need. A warehouse in  Acumatica ERP does not necessarily represent a physical building; you can 								divide a building into multiple areas and define each area as a 								warehouse. A warehouse can even be virtual; for example, goods that 								are between the supplier and your company can be considered in the 									 GIT  (goods in transit) warehouse.  First, plan the 									structure of the warehouse ID and the location ID; these 									identifiers are based, respectively, on the  INSITE  and 										 INLOCATION  segmented keys. Decide whether you will 									use segmented IDs (alternatively, you can instead configure the 									segmented key as one segment with up to 10 alphanumeric 									characters). If the key is segmented, determine how many 									segments (and of what length) will be used, whether the segments 									should be validated (and if so, what kind of values are 									allowed), and whether an auto-numbering segment will be used. 									 Collect the following information about each warehouse 									you will define in  Acumatica ERP:  The warehouse's unique identifier, which can be up to 10 										characters and should comply with your design of the 											 INSITE  segmented key.  The description, or name, of the warehouse.  The address of the warehouse.  The organization's branch the warehouse is assigned to.  The General Ledger accounts and subaccounts to be used if 										the account source is  Warehouse : inventory, reason 										code, sales, cost of sales, standard cost variance, standard 										cost revaluation, purchase order accrual, purchase price 										variance, and landed cost variance.  Indicate what cost (average or last) should be used for 										customer returns of average-costed and FIFO-costed 										inventories.  List of this warehouse's locations to be configured, noting 										the following information for each:  Location ID, which can be up to 10 characters and 												should comply with your design of the 												 INLOCATION  segmented key.  Description  Processing options:  Whether sales are allowed from the location  Whether receipts are allowed at the location  Whether transfers are allowed at the location  Whether assembly operations are allowed at the 												location  Pick priority of the location  Whether separate cost layers will be created 												for this location  Whether the quantities of goods at this 												location will be included in the quantities of 												available goods and included in inventory 												transactions  Whether the location should be restricted for 												specific item or item class (you may need to 												return to this setting after defining item 												classes)  Optionally, indicate preferred locations for: receipts, 										outgoing shipments, customer returns, and drop-ships.  Decide whether users should be able to add new locations for 										this warehouse by entering them directly in inventory 										documents:  Do Not Allow On-the-Fly Entry : This option 												means that all locations of the warehouse must be 												defined before they can be used. This is the safest 												option but can create problems during data entry if 												the list of locations is incomplete.  Allow On-the-Fly Entry : In this case, 												locations do not need to be defined in advance. If a 												user types a nonexistent location ID on a data entry 												screen, the system will automatically add the 												location to the warehouse. While this option 												provides greater flexibility, your site may end up 												with many locations defined due to typos.  Warn but Allow On-the-Fly Entry : Here, too, 												locations can be created on the fly, but the user is 												warned and can opt out of creating the new location. 												If the user has made a data entry error, he or she 												can correct it instead of defining a new location. 											 For more information, see  Warehouses: General Information and  Warehouse Locations and Single-Step Transfers: General Information. 									For details on warehouse settings, see   ([~/?ScreenId=IN204000|IN204000]) Warehouses 								(IN204000). Develop conventions for and plan lot/serial 								classes  If you use lot or serial numbers to identify and trace your company's stock, review 								your existing numbering conventions, and plan the lot/serial classes 								that can be assigned to stock items.  Acumatica ERP supports multiple concurrent lot or serial numbering schemes, 									so that different items can be numbered differently. 									 Lot and serial numbers are defined at the item class 									level. Some classes include items tracked by lot numbers, some 									include items tracked by serial numbers, and others include 									items that are not tracked by either number (you should define 									at least one lot/serial class for such items.) For each class, 									decide which group of items it will include.  In addition 									to deciding which tracking method is used for the class, decide 									upon the following:  Whether to track expiration dates or not. How the numbers are assigned. The assignment method can be 										one of the following:  When received: Items get a lot/serial number when 												they are received. When used: Items don’t get a lot/serial number until 												they're issued them from stock or used in assembly. 											 What the issue method is for items of the class:  FIFO : Lot/serial numbers are picked for issue 												by receipt date (oldest first). LIFO : Lot/serial numbers are picked for issue 												by receipt date (newest first). Sequential : Lot/serial numbers are picked in 												alphabetic order. Expiration : Lot/serial numbers are picked by 												expiration date (faster-expiring first). Numbering conventions for lot and serial numbers, numbering 									conventions can be shared among stock items in two ways:  Stock items with different inventory IDs may have the same 										serial number. To implement this numbering scheme in  Acumatica ERP, assign these stock items to the same lot/serial class 										but specify for each a separate numbering sequence. Stock items with different inventory IDs have unique serial 										numbers. To implement this numbering scheme in  Acumatica ERP, have these items belong to the same lot/serial class and 										share an auto-generated numbering sequence. This guarantees 										that all automatically generated lot or serial numbers will 										be unique. You still can manually assign the same serial 										number to multiple items with different inventory IDs;  Acumatica ERP ensures uniqueness between items with the same inventory 										ID. You should decide upon the structure of the lot or serial 									number for each lot/serial class you will define: the number of 									segments, the type of each segment, and the possible values for 									each validated segment.  Acumatica ERP supports the following types of segments:  Constant : The segment is a predefined alphanumeric 										string that is replicated to all lot or serial numbers. Date : The segment shows any of the following parts of 										the date: day, month number, month name, and two- or 										four-digit year. Auto-incrementing value : The system automatically 										assigns the segment value, based on the numbering sequence, 										when a new lot/serial number is generated. Decide which of the defined classes will serve as the 									default lot/serial class. For details about classes and 									possible settings, see   ([~/?ScreenId=IN207000|IN207000]) Lot/Serial Classes 									(IN207000); for more information about lot and serial numbers, 									see   Items with Lot and Serial Numbers: General Information. Define global units of measure  Review the units of measure used for different items, and identify those applicable 								to most of the items. Write down the list of global UOMs and define 								conversion rules. Choose the UOMs to be the basic UOMs for 								specifying weights and volumes, respectively. See the  Units of Measure: General Information for more 								information. Collect information about stock items  Collect the following general details about stock items.  Instead of creating 									records for each item manually, you can import the stock item 									records from your legacy system. Consider mapping the item 									properties used in the old system to the properties used in  Acumatica ERP (with simultaneous conversion if needed). Inventory ID : Consider creating a rule for assigning 										identifiers, based on the structure you've planned for the 											 INVENTORY  segmented key. Description : Define a rule for providing brief 										descriptions of the products. Status : Choose the appropriate status from the 										options listed below; normally, only active products are 										migrated:  Active No Sales  (item cannot be sold) No Purchases  (item cannot be purchased) No Request  (item can't be used in requisition 												requests) Inactive Type : Select one of  Acumatica ERP's product types, which can be useful in reports but don't 										affect processing:  Finished Good Component Part Subassembly Is a Kit : Indicate whether the stock item is a kit 										assembled from other items; if so, list components and 										quantities. See the  Inventory Item Kits article for more information about 										kits. Units of measure : First, assign the stock item a base 										or primary unit of measure.  Acumatica ERP uses this required unit to maintain the stock level for 										the item. If the item can be counted in multiple units (such 										as pieces, packs, or boxes), list all of them before 										choosing which should be used as the base unit of measure. 										We recommend that you use the smallest unit as the base 										unit, to avoid complications. Also choose the default sales 										and purchase units of measure (the units used most 										frequently in sales and purchases). Default storage : Indicate whether the stock item is 										mostly stored in, received to, and/or issued from one 										particular warehouse and location (and if so, which). Also collect the following accounting and processing details 								for stock items:  Valuation Method : Choose an appropriate valuation 										method for the stock item:  Average : The entire quantity of the item on 												hand is valued with the same cost, which is the 												total cost of all quantities of the items at the 												warehouses divided by the total quantity. No 												distinction is made regarding whether a particular 												unit was purchased cheaply or expensively; all are 												valued equally. This is a moving average cost: each 												receipt adds to total cost and total quantity, 												causing average cost to be recalculated. FIFO  (First In, First Out): Each receipt 												creates a separate cost layer. Stock issue takes the 												cost from cost layers, starting from the oldest one; 												when the first cost layer is depleted, the second 												oldest layer is used, and so on until all issued 												quantity is costed. Standard : The entire on-hand quantity of the 												item is valued with the same cost. Unlike average 												cost, standard cost is not built by actual receipts; 												it is defined by the product manager (from analysis 												of production, storage, handling costs, and the 												like). Standard cost is reviewed regularly through 												standard cost revaluation. Specific : Each piece of the stock item has 												its own individual cost, which is defined by its 												purchase price. This valuation method is used for 												items with lot or serial numbers. The lot/serial 												number identifies the product piece and its cost 												layer. Lot or serial numbering : If the stock item requires 										lot or serial numbering, specify an appropriate lot/serial 										class. Posting class : Select the appropriate posting class 										for the item's transactions. GL accounts and subaccounts  (inventory, reason code, 										sales, cost of sales, standard cost variance, standard cost 										revaluation, purchase order accrual, purchase price 										variance, and landed cost variance): The accounts and 										subaccounts assigned to the item can be different from those 										in the selected posting class. They will be used if the 										account source is  Inventory Item . Taxes : List taxes that apply to purchases and sales 										of the stock item in the countries and states where your 										company operates. If an appropriate tax category is already 										created in  Acumatica ERP, indicate it instead of a tax list. Commissionable : Indicate if salesperson commission is 										to be calculated for sales of the item. For standard-cost items, indicate current standard cost. For 									details, see the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500),  Inventory Items, and  Item Costs and Valuation Methods articles. Collect information about non-stock items  Gather information about all  non-stock items : items such 								as services or licenses for which you do not need to monitor 								quantity in warehouses, and that are probably not stored in 								warehouses at all. Purchases and sales of such items do not affect 								company assets but are debited or credited directly to income and 								expense accounts. Collect the following details for each type of 								non-stock items and consider mapping of those details to the details 								used for stock items in your legacy system to perform import of the 								items.  Inventory ID : Assign the item a unique identifier, 										based on the structure you've planned for the 											 INVENTORY  segmented key. Description : Provide a brief description of the 										item. Status : Choose a status; the available statuses are 										the same as those for stock items. Type : Select one of the following types:  Non-Stock Item : A general type of non-stock 												item Labor : A type of non-stock item to be used as 												labor hour rates Service : A type of non-stock item to be used 												as service fees Charge : A type of non-stock item to be used 												as charge rates Expense : A type of non-stock item to 												designate specific expenses Whether the item is a kit item; for details, see  Inventory Item Kits. Units of measure : If units of measure apply, specify 										the base, sales, and purchase units. GL accounts and subaccounts : Note the default General 										Ledger accounts used to post inventory transactions: the 										sales accounts, expense accounts, and accounts for posting 										transactions related to kit assembly (if the item is a 										kit). Taxes : Describe which taxes apply to purchases and 										sales of the non-stock item. If an appropriate tax category 										is already created in  Acumatica ERP, indicate it instead of a list of taxes. Commissionable : Indicate if salesperson commission is 										to be calculated for sales of the item. For details, see  Non-Stock Items in Sales and Purchases and   ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items (IN202000). Identify taxes and tax categories  Analyze the tax requirements for stock and non-stock items, and 								identify new taxes and tax categories required for the items. For 								details, see   ([~/?ScreenId=TX205000|TX205000]) Taxes 								(TX205000).  Define item classes  Item classes provide default settings for stock or non-stock items when you create 								new items. Group items with similar settings into item classes, 								which can include any of the following settings:  Item type Valuation method Tax category Posting class Lot/serial class Units of measure Price class Availability settings Whether negative quantities will be allowed for items of the 										class For each identified class, decide how available quantity should 								be estimated for items of the class. Possible deductions from the 								quantity on hand can be any of the following: quantity on issues, 								quantity on customer orders, back-ordered quantity, quantity 								shipping, quantity shipped, and quantity on kit assembly demand. 								Possible additions to the quantity on hand can be any of these: 								quantity on receipts, quantity in transit, quantity on purchase 								orders and purchase order receipts, and quantity in kit assembly 								supply.  Most of the class settings are copied 									from the item class to a new item once you select the item 									class, but you can select other values for this item. Rules on 									availability and whether to allow negative quantities, however, 									are defined at the item class level and cannot be changed for a 									particular item of the class.  For more information, see 									 Availability Calculation: General Information. Define attributes With  Acumatica ERP, to additional properties of items, you can add user-defined 								attributes and make some of them  Required . The attributes are 								defined at the item class level. For more information, see  Attributes. Plan physical inventory counts Partial or full inventory counts are mandatory for any resale 									business. Decide how often you need to perform full counts. 									Decide whether you need to perform partial counts (based on item 									classes, specific items, ABC or movement classes) and how often.  Plan physical inventory types, for each type collect the 									following information: Unique identifier of the type and description Generation method:  Full Inventory, By Inventory Item, 												By item Class, By ABC code, By Movement Class, By 												Cycle . Optionally, whether to perform counts of this type in a 											particular warehouse and particular locations only How to organize data on count sheets Plan Physical Inventory Cycles Decide how many cycles you need for the inventory types you will 								use. A cycle defines how often the counting should be 								performed. Create a list of GL accounts used in Inventory Check that all the accounts needed for the Inventory module exist 									on the chart of accounts, and write down the missing ones: The Accounts Receivable clearing account and subaccount, 										used to offset the sales revenue posting for the invoice 										transaction type The in-transit account and subaccount, used in two-step 										transfers to hold the cost of stock issued from the source 										warehouse and not yet received at the destination The work-in-progress account and subaccount, used in kit 										assembly to hold the cost of the kit's components Plan numbering sequences  Acumatica ERP provides default numbering sequences for Inventory batches as 									well as for each type of inventory transactions: receipt 									(transfer), issue, adjustment, assembly, replenishment, and 									physical inventory counts. You do not have to use a separate numbering 									sequence for each type of transactions— multiple 									transaction types can share a numbering sequence. You can use the default sequences or create custom numbering 									sequences—for example, if you want to split a numbering 									sequence between the branches. If you have branches, the same 									sequence will be used by all branches by default so that the 									transactions with subsequent reference numbers may belong to 									different branches. However, you can split a sequence between 									branches so that different ranges of reference numbers will 									belong to different branches.   You should also define the numbering sequences for the 									auto-numbered segments of the  INVENTORY  and  INSITE  									segmented keys (used for inventory IDs and warehouse IDs), if 									such a segment is used. For each of these, plan the numbering 									sequence: the start number, the numbering step or increment, and 									the end number. For more information, see  Numbering Sequence Usage. Review other settings for Inventory configuration  Define the number of decimal places to be used for the 								following:  The quantity of stock and non-stock items throughout  Acumatica ERP. Unit price and unit cost (both are controlled by one 										setting); total price and cost follow currency 											settings. These settings are also 											used in the Sales Orders and Purchase Orders 											modules. Define the global units of weight and volume to be used in 									the Inventory module as well as in the Purchase Orders and Sales 									Orders modules to evaluate weights and volumes. For details, 								refer to the   ([~/?ScreenId=IN101000|IN101000]) Inventory Preferences (IN101000) article. Plan Roles Review the duties of all employees who handle stock items in 								warehouses and who monitor non-stock items. Define a role required 								for each typical task performed by employees.  For example, for 									the ability to receive the purchased goods at specific 									warehouse, a user should have a role that has the  Insert  									or  Delete  access to the   ([~/?ScreenId=IN301000|IN301000]) Receipts (IN301000) form, 									at least the  View-Only  access to the   ([~/?ScreenId=IN204000|IN204000]) Warehouses (IN204000) form, 									and the  View-Only  access to the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500) 									form. For more information on roles, see  Role-Based Access. Plan Restriction Groups With a collection of roles, that grant rights to create inventory 									transactions, a user can receive and issue any items at any 									warehouse. In  Acumatica ERP, you can control visibility of 									 individual items within classes 									and particular warehouses to users by using restriction groups. 									For more information, see  Inventory Item Security and  Warehouse Security.  Collect security requirements:  List all users who have to have enter and process inventory 										transactions.  If the user should work with a large number of items list 										only items that the user should not see and mark the list as 										"Inverse"; after configuration of the restriction group, the 										user will see all unlisted items. 										 Remember that once you set up these restriction 									groups, users not included in the group will not see any item 									and warehouse. Although they may have access to the Inventory 									forms, they will not be able to select items using those forms. 								 You can download and print the  Inventory Preparation Checklist to assist you in collecting the data for Inventory 				implementation.  Configuration This section walks you through the process of actually configuring the Inventory 				module in  Acumatica ERP.  No. Action Description 1 Define auto-numbering sequences  ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences 									(CS201010)  Use the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form in the Configuration Settings module to define 								the numbering sequences for all types of inventory documents:  Receipts (transfers) Issues Adjustments Assemblies Replenishments Physical inventory counts If the  INVENTORY ,  INSITE , and  INLOCATION  								segmented keys (used for inventory IDs, warehouse IDs, and warehouse 								location IDs) use an auto-numbering segment, define these numbering 								sequences as well.  2 Define segmented keys  ([~/?ScreenId=CS202000|CS202000]) Segmented Keys 									(CS202000)  Use the   ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) form in the Configuration Settings module to 								implement the chosen structure of the following segmented keys 								planned during the preparation stage:  The  INVENTORY  segmented key, which inventory IDs are 										based on The  INSITE  segmented key, which warehouse IDs are 										based on The  INLOCATION  segmented key, which warehouse 										location IDs are based on 3 Maintain validation table for key segments  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts 									(GL202500)  Use the   ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) form in the Configuration Settings module to enter 								valid codes for any  INVENTORY ,  INSITE , and 									 INLOCATION  segments that are validated. (Non-validated 								and auto-numbered segments do not require maintenance of segment 								values.) 4 Create General Ledger accounts  Use the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form 								to add any needed General Ledger accounts identified during 								preparation (especially the  Consider general posting settings for 									Inventory setup  step). For details, see  To Add an Account to the Chart of Accounts.  5 Create General Ledger subaccounts  ([~/?ScreenId=GL203000|GL203000]) Subaccounts 									(GL203000)  Use the   ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) form to create any necessary subaccounts. See  To Add a Subaccount 								for more information.  6 Create tax categories  ([~/?ScreenId=TX205500|TX205500]) Tax Categories 									(TX205500)  Use the   ([~/?ScreenId=TX205500|TX205500]) Tax Categories (TX205500) form to create any additional tax categories you 								identified during preparation. Enter the following for each 								category:  Tax category ID Description Inclusive/exclusive (select the  Exclude Listed Taxes  										check box to make the tax category exclusive) List of taxes (select taxes that have been defined by their 										ID, and their information will be filled in) 7 Create reason codes  ([~/?ScreenId=CS211000|CS211000]) Reason Codes 									(CS211000)  Use the   ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) form to create the reason codes you designed for 								the following:  Receipts Issues Transfers Adjustments There should be at least one reason code for each transaction 								type. 8 Create posting classes  ([~/?ScreenId=IN206000|IN206000]) Posting Classes 									(IN206000)  Use the   ([~/?ScreenId=IN206000|IN206000]) Posting Classes (IN206000) form to create the posting classes you have 								planned. Enter the following for each class:  Class ID Description Account sources and subaccount combination rules GL accounts and subaccounts 9 Create lot/serial classes  ([~/?ScreenId=IN207000|IN207000]) Lot/Serial Classes 									(IN207000)  Use the   ([~/?ScreenId=IN207000|IN207000]) Lot/Serial Classes (IN207000) form to create defined lot/serial classes. Enter 								applicable settings for each class:  Class ID Description Tracking method Track expiration date (yes/no) Assignment method Issue method Auto-incremental value Share auto-incremental value among class items (yes/no) Lot/serial number segments, types, and values (for 											 Constant  types) 10 Create units of measure  Use the   ([~/?ScreenId=CS203100|CS203100]) Units of Measure (IN203000)form to create global units of measure and their 								conversions. You identified these units during the preparation phase 								of implementation. 11 Create item classes  ([~/?ScreenId=IN201000|IN201000]) Item Classes 									(IN201000)  Use the   ([~/?ScreenId=IN201000|IN201000]) Item Classes (IN201000) form to create the planned item classes. Enter the 								applicable settings for each class, which may include the following:  Class ID Description Stock item (yes/no) Allow negative inventory Item type Valuation method Tax category Posting class Lot/serial class Unit conversions Availability calculation options If you plan to use attributes for the items of this class, 								first define the attributes and then assign them to the item 								class. 12 Complete Inventory Setup settings  ([~/?ScreenId=IN101000|IN101000]) Inventory Preferences 									(IN101000)  Use the form to maintain the Inventory module global options and 								defaults you decided upon while preparing for Inventory 								configuration:  Numbering sequences Posting and retention settings Data entry settings Account settings (Accounts Receivable clearing, in-transit, 										work-in-progress) Default item class Default reason codes Number of decimals for quantity and unit price/cost Use of subitems (yes/no) 13 Create warehouses  ([~/?ScreenId=IN204000|IN204000]) Warehouses 									(IN204000)  Use the form to create the necessary warehouse master records. 								Enter the following information, at minimum, for each warehouse:  Warehouse ID Branch ID Description Address GL accounts and subaccounts All planned locations for the warehouse:  Location ID Description Processing options (include in available, cost 												separately, allowed transactions, pick 												priority) On-the-fly location maintenance (allow, do not allow, allow 										with warning) Preferred locations for receipts, outgoing shipments, 										customer returns, and drop-ships. 14 Create stock items  ([~/?ScreenId=IN202500|IN202500]) Stock Items 									(IN202500)  Use the form to create master records of stock items. Enter the 								following information, at minimum, for each item:  Inventory ID Description Status Item class Lot/serial class Override the settings copied from the item class, if 									necessary. If the item belongs to a class with attributes 									specified, enter the appropriate settings for attributes of the 									item. For standard-cost items, enter current cost as 									pending standard cost with effective date prior to first day of 									live use of the Inventory module 15 Create non-stock items  ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items 									(IN202000) Use the form to create master records of non-stock items. Enter 									the applicable information for each item, including the 									following:  Inventory ID Description Status Item class Override the settings copied from the item class, if necessary, 									and add any additional information for each item.  16 Define inventory cycles  ([~/?ScreenId=IN502000|IN502000]) Update Standard Costs 								(IN502000) You can download and print the  Inventory Configuration Checklist to assist you in configuring the Inventory module.  Initialization Once configuration, described in the previous section, is complete, the Inventory 				module is ready for use. But to move daily operations from your old system to  Acumatica ERP, you should migrate current stock data, which this section describes.  Physical Inventory Count  Ideally, you should perform a 					physical inventory count to verify and correct stock quantities in the legacy 					system before migration to  Acumatica ERP, so that you do not carry any existing problems to the new system. However, a 					complete physical inventory count can be a tremendous effort. Consider 					performing at least a partial physical inventory count in the most crucial 					areas. Stock Cost  Inventory items with average and standard cost 					valuation have only one current cost, which makes them easy to migrate. 					 Inventory items with FIFO and specific cost valuation can have multiple 					cost layers. If each cost layer needs to be recreated in  Acumatica ERP, this can require a substantial effort. Consider the possibility of migrating 					a FIFO (specific-cost) item with a single cost layer at the current average 					cost. (This will not make it an average-costed item; cost layers from the old 					system are merged into one layer, while new receipts after migration will build 					new cost layers.)  Action Description Data Preparation  Print detailed stock status and stock valuation reports in the 									legacy system, and then review and adjust inventory stock in the 									legacy system. If you do a physical inventory count, stock 									adjustments and corrections will be its natural result. If you 									have decided not to do an inventory count, review the stock 									report for unusual, undesired, or incorrect cases, such as 									negative stock and too high, too low, or negative cost. 									Investigate such cases and make necessary adjustments. Reprint detailed stock status and stock valuation reports. For 									easier data handling, export them into spreadsheets. This would 									allow more automated data transformation and import in  Acumatica ERP.  Because inventory, warehouse, and location identifiers in the 									legacy system can be different from those in  Acumatica ERP, prepare mapping tables to convert old identifiers to new 									ones. Using these mapping tables, transform the exported stock 									reports into  Acumatica ERP stock reports in order to get a stock status report with new 										 Acumatica ERP items, warehouses, and locations. In the simplest case, this 									transformation would be a substitution of old IDs with new IDs. 									It can also be a merge of records if, for example, you want to 									reduce the number or locations of warehouses. If you need to split warehouses and locations, do this either 									before migration in the legacy system or after migration in  Acumatica ERP. If you use automated procedures or scripts for stock 									migration, format the transformed data according to requirements 									for input data. In case of manual migration, format the data for 									better readability to reduce mistakes during data entry. Pre-migration  If you have stardard-cost item, verify and update, if necessary, 								their costs. Migration  You perform migration manually by entering the stock quantities by using the   ([~/?ScreenId=IN301000|IN301000]) Receipts 								(IN301000) form. Open the   ([~/?ScreenId=IN301000|IN301000]) Receipts 								(IN301000) form now.  Pay special attention 									for FIFO items: In order to preserve to cost layers, you must 									enter each cost layer as a separate receipt with an appropriate 									transaction date. Similar care should be taken for lot- and 									serial-numbered items if they use the FIFO or LIFO issue method. 									 Because the General Ledger module is implemented 									before the Inventory module, General Ledger accounts will have 									the full value of the inventory stocks and Inventory migration 									will double the figures. To eliminate this:  Print the   ([~/?ScreenId=GL633000|GL633000]) Transactions for Period 										(GL633000) report, filtered for Inventory transactions.  On the   ([~/?ScreenId=GL301000|GL301000]) Journal Transactions 										(GL301000) form, enter reversals of the Inventory 										transactions for the same financial period as the migrated 										documents. Use the account total amounts from the General 										Ledger Transactions for Period report, changing debit to 										credit and vice versa.  Verify that all General Ledger accounts have the same 										balances as before Inventory migration.  In case of automated migration, seek assistance from your 									consultant. Other Considerations Physical Inventory : Physical inventory count is a common method to ensure 					that data in Inventory is accurate and reliable.  Acumatica ERP supports several approaches: full physical inventory count, cycle count, 					count by movement class, by ABC code, etc. Using  Acumatica ERP, your company can create a physical inventory system that best fits its 					policies and goals. You can perform physical inventories based on various types 					of physical inventory counts based on different generation methods.  Refer to 							 Configuration of Physical Inventory 						article for assistance and details. Replenishment :  Acumatica ERP offers a range of replenishment methods, configurable and adjustable through 					item-specific parameters, and enables you to automate your material 					replenishment to high degree.  Refer to  Configuration of Automated Replenishment article for assistance and details.  Access restriction : With standard security settings, every user who is granted rights 					to create or process inventory transactions can receive and issue any item at 					any location. In  Acumatica ERP, you can control access to item classes, individual items, and warehouses 					using restriction groups.  Use the following steps to implement customer 						access restrictions via restriction groups:  1. Collect access 						requirements:  List all users who have to have enter and process inventory 							transactions.  For each listed user, indicate item classes (or items) and warehouses to 							which the user must have access; after configuration, the user will have 							no access to unlisted objects.  If the user should access a large number of items and cannot access only 							a small number, list only no-access items and mark the list as 							"Inverse"; after configuration of the restriction group, the user will 							have access to all unlisted items. Alternatively, you can special item 							class for such items, an set security for the classes rather than items.  Remember that once you set up these restriction groups, users not 							included in the access lists will have no access to any item and 							warehouse. Although they may have access to the Inventory forms, they 							will not be able to select items using those forms.  2. Analyze the collected access lists and combine users with identical 						access requirements into groups. Assign a unique name to each group. 						 3. Use   ([~/?ScreenId=SM201030|SM201030]) Restriction Groups (SM201030) to 						create the identified group.  4. Use   ([~/?ScreenId=IN102010|IN102010]) Restriction Groups by Warehouse (IN102010),   ([~/?ScreenId=IN103010|IN103010]) Restriction Groups by Item Class (IN103010), and   ([~/?ScreenId=IN103020|IN103020]) Restriction Groups by Item (IN103020) form to configure 						up the restriction groups you have designed  ]]></column>
		</row>
		<row PageID="a143862f-9d84-43a5-872d-e354f4ee08ea" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="b1a35907-902e-3884-3035-c73e1e3f35d9" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes the process of implementing the Purchase Orders module in Acumatica ERP. 
==Overview==
The Purchase Orders module provides functionality for efficient management of your company supply chain and optimization of the cost of acquiring materials and services. The Purchase Orders module helps you to monitor purchasing operations and analyze in detail your company&rsquo;s purchasing activities and procurement processes. {br}

As with other sections of the Implementation Guide, this document is divided into three parts: 
*[[#1|'''Prerequisites and Dependencies''']: Describes what modules must be set up and configured before you begin implementing this module.
*[[#2|'''Preparation''']: Describes what data you should collect, arrange, and analyze.
*[[#3|'''Configuration''']: Guides you through the actual configuration of the Purchase Orders module.
*[[#4|'''Initialization''']: Describes how opening balances and historic data can be brought into the system.

This document is meant only to assist you with the implementation process. For detailed descriptions of Purchase Orders forms and capabilities, see the [HelpRoot_OrderMgmt\SO_00_00_00|Order Management] guide.[anchor|#1]
==Prerequisites and Dependencies==
The implementation of the Finance suite and of the Inventory module must be completed, before you implement the Purchase Orders module. [anchor|#2]
==Preparation==
This section covers the preparation that needs to occur before you begin configuring the Purchase Orders module. The first task in implementing a module is to collect and analyze the necessary information. The following steps should be done before the actual configuration of the Purchase Orders module.((({S:Warn}Enter no data into the system at this time. The information collection, though, need not be done in the listed order; many steps can be done in parallel.
)))[anchor|#table_vgm_w3k_tl]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action 
!width="80%" ! Description
|- 
| '''Collect purchasing- related information on vendor locations'''
|  Vendors are companies or private individuals that supply goods or services to your organization. You can purchase items from different locations of the same vendor. Collect and verify purchasing-related information for every location of every vendor:[anchor|#ul_pjm_w3k_tl]
*Shipper&rsquo;s address and other contact information.
*Tax zone associated with the vendor location; for details, see [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000]).
*Shipping terms used in relations with the vendor; for details, see [HelpRoot_FormReference\CS_20_80_00|Shipping Terms] ([~/?ScreenId=CS208000|CS208000]).
*FOB point where the shipment title passes from the vendor to your organization; for details, see [HelpRoot_FormReference\CS_20_85_00|FOB Points] ([~/?ScreenId=CS208500|CS208500]).
*Lead time (days), which is the time from the placing of an order to the delivery of the goods or services.
*Receiving branch and default warehouse of your organization to receive goods from the vendor location.
*Carrier to be used by vendor for shipping from this vendor location.
*Receipt processing policies for this location: 
**Minimum and maximum percentage of goods required for receipts (calculated from the quantity on the purchase order) or a threshold for receipts, which is a minimum percentage of goods that should be received before a purchase order will be closed.
**Action to be performed if the minimum and maximum or threshold conditions are not satisfied (reject or accept the goods).
*Whether orders should be printed and sent by postal services or they should be emailed to the vendor.
*Payment method to be used to pay for goods received from this location, additional payment instructions, and a number of days required for payments to reach this vendor location.
*General Ledger accounts to be used for transactions associated with this location: 
**Expense account and subaccount for expenses (non-stock items)
**Freight account and subaccount

For details, see [HelpRoot_FormReference\AP_30_30_10|Vendor Locations] ([~/?ScreenId=AP303010|AP303010]). 
|- 
| '''Plan auto-numbering sequences for orders'''
| 
Configuring the Purchase Orders module requires numbering sequences for regular purchase orders, blanket orders, and Purchase Orders receipts. These sequences are used to ensure that each purchasing document (order or receipt) will get a unique reference number in the system.{br}

 Acumatica ERP is installed with ready-to-use numbering sequences for Purchase Orders documents:[anchor|#ul_cnm_w3k_tl]
*POORDER: Numbering sequence for orders of the Purchase Orders module, ranging from 000000 to 999999
*PORECEIPT: Numbering sequence for Purchase Orders receipts, ranging from 000000 to 999999
You can use these sequences or you can create the sequences that fit your needs best. Decide whether blanket orders will share a numbering sequence with other purchase orders. For details, see [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]). 
|- 
| '''Verify posting rules'''
|  The Purchase Orders module is tightly integrated with the Accounts Payable and Inventory modules. Purchase Orders documents (receipt, return, and landed cost) create appropriate transactions in Inventory and Accounts Payable. After that, Inventory and Accounts Payable documents create postings to General Ledger. 
Analyze the accounting requirements for the purchasing transactions and review the available posting classes. Specify the sources for the following accounts and subaccounts that are required for purchasing transactions: [anchor|#ul_alm_w3k_tl]
*Purchase Orders accrual account and subaccount
*Purchase price variance account and subaccount
*Landed cost variance account and subaccount
{br}

The following sources are available: ''Inventory Item'' (or ''Non-stock Item''), ''Warehouse'', ''Employee'', ''Branch'', ''Vendor Location'' (for non-stock items only), or ''Posting class''.{br}

For more information, see [HelpRoot_InvMgmt\Posting_Classes_GeneralInfo|Posting Classes: General Information]. 
|- 
| '''Design Reason Codes'''
| Analyze posting requirements for returns and for landed cost adjustments. Design two reason codes for use in the Purchase Orders module: one to be used for the purchase returns, and one to be used for landed cost adjustments. For details, see [HelpRoot_InvMgmt\Reason_Codes_GeneralInfo|Reason Codes: General Information].
|- 
| '''Design landed cost codes'''
|  Landed cost codes are used to specify additional costs incurred for shipping purchased goods to your organization warehouses or to customer locations if the goods are drop-shipped. For more information, see [HelpRoot_OrderMgmt\PO__con_Landed_Cost_Tracking|Processing Landed Cost Documents]. 
For each type of possible landed costs, assign a landed cost code and description, and collect the following data: [anchor|#ul_zlm_w3k_tl]
*Types of landed cost, which may include freight or mixed charges, customs duties, or VAT taxes
*Application method (where you will use the landed cost code: in Purchase Orders, in Accounts Payable, or in both modules)
*Allocation method (by cost, quantity, weight, or volume)
*Vendor who will bill for additional cost and the vendor location
*Reason code for landed cost adjustments
*GL accounts to be updated by landed cost transaction: 
**''Landed Cost Accrual ''account (of the ''Expense'' type) and subaccount for items with the any valuation methods except standard
**''Landed Cost Variance'' account (of the ''Expense'' type) and subaccount for items with the standard cost valuation method
*Tax category or categories applicable to the landed costs

For details, see [HelpRoot_FormReference\PO_20_20_00|Landed Cost Codes] ([~/?ScreenId=PO202000|PO202000]). 
|- 
| '''Design ship via codes'''
|  ''Ship via codes'' denote all possible methods your company uses to ship goods to customers and your vendors use to ship goods to your company. 
|- 
| '''Plan needed FOB points'''
|  Define FOB points in relations with the vendors. They can be printed on purchase orders but have no effect on order or receipt processing. If you decide to use FOB points, compile a list of them, providing the following information for each: [anchor|#ul_kzt_gwj_tl]
*FOB point ID (for example, a short name of the port) 
*FOB point description

|- 
| '''Verify General Ledger accounts'''
| 
 Verify that all needed General Ledger accounts have been created in the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]). Prepare a list of missing General Ledger accounts.{br}

The Purchase Orders module requires the following accounts: [anchor|#ul_hlm_w3k_tl]
*Freight account to be used for freight expenses
*PO Accrual account to be used for landed costs
*Accounts for reason codes
*Accounts for ship via codes

|- 
| '''Verify General Ledger subaccounts'''
| Verify that all needed General Ledger subaccounts have been created in [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]). Prepare a list of missing General Ledger subaccounts.
|- 
| '''Plan on maintaining vendor catalogs'''
| 
To facilitate purchasing, you can upload to the system vendor price lists and update them periodically. As a rule, inventory IDs used in your organization are different from those used by vendors. To be able to maintain vendor catalogs, for each inventory item, specify its alternative IDs (including barcodes) used by vendors and establish rules for conversion of UOMs used by vendors to UOMs used in your system. Write down missing UOMs and conversion rules.{br}

For more information, see [HelpRoot_OrderMgmt\PO__con_Vendor_Catalog|Vendor Catalogs]. For details, see [HelpRoot_FormReference\PO_20_10_00|Vendor Inventory] ([~/?ScreenId=PO201000|PO201000]).
|- 
| '''Plan approval procedures'''
| According to generally established policies, purchase orders may be subject to approval. Analyze how different types of orders should be approved in your organization and by whom. For more information, see [HelpRoot_OrderMgmt\PO__con_Purchase_Order_Approvals|Purchase Order Approval]. Write down the list of workgroups with their members, and the conditions for documents to comply to be assigned for approval to a specific group. 
|- 
| '''Design roles'''
| Design the roles you need for users who will enter and process purchase orders, receive the purchased goods, configure approvals, and maintain vendor catalogs with actual vendor prices.
|}
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action 
!width="80%" ! Description
|- 
| '''Collect vendor locations as they relate to purchasing'''
|  Vendors are companies or private individuals that supply goods or services to your company. You can receive materials from different vendor locations. Define or verify all locations for each vendor. For each vendor location from the Accounts Payable module, you should collect (or verify) the following data:
*Shipper&rsquo;s address and other contact information.
*Vendor&rsquo;s tax zone associated with the vendor location; for details, see [HelpRoot_FormReference\TX_20_60_00|Tax Zones] ([~/?ScreenId=TX206000|TX206000]).
*Shipping terms used in relations with the vendor; for details, see [HelpRoot_FormReference\CS_20_80_00|Shipping Terms] ([~/?ScreenId=CS208000|CS208000]).
*FOB point where the shipment title passes from the vendor to your company; for details, see [HelpRoot_FormReference\CS_20_85_00|FOB Points] ([~/?ScreenId=CS208500|CS208500]).
*Lead time (days), which is the time from the placing of an order to the delivery of the goods or services.
*Receiving location of your company.
*Carrier of cargo to be used with this vendor location; for more information, see [HelpRoot_FormReference\CS_20_75_00|Ship via Codes] ([~/?ScreenId=CS207500|CS207500]).
*Line type; receiving goods are intended for inventory, intended for immediate sales and not to be stocked, or non-stock items and services.
*Default warehouse of your company to receive goods from the vendor location.
*Purchase Orders receipt processing policies to serve as defaults for every purchase order and this location: 
**Minimum and maximum percentage of goods received for which a receipt will be issued (calculate from the quantity on the purchase order).
**Threshold receipt, which is a minimum percentage of goods that should be received before a purchase order will be closed.
**Receipt action to be performed if the minimum and maximum or threshold receipt conditions are not satisfied (reject or accept the goods).
**Requirements of printing and emailing the purchase order for a vendor.
*General Ledger accounts: 
**Expense account/sub: Default value for non-stock items&rsquo; expenses.
**Freight account/sub: Default value for freight expenses.

For details, see [HelpRoot_FormReference\AP_30_30_10|Vendor Locations] ([~/?ScreenId=AP303010|AP303010]). 
|- 
| '''Verify purchase accounting posting rules'''
|  The Purchase Orders module is an add-on module to the Accounts Payable and Inventory modules. Purchase Orders documents (receipt, return, landed cost) create appropriate transactions in Inventory and Accounts Payable. Afterwards, Inventory and Accounts Payable create postings to General Ledger, depending on the inventory item, location, transaction type, and other conditions. Accounts and subaccounts for purchasing transactions can be obtained from the following entities: 
*Inventory Item: Account and subaccount are sourced from the item record.
*Warehouse: Account and subaccount are sourced from the warehouse record.
*Posting Class: Account and subaccount are taken from a special set of settings, called Posting Class, independent from the inventory item and warehouse.
*Employee: Expense subaccount segments for non-stock items are sourced from the employee record.
*Company Location: Expense subaccount segments for non-stock items are sourced from the company location record.
*Non-stock Item: Expense account and expense subaccount segments for non-stock items are sourced from the non-stock item record.
*Vendor Location: Expense account (if not defined in non-stock item) and expense subaccount segments for non-stock items are sourced from the vendor location record.

The actual source of the account and subaccount is determined by the posting class assigned to the inventory item; for more details, see the [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000]) article. The actual source of the expense subaccount for non-stock items is determined by the '''Combine Expense Sub.''' setting on the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form and by the '''Update Sub. on Order Owner Change''' check box on the [HelpRoot_FormReference\PO_10_10_00|Purchase Orders Preferences] ([~/?ScreenId=PO101000|PO101000]) form.{br}

Accounts and subaccounts for purchasing configured by posting classes are the following: 
*Purchase Orders accrual account and subaccount (liability)
*Purchase price variance account and subaccount (expense)
*Landed cost variance account and subaccount (expense)

The Purchase Orders module requires three additional account settings: 
*Freight account and subaccount, used for freight expenses
*Expense account and subaccount, used for non-stock items expenses
*Landed cost accrual account and subaccount, used for incoming additional costs

Analyze the accounting requirements for the Purchase Orders module and identify records to be created: 
*'''Verify General Ledger accounts.''' Verify that all needed General Ledger accounts have been created in the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]). Prepare a list of missing General Ledger accounts.
*'''Verify General Ledger subaccounts.''' Verify that all needed General Ledger subaccounts have been created in [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]). Prepare a list of missing General Ledger subaccounts.
*'''Reason Codes.''' Be sure there are at least two codes: one to be used for the purchase return documents and one to be used for landed cost adjustments. For details, refer to the [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000]) article.

|- 
| '''Design landed cost codes'''
|  The main purpose of landed cost is to enable users to account for additional costs beyond the merchandise cost incurred in purchasing inventory items. For instance, companies may routinely incur freight or insurance charges on their purchases from overseas vendors. 
Users can create and assign landed cost codes to incoming additional costs. These codes help to determine how to allocate each of the additional costs to items that have been received into inventory. Landed costs can be allocated by cost, quantity, weight, or volume and can be expensed or included in the inventory cost, based on the item’s valuation method. For each type of landed cost, assign a landed cost code and description, and collect the following data: 
*Types of landed cost, which may include freight or mix charges, customs duties, VAT taxes, mix destination charges, and others
*Application method (define where you will use landed cost code: from Purchase Orders, from Accounts Payable, or from both modules)
*Allocation method (by cost, quantity, weight, or volume)
*Vendor from whom invoice for additional cost will be received
*Vendor location from which invoice for additional cost will be received
*Reason code for landed cost adjustment
*Account to be updated by landed cost transaction: 
**Expense account and subaccount for landed cost accrual account; the landed cost for items with the any valuation methods (except standard) and for non-sold receipt quantity landed costs will be posted directly to a General Ledger landed cost accrual account)
**Expense account and subaccount for landed cost variance account; the landed cost for items with the standard cost valuation methods and for the receipt quantity that was sold prior to the processing of the landed costs will be posted directly to a general ledger landed cost variance account
*Tax category; for more information, see [HelpRoot_FormReference\TX_20_55_00|Tax Categories] ([~/?ScreenId=TX205500|TX205500]) 

For details, see [HelpRoot_FormReference\PO_20_20_00|Landed Cost Codes] ([~/?ScreenId=PO202000|PO202000]). 
|- 
| '''Define equivalent in vendor and your company inventory items and UOMs'''
|  Normally, inventory item identifications used in your company are different than inventory items used by vendors. Units of measure (UOMs) can be different as well. For each item and unit of measure from the vendor price list, an equivalent in the Inventory Management module should be found. The equivalents for vendor items can be obtained from: 
*Inventory item cross-reference from Inventory module (used to identify inventory items in other information systems and business processes). For details, refer to the [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000]) article.
*Vendor inventory catalog (after vendor price list has been uploaded to your system and equivalents from cross-reference items are found you can manually enter missing inventory items and UOMs corresponding to vendor inventory items). 
For each item, define the following data: 
*''' Location''': Vendor location of purchase item
*''' Lead time '''(days): The time from the placing of an order for item to the delivery of this inventory item
*'''Barcode''': machine-readable arrangement of numbers printed on a package (can be obtained from inventory item cross-reference)

The vendor price list file should be in the proper format. You can selectively upload the file with up-to-date information (new prices or new vendor item identifications).{br}

For more information, see [HelpRoot_FormReference\PO_20_10_00|Vendor Inventory] ([~/?ScreenId=PO201000|PO201000]).
|- 
| '''Define autonumbering sequences'''
|  Configuring the Purchase Orders module requires numbering sequences for regular purchase orders, blanket orders, and Purchase Orders receipts. These numberings are used to ensure a unique internal reference number for each purchasing document (described below): 
*'''Regular Purchase Order''' is a numbering of a normal purchase order to be submitted to a vendor. Each order may have an external reference number as requested by the vendor; external numbers may be duplicated for different vendors. Autonumbering is used for internal reference and guarantees unique number for each purchase order document.
*'''Blanket Purchase Order''' is a numbering of a blanket order. You can have multiple purchase orders against each blanket purchase order. Decide if blanket purchase orders will share order numbering with regular purchase orders or whether blanket purchase orders should have separate numbering.
*'''Purchase Receipt''' is a numbering of Purchase Orders receipts. Each receipt also may have its number as requested by the vendor&rsquo;s invoice; it is used as external reference. External numbers may be duplicated for different vendors. Autonumbering, used for internal reference, guarantees unique number for each document. Decide if the Purchase Orders module is to share receipt numbering with the Inventory module or should have separate numbering for its receipts.
((({S:Hint} Acumatica ERP is installed with predefined ready-to-use numbering sequences for objects that require auto-numbering: 
*POORDER: Numbering sequence for orders of Purchase Orders module, ranging from 000000 to 999999
*PORECEIPT: Numbering sequence for Purchase Orders receipts, ranging from 000000 to 999999
))) For details, see the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) article.
|- 
| '''Define Purchase Orders processing policies'''
|  When you define purchasing-related processing policies, decide the following: 
*Should Purchase Orders receipt transactions automatically create an invoice from the vendor when released?
*Should new Purchase Orders receipt documents be put on hold by default?
*Should the system validate the Purchase Orders document total during data entry? (Such validation is always performed when a document is released.)
*Should Inventory and Accounts Payable documents be automatically released on the Purchase Orders receipt release process?
*Should the subaccount be updated on order owner change in the purchase order for non-stock items?
*Should purchase order documents be approved?
*Should notifications be generated for the various types of documents and reports created in the Purchase Orders module? Define the recipients of these notifications.
For details, see the [HelpRoot_FormReference\PO_10_10_00|Purchase Orders Preferences] ([~/?ScreenId=PO101000|PO101000]) article.
|}
You can download and print the [HelpRoot_ImplementChecklists\PO_Preparation_Checklist|Purchase Orders Preparation Checklist] to assist you in collecting the data for Inventory implementation. [anchor|#3]
==Configuration==
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="24%" ! Action
!width="72%" ! Description
|- 
| '''1'''
|  '''Define autonumbering sequences'''
|  Use the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form in the Configuration Settings module to define the numbering sequences for normal purchase orders, blanket purchase orders, and purchase receipts.
|- 
| '''2'''
|  '''Create or verify General Ledger accounts'''
|  Use the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form to maintain necessary General Ledger accounts. See also the [HelpRoot_Financials\GL__HOW_To_Add_an_Account_to_the_Chart_of_Accounts|To Add an Account to the Chart of Accounts].
|- 
| '''3'''
|  '''Create or verify General Ledger subaccounts'''
|  Use the [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]) form to create necessary General Ledger subaccounts. See also [HelpRoot_Financials\GL__HOW_To_Add_a_Subaccount|To Add a Subaccount]. 
|- 
| '''4'''
|  '''Create Reason Codes'''
|  Use the [HelpRoot_FormReference\CS_21_10_00|Reason Codes] ([~/?ScreenId=CS211000|CS211000]) form to create necessary reason codes. 
|- 
| '''5'''
|  '''Verify Posting Classes'''
|  Use the [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000]) form to verify created posting classes in Purchase Orders terms. 
|- 
| '''6'''
|  '''Verify the posting rule of non-stock expense account and subaccount'''
|  Use the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]) form to verify the created posting rule of expense account subaccounts for non-stock items ('''Combine Expense Sub''' - sources of subaccount segments). 
|- 
| '''7'''
|  '''Complete Purchase Orders Setup'''
|  Use the [HelpRoot_FormReference\PO_10_10_00|Purchase Orders Preferences] ([~/?ScreenId=PO101000|PO101000]) form to maintain the Purchase Orders module global options and defaults. 
|- 
| '''8'''
|  '''Verify Vendor Locations'''
|  Use the [HelpRoot_FormReference\AP_30_30_10|Vendor Locations] ([~/?ScreenId=AP303010|AP303010]) form to maintain Vendor Locations options and defaults. 
|- 
| '''9'''
|  '''Create Landed Cost Code'''
|  Use the [HelpRoot_FormReference\PO_20_20_00|Landed Cost Codes] ([~/?ScreenId=PO202000|PO202000]) form to create necessary codes of additional costs. 
|- 
| '''10'''
|  '''Create Cross-References (Vendor Inventory equal to Inventory ID)'''
|  Use the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]) form to define equivalence in vendor inventory and your inventory ID settings. 
|}
You can download and print the [HelpRoot_ImplementChecklists\PO_Configuration_Checklist|Purchase Orders Configuration Checklist] to assist you in configuring the Purchase Orders module. [anchor|#4]
==Initialization==
Once configuration, as described in the previous section, is complete, the Purchase Orders module is ready for use. This section provides information about initializing the Purchase Orders module. {br}

Because Purchase Orders is an add-on module to the Accounts Payable and Inventory modules, the Accounts Payable and Inventory modules must be initialized before initialization of the Purchase Orders module. {br}

The Purchase Orders module does not post transactions directly to the General Ledger, but the release receipt process generates documents in Accounts Payable and Inventory. For the facilitation of Purchase Orders migration, all the Purchase Orders receipts should have an appropriate reflection in Inventory and Accounts Payable accounts of carryover data before the initialization of the Accounts Payable and Inventory modules. To keep the implementation effort within reasonable limits, it is recommended that you migrate only outstanding Purchase Orders orders with their open balances as of the date of migration. {br}

Perform these steps to initialize the Purchase Orders module using this approach: 
*Fully outstanding purchase order documents must be entered with the original document date, open balance, and exchange rate (if the document is in a foreign currency).
*Partially outstanding purchase order documents must be entered with the net balance as of the migration date (not with the original document amount).
*Outstanding documents must be entered for the current period.
]]></column>
			<column name="PlainText"><![CDATA[Implementing Purchase Orders This document describes the process of implementing the Purchase Orders module in  Acumatica ERP.  Overview The Purchase Orders module provides functionality for efficient management of your 				company supply chain and optimization of the cost of acquiring materials and 				services. The Purchase Orders module helps you to monitor purchasing operations and 				analyze in detail your company's purchasing activities and procurement processes.  As with other sections of the Implementation Guide, this document is divided into 				three parts:  Prerequisites and Dependencies '''Prerequisites and Dependencies''': Describes what modules 					must be set up and configured before you begin implementing this module. Preparation '''Preparation''': Describes what data you should collect, 					arrange, and analyze. Configuration '''Configuration''': Guides you through the actual 					configuration of the Purchase Orders module. Initialization '''Initialization''': Describes how opening balances and 					historic data can be brought into the system. This document is meant only to assist you with the implementation process. For detailed 				descriptions of Purchase Orders forms and capabilities, see the   ([~/?ScreenId=SO000000|SO000000]) Order Management guide. Prerequisites and Dependencies The implementation of the Finance suite and of the Inventory module must be 				completed, before you implement the Purchase Orders module.  Preparation This section covers the preparation that needs to occur before you begin configuring 				the Purchase Orders module. The first task in implementing a module is to collect 				and analyze the necessary information. The following steps should be done before the 				actual configuration of the Purchase Orders module. Enter no data into the 					system at this time. The information collection, though, need not be done in the 					listed order; many steps can be done in parallel. Action  Description Collect purchasing- related information on vendor 									locations  Vendors are companies or private individuals that supply goods 								or services to your organization. You can purchase items from 								different locations of the same vendor. Collect and verify 								purchasing-related information for every location of every 									vendor: Shipper's address and other contact information. Tax zone associated with the vendor location; for details, 										see   ([~/?ScreenId=TX206000|TX206000]) Tax Zones 										(TX206000). Shipping terms used in relations with the vendor; for 										details, see   ([~/?ScreenId=CS208000|CS208000]) Shipping Terms 										(CS208000). FOB point where the shipment title passes from the vendor to 										your organization; for details, see   ([~/?ScreenId=CS208500|CS208500]) FOB Points 										(CS208500). Lead time (days), which is the time from the placing of an 										order to the delivery of the goods or services. Receiving branch and default warehouse of your organization 										to receive goods from the vendor location. Carrier to be used by vendor for shipping from this vendor 										location. Receipt processing policies for this location:  Minimum and maximum percentage of goods required for 												receipts (calculated from the quantity on the 												purchase order) or a threshold for receipts, which 												is a minimum percentage of goods that should be 												received before a purchase order will be 												closed. Action to be performed if the minimum and maximum or 												threshold conditions are not satisfied (reject or 												accept the goods). Whether orders should be printed and sent by postal services 										or they should be emailed to the vendor. Payment method to be used to pay for goods received from 										this location, additional payment instructions, and a number 										of days required for payments to reach this vendor 										location. General Ledger accounts to be used for transactions 										associated with this location:  Expense account and subaccount for expenses 												(non-stock items) Freight account and subaccount For details, see   ([~/?ScreenId=AP303010|AP303010]) Vendor Locations (AP301000).  Plan auto-numbering sequences for orders Configuring the Purchase Orders module requires numbering 									sequences for regular purchase orders, blanket orders, and 									Purchase Orders receipts. These sequences are used to ensure 									that each purchasing document (order or receipt) will get a 									unique reference number in the system.  Acumatica ERP is installed with ready-to-use numbering sequences for 									Purchase Orders documents: POORDER: Numbering sequence for orders of the Purchase 											Orders module, ranging from 000000 to 999999 PORECEIPT: Numbering sequence for Purchase Orders 											receipts, ranging from 000000 to 999999 You can use these sequences or you can create the sequences 									that fit your needs best. Decide whether blanket orders will 									share a numbering sequence with other purchase orders. For 									details, see   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010).  Verify posting rules  The Purchase Orders module is tightly integrated with the Accounts Payable and 								Inventory modules. Purchase Orders documents (receipt, return, and 								landed cost) create appropriate transactions in Inventory and 								Accounts Payable. After that, Inventory and Accounts Payable 								documents create postings to General Ledger.  Analyze the 									accounting requirements for the purchasing transactions and 									review the available posting classes. Specify the sources for 									the following accounts and subaccounts that are required for 									purchasing transactions:  Purchase Orders accrual account and subaccount Purchase price variance account and subaccount Landed cost variance account and subaccount The following sources are available:  Inventory 										Item  (or  Non-stock Item ),  Warehouse , 										 Employee ,  Branch ,  Vendor Location  (for 									non-stock items only), or  Posting class . For more 									information, see  Posting Classes: General Information. 								 Design Reason Codes Analyze posting requirements for returns and for landed cost adjustments. Design two 								reason codes for use in the Purchase Orders module: one to be used 								for the purchase returns, and one to be used for landed cost 								adjustments. For details, see  Reason Codes: General Information. Design landed cost codes  Landed cost codes are used to specify additional costs incurred 								for shipping purchased goods to your organization warehouses or to 								customer locations if the goods are drop-shipped. For more 								information, see  Processing Landed Cost Documents. 									 For each type of possible landed costs, assign a landed cost 									code and description, and collect the following data:  Types of landed cost, which may include freight or mixed 										charges, customs duties, or VAT taxes Application method (where you will use the landed cost code: 										in Purchase Orders, in Accounts Payable, or in both 										modules) Allocation method (by cost, quantity, weight, or 										volume) Vendor who will bill for additional cost and the vendor 										location Reason code for landed cost adjustments GL accounts to be updated by landed cost transaction:  Landed Cost Accrual  account (of the 												 Expense  type) and subaccount for items with 												the any valuation methods except standard Landed Cost Variance  account (of the 												 Expense  type) and subaccount for items with 												the standard cost valuation method Tax category or categories applicable to the landed 										costs For details, see   ([~/?ScreenId=PO202000|PO202000]) Landed Cost Codes (PO202000).  Design ship via codes Ship via codes  denote all possible methods your company uses 								to ship goods to customers and your vendors use to ship goods to 								your company.  Plan needed FOB points  Define FOB points in relations with the vendors. They can be 								printed on purchase orders but have no effect on order or receipt 								processing. If you decide to use FOB points, compile a list of them, 								providing the following information for each:  FOB point ID (for example, a short name of the port)  FOB point description Verify General Ledger accounts  Verify that all needed General Ledger accounts have been created 									in the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500). Prepare a list of missing General Ledger 									accounts. The Purchase Orders module requires the following accounts:  Freight account to be used for freight expenses PO Accrual account to be used for landed costs Accounts for reason codes Accounts for ship via codes Verify General Ledger subaccounts Verify that all needed General Ledger subaccounts have been 								created in   ([~/?ScreenId=GL203000|GL203000]) Subaccounts 								(GL203000). Prepare a list of missing General Ledger 								subaccounts. Plan on maintaining vendor catalogs To facilitate purchasing, you can upload to the system vendor 									price lists and update them periodically. As a rule, inventory 									IDs used in your organization are different from those used by 									vendors. To be able to maintain vendor catalogs, for each 									inventory item, specify its alternative IDs (including barcodes) 									used by vendors and establish rules for conversion of UOMs used 									by vendors to UOMs used in your system. Write down missing UOMs 									and conversion rules. For more information, see  Vendor Catalogs. For 									details, see   ([~/?ScreenId=PO201000|PO201000]) Vendor Inventory (PO201000). Plan approval procedures According to generally established policies, purchase orders may 								be subject to approval. Analyze how different types of orders should 								be approved in your organization and by whom. For more information, 								see  Purchase Order Approval. Write down 								the list of workgroups with their members, and the conditions for 								documents to comply to be assigned for approval to a specific group. 							 Design roles Design the roles you need for users who will enter and process 								purchase orders, receive the purchased goods, configure approvals, 								and maintain vendor catalogs with actual vendor prices. Action  Description Collect vendor locations as they relate to purchasing  Vendors are companies or private individuals that supply goods 								or services to your company. You can receive materials from 								different vendor locations. Define or verify all locations for each 								vendor. For each vendor location from the Accounts Payable module, 								you should collect (or verify) the following data: Shipper's address and other contact information. Vendor's tax zone associated with the vendor location; for details, see   ([~/?ScreenId=TX206000|TX206000]) Tax Zones 										(TX206000). Shipping terms used in relations with the vendor; for details, see   ([~/?ScreenId=CS208000|CS208000]) Shipping Terms 										(CS208000). FOB point where the shipment title passes from the vendor to your company; for details, 										see   ([~/?ScreenId=CS208500|CS208500]) FOB Points (CS208500). Lead time (days), which is the time from the placing of an 										order to the delivery of the goods or services. Receiving location of your company. Carrier of cargo to be used with this vendor location; for more information, see   ([~/?ScreenId=CS207500|CS207500]) Ship via Codes 										(CS207500). Line type; receiving goods are intended for inventory, 										intended for immediate sales and not to be stocked, or 										non-stock items and services. Default warehouse of your company to receive goods from the 										vendor location. Purchase Orders receipt processing policies to serve as 										defaults for every purchase order and this location:  Minimum and maximum percentage of goods received for 												which a receipt will be issued (calculate from the 												quantity on the purchase order). Threshold receipt, which is a minimum percentage of 												goods that should be received before a purchase 												order will be closed. Receipt action to be performed if the minimum and 												maximum or threshold receipt conditions are not 												satisfied (reject or accept the goods). Requirements of printing and emailing the purchase 												order for a vendor. General Ledger accounts:  Expense account/sub: Default value for non-stock 												items' expenses. Freight account/sub: Default value for freight 												expenses. For details, see   ([~/?ScreenId=AP303010|AP303010]) Vendor Locations (AP301000).  Verify purchase accounting posting rules  The Purchase Orders module is an add-on module to the Accounts Payable and Inventory 								modules. Purchase Orders documents (receipt, return, landed cost) 								create appropriate transactions in Inventory and Accounts Payable. 								Afterwards, Inventory and Accounts Payable create postings to 								General Ledger, depending on the inventory item, location, 								transaction type, and other conditions. Accounts and subaccounts for 								purchasing transactions can be obtained from the following entities:  Inventory Item: Account and subaccount are sourced from the 										item record. Warehouse: Account and subaccount are sourced from the 										warehouse record. Posting Class: Account and subaccount are taken from a 										special set of settings, called Posting Class, independent 										from the inventory item and warehouse. Employee: Expense subaccount segments for non-stock items 										are sourced from the employee record. Company Location: Expense subaccount segments for non-stock 										items are sourced from the company location record. Non-stock Item: Expense account and expense subaccount 										segments for non-stock items are sourced from the non-stock 										item record. Vendor Location: Expense account (if not defined in 										non-stock item) and expense subaccount segments for 										non-stock items are sourced from the vendor location 										record. The actual source of the account and subaccount is 									determined by the posting class assigned to the inventory item; 									for more details, see the   ([~/?ScreenId=IN206000|IN206000]) Posting Classes 									(IN206000) article. The actual source of the expense subaccount 									for non-stock items is determined by the  Combine Expense 										Sub.  setting on the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences 									(AP101000) form and by the  Update Sub. on Order Owner 										Change  check box on the   ([~/?ScreenId=PO101000|PO101000]) Purchase Orders Preferences 									(PO101000) form. Accounts and subaccounts for purchasing 									configured by posting classes are the following:  Purchase Orders accrual account and subaccount 										(liability) Purchase price variance account and subaccount 										(expense) Landed cost variance account and subaccount (expense) The Purchase Orders module requires three additional account 									settings:  Freight account and subaccount, used for freight 										expenses Expense account and subaccount, used for non-stock items 										expenses Landed cost accrual account and subaccount, used for 										incoming additional costs Analyze the accounting requirements for the Purchase Orders 									module and identify records to be created:  Verify General Ledger accounts.  Verify that all 										needed General Ledger accounts have been created in the 											  ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500). Prepare a list of missing General Ledger 										accounts. Verify General Ledger subaccounts.  Verify that all 										needed General Ledger subaccounts have been created in   ([~/?ScreenId=GL203000|GL203000]) Subaccounts 										(GL203000). Prepare a list of missing General Ledger 										subaccounts. Reason Codes.  Be sure there are at least two codes: 										one to be used for the purchase return documents and one to 										be used for landed cost adjustments. For details, refer to 										the   ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) article. Design landed cost codes  The main purpose of landed cost is to enable users to account for additional costs 								beyond the merchandise cost incurred in purchasing inventory items. 								For instance, companies may routinely incur freight or insurance 								charges on their purchases from overseas vendors.  Users can 									create and assign landed cost codes to incoming additional 									costs. These codes help to determine how to allocate each of the 									additional costs to items that have been received into 									inventory. Landed costs can be allocated by cost, quantity, 									weight, or volume and can be expensed or included in the 									inventory cost, based on the item’s valuation method. For each 									type of landed cost, assign a landed cost code and description, 									and collect the following data:  Types of landed cost, which may include freight or mix 										charges, customs duties, VAT taxes, mix destination charges, 										and others Application method (define where you will use landed cost 										code: from Purchase Orders, from Accounts Payable, or from 										both modules) Allocation method (by cost, quantity, weight, or 										volume) Vendor from whom invoice for additional cost will be 										received Vendor location from which invoice for additional cost will 										be received Reason code for landed cost adjustment Account to be updated by landed cost transaction:  Expense account and subaccount for landed cost 												accrual account; the landed cost for items with the 												any valuation methods (except standard) and for 												non-sold receipt quantity landed costs will be 												posted directly to a General Ledger landed cost 												accrual account) Expense account and subaccount for landed cost 												variance account; the landed cost for items with the 												standard cost valuation methods and for the receipt 												quantity that was sold prior to the processing of 												the landed costs will be posted directly to a 												general ledger landed cost variance account Tax category; for more information, see   ([~/?ScreenId=TX205500|TX205500]) Tax Categories 										(TX205500)  For details, see   ([~/?ScreenId=PO202000|PO202000]) Landed Cost Codes (PO202000).  Define equivalent in vendor and your company inventory items 									and UOMs  Normally, inventory item identifications used in your company are different than 								inventory items used by vendors. Units of measure (UOMs) can be 								different as well. For each item and unit of measure from the vendor 								price list, an equivalent in the Inventory Management module should 								be found. The equivalents for vendor items can be obtained from:  Inventory item cross-reference from Inventory module (used 										to identify inventory items in other information systems and 										business processes). For details, refer to the   ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items 										(IN202000) article. Vendor inventory catalog (after vendor price list has been 										uploaded to your system and equivalents from cross-reference 										items are found you can manually enter missing inventory 										items and UOMs corresponding to vendor inventory items). 									 For each item, define the following data:   Location : Vendor location of purchase item  Lead time  (days): The time from the placing of an 										order for item to the delivery of this inventory item Barcode : machine-readable arrangement of numbers 										printed on a package (can be obtained from inventory item 										cross-reference) The vendor price list file should be in the proper format. 									You can selectively upload the file with up-to-date information 									(new prices or new vendor item identifications). For more 									information, see   ([~/?ScreenId=PO201000|PO201000]) Vendor Inventory (PO201000). Define autonumbering sequences  Configuring the Purchase Orders module requires numbering sequences for regular 								purchase orders, blanket orders, and Purchase Orders receipts. These 								numberings are used to ensure a unique internal reference number for 								each purchasing document (described below):  Regular Purchase Order  is a numbering of a normal 										purchase order to be submitted to a vendor. Each order may 										have an external reference number as requested by the 										vendor; external numbers may be duplicated for different 										vendors. Autonumbering is used for internal reference and 										guarantees unique number for each purchase order 										document. Blanket Purchase Order  is a numbering of a blanket 										order. You can have multiple purchase orders against each 										blanket purchase order. Decide if blanket purchase orders 										will share order numbering with regular purchase orders or 										whether blanket purchase orders should have separate 										numbering. Purchase Receipt  is a numbering of Purchase Orders 										receipts. Each receipt also may have its number as requested 										by the vendor's invoice; it is used as external reference. 										External numbers may be duplicated for different vendors. 										Autonumbering, used for internal reference, guarantees 										unique number for each document. Decide if the Purchase 										Orders module is to share receipt numbering with the 										Inventory module or should have separate numbering for its 										receipts.  Acumatica ERP is installed with predefined ready-to-use numbering sequences 									for objects that require auto-numbering:  POORDER: Numbering sequence for orders of Purchase 											Orders module, ranging from 000000 to 999999 PORECEIPT: Numbering sequence for Purchase Orders 											receipts, ranging from 000000 to 999999  For details, see the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences 								(CS201010) article. Define Purchase Orders processing policies  When you define purchasing-related processing policies, decide the following:  Should Purchase Orders receipt transactions automatically 										create an invoice from the vendor when released? Should new Purchase Orders receipt documents be put on hold 										by default? Should the system validate the Purchase Orders document 										total during data entry? (Such validation is always 										performed when a document is released.) Should Inventory and Accounts Payable documents be 										automatically released on the Purchase Orders receipt 										release process? Should the subaccount be updated on order owner change in 										the purchase order for non-stock items? Should purchase order documents be approved? Should notifications be generated for the various types of 										documents and reports created in the Purchase Orders module? 										Define the recipients of these notifications. For details, see the   ([~/?ScreenId=PO101000|PO101000]) Purchase Orders Preferences (PO101000) article. You can download and print the  Purchase Orders Preparation Checklist to assist you in collecting the data for Inventory 				implementation.  Configuration No. Action Description 1 Define autonumbering sequences  Use the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form 								in the Configuration Settings module to define the numbering 								sequences for normal purchase orders, blanket purchase orders, and 								purchase receipts. 2 Create or verify General Ledger accounts  Use the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form 								to maintain necessary General Ledger accounts. See also the  To Add an Account to the Chart of Accounts. 3 Create or verify General Ledger subaccounts  Use the   ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) form 								to create necessary General Ledger subaccounts. See also  To Add a Subaccount.  4 Create Reason Codes  Use the   ([~/?ScreenId=CS211000|CS211000]) Reason Codes (CS211000) form 								to create necessary reason codes.  5 Verify Posting Classes  Use the   ([~/?ScreenId=IN206000|IN206000]) Posting Classes (IN206000) form 								to verify created posting classes in Purchase Orders terms.  6 Verify the posting rule of non-stock expense account and 									subaccount  Use the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000) form 								to verify the created posting rule of expense account subaccounts 								for non-stock items ( Combine Expense Sub  - sources of 								subaccount segments).  7 Complete Purchase Orders Setup  Use the   ([~/?ScreenId=PO101000|PO101000]) Purchase Orders Preferences (PO101000) form 								to maintain the Purchase Orders module global options and defaults.  8 Verify Vendor Locations  Use the   ([~/?ScreenId=AP303010|AP303010]) Vendor Locations (AP303010) form 								to maintain Vendor Locations options and defaults.  9 Create Landed Cost Code  Use the   ([~/?ScreenId=PO202000|PO202000]) Landed Cost Codes (PO202000) form 								to create necessary codes of additional costs.  10 Create Cross-References (Vendor Inventory equal to Inventory 									ID)  Use the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500) form 								to define equivalence in vendor inventory and your inventory ID 								settings.  You can download and print the  Purchase Orders Configuration Checklist to assist you in configuring the Purchase Orders module.  Initialization Once configuration, as described in the previous section, is complete, the Purchase 				Orders module is ready for use. This section provides information about initializing 				the Purchase Orders module.  Because Purchase Orders is an add-on module to the Accounts Payable and Inventory 				modules, the Accounts Payable and Inventory modules must be initialized before 				initialization of the Purchase Orders module.  The Purchase Orders module does not post transactions directly to the General Ledger, 				but the release receipt process generates documents in Accounts Payable and 				Inventory. For the facilitation of Purchase Orders migration, all the Purchase 				Orders receipts should have an appropriate reflection in Inventory and Accounts 				Payable accounts of carryover data before the initialization of the Accounts Payable 				and Inventory modules. To keep the implementation effort within reasonable limits, 				it is recommended that you migrate only outstanding Purchase Orders orders with 				their open balances as of the date of migration.  Perform these steps to initialize the Purchase Orders module using this approach:  Fully outstanding purchase order documents must be entered with the original 					document date, open balance, and exchange rate (if the document is in a foreign 					currency). Partially outstanding purchase order documents must be entered with the net 					balance as of the migration date (not with the original document amount). Outstanding documents must be entered for the current period. ]]></column>
		</row>
		<row PageID="333f5e6e-efa9-4965-961d-498dd05efe7a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="03edde19-54cb-74a0-4ed9-47c890874bd3" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes the process of implementing the Sales Orders module in Acumatica ERP. 
==Overview==
The Sales Orders module supports and automates sales and delivery processes in your organization. In Acumatica ERP, sales workflows are represented by order types, which describe what should be done during the order&rsquo;s lifetime, including integration with the Accounts Receivable and Inventory modules. By reviewing and modifying predefined order types and other settings for the module, you can configure it to fit most sales process, as described in this document. {br}

Advanced configuration of this module—with the creation of new order types or changes to the workflow of predefined types—can also be done to meet your company&rsquo;s specific needs. Such configuration should be done only with the assistance of an Acumatica ERP specialist. {br}

With Acumatica ERP, you can also manage complex pricing and discount policies. Once you have completed basic Sales Orders implementation, you can implement your pricing and discount policies. {br}

This article is meant only to guide you through implementation of the Sales Orders module. For a detailed description of Sales Orders forms and capabilities, see the [HelpRoot_OrderMgmt\SO_00_00_00|Order Management] guide.[anchor|#1]
==Prerequisites and Dependencies==
The implementation of the Finance suite and of the Inventory module must be completed, before you implement the Sales Orders module. 
==Preparation==
This section covers the needed preparation before you begin basic configuration of the Sales Orders module. {br}

Preparation for the basic configuration consists primarily of researching the predefined order types and, for those you plan to use, reviewing their settings on the [HelpRoot_FormReference\SO_20_10_00|Order Types] ([~/?ScreenId=SO201000|SO201000]) form. You will also review related settings on other forms. [anchor|#table_r5t_gwj_tl]
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Action
!width="79%" ! Description
|- 
| '''Decide which predefined order types your company will use'''
|  Review the topics of the [HelpRoot_OrderMgmt\SO__CNF_OrderTypes|Predefined Sales Order Types] chapter to learn more about predefined order types in Acumatica ERP, and find the ones that best fit your business processes. Decide which order types you will and will not use; unused order types can be marked as inactive. 
|- 
| '''Review settings for the order types you will use'''
|  For each order type that you will use, review the settings found in the '''Order Settings''' section on the '''General Settings''' tab of the [HelpRoot_FormReference\SO_20_10_00|Order Types] ([~/?ScreenId=SO201000|SO201000]) form. Decide whether numbering sequences should be unique to each order type or shared by multiple types. ((({S:Hint}If you are going to use separate numbering sequences for different order types, consider using prefixes.
)))
Decide on workflow options to be used for each order type: whether to hold orders of the type on entry, whether to require control total, to ship and to bill orders of the type separately, whether to calculate freight automatically, whether to recalculate discount for partial shipments, copy notes and attachments to shipments and to invoices.
|- 
| '''Review each order type&rsquo;s Accounts Receivable settings'''
|  For each order type you are going to use, decide whether invoices generated for orders of different types will use different numbering sequences. You can instead use for all order types the numbering sequence assigned to invoices in Accounts Receivable. In this case, all of your company’s invoices, regardless of origin, will use a single numbering sequence.
|- 
| '''Analyze posting requirements for each order type '''
|  Analyze the accounting requirements for the sales transactions generated by each order type. Decide which accounts and subaccount should be updated by such transactions and specify the sources of the accounts and subaccount segments. The available options can include the following: customer location, inventory item, non-stock item, warehouse, posting class, reason code, carrier, and order type, salesperson, or employee. ((({S:Hint}When deciding on different sources for accounts and subaccounts, you should also review the General Ledger accounts and subaccounts of the records that can be involved, such as customer locations, inventory items, and warehouses.
)))
|- 
| '''Plan shipment settings'''
| Decide on options that control workflow for shipments: whether to allocate freight on shipping, whether to hold shipments on entry, and whether to validate control totals. 
|- 
| '''Plan default values for the module'''
|  Review the options on the [HelpRoot_FormReference\SO_10_10_00|Sales Orders Preferences] ([~/?ScreenId=SO101000|SO101000]) form. Decide which of the order types used most frequently can be selected as the default sales order type and the default transfer order type. Review the credit check policies to decide whether to hold invoices on failed credit check.
|- 
| '''Review relevant delivery settings for customers'''
|  Review the delivery settings on the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form for each customer. If the customer has multiple locations, review the following settings of each location: [anchor|#ul_jyt_gwj_tl]
*The carrier to handle shipments to this customer location. 
*The shipping terms governing delivery of goods. International commercial terms (Incoterms) standards are often used. Shipping terms can be printed on sales orders and shipping documents. 
*The FOB point where the title of shipped goods is transferred to the customer. Although the FOB point can be printed on sales orders and shipping documents, it does not affect order processing. 
*'''Shipping Rule''': How the shipment should be generated if the quantity is insufficient: 
**''Ship Complete'': The ordered quantity should be shipped only in full. 
**''Back Order Allowed'': The ordered quantity can be shipped in multiple partial shipments. 
**''Cancel Remainder'': The ordered quantity can be shipped partially, and the quantity remaining after the first shipment will be canceled. 
*'''Order Priority''': The relative &ldquo;weight&ldquo; of the customer&rsquo;s orders in allocating the inventory in mass order processing. Orders with higher priority are processed first and are more likely to be shipped in full. 
*'''Warehouse''': The preferred warehouse for sales to the customer. Although you can review other delivery settings of the customer as well, they have no impact on sales order processing, except that they can be printed on shipping documents. 

|- 
| '''Review customer classes'''
|  Analyse the delivery settings of customers considering how customers are grouped in customer classes. Review the following settings in the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form for each class: [anchor|#ul_xyt_gwj_tl]
*'''Ship Via'''
* '''Shipping Terms'''
* '''Ship Complete'''

These settings will be copied to new customers and can be changed for individual customers as needed.
|- 
| '''Determine whether you need to define carriers'''
|  Plan any needed carriers—companies that handle your shipments to customers. For basic configuration of this module, maintenance of carrier records is required only if any order types are configured to use ''Carrier'' as the source for the freight account or subaccount, and the freight amount is entered directly in the sales order. The name of the carrier can also be printed on sales order confirmation and shipping documents. If you decide to use carriers in basic configuration, compile the list of them with the following details for each carrier: [anchor|#ul_bzt_gwj_tl]
*Carrier ID to be used. 
*Carrier name or description. 
*Freight sales account (a revenue account) and subaccount to post freight collected from customers; these settings can be referred to by order types as the source for the freight account and subaccount. 
*Freight expense account and subaccount to post the carrier&rsquo;s freight charges; these settings are not used in order processing.

If you decide to use integration with nationwide carriers (FedEx, or UPS), follow the steps in the [HelpRoot_ImplementChecklists\Carrier_Configuration_Checklist|Carrier Integration Checklist] topic.
|- 
| '''Define any needed shipping terms'''
|  Plan any shipping terms to be defined. If you decide to use shipping terms in the basic configuration of the Sales Orders module, list the terms you wish to use, providing for each set of terms: [anchor|#ul_hzt_gwj_tl]
*Shipping terms ID (for example, the Incoterms code) 
*Shipping terms description 

|- 
| '''Plan needed FOB points'''
|  Decide whether your site will define FOB points in Acumatica ERP. They can be printed on sales order confirmation and shipping documents but have no effect on order processing. If you decide to use FOB points, compile a list of them, providing the following information for each: [anchor|#ul_kzt_gwj_tl]
*FOB point ID (for example, a short name of the port) 
*FOB point description

|}
You can download and print the [HelpRoot_ImplementChecklists\SO_Preparation_Checklist|Sales Orders Preparation Checklist] to assist you in collecting the data for basic Sales Orders configuration. 
==Configuration==
This section describes the process of configuring the basic functionality of the Sales Orders module, based on the information you&rsquo;ve compiled during preparation. Due to dependencies among the forms, the sequence of actions during configuration is critical, so please note instructions pertinent to the order in which the steps should be performed. 
{| class="checklist" | width="100%" 
|- 
!width="5%" ! '''No.'''
!width="23%" ! Action
!width="70%" ! Description
|- 
| '''1'''
|  '''Create General Ledger accounts'''
|  Use the [HelpRoot_FormReference\GL_20_25_00|Chart of Accounts] ([~/?ScreenId=GL202500|GL202500]) form of the General Ledger module to create necessary accounts. 
|- 
| '''2'''
|  '''Create subaccount segment values'''
|  Use the [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000]) form of the Common Settings module to add needed values for subaccount segments. 
|- 
| '''3'''
|  '''Create General Ledger subaccounts'''
|  Use the [HelpRoot_FormReference\GL_20_30_00|Subaccounts] ([~/?ScreenId=GL203000|GL203000]) form of the General Ledger module to create necessary subaccounts; this step should be done after Step 2 has been completed. 
|- 
| '''4'''
|  '''Define auto-numbering sequences'''
|  Use the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form of the Common Settings module to define the numbering sequences for order types, shipments, and Accounts Receivable documents of order types. 
|- 
| colspan="3" | Steps 5–14 should be done after the steps above have been completed.
|- 
| '''5'''
|  '''Review branch master records'''
|  If you have decided to use ''Company Branch'' as the source for subaccounts, review branch settings on the [HelpRoot_FormReference\CS_10_20_00|Branches] ([~/?ScreenId=CS102000|CS102000]) form of the Organization Structure module. 
|- 
| '''6'''
|  '''Review salesperson master records'''
|  If you have decided to use ''Salesperson'' as the source for subaccounts, review salespersons&rsquo; records using the [HelpRoot_FormReference\AR_20_50_00|Salespersons] ([~/?ScreenId=AR205000|AR205000]) form of the Accounts Receivable module. 
|- 
| '''7'''
|  '''Review stock item master records'''
|  If you have decided to use ''Inventory Item'' as the source for accounts or subaccounts, review the account settings of stock items on the [HelpRoot_FormReference\IN_20_25_00|Stock Items] ([~/?ScreenId=IN202500|IN202500]) form of the Inventory module. 
|- 
| '''8'''
|  '''Review non-stock item master records'''
|  If you have decided to use ''Non-Stock Item'' as the source for accounts or subaccounts, review the account settings of non-stock items on the [HelpRoot_FormReference\IN_20_20_00|Non-Stock Items] ([~/?ScreenId=IN202000|IN202000]) form of the Inventory module. 
|- 
| '''9'''
|  '''Review posting class master records'''
|  If you have decided to use ''Posting Class'' as the source for accounts or subaccounts, review posting classes on the [HelpRoot_FormReference\IN_20_60_00|Posting Classes] ([~/?ScreenId=IN206000|IN206000]) form of the Inventory module. 
|- 
| '''10'''
|  '''Review warehouse master records'''
|  If you have decided to use ''Warehouse'' as the source for accounts or subaccounts, review warehouse settings on the [HelpRoot_FormReference\IN_20_40_00|Warehouses] ([~/?ScreenId=IN204000|IN204000]) form of the Inventory module.
|- 
| '''11'''
|  '''Review employee master records'''
|  If you have decided to use ''Employee'' as the source for subaccounts, review employee settings on the [HelpRoot_FormReference\EP_20_30_00|Employees] ([~/?ScreenId=EP203000|EP203000]) form of the General Ledger module. 
|- 
| '''12'''
|  '''Create carrier master records'''
|  If you have decided to use ''Carrier'' as the source for accounts or subaccounts, review (and, if necessary, create) carrier master records on the [HelpRoot_FormReference\CS_20_75_00|Ship via Codes] ([~/?ScreenId=CS207500|CS207500]) form of the Sale Orders module. 
If you decide to use integration with nationwide carriers (FedEx, or UPS), follow the steps in the [HelpRoot_ImplementChecklists\Carrier_Configuration_Checklist|Carrier Integration Checklist] topic to configure the integration.
|- 
| '''13'''
|  '''Create shipping terms'''
|  Create the identified necessary shipping terms using the [HelpRoot_FormReference\CS_20_80_00|Shipping Terms] ([~/?ScreenId=CS208000|CS208000]) form of the Sales Orders module. 
|- 
| '''14'''
|  '''Create FOB points'''
|  Create the identified necessary FOB points on the [HelpRoot_FormReference\CS_20_85_00|FOB Points] ([~/?ScreenId=CS208500|CS208500]) form of the Sales Orders module. 
|- 
| colspan="3" | Steps 15 and 16 should be done after Steps 12–14 have been completed.
|- 
| '''15'''
|  '''Review customer master records'''
|  Use the [HelpRoot_FormReference\AR_30_30_00|Customers] ([~/?ScreenId=AR303000|AR303000]) form of the Accounts Receivable module to review (and change, if necessary) the delivery settings of each location of each customer: '''Ship Via''', '''Shipping Terms''', '''FOB Point''', '''Ship Complete''', '''Order Priority''', and '''Warehouse'''. Also, if you decided to use ''Customer Location'' as a source for accounts or subaccounts, review the General Ledger account settings for each customer location. 
|- 
| '''16'''
|  '''Review customer classes'''
|  Use the [HelpRoot_FormReference\AR_20_10_00|Customer Classes] ([~/?ScreenId=AR201000|AR201000]) form of the Accounts Receivable module to review (and change, if necessary) the delivery settings of each customer class: '''Ship Via''', '''Shipping Terms''', and '''Ship Complete'''. 
|- 
| colspan="3" | Steps 17 and 18 should be the last steps you complete.
|- 
| '''17'''
|  '''Make needed changes to order types'''
|  Use the [HelpRoot_FormReference\SO_20_10_00|Order Types] ([~/?ScreenId=SO201000|SO201000]) form to configure the predefined order types to suit your sales processes. Select the desired order type to review it and make any needed changes to settings: 
*'''Active''': Clear this check box if you do not plan to use the displayed order type 
*'''Description''': Modify the description if desired 
*Review '''Order Settings''': 
**'''Order Numbering Sequence'''
** '''Days to Keep'''
** '''Hold Orders on Entry''' (yes/no) 
**'''Hold Document on Failed Credit Check''' (yes/no) 
**'''Require Control Total''' (yes/no) 
**'''Bill Separately''' (yes/no) 
**'''Ship Separately''' (yes/no) 
**'''Calculate Freight''' (yes/no) 
**'''Recalculate Discount On Partial Shipment''' (yes/no) 
**'''Copy Notes''' (yes/no) 
**'''Copy Attachments''' (yes/no) 
**'''Copy Line Notes To Shipment''' (yes/no) 
**'''Copy Line Attachments To Shipment''' (yes/no) 
**'''Copy Line Notes To Invoice''' (yes/no) 
***'''Only Non-Stock''' (yes/no) 
**'''Copy Line Attachments To Invoice''' (yes/no) 
***'''Only Non-Stock''' (yes/no) 
*Review '''Posting Settings''': 
**'''Use Sales Account from'''
** '''Combine Sales Sub. from'''
** '''Freight Account'''
** '''Use Freight Account from'''
** '''Freight Sub.'''
** '''Combine Freight Sub. from'''
** '''Discount Account'''
** '''Use Discount Account from'''
** '''Discount Sub.'''
** '''Combine Discount Sub. from'''
** '''Post Line Discounts Separately''' (yes/no) 
**'''Use Discount Sub. from Sales Sub.''' (yes/no) 
*Review '''Accounts Receivable Settings''': 
**'''Invoice Numbering Sequence'''
** '''Mark as Printed''' (yes/no) 
**'''Mark as Emailed''' (yes/no) 
**'''Hold Invoices on Entry''' (yes/no)
*Review '''Template Settings''' tab:
**'''Allow Quick Process''' (yes/no)
*Save the order type.

|- 
| '''18'''
|  '''Configure Sales Orders Preferences'''
|  Use the [HelpRoot_FormReference\SO_10_10_00|Sales Orders Preferences] ([~/?ScreenId=SO101000|SO101000]) form to configure the global settings, based on decisions you made during preparation: [anchor|#_01862916-fe5a-47e1-a749-dc5d2af167aa]
*'''Default Sales Order Type'''
* '''Default Transfer Order Type'''
* '''Shipment Numbering Sequence'''
* '''Advanced Availability Validation'''
* '''Validate Min. Markup'''
* '''Use a Price Adjustment Multiplier'''
* '''Freight Allocation on Partial Shipping'''
* '''Free Item Shipping'''
* '''Hold Shipments on Entry'''
* '''Validate Shipment Total on Confirmation'''
* '''Add Zero Lines for Items Not in Stock'''
* '''Create Zero Shipments'''
* '''Hold Invoices on Failed Credit Check'''
* '''Use Shipment Date for Invoice Date'''
* '''Automatically Release IN Documents'''
* '''Use Shipped-Not-Invoiced Account'''
* '''Shipped-Not-Invoiced Account'''
* '''Shipped-Not-Invoiced Sub.'''
* '''Cost Calculation Basis for Non-Stock Kits'''

All global settings needed for basic Sales Orders configuration are shown on the '''General Settings''' tab of the form. 
|}
You can download and print the [HelpRoot_ImplementChecklists\SO_Configuration_Checklist|Sales Orders Configuration Checklist] to assist you in this configuration.]]></column>
			<column name="PlainText"><![CDATA[Implementing Sales Orders This document describes the process of implementing the Sales Orders module in  Acumatica ERP.  Overview The Sales Orders module supports and automates sales and delivery processes in your 				organization. In  Acumatica ERP, sales workflows are represented by order types, which describe what should be 				done during the order's lifetime, including integration with the Accounts Receivable 				and Inventory modules. By reviewing and modifying predefined order types and other 				settings for the module, you can configure it to fit most sales process, as 				described in this document.  Advanced configuration of this module—with the creation of new order types or 				changes to the workflow of predefined types—can also be done to meet your 				company's specific needs. Such configuration should be done only with the assistance 				of an  Acumatica ERP specialist.  With  Acumatica ERP, you can also manage complex pricing and discount policies. Once you have 				completed basic Sales Orders implementation, you can implement your pricing and 				discount policies.  This article is meant only to guide you through implementation of the Sales Orders module. For 				a detailed description of Sales Orders forms and capabilities, see the   ([~/?ScreenId=SO000000|SO000000]) Order Management guide. Prerequisites and Dependencies The implementation of the Finance suite and of the Inventory module must be 				completed, before you implement the Sales Orders module.  Preparation This section covers the needed preparation before you begin basic configuration of 				the Sales Orders module.  Preparation for the basic configuration consists primarily of researching the predefined order 				types and, for those you plan to use, reviewing their settings on the   ([~/?ScreenId=SO201000|SO201000]) Order Types (SO201000) form. You will 				also review related settings on other forms.  Action Description Decide which predefined order types your company will 								use  Review the topics of the  Predefined Sales Order Types chapter 								to learn more about predefined order types in  Acumatica ERP, and find the ones that best fit your business processes. Decide 								which order types you will and will not use; unused order types can 								be marked as inactive.  Review settings for the order types you will use  For each order type that you will use, review the settings found in the  Order 									Settings  section on the  General Settings  tab of the 									  ([~/?ScreenId=SO201000|SO201000]) Order Types (SO201000) form. 								Decide whether numbering sequences should be unique to each order 								type or shared by multiple types.  If you are going 									to use separate numbering sequences for different order types, 									consider using prefixes. Decide on workflow options to 									be used for each order type: whether to hold orders of the type 									on entry, whether to require control total, to ship and to bill 									orders of the type separately, whether to calculate freight 									automatically, whether to recalculate discount for partial 									shipments, copy notes and attachments to shipments and to 									invoices. Review each order type's Accounts Receivable 								settings  For each order type you are going to use, decide whether 								invoices generated for orders of different types will use different 								numbering sequences. You can instead use for all order types the 								numbering sequence assigned to invoices in Accounts Receivable. In 								this case, all of your company’s invoices, regardless of origin, 								will use a single numbering sequence. Analyze posting requirements for each order type   Analyze the accounting requirements for the sales transactions 								generated by each order type. Decide which accounts and subaccount 								should be updated by such transactions and specify the sources of 								the accounts and subaccount segments. The available options can 								include the following: customer location, inventory item, non-stock 								item, warehouse, posting class, reason code, carrier, and order 								type, salesperson, or employee.  When deciding on 									different sources for accounts and subaccounts, you should also 									review the General Ledger accounts and subaccounts of the 									records that can be involved, such as customer locations, 									inventory items, and warehouses. Plan shipment settings Decide on options that control workflow for shipments: whether to 								allocate freight on shipping, whether to hold shipments on entry, 								and whether to validate control totals.  Plan default values for the module  Review the options on the   ([~/?ScreenId=SO101000|SO101000]) Sales Orders Preferences (SO101000) 								form. Decide which of the order types used most frequently can be 								selected as the default sales order type and the default transfer 								order type. Review the credit check policies to decide whether to 								hold invoices on failed credit check. Review relevant delivery settings for customers  Review the delivery settings on the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form for each customer. If the 								customer has multiple locations, review the following settings of 								each location:  The carrier to handle shipments to this customer location.  The shipping terms governing delivery of goods. 										International commercial terms (Incoterms) standards are 										often used. Shipping terms can be printed on sales orders 										and shipping documents.  The FOB point where the title of shipped goods is 										transferred to the customer. Although the FOB point can be 										printed on sales orders and shipping documents, it does not 										affect order processing.  Shipping Rule : How the shipment should be generated 										if the quantity is insufficient:  Ship Complete : The ordered quantity should be 												shipped only in full.  Back Order Allowed : The ordered quantity can 												be shipped in multiple partial shipments.  Cancel Remainder : The ordered quantity can be 												shipped partially, and the quantity remaining after 												the first shipment will be canceled.  Order Priority : The relative "weight" of the 										customer's orders in allocating the inventory in mass order 										processing. Orders with higher priority are processed first 										and are more likely to be shipped in full.  Warehouse : The preferred warehouse for sales to the 										customer. Although you can review other delivery settings of 										the customer as well, they have no impact on sales order 										processing, except that they can be printed on shipping 										documents.  Review customer classes  Analyse the delivery settings of customers considering how customers are grouped in 								customer classes. Review the following settings in the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form for each 								class:  Ship Via Shipping Terms Ship Complete These settings will be copied to new customers and can be 									changed for individual customers as needed. Determine whether you need to define carriers  Plan any needed carriers—companies that handle your shipments to customers. For basic 								configuration of this module, maintenance of carrier records is 								required only if any order types are configured to use 									 Carrier  as the source for the freight account or 								subaccount, and the freight amount is entered directly in the sales 								order. The name of the carrier can also be printed on sales order 								confirmation and shipping documents. If you decide to use carriers 								in basic configuration, compile the list of them with the following 								details for each carrier:  Carrier ID to be used.  Carrier name or description.  Freight sales account (a revenue account) and subaccount to 										post freight collected from customers; these settings can be 										referred to by order types as the source for the freight 										account and subaccount.  Freight expense account and subaccount to post the carrier's 										freight charges; these settings are not used in order 										processing. If 									you decide to use integration with nationwide carriers (FedEx, 									or UPS), follow the steps in the  Carrier Integration Checklist 								topic. Define any needed shipping terms  Plan any shipping terms to be defined. If you decide to use 								shipping terms in the basic configuration of the Sales Orders 								module, list the terms you wish to use, providing for each set of 								terms:  Shipping terms ID (for example, the Incoterms code)  Shipping terms description  Plan needed FOB points  Decide whether your site will define FOB points in  Acumatica ERP. They can be printed on sales order confirmation and shipping 								documents but have no effect on order processing. If you decide to 								use FOB points, compile a list of them, providing the following 								information for each:  FOB point ID (for example, a short name of the port)  FOB point description You can download and print the  Sales Orders Preparation Checklist to assist you in collecting the data for basic Sales Orders 				configuration.  Configuration This section describes the process of configuring the basic functionality of the 				Sales Orders module, based on the information you've compiled during preparation. 				Due to dependencies among the forms, the sequence of actions during configuration is 				critical, so please note instructions pertinent to the order in which the steps 				should be performed.  No. Action Description 1 Create General Ledger accounts  Use the   ([~/?ScreenId=GL202500|GL202500]) Chart of Accounts (GL202500) form of the General 								Ledger module to create necessary accounts.  2 Create subaccount segment values  Use the   ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) form of the Common 								Settings module to add needed values for subaccount segments.  3 Create General Ledger subaccounts  Use the   ([~/?ScreenId=GL203000|GL203000]) Subaccounts (GL203000) form of the General 								Ledger module to create necessary subaccounts; this step should be 								done after Step 2 has been completed.  4 Define auto-numbering sequences  Use the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form of the Common 								Settings module to define the numbering sequences for order types, 								shipments, and Accounts Receivable documents of order types.  Steps 5–14 should be done after the steps 								above have been completed. 5 Review branch master records  If you have decided to use  Company Branch  as the source for subaccounts, 								review branch settings on the   ([~/?ScreenId=CS102000|CS102000]) Branches (CS102000) form of the 								Organization Structure module.  6 Review salesperson master records  If you have decided to use  Salesperson  as the source for subaccounts, review 								salespersons' records using the   ([~/?ScreenId=AR205000|AR205000]) Salespersons (AR205000) form of the 								Accounts Receivable module.  7 Review stock item master records  If you have decided to use  Inventory Item  as the source for accounts or 								subaccounts, review the account settings of stock items on the   ([~/?ScreenId=IN202500|IN202500]) Stock Items (IN202500) form of the 								Inventory module.  8 Review non-stock item master records  If you have decided to use  Non-Stock Item  as the source for accounts or 								subaccounts, review the account settings of non-stock items on the 									  ([~/?ScreenId=IN202000|IN202000]) Non-Stock Items (IN202000) form of 								the Inventory module.  9 Review posting class master records  If you have decided to use  Posting Class  as the source for accounts or 								subaccounts, review posting classes on the   ([~/?ScreenId=IN206000|IN206000]) Posting Classes (IN206000) form of the 								Inventory module.  10 Review warehouse master records  If you have decided to use  Warehouse  as the source for accounts or 								subaccounts, review warehouse settings on the   ([~/?ScreenId=IN204000|IN204000]) Warehouses (IN204000) form of the 								Inventory module. 11 Review employee master records  If you have decided to use  Employee  as the source for subaccounts, review 								employee settings on the   ([~/?ScreenId=EP203000|EP203000]) Employees (EP203000) form of the General Ledger module.  12 Create carrier master records  If you have decided to use  Carrier  as the source for accounts or subaccounts, 								review (and, if necessary, create) carrier master records on the 									  ([~/?ScreenId=CS207500|CS207500]) Ship via Codes (CS207500) form 								of the Sale Orders module. 									 If 									you decide to use integration with nationwide carriers (FedEx, 									or UPS), follow the steps in the  Carrier Integration Checklist topic to 									configure the integration. 13 Create shipping terms  Create the identified necessary shipping terms using the   ([~/?ScreenId=CS208000|CS208000]) Shipping Terms (CS208000) form of the 								Sales Orders module.  14 Create FOB points  Create the identified necessary FOB points on the   ([~/?ScreenId=CS208500|CS208500]) FOB Points (CS208500) form of the 								Sales Orders module.  Steps 15 and 16 should be done after Steps 								12–14 have been completed. 15 Review customer master records  Use the   ([~/?ScreenId=AR303000|AR303000]) Customers (AR303000) form of the Accounts 								Receivable module to review (and change, if necessary) the delivery 								settings of each location of each customer:  Ship Via , 									 Shipping Terms ,  FOB Point ,  Ship Complete , 									 Order Priority , and  Warehouse . Also, if you 								decided to use  Customer Location  as a source for accounts or 								subaccounts, review the General Ledger account settings for each 								customer location.  16 Review customer classes  Use the   ([~/?ScreenId=AR201000|AR201000]) Customer Classes (AR201000) form of the Accounts 								Receivable module to review (and change, if necessary) the delivery 								settings of each customer class:  Ship Via ,  Shipping 									Terms , and  Ship Complete .  Steps 17 and 18 should be the last steps 								you complete. 17 Make needed changes to order types  Use the   ([~/?ScreenId=SO201000|SO201000]) Order Types (SO201000) form to configure the 								predefined order types to suit your sales processes. Select the 								desired order type to review it and make any needed changes to 								settings:  Active : Clear this check box if you do not plan to 										use the displayed order type  Description : Modify the description if desired  Review  Order Settings :  Order Numbering Sequence Days to Keep Hold Orders on Entry  (yes/no)  Hold 												Document on Failed Credit 												Check  (yes/no)  Require Control Total  (yes/no)  Bill Separately  (yes/no)  Ship Separately  (yes/no)  Calculate Freight  (yes/no)  Recalculate Discount On Partial Shipment  												(yes/no)  Copy Notes  (yes/no)  Copy Attachments  (yes/no)  Copy Line Notes To Shipment  (yes/no)  Copy Line Attachments To Shipment  (yes/no)  Copy Line Notes To Invoice  (yes/no)  Only Non-Stock  (yes/no)  Copy Line Attachments To Invoice  (yes/no)  Only Non-Stock  (yes/no)  Review  Posting Settings :  Use Sales Account from Combine Sales Sub. from Freight Account Use Freight Account from Freight Sub. Combine Freight Sub. from Discount Account Use Discount Account from Discount Sub. Combine Discount Sub. from Post Line Discounts Separately  (yes/no)  Use Discount Sub. from Sales Sub.  (yes/no) 											 Review  Accounts Receivable Settings :  Invoice Numbering Sequence Mark as Printed  (yes/no)  Mark as Emailed  (yes/no)  Hold Invoices on Entry  (yes/no) Review  Template Settings  tab: Allow Quick Process  												(yes/no) Save the order type. 18 Configure Sales Orders Preferences  Use the   ([~/?ScreenId=SO101000|SO101000]) Sales Orders Preferences (SO101000) form to configure the 								global settings, based on decisions you made during preparation:  Default Sales Order Type Default Transfer Order Type Shipment Numbering Sequence Advanced Availability Validation Validate Min. Markup Use a Price Adjustment Multiplier Freight Allocation on Partial Shipping Free Item Shipping Hold Shipments on Entry Validate Shipment Total on Confirmation Add Zero Lines for Items Not in Stock Create Zero Shipments Hold Invoices on Failed Credit Check Use Shipment Date for Invoice Date Automatically Release IN Documents Use Shipped-Not-Invoiced Account Shipped-Not-Invoiced Account Shipped-Not-Invoiced Sub. Cost Calculation Basis for Non-Stock Kits All global settings needed for basic Sales Orders 									configuration are shown on the  General Settings  tab of 									the form.  You can download and print the  Sales Orders Configuration Checklist to assist you in this configuration. ]]></column>
		</row>
		<row PageID="df6b826c-6a84-4137-9b32-5c1fbeeae64a" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="647c7e8b-e0c6-3c1b-c19e-50bb02e7fdce" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This document describes the process of implementing the Projects module in Acumatica ERP. 
==Overview==
The Projects module supports and automates the process of managing the company projects in four main areas: 
*Collection of project-related transactions (primarily expenses) as they are processed in various Acumatica ERP modules
*Allocation of costs, calculation of burdens, overheads, and billable amounts
*Project billing
*Reporting

To meet these requirements, the Projects module is tightly integrated with many Acumatica ERP modules, including General Ledger, Accounts Payable, Account Receivable, Inventory, Purchase Orders, and Sales Orders. These modules do not require any change in their configuration when Projects is implemented. However, you may wish to review the certain areas as described in '''[HelpRoot_Implement\Implementing_Project_Management#4|Integration]'''. This document includes the following sections:
*[[#1|'''Prerequisites and Dependencies''']: Describes what modules must be set up and configured before you begin implementing this module.
*[[#2|'''Preparation''']: Describes data you should collect, arrange, and analyze.
*[[#3|'''Configuration''']: Guides you through the actual configuration of the Projects module.
*[[#4|'''Initializing Projects with Budget-based Allocation''']: Describes how to bring opening balances and historic data into the system to use projects with budget-based allocation.
*[[#5|'''Initializing Projects with Transaction-based Allocation''']: Describes how to bring opening balances and historic data into the system to use projects with transaction-based allocation.
*[[#6|'''Integration''']: Covers settings of the integrated modules that can be reviewed during the Projects implementation.
*[[#7|'''Other Considerations''']: Covers other aspects pertaining to the implementation of this module.

This document is meant only to guide you through Projects module implementation. For more information about the Projects forms, functions and reports, see [HelpRoot_Projects\PM_00_00_00|Projects]. [anchor|#1]
==Prerequisites and Dependencies==
The implementation of the Finance suite must be completed, before you can implement the Projects module. [anchor|#2]
==Preparation==
This section covers the preparatory steps before you begin configuring the Projects module. {br}

Implementation of Acumatica ERP module should start with collecting and analyzing the necessary information. Do the following steps before you actually configure the Projects module; these steps do not need to be done in the listed order and many can be done in parallel. ((({S:Warn}Because this is the preparation phase of implementation, enter no data into the system at this time.
)))
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Item 
!width="80%" ! Description
|- 
| '''Develop Projects numbering convention'''
|  Each project in Acumatica ERP is assigned with a unique '''Project ID'''. It can be comprised of segments with optional validation of each segment. Plan the structure of the project ID (segmented key ''PROJECT''): number of segments, length of segments, whether and how they should be validated, and whether auto-numbering should be used. Prepare list of valid entries for segments that should be validated. Design numbering sequence for auto-numbered segment, if needed. Plan also the structures for the '''Task ID''' segmented key ''PROTASK'') and '''Account Group ID''' (segmented key ''ACCGROUP''). ((({S:Hint} The task ID should be unique only within a project. Two different projects can have tasks with the same identifier, and they will be different tasks. For this reason, auto-numbering would not usually be used for task IDs.
))) For additional information, see [HelpRoot_Administration\CS__con_Identifier_Segmentation|Segmented Identifiers].
|- 
| '''Define autonumbering sequences'''
|  Projects requires numbering sequences for batches and Projects transactions. Acumatica ERP is installed with the following predefined, ready-to-use numbering sequences: 
*BATCH: Shared numbering sequence for batches of all modules, ranging from 0000000001 to 9999999999
*PMTRAN: Numbering sequence for Projects transactions, ranging from PM00000001 to PM99999999
If the project identifier is designed with an auto-numbering segment, define a numbering sequence for this segment too. For details, see [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences].
|- 
| '''Define non-project code'''
|  Once the Projects module is activated, transactions in all modules of Acumatica ERP will require Project IDs. This does not mean that each transaction must be linked to a project; the user can enter the non-project code (which you define) in the transaction that is not related to any project. For convenience, the non-project code should be distinctly different from project IDs and should be short, such as the single character ''X''.
|- 
| '''Define global processing options'''
|  The Projects module has two global options that control how all Projects transactions are processed: 
*'''Automatically Post on Release''' indicates if a Projects transaction should be automatically posted to General Ledger immediately after it is released.
*'''Automatically Release Allocations''' indicates if a Projects allocation transaction should be automatically released immediately after it is generated. Because an unreleased allocation transaction can be deleted or edited, which can cause inconsistency, it is recommended that you use auto-release of allocations.

|- 
| '''Define Projects integration'''
| Projects can receive transactions from the General Ledger, Accounts Payable, Accounts Receivable, Order Management, Purchase Orders, Organization Structure, Inventory, Cash Management, and Customer Management modules. These options are known as Visibility Settings in Projects setup. They indicate whether project-related transactions can be entered in the particular module at all. Projects and tasks also have their own visibility settings, which control the availability of this particular project or task in Acumatica ERP modules. ((({S:Hint} Visibility settings do not restrict the Projects module from posting its transactions to the General Ledger or from creating Accounts Receivable invoices.
)))
|- 
| '''Define EP Integration'''
|  If desired, define settings related to posting employee timesheets and equipment timesheets. With integration of the Time and Expenses and Projects modules, these transactions are initially released from Time and Expenses to Projects, and then Projects posts them to General Ledger. The credit account and subaccount are determined by the settings of the employee or equipment master record. The debit account and subaccount are configured by the Projects module: 
*'''Expense Account Source''' can be one of the following :
**Expense account of the ''Labor Class'' of the employee, or the ''Rate Class'' of the equipment 
**Expense account of the ''Employee'' or default account of the ''Equipment''
**Default account of the ''Project''
**Default account of the ''Task''
* '''Expense Subaccount''' can be combined segment by segment from:
**The expense subaccount of the employee&rsquo;s labor class, or of the equipment rate class (placeholder ''II'') 
**The expense subaccount of employee or default subaccount of equipment (placeholder ''EE'') 
**The default subaccount of the project (placeholder ''PP'') 
**The default subaccount of the task (placeholder ''TT'')

For information about the configuration of employee and equipment master records, see [HelpRoot_FormReference\EP_20_30_00|Employees] and [HelpRoot_FormReference\EP_20_80_00|Equipment] respectively.
|- 
| '''Define Account Groups'''
|  The role of account groups in Projects is similar to the role of accounts in General Ledger: All transaction processing and all reporting in Projects are done by account groups. When defining account groups, first of all, identify the accounts that will be used in project-related transactions. Accounts Receivable accounts (accounts debited by project billing) and Accounts Payable accounts (accounts credited by supplier bills) should be excluded. Consider that: 
*An account group should include accounts of one type (such as only expense or only income).
*Allocation and billing rules select transactions by account group. If transactions of two accounts should follow different rules, these two accounts should be included in different account groups.
*The account group is most frequently used as a key to billing (burden, overhead) rates. If transactions usually use the same rate, consider including their accounts in one group. If transactions usually use different rates, consider including their accounts in different groups.
((({S:Hint} The account group is not the only key to the allocation rate. Rates can also depend on employee, inventory item, project, and task.
))) Additionally, consider off-balance account groups that are not linked to General Ledger accounts and that would hold amounts not posted to General Ledger. An example of an off-balance group can be unrecognized revenue: You may want to see the amount in your project reporting, but do not want to post to General Ledger until actual billing is done (and thus revenue is recognized). For information about using account groups in this way, see the examples of allocation and billing rules further in the article. For each identified group, write down the following:
*'''Account Group ID''' to be used (which should comply with the defined ''ACCGROUP'' segmented key).
*'''Type''' of account group: Assets, Liability, Income, Expense, or Off-Balance. The type of the group should be the same as the type of General Ledger accounts included in the group. An off-balance group cannot include any General Ledger account.
*Short '''Description''' of the account group.
*List of '''GL Accounts''' included in the group.
For details, see [HelpRoot_FormReference\PM_20_10_00|Account Groups].
|- 
| '''Define Allocation and Billing Rates'''
|  The projects rate is used as a parameter in allocation rules formulas, and can be one of the following:
*''Billing unit rate'': When the original transaction quantity is multiplied by the rate to get the billable amount; for example, if you change $100 per hour for the consultant work, the rate is 100.
*''Billing factor'': When the original transaction amount is multiplied by the rate to get billable amount; for instance, if you re-invoice subcontractor bills to the customer with a 10% surcharge, the rate is 1.1.
*''Overhead rate'': If you charge the project with $20 of administrative overhead for every $100 of direct labor cost, the rate is 0.2 and the allocation rule should multiply the rate by the original transaction amount.
Usage of the rate is not restricted by these three options. The rate can be used anywhere within an allocation rule formula where numeric values can be used, with the following considerations:
*Rates of different usages should be maintained in different rate tables. For example, the ''billing unit rate'' and ''billing factor'' should not be put together under one rate code.
*The rate code produces only one rate figure for a particular transaction that is being allocated. If you need to calculate two different amounts for the same original transaction (such as admininstrative burden and billing amount), you should use two rate codes in two separate allocation steps.
*The rate code can hold rates by parameters—Account Group, Project, Task, Employee, Inventory, or any combination of these. For instance, if the billable rate for senior consultants is different from the billable rate of junior consultants, you should use one rate code with the parameter Employee.
 For each identified rate code, record the '''Rate Code''' (identifier of the rate table) and a brief '''Description'''. Define '''Lookup Rules''' for each rate code and customer price class: 
*'''Sequence''' indicates the order in which applicability of the lookup rule to the original transaction is checked.
*Short '''Description''' order rule (optional).
*'''Account Group''', '''Project''', '''Task''', '''Employee''', and '''Inventory''' indicate which elements of the original transaction are checked for applicability of the rule.
*Short '''Description''' order rule (optional).
((({S:Hint} You can select any combination of the parameters: one, a few, all, or none. Allocation tries to match the lookup rule and the original transaction; if lookup parameter elements are different, the rule is skipped and the next rule is tried. Due to this, a more specific rule (with a large number of parameters) should be assigned with a smaller '''Sequence''' number, and a less specific rule (with fewer parameters) should be assigned with a greater '''Sequence''' number. A rule with no parameters should be given the biggest sequence number, because such a rule applies to any transaction and should be tried only after all other rules.
))) For each sequence of each rate table, indicate: 
*'''Rate'''
* List of applicable '''Account Groups''', '''Projects''', '''Tasks''', '''Employees''', '''Inventory''' items, according to defined parameters of the lookup rule sequence. 
((({S:Hint} Rates are date-sensitive. You can create a schedule when one rate supersedes another. However, for the purpose of implementation, all rates should have the start date as the first operational date of the Projects module and a blank end date.
)))[HelpRoot_Implement\PM_Allocation_and_Billing_Rate_Examples|Projects Allocation and Billing Rate Examples] includes some examples of rate definitions. For more information, see [HelpRoot_FormReference\PM_20_41_00|Rate Types], [HelpRoot_FormReference\PM_20_50_00|Rate Lookup Rules], and [HelpRoot_FormReference\PM_20_60_00|Rate Tables].
|- 
| '''Design Allocation and Billing Rules'''
|  These rules comprise the heart of the Projects module. They define:
*Re-allocation of costs between account categories, tasks, and even projects
*alculation of burdens, overheads
*Selecting and grouping of transactions for posting
*Calculation of billable amounts and generation of Accounts Receivable invoices
See [HelpRoot_Implement\PM_Allocation_and_Billing_Rules_Examples|Project Allocation and Billing Rules Examples] for detailed examples of how these functions can be used. Analyze your business needs and practices and design your own allocation and billing rules: 
*'''Rule ID''': Unique identifier of the rule. 
*'''Description''': Short description of the rule. 
*:__Allocation Rule steps__
*'''Step ID''': Sequence or order of execution: from lower numbers to higher number. 
*'''Description''': Brief description of what this step does 
*'''Sum''': A check box you select if the step is to sum up the results of previous steps; leave it clear if the step is to select transactions and/or to perform regular calculation. 
*'''Post''': A check box you select if calculation results should be posted to account groups; clear the check box if the step is to select transactions for another summary step. 
*'''Rate Code''': The table of allocation billing rates used in the calculation of the step. 
*'''Quantity Formula''': The formula used to calculate the allocation transaction quantity; not used for the ''Budget'' method. 
*'''Billable Quantity Formula''': A formula used to calculate the allocation transaction billable quantity; not used for ''Budget'' method. 
*'''Amount Formula''': A formula used to calculate allocation transaction amount; not used for ''Budget'' method. 
*'''Description Formula''': A formula used to compose allocation transaction description. 
*'''Range Start/End''': The range of the previous steps to sum up; not used if the '''Sum''' check box is cleared. 
*'''Account Group From/To''': The range of account groups of the original transactions to select for allocation; not used if the '''Sum''' check box is selected. 
*'''Method''': How allocated quantities and amounts are calculated: 
**The ''Budget'' method calculates the allocation amount as the product of the account group budget and the task percent complete. 
**The ''Transaction'' method uses quantity and amount formulas. 
*'''Update GL''': A check box you select if the step should post the calculated amount to General Ledger ; clear the check box if posting should be done only for the Projects account group. 
*'''Debit''' of the side of the allocation transaction:
**''Project'': Use ''Source'' to debit the original project; if another project should be debited, use ''Replace'' and indicate the ID of the project. 
**''Task'': Use ''Source'' to debit the original task; if another task should be debited, use ''Replace'' and indicate the ID of the task. 
**''Account Group'':
*** Use ''Source'' to debit the original account group. 
*** Use ''Replace'' and indicate the account group to debit if it is different from the original. 
*** The ''From Account'' option is set automatically when you change ''Account''. 
*** Use ''No Debit'' to generate a single-sided credit-only transaction; available only for the ''Budget'' method. Such an allocation transaction cannot be posted to General Ledger. 
**''Account'': use ''Source'' to debit the original account; use ''Replace'' and indicate account to debit, if different from the original. Not available if '''Update GL''' is off. 
**''Subaccount'' is combined segment by segment from: 
**
***The subaccount indicated in the allocation step (placeholder ''AA'') 
***The project default subaccount (placeholder ''PP'') 
***The task default subaccount (placeholder ''TT'') 
***The subaccount of the original transaction (placeholder ''SS'') 
***Not available if '''Update GL''' is cleared. 
*'''Credit''' of the side of the allocation transaction; similar to '''Debit''' except that the account group can be set to ''No Credit'' to indicate a single-sided, debit-only allocation transaction. ''No Credit'' can be used with the ''Transaction'' method. 
*'''Grouping:'''
** ''Full Detail'' indicates no grouping; one original transaction creates one allocation transaction. 
**''By Item'' groups by inventory ID. 
**''By Employee'' groups by employee ID. 
**''By Date'' groups by original transaction date. 
**''By Vendor'' groups by vendor ID. 
**Any combination of ''by Item'', ''by Employee'', ''by Date'', ''by Vendor'' can be selected; if all options (including ''Full Details'') are off, the step creates only one allocation transaction. 
*'''Allocation''' filters out certain original transactions: 
**'''Include Non-Billable''': Switch off the option to exclude non-billable transactions; switch on the option to process all transactions. 
**'''Include Zero Amount''': Switch off the option to exclude transactions with a zero amount; switch on the option to process all transactions. 
**'''Include Zero Quantity''': Switch off the option to exclude transactions with a zero quantity; switch on the option to process all transactions. 
*'''Reverse''': Defines when allocation transactions used as basis for project billing (see the '''Account Group''' setting in '''Billing Rules''') should be reversed. 
**''On Invoice Release'': Allocation reversal transactions are incorporated in an Accounts Receivable invoice. 
**''On Project Billing'': Allocation reversal transactions are generated by project billing as a separate Projects document. 
**''Never'': Allocation transactions are not reversed.
*'''Copy Notes''': Switch on the option to copy notes of original transactions to allocation transactions. 
*:__Billing Rules__
*'''Account Group''' provides its balance as the billable amount 
*'''Invoice Description''' is not just a description but also a grouping factor. All billing rules with the same description are put in one Accounts Receivable invoice, and different descriptions lead to separate invoices. 
*'''Account Source''' defines where the invoice revenue account will be taken from:
**''None''
** ''Billing Rule'': Account maintained directly in billing rule in '''Account'''
** ''Project'': Default project account
**''Task'': Default task account 
**''Customer'': Customer&rsquo;s sales account
**''Inventory Item'': Item&rsquo;s sales account
**''Resource''
* '''Account''' is credited by the project invoice if '''Account Source''' is set to ''Billing Rule''. It should be the revenue account from the Income account group. 
*'''Subaccount Mask''' defines how the invoice revenue subaccount is combined segment by segment from the following:
**The subaccount indicated in the billing rule (placeholder ''BB'').
**The default subaccount of the project (placeholder ''PP'').
**The default subaccount of the task (placeholder ''TT'').
**The subaccount of the source transaction (placeholder ''SS''); the source of billing is normally transactions generated by the allocation process. 
*'''Subaccount''' is referred to by ''Subaccount Mask'' ''BB''. 
*'''Include Non-Billable''': Switch on the option if you want to bill transactions that are marked as non-billable. 
*'''Limit Quantity''': Switch on the option if the total billed quantity should be limited with the budget quantity of '''Max. Limits Account Group'''. 
*'''Limit Amount''': Switch on the option if the total billed amount should be limited with the budget amount of '''Max. Limits Account Group'''. 
*'''Max. Limits Account Group''': Indicate the account group that provides its budget (contract amount) as the limit for the total billed amount or quantity. 
*'''WIP Account Group''': Indicate the account group whose transactions should be automatically reversed by the billing process. Do not indicate the account group as WIP if it is already selected as the basis for billing (''Account Group'' of billing rule); reversal for such accounts is controlled by the '''Reverse''' setting of the allocation rules. 
*'''Copy Notes''': Switch on the option to copy notes of Projects transactions to an Accounts Receivable invoice. 
For further details, see [HelpRoot_FormReference\PM_20_70_00|Billing Rules].
|- 
| '''Collect project information'''
|  For each existing project, compile the following data: 
*'''Project ID''' to be used (which should comply with the segmented key ''PROJECT'') 
*'''Customer''' billable for the project (blank for non-billable internal projects) 
*'''Description''' of the project
*'''Default Account''' and '''Default Subaccount''' of the project 
*Planned project '''Start Date''' and '''End Date'''
*Project Allocation '''Billing Rule''' and '''Next Billing Date'''
*Automation settings: 
**Whether the project transaction should be automatically allocated 
**Whether the project invoices should be automatically released 
*Modules the project can be used in: General Ledger, Accounts Payable, Accounts Receivable, Sales Orders, Purchase Orders, Time and Expenses, Inventory, Cash Management, Customer Management. 
*Optional list of employees assigned to the project, and whether only these employees are allowed for the project transactions. Indicate whether the employees should use different labor class and overtime labor class for the project than those in the employee master record. 
*Optional list of equipment assigned to the project, and whether only the listed equipment is allowed for the project transactions. 
*'''Owner ID''' and '''Workgroup ID''' of the project, if applicable. 
*List of project tasks, indicating for each task: 
**'''Task ID''' to be used (which should comply with the segmented key ''PROTASK'') 
**Task '''Description'''
**Customer '''Location'''
** '''Price Class'''
** '''Billing Rule''', if different from the billing rule of the project 
**Planned task '''Start Date''' and '''End Date'''
** '''Default Account''' and '''Default Subaccount''' of the task 
**When the task should be billed: ''By Billing Period'' of the project, ''By Task Completion'', or ''By Project Completion''
**Modules the task can be used in: General Ledger, Accounts Payable, Accounts Receivable, Sales Orders, Purchase Orders, Time and Expenses, Inventory, Cash Management, Customer Management 
**'''Owner ID''' and '''Workgroup ID''' of the task, if applicable
**Task budget split by account group 
*If you plan to use the the Projects module with the Sales Orders module, indicate which tasks should cause freight and document discount posting.

|}
You can download and print the [HelpRoot_ImplementChecklists\PM_Preparation_Checklist|Projects Preparation Checklist] to assist you in collecting the data for Projects implementation. [anchor|#3]
==Configuration==
This section walks you through the process of actually configuring the Projects module in Acumatica ERP. 
{| class="checklist" | width="100%" 
|- 
!width="4%" ! '''No.'''
!width="28%" ! Action
!width="66%" ! Description
|- 
| '''1'''
|  '''Define auto-numbering sequences'''
|  Use the [HelpRoot_FormReference\CS_20_10_10|Numbering Sequences] ([~/?ScreenId=CS201010|CS201010]) form in the Common Settings module to create or review numbering sequences for: 
*Project batches (if not shared with other modules)
*Project transactions (sequence ''PMTRAN'')
*Auto-numbering segment of the ''PROJECT'' segmented key (if needed)

|- 
| '''2'''
|  '''Define structure of Projects identifiers'''
|  Use the [HelpRoot_FormReference\CS_20_20_00|Segmented Keys] ([~/?ScreenId=CS202000|CS202000]) form in the Common Settings module to define segmentation of the following identifiers: 
*Project ID (key ''PROJECT'')
*Project Task ID (key ''PROTASK'')
*Account Group ID (key ''ACCGROUP'')

|- 
| '''3'''
|  '''Maintain valid values for validated segments'''
|  Use the [HelpRoot_FormReference\CS_20_30_00|Segment Values] ([~/?ScreenId=CS203000|CS203000]) form in the Common Settings module to enter permitted values for segments of '''Project ID''', '''Task ID''', and '''Account Group ID''' that are configured as validated. Non-validated and auto-numbered segments do not require maintenance of segment values. 
|- 
| '''4'''
|  '''Configure Projects preferences'''
|  Use the [HelpRoot_FormReference\PM_10_10_00|Projects Preferences] ([~/?ScreenId=PM101000|PM101000]) form to configure and activate the Projects module, specifying the following settings: 
*'''Active''' (yes/no) 
*'''Batch Numbering Sequence'''
* '''Transaction Numbering Sequence'''
* '''Non-Project Code'''
* '''Automatically Post on Release'''
* '''Automatically Release Allocation'''
* '''Visibility Settings'''
* '''Expense Account Source''' and '''Expense Subaccount''' combination for Time and Expenses timesheets

|- 
| '''5'''
|  '''Create account groups'''
|  Use the [HelpRoot_FormReference\PM_20_10_00|Account Groups] ([~/?ScreenId=PM201000|PM201000]) form to create designed account groups and assign General Ledger accounts to them. 
|- 
| '''6'''
|  '''Create rate types'''
|  Use the [HelpRoot_FormReference\PM_20_41_00|Rate Types] ([~/?ScreenId=PM204100|PM204100]) form to register rate types and their descriptions in the Acumatica ERP. 
|- 
| '''7'''
|  '''Create rate lookup rules'''
|  Use the [HelpRoot_FormReference\PM_20_50_00|Rate Lookup Rules] ([~/?ScreenId=PM205000|PM205000]) form to define lookup rules for the registered rate codes. 
|- 
| '''8'''
|  '''Maintain Rate Tables'''
|  Use the [HelpRoot_FormReference\PM_20_60_00|Rate Tables] ([~/?ScreenId=PM206000|PM206000]) form to enter current allocation and billing rate values in the rate tables, defined in Steps 6 and 7. 
|- 
| '''9'''
|  '''Create allocation and billing rules'''
|  Use the [HelpRoot_FormReference\PM_20_70_00|Billing Rules] ([~/?ScreenId=PM207000|PM207000]) form to create the rules for project allocation and billing. 
|- 
| '''10'''
|  '''Create projects'''
|  Use the [HelpRoot_FormReference\PM_30_10_00|Projects] ([~/?ScreenId=PM301000|PM301000]) form to create project master records. At the same time and in the same form, you can also add tasks to the project. Note, however, that task visibility and budget cannot be maintained in this form. 
|- 
| '''11'''
|  '''Create or update project tasks'''
|  Use the [HelpRoot_FormReference\PM_30_20_00|Project Tasks] ([~/?ScreenId=PM302000|PM302000]) form to create project tasks. If tasks are created in step 10, review task visibility and maintain task budget in this form. 
|}
You can download and print the [HelpRoot_ImplementChecklists\PM_Configuration_Checklist|Project Configuration Checklist] to assist you in configuring the Projects module. {br}

[anchor|#4]
== Initializing Projects with Budget-based Allocation==
Projects with a budget-based allocation are fixed-price projects, allocated and billed as a project completion percent of the contract value. To migrate fixed-price projects from a legacy system to Acumatica ERP, perform the following steps: 
*Run allocation in the legacy system to ensure that projects have no unallocated transactions
*Create an off-balance account group to receive postings by a &ldquo;non-posting&ldquo; allocation rule (see next point)
*Create a &ldquo;non-posting&ldquo; allocation rule that is identical to the regular allocation rule with the following exceptions: 
**It does not update GL
**It debits and credits the special off-balance account group from point 1
**It has no billing rules
**Example (with reference to the '''FPPCR''' rule in [HelpRoot_Implement\PM_Allocation_and_Billing_Rate_Examples|Projects Allocation and Billing Rate Examples])

{| class="checklist" | width="100%" 
|- 
!width="4%" !  Step
!width="14%" ! Description
!width="6%" ! Sum
!width="5%" ! Post
!width="16%" ! Account Group
!width="10%" ! Method
!width="10%" ! Update GL
!width="16%" ! Debit Account Group
!width="14%" ! Credit Account Group 
|- 
| '''10'''
|  PTD revenue
|  OFF
|  ON
|  REVENUE
|  Budget
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|}
*Enter the percent complete for project tasks that matches the amount billed to date:
**Do not enter the '''actual''' percent complete for project tasks at this time.
*Enter account group balances as a Projects transaction without posting to General Ledger on the [HelpRoot_FormReference\PM_30_40_00|Project Transactions] ([~/?ScreenId=PM304000|PM304000]) form: 
**Enter account groups and leave accounts and subaccounts blank.
**Enter credit balances as negative figures.
**Do not enter a balance for the account group used by the regular billing rule as billing base, such as the ''UNBILLED'' account group in the ''FPPCR'' rule!
*Run allocation.
*Assign a regular allocation rule to the project and its tasks.
*Enter the actual percent complete for project tasks.
*The project is ready.
*After migration, the &ldquo;non-posting&ldquo; allocation rule can be deleted.

Usually, fixed-price projects have a limit on the maximum allowed billing amount. Limit can be enforced for quantity too. If this is the case: 
*Reduce the budget of the max. limits account category by the amounts billed in the legacy system.
*Create a special account group to hold the original budget value:
**No transactions should be posted to it.
**It should not be used in allocation and billing rules.
**It should be used only as a reference to the original budget value.
*When the budget is revised, change both the max limits account group and the special account group.
[anchor|#5]
== Initializing Projects with Transaction-based Allocation==
Transaction-based allocation is used by time-and-materials and cost-plus projects. To migrate such projects from a legacy system to Acumatica ERP, perform the following steps: 
*Run allocation in the legacy system to ensure that projects have no unallocated transactions.
*Create an off-balance account group to receive postings by the &ldquo;zero&ldquo; allocation rule (see the next point).
*Create a &ldquo;zero&ldquo; allocation rule that: 
**Selects transactions from account groups that are selected by the regular allocation rule of the project.
**Generates allocation with a zero amount and quantity without General Ledger posting.
**Debits and credits the special off-balance account group.
**Has no billing rules.
**Example (with reference to the '''TMR''' rule in [HelpRoot_Implement\PM_Allocation_and_Billing_Rate_Examples|Projects Allocation and Billing Rate Examples])

{| class="checklist" | width="100%" 
|- 
!width="4%" !  Step
!width="12%" ! Description
!width="4%" ! Sum
!width="4%" ! Post
!width="8%" ! Qty. Formula
!width="8%" ! Billable Qty. Formula
!width="8%" ! Amount Formula
!width="12%" ! Account Group
!width="8%" ! Update GL
!width="16%" ! Debit Account Group
!width="16%" ! Credit Account Group 
|- 
| '''10'''
|  Labor
|  OFF
|  ON
|  =0
|  =0
|  =0
|  LABOR
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|- 
| '''20'''
|  Material
|  OFF
|  ON
|  =0
|  =0
|  =0
|  MATERIAL
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|- 
| '''30'''
|  Subcontractors
|  OFF
|  ON
|  =0
|  =0
|  =0
|  SUBCON
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|- 
| '''40'''
|  Travel expenses
|  OFF
|  ON
|  =0
|  =0
|  =0
|  TRAVEL
|  OFF
|  Replace with ZZZMIGRATE
|  Replace with ZZZMIGRATE
|}
*Replace the allocation rule of the project and its tasks with the &ldquo;zero&ldquo; rule.
*Enter account group balances as Projects transactions without posting to the General Ledger by using the [HelpRoot_FormReference\PM_30_40_00|Project Transactions] ([~/?ScreenId=PM304000|PM304000]) form: 
**Enter account groups and leave accounts and subaccounts blank.
**Enter credit balances as negative figures.
**Enter in full the balance for the account group used by the regular billing rule as the billing base (as with the ''UNBILLED'' account group in the ''TMR'' rule).
**Reduce the balance of the offset account group (in the ''TMR'' rule, offset to the ''UNBILLED'' account group is the ''REVENUE'' account group) by the balance of unbilled amount. Thus:
***For the ''TMR'' rule, the transaction amount for ''REVENUE'' should be -(''REVENUE'' balance - ''UNBILLED'' balance)
***For the ''TMSUM'' rule, the transaction amount for ''UNRECREV'' should be -(''UNRECREV'' balance - ''UNBILLED'' balance - ''UNBILLEDHR'' balance) = 0. That is, an offset transaction is not needed.
***The ''TMU'' rule has no offset to ''UNRECREV'', so no offset transaction is needed.
*Run allocation.
*Assign the regular allocation rule to the project and its tasks.
*The project is ready.
*After migration, the &ldquo;zero&ldquo; allocation rule can be deleted.

If project billing is a limited amount and quantity, it should be handled similarly for projects with budget-based allocation: 
*Reduce the budget of the max. limits account category by the amounts billed in the legacy system
*Create a special account group to hold the original budget value: 
**No transactions should be posted to it.
**It should not be used in allocation and billing rules.
**It should be used only as reference to the original budget value.
*When the budget is revised, change both the .max limits account group and the special account group.
[anchor|#6]
==Integration==
The Acumatica ERP modules integrated with the Projects module do not require any change in their configuration when Projects is implemented. There are two considerations, though: 
#Integrated modules do not post transactions to Projects directly. The original transaction is first posted to General Ledger and then from General Ledger is copied to Projects. Thus, if the Accounts Payable Preferences form has the '''Post Summary on Updating GL''' check box selected, projects will get a summary of Accounts Payable transactions. To update Projects with full details of the original transactions, clear the '''Post Summary on Updating GL''' check box on the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]), [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]), and [HelpRoot_FormReference\IN_10_10_00|Inventory Preferences] ([~/?ScreenId=IN101000|IN101000]) forms.
#Transactions from integrated modules reach the Projects module only after they are released and posted. You can reduce manual processing time by configuring integrated modules to release and post transactions automatically by selecting the following check boxes: 
##'''Automatically Post on Release''' on the [HelpRoot_FormReference\AP_10_10_00|Accounts Payable Preferences] ([~/?ScreenId=AP101000|AP101000]), [HelpRoot_FormReference\AR_10_10_00|Accounts Receivable Preferences] ([~/?ScreenId=AR101000|AR101000]), and [HelpRoot_FormReference\IN_10_10_00|Inventory Preferences] ([~/?ScreenId=IN101000|IN101000]) forms.
##'''Automatically Release AR Documents''' and ''' Automatically Release IN Documents''' on the [HelpRoot_FormReference\SO_10_10_00|Sales Orders Preferences] ([~/?ScreenId=SO101000|SO101000]) form.
##'''Release AP Documents Automatically''' and '''Release IN Documents Automatically''' on the [HelpRoot_FormReference\PO_10_10_00|Purchase Orders Preferences] ([~/?ScreenId=PO101000|PO101000]) forms.
##'''Automatically Release PM Documents''' on the [HelpRoot_FormReference\EP_10_10_00|Time and Expenses Preferences] ([~/?ScreenId=EP101000|EP101000]) form.
#Time and Expenses can copy notes and attached documents from a Time and Expenses transaction to a Projects transaction if the '''Copy Notes to PM Documents''' and '''Copy Notes to PM Documents''' check boxes on the [HelpRoot_FormReference\EP_10_10_00|Time and Expenses Preferences] ([~/?ScreenId=EP101000|EP101000]) form are selected.
[anchor|#7]
==Other Considerations==
{| class="checklist" | width="100%" 
|- 
!width="23%" ! Consideration
!width="76%" ! Details
|- 
| '''Project Templates and Global Tasks'''
| 
If you have many projects that are similar to one another, you can save the time needed to create them by using project templates. A project template contains standard data. When you create a new project, you simply select an appropriate template, and all its data will be copied to the new project; you need only to adjust it to reflect any differences. {br}

Project templates are maintained on the ([HelpRoot_FormReference\PM_20_80_00|Project Templates] ([~/?ScreenId=PM208000|PM208000]) form. With minor exceptions, template configuration is the same as project configuration. A project template does not have: 
*A customer. 
*Planned start and end dates.
*A next billing date. 
*An auto-allocation option. 
*Custom project attributes. 

You set these settings in the project after you copy template data to it. A project template has tasks that serve as task templates. They can be maintained on the [HelpRoot_FormReference\PM_20_80_10|Project Template Tasks] ([~/?ScreenId=PM208010|PM208010]) form or directly on the ([HelpRoot_FormReference\PM_20_80_00|Project Templates] ([~/?ScreenId=PM208000|PM208000]) form. Compared to a project task, a task template does not have: 
*A customer location. 
*A customer price class. 
*Planned start and end dates.
*Custom task attributes. 

You set these settings in the task after template data is copied to the project. For each template task, you can indicate whether it should be automatically copied when a project is created from its template. Non-auto template tasks can be added to the project by using '''Add Tasks''' on the '''Tasks''' tab of the ([HelpRoot_FormReference\PM_30_10_00|Projects] ([~/?ScreenId=PM301000|PM301000]) form. Global tasks are similar to template tasks, except that they are not linked to a project template and can be added to any project. Consider using global tasks if certain tasks should be included in many (or most) of your projects, although all these projects have different structures. Global tasks are maintained on the ([HelpRoot_FormReference\PM_20_80_30|Common Tasks] ([~/?ScreenId=PM208030|PM208030]) form. For more information, see [HelpRoot_Projects\Projects_Templates_Mapref|Configuring Project Templates and Tasks]. 
|- 
| '''Attributes'''
| 
You can extend the standard definition of the project, task, and account group by adding custom ''attributes'' to their master records. {br}

Attributes are defined on the ([HelpRoot_FormReference\CS_20_50_00|Attributes] ([~/?ScreenId=CS205000|CS205000]) form of the Common Settings module. The definition of a custom attribute includes: 
*'''Attribute ID'''. 
*'''Description'''.
*'''Control Type''': text, combo (selection from predefined list), check box (yes/no), or date and time. 
*'''Required''' or optional. 
*'''Entry Mask''' to validate entry for text or combo. 
*'''Regular Expression''' for advanced validation of entry in text or combo (optional). 
*List of valid '''Values''' for combo only; each value has a description and a sort order. 
((({S:Hint}
 Projects, tasks, account groups can have identical attributes. In such a case, define only one attribute and share it among projects, tasks, and account groups.
)))
{br}

Next, custom attributes should be enabled for the project, task, or account group by using the ([HelpRoot_FormReference\PM_20_20_00|Attributes] ([~/?ScreenId=PM202000|PM202000]) form of the Projects module. {br}

Finally, enter appropriate values of the customer attributes on the respective forms: 
* Account group custom attributes: ([HelpRoot_FormReference\PM_20_10_00|Account Groups] ([~/?ScreenId=PM201000|PM201000]) form. 
* Project custom attributes: ([HelpRoot_FormReference\PM_30_10_00|Projects] ([~/?ScreenId=PM301000|PM301000]) form. 
* Task custom attributes: ([HelpRoot_FormReference\PM_30_20_00|Project Tasks] ([~/?ScreenId=PM302000|PM302000]) form. 

|}]]></column>
			<column name="PlainText"><![CDATA[Implementing Project Accounting This document describes the process of implementing the Projects module in  Acumatica ERP.  Overview The Projects module supports and automates the process of managing the company 				projects in four main areas:  Collection of project-related transactions (primarily expenses) as they are 					processed in various  Acumatica ERP modules Allocation of costs, calculation of burdens, overheads, and billable 					amounts Project billing Reporting To meet these requirements, the Projects module is tightly integrated with many  Acumatica ERP modules, including General Ledger, Accounts Payable, Account Receivable, 				Inventory, Purchase Orders, and Sales Orders. These modules do not require any 				change in their configuration when Projects is implemented. However, you may wish to 				review the certain areas as described in  Integration Integration. This document includes the following 				sections: Prerequisites and Dependencies '''Prerequisites and Dependencies''': Describes what modules 					must be set up and configured before you begin implementing this module. Preparation '''Preparation''': Describes data you should collect, arrange, 					and analyze. Configuration '''Configuration''': Guides you through the actual 					configuration of the Projects module. Initializing Projects with Budget-based Allocation '''Initializing Projects with Budget-based Allocation''': 					Describes how to bring opening balances and historic data into the system to use 					projects with budget-based allocation. Initializing Projects with Transaction-based Allocation '''Initializing Projects with Transaction-based Allocation''': 					Describes how to bring opening balances and historic data into the system to use 					projects with transaction-based allocation. Integration '''Integration''': Covers settings of the integrated modules 					that can be reviewed during the Projects implementation. Other 							Considerations '''Other Considerations''': Covers other aspects pertaining to the 					implementation of this module. This document is meant only to guide you through Projects module implementation. For 				more information about the Projects forms, functions and reports, see   ([~/?ScreenId=PM000000|PM000000]) Projects.  Prerequisites and Dependencies The implementation of the Finance suite must be completed,  before you can implement 				the Projects module.  Preparation This section covers the preparatory steps before you begin configuring the Projects 				module.  Implementation of  Acumatica ERP module should start with collecting and analyzing the necessary information. Do 				the following steps before you actually configure the Projects module; these steps 				do not need to be done in the listed order and many can be done in parallel. 					 Because this is the preparation phase of implementation, enter no data 					into the system at this time. Item  Description Develop Projects numbering convention  Each project in  Acumatica ERP is assigned with a unique  Project ID . It can be comprised 								of segments with optional validation of each segment. Plan the 								structure of the project ID (segmented key  PROJECT ): number 								of segments, length of segments, whether and how they should be 								validated, and whether auto-numbering should be used. Prepare list 								of valid entries for segments that should be validated. Design 								numbering sequence for auto-numbered segment, if needed. Plan also 								the structures for the  Task ID  segmented key  PROTASK ) 								and  Account Group ID  (segmented key  ACCGROUP ).   The task ID should be unique only within a project. 									Two different projects can have tasks with the same identifier, 									and they will be different tasks. For this reason, 									auto-numbering would not usually be used for task IDs.  								For additional information, see  Segmented Identifiers. Define autonumbering sequences  Projects requires numbering sequences for batches and Projects 								transactions.  Acumatica ERP is installed with the following predefined, ready-to-use 								numbering sequences:  BATCH: Shared numbering sequence for batches of all modules, 										ranging from 0000000001 to 9999999999 PMTRAN: Numbering sequence for Projects transactions, 										ranging from PM00000001 to PM99999999 If the project identifier is designed with an auto-numbering 								segment, define a numbering sequence for this segment too. For 								details, see   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences. Define non-project code  Once the Projects module is activated, transactions in all 								modules of  Acumatica ERP will require Project IDs. This does not mean that each 								transaction must be linked to a project; the user can enter the 								non-project code (which you define) in the transaction that is not 								related to any project. For convenience, the non-project code should 								be distinctly different from project IDs and should be short, such 								as the single character  X . Define global processing options  The Projects module has two global options that control how all 								Projects transactions are processed:  Automatically Post on Release  										indicates if a Projects transaction should be automatically 										posted to General Ledger immediately after it is 										released. Automatically Release Allocations  										indicates if a Projects allocation transaction should be 										automatically released immediately after it is generated. 										Because an unreleased allocation transaction can be deleted 										or edited, which can cause inconsistency, it is recommended 										that you use auto-release of allocations. Define Projects integration Projects can receive transactions from the General Ledger, 								Accounts Payable, Accounts Receivable, Order Management, Purchase 								Orders, Organization Structure, Inventory, Cash Management, and 								Customer Management modules. These options are known as Visibility 								Settings in Projects setup. They indicate whether project-related 								transactions can be entered in the particular module at all. 								Projects and tasks also have their own visibility settings, which 								control the availability of this particular project or task in  Acumatica ERP modules.   Visibility settings do not restrict 									the Projects module from posting its transactions to the General 									Ledger or from creating Accounts Receivable 								invoices. Define EP Integration  If desired, define settings related to posting employee 								timesheets and equipment timesheets. With integration of the Time 								and Expenses and Projects modules, these transactions are initially 								released from Time and Expenses to Projects, and then Projects posts 								them to General Ledger. The credit account and subaccount are 								determined by the settings of the employee or equipment master 								record. The debit account and subaccount are configured by the 								Projects module:  Expense Account Source  can be one of 										the following : Expense account of the  Labor Class  of the 												employee, or the  Rate Class  of the equipment  Expense account of the  Employee  or default 												account of the  Equipment Default account of the  Project Default account of the  Task Expense Subaccount  can be combined 										segment by segment from: The expense subaccount of the employee's labor 												class, or of the equipment rate class (placeholder 												 II )  The expense subaccount of employee or default 												subaccount of equipment (placeholder  EE )  The default subaccount of the project (placeholder 												 PP )  The default subaccount of the task (placeholder 												 TT ) For information about the configuration of employee and 									equipment master records, see   ([~/?ScreenId=EP203000|EP203000]) Employees and   ([~/?ScreenId=EP208000|EP208000]) Equipment 								respectively. Define Account Groups  The role of account groups in Projects is similar to the role of 								accounts in General Ledger: All transaction processing and all 								reporting in Projects are done by account groups. When defining 								account groups, first of all, identify the accounts that will be 								used in project-related transactions. Accounts Receivable accounts 								(accounts debited by project billing) and Accounts Payable accounts 								(accounts credited by supplier bills) should be excluded. Consider 								that:  An account group should include accounts of one type (such 										as only expense or only income). Allocation and billing rules select transactions by account 										group. If transactions of two accounts should follow 										different rules, these two accounts should be included in 										different account groups. The account group is most frequently used as a key to 										billing (burden, overhead) rates. If transactions usually 										use the same rate, consider including their accounts in one 										group. If transactions usually use different rates, consider 										including their accounts in different groups.  The account group is not the only key to the 									allocation rate. Rates can also depend on employee, inventory 									item, project, and task.  Additionally, consider 								off-balance account groups that are not linked to General Ledger 								accounts and that would hold amounts not posted to General Ledger. 								An example of an off-balance group can be unrecognized revenue: You 								may want to see the amount in your project reporting, but do not 								want to post to General Ledger until actual billing is done (and 								thus revenue is recognized). For information about using account 								groups in this way, see the examples of allocation and billing rules 								further in the article. For each identified group, write down the following: Account Group ID  to be used (which should comply with 										the defined  ACCGROUP  segmented key). Type  of account group: Assets, Liability, Income, 										Expense, or Off-Balance. The type of the group should be the 										same as the type of General Ledger accounts included in the 										group. An off-balance group cannot include any General 										Ledger account. Short  Description  of the account group. List of  GL Accounts  included in the group. For details, see   ([~/?ScreenId=PM201000|PM201000]) Account Groups. Define Allocation and Billing Rates  The projects rate is used as a parameter in allocation rules formulas, and can be one 								of the following: Billing unit rate : When the original transaction 										quantity is multiplied by the rate to get the billable 										amount; for example, if you change $100 per hour for the 										consultant work, the rate is 100. Billing factor : When the original transaction amount 										is multiplied by the rate to get billable amount; for 										instance, if you re-invoice subcontractor bills to the 										customer with a 10% surcharge, the rate is 1.1. Overhead rate : If you charge the project with $20 of 										administrative overhead for every $100 of direct labor cost, 										the rate is 0.2 and the allocation rule should multiply the 										rate by the original transaction amount. Usage of the rate is not restricted by these three options. The 								rate can be used anywhere within an allocation rule formula where 								numeric values can be used, with the following considerations: Rates of different usages should be maintained in different 										rate tables. For example, the  billing unit rate  and 											 billing factor  should not be put together under 										one rate code. The rate code produces only one rate figure for a particular 										transaction that is being allocated. If you need to 										calculate two different amounts for the same original 										transaction (such as admininstrative burden and billing 										amount), you should use two rate codes in two separate 										allocation steps. The rate code can hold rates by parameters—Account 										Group, Project, Task, Employee, Inventory, or any 										combination of these. For instance, if the billable rate for 										senior consultants is different from the billable rate of 										junior consultants, you should use one rate code with the 										parameter Employee.  For each identified rate code, record the  Rate Code  								(identifier of the rate table) and a brief  Description . 								Define  Lookup Rules  for each rate code and customer price 								class:  Sequence  indicates the order in which applicability 										of the lookup rule to the original transaction is 										checked. Short  Description  order rule 										(optional). Account Group ,  Project ,  Task , 											 Employee , and  Inventory  indicate which 										elements of the original transaction are checked for 										applicability of the rule. Short  Description  order rule (optional).  You can select any combination of the 									parameters: one, a few, all, or none. Allocation tries to match 									the lookup rule and the original transaction; if lookup 									parameter elements are different, the rule is skipped and the 									next rule is tried. Due to this, a more specific rule (with a 									large number of parameters) should be assigned with a smaller 										 Sequence  number, and a less specific rule (with fewer 									parameters) should be assigned with a greater  Sequence  									number. A rule with no parameters should be given the biggest 									sequence number, because such a rule applies to any transaction 									and should be tried only after all other rules.  For each 								sequence of each rate table, indicate:  Rate  List of applicable  Account Groups ,  Projects , 											 Tasks ,  Employees ,  Inventory  items, 										according to defined parameters of the lookup rule sequence. 									  Rates are date-sensitive. You can create a 									schedule when one rate supersedes another. However, for the 									purpose of implementation, all rates should have the start date 									as the first operational date of the Projects module and a blank 									end date. Projects Allocation and Billing Rate Examples includes some examples of rate definitions. For 								more information, see   ([~/?ScreenId=PM204100|PM204100]) Rate Types,   ([~/?ScreenId=PM205000|PM205000]) Rate Lookup Rules, and   ([~/?ScreenId=PM206000|PM206000]) Rate Tables. Design Allocation and Billing Rules  These rules comprise the heart of the Projects module. They define: Re-allocation of costs between account categories, tasks, 										and even projects alculation of burdens, overheads Selecting and grouping of transactions for posting Calculation of billable amounts and generation of Accounts 										Receivable invoices See  Project Allocation and Billing Rules Examples for detailed examples of how these functions can 								be used. Analyze your business needs and practices and design your 								own allocation and billing rules:  Rule ID : Unique identifier of the 										rule.  Description : Short description of the 										rule.  Allocation Rule steps Step ID : Sequence or order of 										execution: from lower numbers to higher number.  Description : Brief description of 										what this step does  Sum : A check box you select if the 										step is to sum up the results of previous steps; leave it 										clear if the step is to select transactions and/or to 										perform regular calculation.  Post : A check box you select if 										calculation results should be posted to account groups; 										clear the check box if the step is to select transactions 										for another summary step.  Rate Code : The table of allocation 										billing rates used in the calculation of the step.  Quantity Formula : The formula used to 										calculate the allocation transaction quantity; not used for 										the  Budget  method.  Billable Quantity Formula : A formula used to 										calculate the allocation transaction billable quantity; not 										used for  Budget  method.  Amount Formula : A formula used to 										calculate allocation transaction amount; not used for 											 Budget  method.  Description Formula : A formula used 										to compose allocation transaction description.  Range Start/End : The range of the 										previous steps to sum up; not used if the 											 Sum  check box is cleared.  Account Group From/To : The range of 										account groups of the original transactions to select for 										allocation; not used if the  Sum  check 										box is selected.  Method : How allocated quantities and amounts are 										calculated:  The  Budget  method calculates the allocation 												amount as the product of the account group budget 												and the task percent complete.  The  Transaction  method uses quantity and 												amount formulas.  Update GL : A check box you select if 										the step should post the calculated amount to General Ledger 										; clear the check box if posting should be done only for the 										Projects account group.  Debit  of the side of the allocation transaction: Project : Use  Source  to debit the 												original project; if another project should be 												debited, use  Replace  and indicate the ID of 												the project.  Task : Use  Source  to debit the original 												task; if another task should be debited, use 												 Replace  and indicate the ID of the task.  Account Group :  Use  Source  to debit the original 												account group.   Use  Replace  and indicate the account 												group to debit if it is different from the 												original.   The  From Account  option is set 												automatically when you change  Account .   Use  No Debit  to generate a 												single-sided credit-only transaction; available 												only for the  Budget  method. Such an 												allocation transaction cannot be posted to General 												Ledger.  Account : use  Source  to debit the 												original account; use  Replace  and indicate 												account to debit, if different from the original. 												Not available if  Update GL  is 												off.  Subaccount  is combined segment by segment 												from:  The subaccount indicated in the allocation 												step (placeholder  AA )  The project default subaccount (placeholder 												 PP )  The task default subaccount (placeholder 												 TT )  The subaccount of the original transaction 												(placeholder  SS )  Not available if  Update 												GL  is cleared.  Credit  of the side of the allocation 										transaction; similar to  Debit  except 										that the account group can be set to  No Credit  to 										indicate a single-sided, debit-only allocation transaction. 											 No Credit  can be used with the  Transaction  										method.  Grouping: Full Detail  indicates no grouping; one 												original transaction creates one allocation 												transaction.  By Item  groups by inventory ID.  By Employee  groups by employee ID.  By Date  groups by original transaction date.  By Vendor  groups by vendor ID.  Any combination of  by Item ,  by 												Employee ,  by Date ,  by Vendor  can 												be selected; if all options (including  Full 												Details ) are off, the step creates only one 												allocation transaction.  Allocation  filters out certain 										original transactions:  Include Non-Billable : Switch 												off the option to exclude non-billable transactions; 												switch on the option to process all transactions.  Include Zero Amount : Switch 												off the option to exclude transactions with a zero 												amount; switch on the option to process all 												transactions.  Include Zero Quantity : Switch 												off the option to exclude transactions with a zero 												quantity; switch on the option to process all 												transactions.  Reverse : Defines when allocation 										transactions used as basis for project billing (see the 											 Account Group  setting in 											 Billing Rules ) should be 										reversed.  On Invoice Release : Allocation reversal 												transactions are incorporated in an Accounts 												Receivable invoice.  On Project Billing : Allocation reversal 												transactions are generated by project billing as a 												separate Projects document.  Never : Allocation transactions are not 												reversed. Copy Notes : Switch on the option to 										copy notes of original transactions to allocation 										transactions.  Billing Rules Account Group  provides its balance as 										the billable amount  Invoice Description  is not just a 										description but also a grouping factor. All billing rules 										with the same description are put in one Accounts Receivable 										invoice, and different descriptions lead to separate 										invoices.  Account Source  defines where the 										invoice revenue account will be taken from: None Billing Rule : Account maintained directly in 												billing rule in  Account Project : Default project account Task : Default task account  Customer : Customer's sales account Inventory Item : Item's sales account Resource Account  is credited by the project 										invoice if  Account Source  is set to 											 Billing Rule . It should be the revenue account 										from the Income account group.  Subaccount Mask  defines how the 										invoice revenue subaccount is combined segment by segment 										from the following: The subaccount indicated in the billing rule 												(placeholder  BB ). The default subaccount of the project (placeholder 												 PP ). The default subaccount of the task (placeholder 												 TT ). The subaccount of the source transaction 												(placeholder  SS ); the source of billing is 												normally transactions generated by the allocation 												process.  Subaccount  is referred to by 											 Subaccount Mask BB .  Include Non-Billable : Switch on the 										option if you want to bill transactions that are marked as 										non-billable.  Limit Quantity : Switch on the option 										if the total billed quantity should be limited with the 										budget quantity of  Max. Limits Account 											Group .  Limit Amount : Switch on the option if 										the total billed amount should be limited with the budget 										amount of  Max. Limits Account Group .  Max. Limits Account Group : Indicate 										the account group that provides its budget (contract amount) 										as the limit for the total billed amount or quantity.  WIP Account Group : Indicate the 										account group whose transactions should be automatically 										reversed by the billing process. Do not indicate the account 										group as WIP if it is already selected as the basis for 										billing ( Account Group  of billing rule); reversal for 										such accounts is controlled by the 											 Reverse  setting of the allocation 										rules.  Copy Notes : Switch on the option to 										copy notes of Projects transactions to an Accounts 										Receivable invoice.  For further details, see   ([~/?ScreenId=PM207000|PM207000]) Billing Rules. Collect project information  For each existing project, compile the following data:  Project ID  to be used (which should 										comply with the segmented key  PROJECT )  Customer  billable for the project 										(blank for non-billable internal projects)  Description  of the project Default Account  and 											 Default Subaccount  of the project  Planned project  Start Date  and 											 End Date Project Allocation  Billing Rule  and 											 Next Billing Date Automation settings:  Whether the project transaction should be 												automatically allocated  Whether the project invoices should be automatically 												released  Modules the project can be used in: General Ledger, Accounts 										Payable, Accounts Receivable, Sales Orders, Purchase Orders, 										Time and Expenses, Inventory, Cash Management, Customer 										Management.  Optional list of employees assigned to the project, and 										whether only these employees are allowed for the project 										transactions. Indicate whether the employees should use 										different labor class and overtime labor class for the 										project than those in the employee master record.  Optional list of equipment assigned to the project, and 										whether only the listed equipment is allowed for the project 										transactions.  Owner ID  and  Workgroup 											ID  of the project, if applicable.  List of project tasks, indicating for each task:  Task ID  to be used (which 												should comply with the segmented key  PROTASK )  Task  Description Customer  Location Price Class Billing Rule , if different 												from the billing rule of the project  Planned task  Start Date  and 												 End Date Default Account  and 												 Default Subaccount  of the 												task  When the task should be billed:  By Billing 												Period  of the project,  By Task 												Completion , or  By Project Completion Modules the task can be used in: General Ledger, 												Accounts Payable, Accounts Receivable, Sales Orders, 												Purchase Orders, Time and Expenses, Inventory, Cash 												Management, Customer Management  Owner ID  and 												 Workgroup ID  of the task, 												if applicable Task budget split by account group  If you plan to use the the Projects module with the Sales 										Orders module, indicate which tasks should cause freight and 										document discount posting. You can download and print the  Projects Preparation Checklist to assist you in collecting the data for Projects 				implementation.  Configuration This section walks you through the process of actually configuring the Projects 				module in  Acumatica ERP.  No. Action Description 1 Define auto-numbering sequences  Use the   ([~/?ScreenId=CS201010|CS201010]) Numbering Sequences (CS201010) form 								in the Common Settings module to create or review numbering 								sequences for:  Project batches (if not shared with other modules) Project transactions (sequence  PMTRAN ) Auto-numbering segment of the  PROJECT  segmented key 										(if needed) 2 Define structure of Projects identifiers  Use the   ([~/?ScreenId=CS202000|CS202000]) Segmented Keys (CS202000) form 								in the Common Settings module to define segmentation of the 								following identifiers:  Project ID (key  PROJECT ) Project Task ID (key  PROTASK ) Account Group ID (key  ACCGROUP ) 3 Maintain valid values for validated segments  Use the   ([~/?ScreenId=CS203000|CS203000]) Segment Values (CS203000) form 								in the Common Settings module to enter permitted values for segments 								of  Project ID ,  Task 								ID , and  Account Group ID  that are 								configured as validated. Non-validated and auto-numbered segments do 								not require maintenance of segment values.  4 Configure Projects preferences  Use the   ([~/?ScreenId=PM101000|PM101000]) Projects Preferences (PM101000) form to configure 								and activate the Projects module, specifying the following settings:  Active  (yes/no)  Batch Numbering Sequence Transaction Numbering Sequence Non-Project Code Automatically Post on Release Automatically Release Allocation Visibility Settings Expense Account Source  and 											 Expense Subaccount  combination 										for Time and Expenses timesheets 5 Create account groups  Use the   ([~/?ScreenId=PM201000|PM201000]) Account Groups (PM201000) form to create 								designed account groups and assign General Ledger accounts to them.  6 Create rate types  Use the   ([~/?ScreenId=PM204100|PM204100]) Rate Types (PM204100) form to 								register rate types and their descriptions in the  Acumatica ERP.  7 Create rate lookup rules  Use the   ([~/?ScreenId=PM205000|PM205000]) Rate Lookup Rules (PM205000) form to define 								lookup rules for the registered rate codes.  8 Maintain Rate Tables  Use the   ([~/?ScreenId=PM206000|PM206000]) Rate Tables (PM206000) form to enter 								current allocation and billing rate values in the rate tables, 								defined in Steps 6 and 7.  9 Create allocation and billing rules  Use the   ([~/?ScreenId=PM207000|PM207000]) Billing Rules (PM207000) form to create 								the rules for project allocation and billing.  10 Create projects  Use the   ([~/?ScreenId=PM301000|PM301000]) Projects (PM301000) form to create 								project master records. At the same time and in the same form, you 								can also add tasks to the project. Note, however, that task 								visibility and budget cannot be maintained in this form.  11 Create or update project tasks  Use the   ([~/?ScreenId=PM302000|PM302000]) Project Tasks (PM302000) form to create 								project tasks. If tasks are created in step 10, review task 								visibility and maintain task budget in this form.  You can download and print the  Project Configuration Checklist to assist you in configuring the Projects module.   Initializing Projects with Budget-based Allocation Projects with a budget-based allocation are fixed-price projects, allocated and 				billed as a project completion percent of the contract value. To migrate fixed-price 				projects from a legacy system to  Acumatica ERP, perform the following steps:  Run allocation in the legacy system to ensure that projects have no unallocated 					transactions Create an off-balance account group to receive postings by a "non-posting" 					allocation rule (see next point) Create a "non-posting" allocation rule that is identical to the regular 					allocation rule with the following exceptions:  It does not update GL It debits and credits the special off-balance account group from point 							1 It has no billing rules Example (with reference to the  FPPCR  rule in  Projects Allocation and Billing Rate Examples)  Step Description Sum Post Account Group Method Update GL Debit Account Group Credit Account Group  10  PTD revenue  OFF  ON  REVENUE  Budget  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE Enter the percent complete for project tasks that matches the amount billed to date: Do not enter the  actual  percent complete for project tasks at 							this time. Enter account group balances as a Projects transaction without posting to General Ledger on 					the   ([~/?ScreenId=PM304000|PM304000]) Project Transactions (PM304000) 					form:  Enter account groups and leave accounts and subaccounts blank. Enter credit balances as negative figures. Do not enter a balance for the account group used by the regular billing 							rule as billing base, such as the  UNBILLED  account group in the 								 FPPCR  rule! Run allocation. Assign a regular allocation rule to the project and its tasks. Enter the actual percent complete for project tasks. The project is ready. After migration, the "non-posting" allocation rule can be deleted. Usually, fixed-price projects have a limit on the maximum allowed billing amount. 				Limit can be enforced for quantity too. If this is the case:  Reduce the budget of the max. limits account category by the amounts billed in 					the legacy system. Create a special account group to hold the original budget value: No transactions should be posted to it. It should not be used in allocation and billing rules. It should be used only as a reference to the original budget value. When the budget is revised, change both the max limits account group and the 					special account group.  Initializing Projects with Transaction-based Allocation Transaction-based allocation is used by time-and-materials and cost-plus projects. To 				migrate such projects from a legacy system to  Acumatica ERP, perform the following steps:  Run allocation in the legacy system to ensure that projects have no unallocated 					transactions. Create an off-balance account group to receive postings by the "zero" allocation 					rule (see the next point). Create a "zero" allocation rule that:  Selects transactions from account groups that are selected by the 							regular allocation rule of the project. Generates allocation with a zero amount and quantity without General 							Ledger posting. Debits and credits the special off-balance account group. Has no billing rules. Example (with reference to the  TMR  rule in  Projects Allocation and Billing Rate Examples)  Step Description Sum Post Qty. Formula Billable Qty. Formula Amount Formula Account Group Update GL Debit Account Group Credit Account Group  10  Labor  OFF  ON  =0  =0  =0  LABOR  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE 20  Material  OFF  ON  =0  =0  =0  MATERIAL  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE 30  Subcontractors  OFF  ON  =0  =0  =0  SUBCON  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE 40  Travel expenses  OFF  ON  =0  =0  =0  TRAVEL  OFF  Replace with ZZZMIGRATE  Replace with ZZZMIGRATE Replace the allocation rule of the project and its tasks with the "zero" 					rule. Enter account group balances as Projects transactions without posting to the General Ledger 					by using the   ([~/?ScreenId=PM304000|PM304000]) Project Transactions 					(PM304000) form:  Enter account groups and leave accounts and subaccounts blank. Enter credit balances as negative figures. Enter in full the balance for the account group used by the regular 							billing rule as the billing base (as with the  UNBILLED  account 							group in the  TMR  rule). Reduce the balance of the offset account group (in the  TMR  rule, 							offset to the  UNBILLED  account group is the  REVENUE  							account group) by the balance of unbilled amount. Thus: For the  TMR  rule, the transaction amount for 										 REVENUE  should be -( REVENUE  balance - 										 UNBILLED  balance) For the  TMSUM  rule, the transaction amount for 										 UNRECREV  should be -( UNRECREV  balance - 										 UNBILLED  balance -  UNBILLEDHR  balance) = 0. 									That is, an offset transaction is not needed. The  TMU  rule has no offset to  UNRECREV , so no 									offset transaction is needed. Run allocation. Assign the regular allocation rule to the project and its tasks. The project is ready. After migration, the "zero" allocation rule can be deleted. If project billing is a limited amount and quantity, it should be handled similarly 				for projects with budget-based allocation:  Reduce the budget of the max. limits account category by the amounts billed in 					the legacy system Create a special account group to hold the original budget value:  No transactions should be posted to it. It should not be used in allocation and billing rules. It should be used only as reference to the original budget value. When the budget is revised, change both the .max limits account group and the 					special account group. Integration The  Acumatica ERP modules integrated with the Projects module do not require any change in their 				configuration when Projects is implemented. There are two considerations, though:  Integrated modules do not post transactions to Projects directly. The original transaction 					is first posted to General Ledger and then from General Ledger is copied to 					Projects. Thus, if the Accounts Payable Preferences form has the  Post 						Summary on Updating GL  check box selected, projects will get a 					summary of Accounts Payable transactions. To update Projects with full details 					of the original transactions, clear the  Post Summary on Updating 						GL  check box on the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000),   ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences (AR101000), and   ([~/?ScreenId=IN101000|IN101000]) Inventory Preferences (IN101000) 					forms. Transactions from integrated modules reach the Projects module only after they 					are released and posted. You can reduce manual processing time by configuring 					integrated modules to release and post transactions automatically by selecting 					the following check boxes:  Automatically Post on Release  on the   ([~/?ScreenId=AP101000|AP101000]) Accounts Payable Preferences (AP101000), 								  ([~/?ScreenId=AR101000|AR101000]) Accounts Receivable Preferences 							(AR101000), and   ([~/?ScreenId=IN101000|IN101000]) Inventory Preferences (IN101000) forms. Automatically Release AR Documents  and   Automatically 								Release IN Documents  on the   ([~/?ScreenId=SO101000|SO101000]) Sales Orders Preferences (SO101000) 							form. Release AP Documents Automatically  and  Release IN 								Documents Automatically  on the   ([~/?ScreenId=PO101000|PO101000]) Purchase Orders Preferences (PO101000) 							forms. Automatically Release PM Documents  on the   ([~/?ScreenId=EP101000|EP101000]) Time and Expenses Preferences 							(EP101000) form. Time and Expenses can copy notes and attached documents from a Time and Expenses transaction 					to a Projects transaction if the  Copy Notes to PM 						Documents  and  Copy Notes to PM Documents  					check boxes on the   ([~/?ScreenId=EP101000|EP101000]) Time and Expenses Preferences (EP101000) form are selected. Other Considerations Consideration Details Project Templates and Global Tasks If you have many projects that are similar to one another, you 									can save the time needed to create them by using project 									templates. A project template contains standard data. When you 									create a new project, you simply select an appropriate template, 									and all its data will be copied to the new project; you need 									only to adjust it to reflect any differences.  Project templates are maintained on the (  ([~/?ScreenId=PM208000|PM208000]) Project Templates 									(PM208000) form. With minor exceptions, template 									configuration is the same as project configuration. A project 									template does not have:  A customer.  Planned start and end dates. A next billing date.  An auto-allocation option.  Custom project attributes.  You set these settings in the project after you copy template data to it. A project 									template has tasks that serve as task templates. They can be 									maintained on the   ([~/?ScreenId=PM208010|PM208010]) Project Template Tasks (PM208010) form or directly on the (  ([~/?ScreenId=PM208000|PM208000]) Project Templates (PM208000) 									form. Compared to a project task, a task template does not have:  A customer location.  A customer price class.  Planned start and end dates. Custom task attributes.  You set these settings in the task after template data is copied to the project. For each 									template task, you can indicate whether it should be 									automatically copied when a project is created from its 									template. Non-auto template tasks can be added to the project by 									using  Add Tasks  on the 										 Tasks  tab of the (  ([~/?ScreenId=PM301000|PM301000]) Projects (PM301000) form. 									Global tasks are similar to template tasks, except that they are 									not linked to a project template and can be added to any 									project. Consider using global tasks if certain tasks should be 									included in many (or most) of your projects, although all these 									projects have different structures. Global tasks are maintained 									on the (  ([~/?ScreenId=PM208030|PM208030]) Common Tasks (PM208030) 									form. For more information, see  Configuring Project Templates and Tasks.  Attributes You can extend the standard definition of the project, task, and 									account group by adding custom  attributes  to their master 									records.  Attributes are defined on the (  ([~/?ScreenId=CS205000|CS205000]) Attributes (CS205000) 									form of the Common Settings module. The definition of a custom 									attribute includes:  Attribute ID .  Description . Control Type : text, combo (selection 										from predefined list), check box (yes/no), or date and time.  Required  or optional.  Entry Mask  to validate entry for text 										or combo.  Regular Expression  for advanced 										validation of entry in text or combo (optional).  List of valid  Values  for combo only; 										each value has a description and a sort order.   Projects, tasks, account groups can have identical 										attributes. In such a case, define only one attribute and 										share it among projects, tasks, and account groups. Next, custom attributes should be enabled for the project, task, or account group by 									using the (  ([~/?ScreenId=PM202000|PM202000]) Attributes 									(PM202000) form of the Projects module.  Finally, enter appropriate values of the customer attributes on 									the respective forms:   Account group custom attributes: (  ([~/?ScreenId=PM201000|PM201000]) Account Groups 										(PM201000) form.   Project custom attributes: (  ([~/?ScreenId=PM301000|PM301000]) Projects 										(PM301000) form.   Task custom attributes: (  ([~/?ScreenId=PM302000|PM302000]) Project Tasks 										(PM302000) form.  ]]></column>
		</row>
		<row PageID="4f0098eb-ee0f-4ac1-82f3-33104fe1d4c3" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="9d1e2adf-a8cf-24f5-5582-6ec98a2dd78d" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This section provides some examples of rates configuration in the Projects module. All examples assume ''DEFAULT'' customer price. 
==The Simplest Rate==
In this example, we will use rate code '''LABORATE''' designed to hold labor billing rates. The simplest Rate Lookup Rule would look as follows: 
{| class="checklist" | width="100%" 
|- 
!width="12%" !  Sequence
!width="12%" ! Account Group
!width="12%" ! Project
!width="12%" ! Task
!width="12%" ! Inventory
!width="12%" ! Employee
!width="25%" ! Description
|- 
|  999
|  Off
|  Off
|  Off
|  Off
|  Off
|  Default
|}
All options ('''Account Group''', '''Project''', '''Task''', '''Inventory''', '''Employee''') that control applicability of the rule to allocated transaction, are deselected. This means that rule apply to all transactions without exception. The simplest Rate Tables is 
{| class="checklist" | width="100%" 
|- 
! Sequence
!Start Date
!End Date
!Rate
|- 
|  999
|  1 Feb 2006
| 
|  100.00
|}
Blank end date indicates that all transactions on and after 1 February 2006 will be billed at $100/hour. ((({S:Hint}
Rate itself does not know anything about unit of measures or type of the transaction. If misused, it may charge $100 per box of chocolates, or multiply $500 of air ticket cost by 100. ''Allocation Rule'' that uses the rate code, should specify labor expense account category explicitly to ensure that only labor transactions are selected for allocation with such rate code.
)))
==Transaction-type Sensitive Rate==
The rate definition can be modified to avoid the above-mentioned problem, and to apply it only to labor transactions: 
{| class="checklist" | width="100%" 
|- 
!width="12%" !  Sequence
!width="12%" ! Account Group
!width="12%" ! Project
!width="12%" ! Task
!width="12%" ! Inventory
!width="12%" ! Employee
!width="25%" ! Description
|- 
|  999
| '''On'''
|  Off
|  Off
|  Off
|  Off
|  Default
|}
Now options '''Account Group''' is selected and we need to provide one or few account groups in the rate table: 
{| class="checklist" | width="100%" 
|- 
!width="13%" !  Sequence
!width="26%" ! Account Groups
!width="26%" ! Start Date
!width="20%" ! End Date
!width="13%" ! Rate 
|- 
|  999
|  LABOR
|  1 Feb 2006
| 
|  100.00
|}
The rule will be checked against account group of the allocated transaction, and if it is also ''LABOR'', the rate of $100 will be applied. We can be sure now that we do not bill our customers hundred-fold for travel expenses. ((({S:Hint}
Non-labor transactions will get no rate from such table. To avoid errors during allocation, ''Allocation Rule'' that uses the rate code, has to pre-filter labor transactions still.
)))
==Improved Rate==
The rate definition can be further improved to protect against possible misconfiguration in Allocation Rules: 
{| class="checklist" | width="100%" 
|- 
!width="12%" !  Sequence
!width="12%" ! Account Group
!width="12%" ! Project
!width="12%" ! Task
!width="12%" ! Inventory
!width="12%" ! Employee
!width="25%" ! Description
|- 
|  900
| '''On'''
|  Off
|  Off
|  Off
|  Off
|  Labor Default
|- 
|  999
|  Off
|  Off
|  Off
|  Off
|  Off
|  Default
|}
Two sequences require two rate tables: 
{| class="checklist" | width="100%" 
|- 
!width="16%" !  Sequence
!width="25%" ! Account Groups
!width="25%" ! Start Date
!width="16%" ! End Date
!width="16%" ! Rate 
|- 
|  900
|  LABOR
|  1 Feb 2006
| 
|  100.00
|- 
|  999
| 
|  1 Feb 2006
| 
|  0.00
|}
Allocation will search rate table from top. All labor transactions will be &ldquo;captured&ldquo; in step '''900''' and billed at $100/hour. Non-labor transaction will fall through to rule '''999''' and will be zeroed. 
==Extended Definition==
The rate definition can be extended to bill differently for different qualification of employees: 
{| class="checklist" | width="100%" 
|- 
!width="11%" !  Sequence
!width="11%" ! Account Group
!width="11%" ! Project
!width="11%" ! Task
!width="11%" ! Inventory
!width="11%" ! Employee
!width="29%" ! Description
|- 
|  800
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Project management
|- 
|  810
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Senior consultants
|- 
|  820
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Junior consultants
|- 
|  900
| '''On'''
|  Off
|  Off
|  Off
|  Off
|  Labor Default
|- 
|  999
|  Off
|  Off
|  Off
|  Off
|  Off
|  Default
|}
The first three rules have options '''Employee''' on. This means that they apply only to transactions with Employee ID from the attached employee list. If Employee ID is different, the rule is skipped and the next rule is tried. Note that although all first three rules have the same setting - apply per '''Account Group''' and '''Employee''' - they are not identical: each rule has different list of employees (see below). The last two rules remain unchanged. They work as &ldquo;trap&ldquo; for all transactions that fail all previous rules and reach the end of the table. The Rate Tables are extended: 
{| class="checklist" | width="100%" 
|- 
!width="9%" !  Sequence
!width="13%" ! Account Groups
!width="27%" ! Employees
!width="18%" ! Start Date
!width="18%" ! End Date
!width="13%" ! Rate 
|- 
|  800
|  LABOR
|  EP00000001 EP00000002
|  1 Feb 2006
| 
|  150.00
|- 
| rowspan="2" | 810
| rowspan="2" | LABOR
| rowspan="2" | EP00000006 EP00000007
|  1 Feb 2006
|  31 Jan 2012
|  120.00
|- 
|  1 Feb 2012
| 
|  130.00
|- 
| rowspan="2" | 820
| rowspan="2" | LABOR
| rowspan="2" | EP00000009 EP00000010
|  1 Feb 2006
|  31 Jan 2010
|  120.00
|- 
|  1 Feb 2010
| 
|  125.00
|- 
| rowspan="4" | 900
| rowspan="4" | LABOR
| rowspan="4" | 
|  1 Feb 2006
|  31 Jan 2008
|  100.00
|- 
|  1 Feb 2008
|  31 Jan 2010
|  105.00
|- 
|  1 Feb 2010
|  31 Jan 2012
|  110.00
|- 
|  1 Feb 2012
| 
|  115.00
|- 
|  999
| 
| 
|  1 Feb 2006
| 
|  0.00
|}
 Following examples demonstrate how the rule works: 
*Transaction with account group ''LABOR'' and employee ID ''EP00000001'' is &ldquo;caught&ldquo; by rule '''800''' and is allocated with rate $150/hour.
*Transaction with account group ''LABOR'' and employee ID ''EP00000006'' fails rule '''800''' (employee ''EP00000006'' is not in the list). The search continues with rule '''810'''. This rule fits to transaction. The rate in rule '''810''' is time sensitive: if allocation is run before 1 Feb 2012, the billing rate is $120/hour; after 1 Feb 2012, work of the same employee is invoiced at $130/hour.
*Transaction with account group ''LABOR'' and employee ID ''EP00000008'' fails rule '''800'''. Sequentially, it tries and fails rules 810 and 820. Finally, it tries rule 900 which applies to all LABOR transactions regardless of employee. The allocated transaction gets its billing rate from this rule: 
**if allocation is done before 1 Feb 2008, employee time is billed at $100/hour.
**if allocation is done between 1 Feb 2008 and 1 Feb 2010, employee time is billed at $105/hour.
**if allocation is done between 1 Feb 2010 and 1 Feb 2012, employee time is billed at $110/hour.
**if allocation is done after 1 Feb 2012, employee time is billed at $115/hour.
*Transaction with account group ''TRAVEL'' and employee ID ''EP00000001'' fails rule '''800''' (it has &ldquo;wrong&ldquo; account category). Sequentially, it tries and fails rules '''810''', '''820''', '''900'''. Finally rule '''999''' applies zero rate to it.

Note that sequence numbers have big gaps: 800-810-820-900-999. This is done intentionally, to simplify insertion of new rules, should they be needed. For example, time of employee EP00000008 should be billed with special rate, you can easily add rule with sequence number 815. 
==Further Extension==
The rate definition can also be extended to bill differently for different projects (while keeping different employee rates): 
{| class="checklist" | width="100%" 
|- 
!width="11%" !  Sequence
!width="11%" ! Account Group
!width="11%" ! Project
!width="11%" ! Task
!width="11%" ! Inventory
!width="11%" ! Employee
!width="33%" ! Description
|- 
|  700
| '''On'''
|  '''On'''
|  Off
|  Off
| '''On'''
|  Special project management 
|- 
|  710
| '''On'''
|  '''On'''
|  Off
|  Off
| '''On'''
|  Special senior consultants
|- 
|  720
| '''On'''
|  '''On'''
|  Off
|  Off
| '''On'''
|  Special junior consultants
|- 
|  790
| '''On'''
|  '''On'''
|  Off
|  Off
|  Off
|  Special labor default
|- 
|  800
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Project management
|- 
|  810
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Senior consultants
|- 
|  820
| '''On'''
|  Off
|  Off
|  Off
| '''On'''
|  Junior consultants
|- 
|  900
| '''On'''
|  Off
|  Off
|  Off
|  Off
|  Labor Default
|- 
|  999
|  Off
|  Off
|  Off
|  Off
|  Off
|  Default
|}
===The Rate Table===
{| class="checklist" | width="100%" 
|- 
!width="7%" !  Sequence
!width="10%" ! Account Groups
!width="19%" ! Project
!width="22%" ! Employees
!width="14%" ! Start Date
!width="14%" ! End Date
!width="10%" ! Rate 
|- 
|  700
|  LABOR
|  TM00000001
|  EP00000001 EP00000002
|  1 Feb 2006
| 
|  250.00
|- 
|  710
|  LABOR
|  TM00000001
|  EP00000006 EP00000007
|  1 Feb 2006
| 
|  200.00
|- 
|  720
|  LABOR
|  TM00000001
|  EP00000009 EP00000010
|  1 Feb 2006
| 
|  175.00
|- 
|  790
|  LABOR
|  TM00000001
| 
|  1 Feb 2006
| 
|  125.00
|- 
|  800
|  LABOR
| 
|  EP00000001 EP00000002
|  1 Feb 2006
| 
|  150.00
|- 
| rowspan="2" | 810
| rowspan="2" | LABOR
| rowspan="2" | 
| rowspan="2" | EP00000006 EP00000007
|  1 Feb 2006
|  31 Jan 2012
|  120.00
|- 
|  1 Feb 2012
| 
|  130.00
|- 
| rowspan="2" | 820
| rowspan="2" | LABOR
| rowspan="2" | 
| rowspan="2" | EP00000009 EP00000010
|  1 Feb 2006
|  31 Jan 2010
|  120.00
|- 
|  1 Feb 2010
| 
|  125.00
|- 
| rowspan="4" | 900
| rowspan="4" | LABOR
| rowspan="4" | 
| rowspan="4" | 
|  1 Feb 2006
|  31 Jan 2008
|  100.00
|- 
|  1 Feb 2008
|  31 Jan 2010
|  105.00
|- 
|  1 Feb 2010
|  31 Jan 2012
|  110.00
|- 
|  1 Feb 2012
| 
|  115.00
|- 
|  999
| 
| 
| 
|  1 Feb 2006
| 
|  0.00
|}
Rules '''700''', '''710''', '''720''', and '''790''' define special labor billing rate for project ''TM00000001'': if employee ''EP00000006'' works in this project, his time is billed to customer at $200/hour (rule '''710'''). But his work in project ''CP00000005'' will be billed at $120/hour (rule '''820''').]]></column>
			<column name="PlainText"><![CDATA[Projects Allocation and Billing Rate Examples This section provides some examples of rates configuration in the Projects module. 				All examples assume  DEFAULT  customer price.  The Simplest Rate In this example, we will use rate code  LABORATE  designed to hold labor billing 				rates. The simplest Rate Lookup Rule would look as follows:   Sequence Account Group Project Task Inventory Employee Description  999  Off  Off  Off  Off  Off  Default All options ( Account Group ,  Project ,  Task ,  Inventory , 					 Employee ) that control applicability of the rule to allocated 				transaction, are deselected. This means that rule apply to all transactions without 				exception. The simplest Rate Tables is   Sequence Start Date End Date Rate  999  1 Feb 2006  100.00 Blank end date indicates that all transactions on and after 1 February 2006 will be 				billed at $100/hour.  Rate itself does not know anything about unit of measures or type of the 					transaction. If misused, it may charge $100 per box of chocolates, or multiply 					$500 of air ticket cost by 100.  Allocation Rule  that uses the rate code, 					should specify labor expense account category explicitly to ensure that only 					labor transactions are selected for allocation with such rate code. Transaction-type Sensitive Rate The rate definition can be modified to avoid the above-mentioned problem, and to 				apply it only to labor transactions:   Sequence Account Group Project Task Inventory Employee Description  999 On  Off  Off  Off  Off  Default Now options  Account Group  is selected and we need to provide one or few 				account groups in the rate table:   Sequence Account Groups Start Date End Date Rate   999  LABOR  1 Feb 2006  100.00 The rule will be checked against account group of the allocated transaction, and if 				it is also  LABOR , the rate of $100 will be applied. We can be sure now that 				we do not bill our customers hundred-fold for travel expenses.  Non-labor transactions will get no rate from such table. To avoid errors during 					allocation,  Allocation Rule  that uses the rate code, has to pre-filter 					labor transactions still. Improved Rate The rate definition can be further improved to protect against possible 				misconfiguration in Allocation Rules:   Sequence Account Group Project Task Inventory Employee Description  900 On  Off  Off  Off  Off  Labor Default  999  Off  Off  Off  Off  Off  Default Two sequences require two rate tables:   Sequence Account Groups Start Date End Date Rate   900  LABOR  1 Feb 2006  100.00  999  1 Feb 2006  0.00 Allocation will search rate table from top. All labor transactions will be "captured" 				in step  900  and billed at $100/hour. Non-labor transaction will fall through 				to rule  999  and will be zeroed.  Extended Definition The rate definition can be extended to bill differently for different qualification 				of employees:   Sequence Account Group Project Task Inventory Employee Description  800 On  Off  Off  Off On  Project management  810 On  Off  Off  Off On  Senior consultants  820 On  Off  Off  Off On  Junior consultants  900 On  Off  Off  Off  Off  Labor Default  999  Off  Off  Off  Off  Off  Default The first three rules have options  Employee  on. This means that they apply 				only to transactions with Employee ID from the attached employee list. If Employee 				ID is different, the rule is skipped and the next rule is tried. Note that although 				all first three rules have the same setting - apply per  Account Group  and 					 Employee  - they are not identical: each rule has different list of 				employees (see below). The last two rules remain unchanged. They work as "trap" for 				all transactions that fail all previous rules and reach the end of the table. The 				Rate Tables are extended:   Sequence Account Groups Employees Start Date End Date Rate   800  LABOR  EP00000001 EP00000002  1 Feb 2006  150.00 810 LABOR EP00000006 EP00000007  1 Feb 2006  31 Jan 2012  120.00  1 Feb 2012  130.00 820 LABOR EP00000009 EP00000010  1 Feb 2006  31 Jan 2010  120.00  1 Feb 2010  125.00 900 LABOR  1 Feb 2006  31 Jan 2008  100.00  1 Feb 2008  31 Jan 2010  105.00  1 Feb 2010  31 Jan 2012  110.00  1 Feb 2012  115.00  999  1 Feb 2006  0.00  Following examples demonstrate how the rule works:  Transaction with account group  LABOR  and employee ID  EP00000001  is 					"caught" by rule  800  and is allocated with rate $150/hour. Transaction with account group  LABOR  and employee ID  EP00000006  					fails rule  800  (employee  EP00000006  is not in the list). The 					search continues with rule  810 . This rule fits to transaction. The rate 					in rule  810  is time sensitive: if allocation is run before 1 Feb 2012, 					the billing rate is $120/hour; after 1 Feb 2012, work of the same employee is 					invoiced at $130/hour. Transaction with account group  LABOR  and employee ID  EP00000008  					fails rule  800 . Sequentially, it tries and fails rules 810 and 820. 					Finally, it tries rule 900 which applies to all LABOR transactions regardless of 					employee. The allocated transaction gets its billing rate from this rule:  if allocation is done before 1 Feb 2008, employee time is billed at 							$100/hour. if allocation is done between 1 Feb 2008 and 1 Feb 2010, employee time 							is billed at $105/hour. if allocation is done between 1 Feb 2010 and 1 Feb 2012, employee time 							is billed at $110/hour. if allocation is done after 1 Feb 2012, employee time is billed at 							$115/hour. Transaction with account group  TRAVEL  and employee ID  EP00000001  					fails rule  800  (it has "wrong" account category). Sequentially, it tries 					and fails rules  810 ,  820 ,  900 . Finally rule  999  					applies zero rate to it. Note that sequence numbers have big gaps: 800-810-820-900-999. This is done 				intentionally, to simplify insertion of new rules, should they be needed. For 				example, time of employee EP00000008 should be billed with special rate, you can 				easily add rule with sequence number 815.  Further Extension The rate definition can also be extended to bill differently for different projects 				(while keeping different employee rates):   Sequence Account Group Project Task Inventory Employee Description  700 On On  Off  Off On  Special project management   710 On On  Off  Off On  Special senior consultants  720 On On  Off  Off On  Special junior consultants  790 On On  Off  Off  Off  Special labor default  800 On  Off  Off  Off On  Project management  810 On  Off  Off  Off On  Senior consultants  820 On  Off  Off  Off On  Junior consultants  900 On  Off  Off  Off  Off  Labor Default  999  Off  Off  Off  Off  Off  Default The Rate Table  Sequence Account Groups Project Employees Start Date End Date Rate   700  LABOR  TM00000001  EP00000001 EP00000002  1 Feb 2006  250.00  710  LABOR  TM00000001  EP00000006 EP00000007  1 Feb 2006  200.00  720  LABOR  TM00000001  EP00000009 EP00000010  1 Feb 2006  175.00  790  LABOR  TM00000001  1 Feb 2006  125.00  800  LABOR  EP00000001 EP00000002  1 Feb 2006  150.00 810 LABOR EP00000006 EP00000007  1 Feb 2006  31 Jan 2012  120.00  1 Feb 2012  130.00 820 LABOR EP00000009 EP00000010  1 Feb 2006  31 Jan 2010  120.00  1 Feb 2010  125.00 900 LABOR  1 Feb 2006  31 Jan 2008  100.00  1 Feb 2008  31 Jan 2010  105.00  1 Feb 2010  31 Jan 2012  110.00  1 Feb 2012  115.00  999  1 Feb 2006  0.00 Rules  700 ,  710 ,  720 , and  790  define special labor billing 				rate for project  TM00000001 : if employee  EP00000006  works in this 				project, his time is billed to customer at $200/hour (rule  710 ). But his work 				in project  CP00000005  will be billed at $120/hour (rule  820 ). ]]></column>
		</row>
		<row PageID="17611cbc-6496-41e8-bdb9-cb58f25afd22" Language="en-US" PageRevisionID="1" ApprovalByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" ApprovalDateTime="1970-01-23 00:00:00" CreatedByID="b5344897-037e-4d58-b5c3-1bdfd0f47bf9" CreatedDateTime="1970-01-23 00:00:00" UID="8806da61-841c-064d-ce3e-0561e8cb8756" RecordSourceID="22377">
			<column name="Content"><![CDATA[
This section provides some examples of allocation and billing rules in the Projects module. 
==Budget-based Allocations==
The FPCPU, FPCPP, FPPCR, and FPPCU rules all use the allocation method ''Budget'' and are designed for fixed-price projects. These projects calculate the billable amount based on the percent complete of the job done. Actual billing can be ongoing, when the task is finished, or when the whole project is finished, depending on the project task setting. 
==Rule FPCPU==
The rule is designed for fixed price projects that update General Ledger only through invoicing; between the billings, the project displays unbilled amounts as unrecognized revenue. The method is '' Budget''.
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="7%" ! Step
!width="14%" ! Description
!width="7%" ! Sum
!width="7%" ! Post
!width="15%" ! Description Formula
!width="14%" ! Account Group
!width="8%" ! Update GL
!width="10%" ! Debit Account Group
!width="14%" ! Credit Account Group
|- 
| '''10'''
| PTD revenue (unrecognized) 
| OFF
| ON
| =&rsquo;Unrecognized revenue&rsquo;
| CONTRACT
| OFF
| NO DEBIT
| Replace with UNRECREV
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="16%" ! Account Group
!width="12%" ! Invoice Description
!width="12%" ! Account
!width="16%" ! Subaccount
!width="8%" ! Include Non-Billable
!width="8%" ! Limit Qty
!width="8%" ! Limit Amount
!width="16%" ! Max. Limits Account Group
|- 
| UNRECREV
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| ON
| CONTRACT
|}
A project that uses this rule is expected to have the off-balance account group ''CONTRACT''; the budget of this group holds the contract amount, which is the maximum amount that you can bill to the customer. The total contract amount can be split among tasks, and each task will have its budget for account group ''CONTRACT''. Alternatively, you can create a special task that does not accept transactions from any module, but it holds the contract amount and is used in allocation and billing. All other tasks will have no budget for the account group ''CONTRACT''. {br}

The allocation rule calculates the billable amount as '''CONTRACT budget &#42; percent complete of the task - previous billable amounts'''. The calculated amount is posted as a single-sided transaction and shown only in Projects. Single-sided transactions cannot be posted to the General Ledger. The General Ledger is updated by the billing rule, which: 
*Generates an invoice for the amount calculated by the allocation rule. Note that the billing account group ''UNRECREV'' is the same as the '''credit''' account group in the allocation rule.
*Reverses allocation transactions used as a billing source: account group ''UNRECREV'' should have a zero balance after the billing. The reversal transaction is a Projects transaction, which should be released to update the ''UNRECREV'' balance.

The total billable amount is limited by the budget of account category ''CONTRACT''. ((({S:Hint}
 A single-sided, budget-based credit allocation is the only case when a credit setting of the allocation rule is used in the billing rule. In all other cases, debit setting should be used. 
)))
==Rule FPCPP==
This rule is designed for fixed-price projects that update the General Ledger with unrecognized revenue. The revenue is recognized during billing. The method is '' Budget''.
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="6%" ! Step
!width="9%" ! Descr.
!width="6%" ! Sum
!width="6%" ! Post
!width="12%" ! Descr. Formula
!width="12%" ! Account Group
!width="8%" ! Update GL
!width="18%" ! Debit
!width="18%" ! Credit
|- 
| '''10'''
| PTD revenue
| OFF
| ON
| =&rsquo;Billable amount&rsquo;
| CONTRACT
| ON
| 
Account¹: Replace with 111100{br}

Subacct mask²: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000
| 
Account¹: Replace with 220000 {br}

Subacct mask²: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000
|}
¹ When the debit or credit account is changed, the debit or credit account group is automatically set to ''From Account''{br}

² Mask ''AA'' of the subaccount segment indicates that the segment should be taken from allocation rule. Other available masks are: 
*''PP'': The default subaccount of the project
*''SS'': The source transaction
*''TT'': The default subaccount of the task

===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Account Group
!width="14%" ! Invoice Description
!width="11%" ! Account
!width="18%" ! Subaccount
!width="8%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="8%" ! Limit Amount
!width="14%" ! Max. Limits Account Group
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| ON
| CONTRACT
|}
Unlike FPCPU, allocation rule FPCPP updates the General Ledger with the amount of unrecognized revenue; therefore, it has both debit and credit settings. Note that the billing account group ''UNBILLED'' is the group of the '''debit''' account ''111100''. As in the previous rule, FPCPP billing reverses allocation transactions used as the billing source. But in this case, reversal transactions are invisibly &ldquo;attached&ldquo; to the Accounts Receivable invoice and do not require a separate release. 
==Rule FPPCR==
This rule is designed for fixed-price projects that update the General Ledger with recognized revenue even between invoicing. 
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="6%" ! Step
!width="8%" ! Descr.
!width="6%" ! Sum
!width="6%" ! Post
!width="12%" ! Description Formula
!width="11%" ! Account Group
!width="7%" ! Method
!width="7%" ! Update GL
!width="16%" ! Debit
!width="16%" ! Credit
|- 
| '''10'''
| PTD revenue
| OFF
| ON
| = &rsquo;Recognized revenue&rsquo;
| REVENUE
| Budget
| ON
| 
Account: Replace with 111100 {br}

Subacct mask: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000
| 
Account: Replace with 403000 {br}

Subacct mask: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="15%" ! Account Group
!width="13%" ! Invoice Descr.
!width="11%" ! Account
!width="19%" ! Subaccount
!width="9%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="7%" ! Limit Amount
!width="15%" ! Max. Limits Account Group
|- 
| UNBILLED
| Project billing
| 403000
| 00-00-00-00-000
| OFF
| OFF
| ON
| REVENUE
|}
Allocation rule FPPCR is different from FPCPP in that it updates the General Ledger with the amount of recognized revenue, so that the Profit and Loss report will show project revenue even before the Accounts Receivable invoice is generated. The billing rule reverses the allocation posting and re-posts revenue to the same account ''403000'' so that the revenue balance is not affected by the billing and effectively, invoice amounts are posted from the unbilled Accounts Receivable account ''111100'' to the Accounts Receivable account (as defined in customer master record). 
==Rule FPPCU==
The rule is designed for fixed-price projects that update the General Ledger only through invoicing; between the billings, the project displays unbilled amount and unrecognized revenue separately. The method is ''Budget''.
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="6%" ! Step
!width="15%" ! Descr.
!width="6%" ! Sum
!width="6%" ! Post
!width="15%" ! Descr. Formula
!width="15%" ! Account Group
!width="6%" ! Update GL
!width="15%" ! Debit Account Group
!width="15%" ! Credit Account Group
|- 
| '''10'''
| Allocate billable amount
| OFF
| ON
| =&rsquo;Project revenue&rsquo;
| REVENUE
| OFF
| Replace with UNBILLED
| Replace with UNRECREV
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Account Group
!width="11%" ! Invoice Descr.
!width="13%" ! Account
!width="18%" ! Subaccount
!width="9%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="9%" ! Limit Amount
!width="14%" ! Max. Limits Account Group
|- 
| UNBILLED
| Project billing
| 403000
| 00-00-00-00-000
| OFF
| OFF
| ON
| REVENUE
|}
The FPPCU rule is very similar to FPCPU, except that it generates a double-sided allocation transaction (which has both debit and credit). Respectively, the billing rule uses the '''debit''' account group. 
==Transaction-based Allocations==
The following rules use the allocation method ''Transaction'' (for presentation purposes, the method is not shown in the tables below) and are designed for time-and-material projects and for cost-plus projects. 
==Rule TMR==
This rule is designed for simple time-and-material projects that recognize revenue during allocation and post it to the General Ledger. [anchor|#table_bkm_5ll_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Settings
!width="20%" ! Step 10
!width="20%" ! Step 20
!width="20%" ! Step 30
!width="20%" ! Step 40
|- 
| '''Description'''
| Calculate billable labor
| Calculate billable material
| Re-invoice subcontractors
| Re-invoice travel expenses
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Post'''
| ON
| ON
| ON
| ON
|- 
| '''Rate Code'''
| LABORATE
| BILLINRATE
| BILLINRATE
| 
|- 
| '''Qty Formula'''
| {{=[PMTran. Qty]}}
| {{=[PMTran. Qty]}}
| =0
| =0
|- 
| '''Billable Qty Formula'''
| {{=[PMTran. BillableQty]}}
| {{=[PMTran. BillableQty]}}
| =0
| =0
|- 
| '''Amount Formula'''
| {{=[PMTran. BillableQty] * @Rate}}
| {{=[PMTran. Amount] * @Rate}}
| {{=[PMTran. Amount] * @Rate}}
| {{=[PMTran. Amount]}}
|- 
| '''Description Formula'''
| {{=IsNull([EPEmployee. AcctName, [PMTran. Description])}}
| {{= IsNull ([InventoryItem. Descr], [PMTran. Description])}}
| {{= IsNull ([Vendor. AcctName], [PMTran. Description])}}
| {{=[PMTran. Description]}}
|- 
| '''Account Group'''
| LABOR
| MATERIAL
| SUBCON
| TRAVEL
|- 
| '''Update GL'''
| ON
| ON
| ON
| ON
|- 
| '''Debit Account'''
| Replace with 111100
| Replace with 111100
| Replace with 111100
| Replace with 111100
|- 
| '''Credit Account'''
| Replace with 403000
| Replace with 401000
| Replace with 408000
| Replace with 408000
|- 
| '''Groups by'''
| by Employee
| by Item
| by Vendor
| Full detail
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Account Group
!width="16%" ! Invoice Description
!width="14%" ! Account
!width="20%" ! Subaccount
!width="10%" ! Include Non-Billable
!width="8%" ! Limit Qty
!width="9%" ! Limit Amount 
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|}
Step 10 of the allocation rule calculates billable labor by using the billing hourly rate ''LABORATE''. Steps 20-40 mark up non-labor expenses by multiplying them by the factor ''MATERATE''. Although ''LABORATE'' and ''MATERATE'' are both maintained as rate codes, their usage is different: hourly rate and mark-up factor. Note description formulas, e.g. {{=IsNull([InventoryItem.Descr], [PMTran.Description])}}. If the original transaction has an inventory ID, the allocation transaction will use the description of the inventory item. Otherwise, the original transaction description will be copied. The '''Grouping''' option &ldquo;compresses&ldquo; original transactions into fewer allocation transactions according to their nature: labor expenses are grouped by employee, material expenses are grouped by inventory item, and subcontractor expenses are grouped by vendor. Travel expenses are not grouped. 
==Rule TMU==
This rule is designed for simple time-and-material projects that recognize revenue during billing; unrecognized revenue is shown in Projects but is not posted to General Ledger. [anchor|#table_fhk_ssl_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Settings
!width="20%" ! Step 10
!width="20%" ! Step 20
!width="20%" ! Step 30
!width="20%" ! Step 40
|- 
| '''Description'''
| Revenue on labor
| Revenue on material
| Revenue on subcontractors
| Re-invoice travel expenses
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Post'''
| ON
| ON
| ON
| ON
|- 
| '''Rate Code'''
| LABORATE
| BILLINRATE
| BILLINRATE
| 
|- 
| '''Qty Formula'''
| {{= -[PMTran. Qty]}}
| {{= -[PMTran. Qty]}}
| =0
| =0
|- 
| '''Billable Qty Formula'''
| {{= -[PMTran. BillableQty]}}
| {{= -[PMTran. BillableQty]}}
| =0
| =0
|- 
| '''Amount Formula'''
| {{= -[PMTran. BillableQty] * @Rate}}
| {{= -[PMTran. Amount] * @Rate}}
| {{= -[PMTran. Amount] * @Rate}}
| {{= -[PMTran. Amount]}}
|- 
| '''Description Formula'''
| {{=[EPEmployee. AcctName]}}
| {{=[InventoryItem. Descr]}}
| {{=[Vendor. AcctName]}}
| {{=[PMTran. Description]}}
|- 
| '''Account Group'''
| LABOR
| MATERIAL
| SUBCON
| TRAVEL
|- 
| '''Update GL'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Debit Account'''
| Replace with UNRECREV
| Replace with UNRECREV
| Replace with UNRECREV
| Replace with UNRECREV
|- 
| '''Credit Account'''
| NO CREDIT
| NO CREDIT
| NO CREDIT
| NO CREDIT
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Account Group
!width="16%" ! Invoice Description
!width="14%" ! Account
!width="20%" ! Subaccount
!width="9%" ! Include Non-Billable
!width="8%" ! Limit Qty
!width="9%" ! Limit Amount 
|- 
| UNRECREV
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|}
The allocation rule generates single-sided transactions to update unrecognized revenue. ((({S:Hint}
 Note the negative sign in quantity and amount formulas. Single-sided credit is allowed only for budget-based allocations. Transaction-based allocation can create only single-sided debit transactions. To ensure that the liability account group ''UNRECREV'' ('''credit''' type) is updated correctly by the '''debit''' transaction, the transaction amount must be '''negative'''.
)))
==Rule TMSUM==
This time-and-material rule demonstrates the use of the ''Sum'' function in allocation. [anchor|#table_zff_kwg_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="16%" ! Settings
!width="17%" ! Step 20
!width="14%" ! Step 30
!width="13%" ! Step 40
!width="18%" ! Step 100
!width="19%" ! Step 110
|- 
| '''Description'''
| Select material
| Select sub-contractors
| Select travel
| Bill labor
| Bill other
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
| ON
|- 
| '''Post'''
| OFF
| OFF
| OFF
| ON
| ON
|- 
| '''Rate Code'''
| 
| 
| 
| LABORATE
| BILLINRATE
|- 
| '''Qty Formula'''
| 
| 
| 
| {{=[PMTran. Qty]}}
| 
|- 
| '''Billable Qty Formula'''
| 
| 
| 
| {{=[PMTran. BillableQty]}}
| 
|- 
| '''Amount Formula'''
| 
| 
| 
| {{=[PMTran. Amount] *@Rate}}
| {{=[PMTran. Amount] * @Rate}}
|- 
| '''Description Formula'''
| 
| 
| 
| =&rsquo;Billable labor&rsquo;
| =&rsquo;Billable material&rsquo;
|- 
| '''Account Group'''
| MATERIAL
| SUBCON
| TRAVEL
| LABOR
| 
|- 
| '''Range'''
| 
| 
| 
| 
| From '''10''' To '''90'''
|- 
|  '''Update GL'''
| OFF
| OFF
| OFF
| OFF
| OFF
|- 
| '''Debit Account Group'''
| 
| 
| 
| Replace with UNBILLEDHR
| Replace with UNBILLED
|- 
| '''Credit Account Group'''
| 
| 
| 
| Replace with UNRECREV
| Replace with UNRECREV
|}
===Billing Rules ===
{| class="checklist" | width="100%" 
|- 
!width="20%" ! Account Group
!width="16%" ! Invoice Description
!width="14%" ! Account
!width="20%" ! Subaccount
!width="9%" ! Include Non-Billable
!width="8%" ! Limit Qty
!width="9%" ! Limit Amount 
|- 
| UNBILLEDHR
| Project billing
| 403000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|}
 Steps 20-40 of the allocation rule do not allocate expenses or calculate billable amounts; they only select transactions from respective account groups for further processing in Step 110. Step 100 is regular allocation step that calculates billable labor and posts it to the ''UNBILLEDHR'' account group. Step 110 does not select original transactions directly (its '''Account Group''' is blank) but takes input from previous steps (the '''Range From/To''' column). Note that the debit account groups in Step 100 and Step 110 are different. This allows you to bill them differently: The billing rule credits labor revenue to account ''403000'', while other project revenues are credited to account ''408000''. Both billing rules have the same invoice description ''Project billing'' so that each billing run will generate one invoice. To invoice labor separately from other charges, use a different '''Invoice Description''' in the billing rules. 
==Rule CPINT==
This rule is designed for internal cost-plus projects that allocate indirect expenses and do not generate billable revenue. [anchor|#table_a2w_45g_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="18%" ! Settings
!width="21%" ! '''Step 10'''
!width="20%" !  '''Step 20'''
!width="20%" ! Step 30
!width="18%" ! Step 40
|- 
| '''Description'''
| Burden on labor
| Burden on material
| Burden on subcontractors
| Burden on travel
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Post'''
| ON
| ON
| ON
| ON
|- 
| '''Rate Code'''
| BURDENRATE
| BURDENRATE
| BURDENRATE
| BURDENRATE
|- 
| '''Qty Formula'''
| {{=[PMTran. Qty]}}
| =0
| =0
| =0
|- 
| '''Billable Qty Formula'''
| {{=[PMTran. BillableQty]}}
| =0
| =0
| =0
|- 
| '''Amount Formula'''
| {{=[PMTran. Amount]}}{{ *@Rate}}
| {{=[PMTran. Amount] *@Rate}}
| {{=[PMTran. Amount] *@Rate}}
| {{=[PMTran. Amount] *@Rate}}
|- 
| '''Description Formula'''
| = &rsquo;Burden on labor&rsquo;
| = &rsquo;Burden on material&rsquo;
| = &rsquo;Burden on sub-contractors&rsquo;
| = &rsquo;Other burdens&rsquo;
|- 
| '''Account Group'''
| LABOR
| MATERIAL
| SUBCON
| TRAVEL
|- 
| '''Update GL'''
| OFF
| OFF
| OFF
| OFF
|- 
| '''Debit Account Group'''
| BURDEN
| BURDEN
| BURDEN
| BURDEN
|- 
| '''Credit Account Group'''
| NO CREDIT
| NO CREDIT
| NO CREDIT
| NO CREDIT
|}
Steps 10-40 of the allocation rule calculate the project burden as a certain percentage of the direct costs. The calculated burden is not posted to General Ledger: actual indirect costs are posted in Accounts Payable or General Ledger as non-project transactions; the project allocation is designed to enable Projects reports to show the estimated project burden. This rule has no billing steps. It is designed for internal projects that have no customers to bill. 
==Rule CPSUM==
The rule is designed for billable cost-plus projects and demonstrates the ''Sum'' allocation function. [anchor|#table_sdp_crg_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="14%" ! Settings
!width="11%" ! Step 10
!width="14%" ! Step 20
!width="14%" ! Step 30
!width="10%" ! Step 40
!width="17%" ! Step 100
!width="17%" ! Step 110
|- 
| '''Description'''
| Select labor
| Select material
| Select subcontractors
| Select travel
| Calculate burden
| Calculate billable
|- 
| '''Sum'''
| OFF
| OFF
| OFF
| OFF
| ON
| ON
|- 
| '''Post'''
| OFF
| OFF
| OFF
| OFF
| ON
| ON
|- 
| '''Rate Code'''
| 
| 
| 
| 
| BURDENRATE
| BILLINRATE
|- 
| '''Qty Formula'''
| 
| 
| 
| 
| {{=[PMTran. Qty]}}
| {{=[PMTran. Qty]}}
|- 
| '''Billable Qty Formula'''
| 
| 
| 
| 
| {{=[PMTran. BillableQty]}}
| {{=[PMTran. BillableQty]}}
|- 
| '''Amount Formula'''
| 
| 
| 
| 
| {{=[PMTran. Amount] *@Rate}}
| {{=[PMTran. Amount] *@Rate}}
|- 
| '''Description Formula'''
| 
| 
| 
| 
| =&rsquo;Project burden&rsquo;
| =&rsquo;Project billable&rsquo;
|- 
| '''Account Group'''
| LABOR
| MATERIAL
| SUBCON
| TRAVEL
| 
| 
|- 
| '''Range'''
| 
| 
| 
| 
| From '''10''' To '''90'''
| From '''10''' To '''90'''
|- 
|  '''Update GL'''
| OFF
| OFF
| OFF
| OFF
| OFF
| ON
|- 
| '''Debit'''
| 
| 
| 
| 
| Account Group BURDEN
| Account 111100
|- 
| '''Credit'''
| 
| 
| 
| 
| Account Group NO CREDIT
| Account 408000
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="18%" ! Account Group
!width="18%" ! Invoice Description
!width="15%" ! Account
!width="19%" ! Subaccount
!width="10%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="10%" ! Limit Amount 
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
|}
Steps 10-40 of the allocation rule select original transactions from the respective account groups and keep them for further processing steps. Step 100 takes input from Steps 10-40, and calculates and posts the project burden without updating General Ledger. Step 110 takes the same input and calculates project revenue that is then invoiced by the billing rule. 
==Rule FPCOSTM==
This rule is an example of a &ldquo;mixed-method&ldquo; rule: HR-related costs (labor and travel) are billed under a fixed-price scheme, while material subcontractor expenses are handled in a time-and-materials manner. [anchor|#table_qgv_x3g_sh]
===Allocation Rules===
{| class="checklist" | width="100%" 
|- 
!width="23%" ! Settings
!width="26%" ! '''Step 10'''
!width="25%" !  '''Step 20'''
!width="24%" ! Step 30
|- 
| '''Description'''
| Calculate billable HR
| Calculate billable material
| Re-invoice subcontractors
|- 
| '''Sum'''
| OFF
| OFF
| OFF
|- 
| '''Post'''
| ON
| OFF
| ON
|- 
| '''Rate Code'''
| 
| BILLINRATE
| BILLINRATE
|- 
| '''Qty Formula'''
| 
| {{=[PMTran. Qty]}}
| =0
|- 
| '''Billable Qty Formula'''
| 
| {{=[PMTran. BillableQty]}}
| =0
|- 
| '''Amount Formula'''
| 
| {{=[PMTran. Amount] * @Rate}}
| {{=[PMTran. Amount] * @Rate}}
|- 
| '''Description Formula'''
| = &rsquo;Unrecognized revenue&rsquo;
| {{= IsNull ([InventoryItem. Descr], [PMTran. Description])}}
| {{= IsNull ( [Vendor. AcctName], [PMTran. Description])}}
|- 
| '''Account Group'''
| CONTRACT
| MATERIAL
| SUBCON
|- 
| '''Method'''
| Budget
| Transaction
| Transaction
|- 
| '''Update GL'''
| OFF
| OFF
| ON
|- 
| '''Debit Account Group'''
| UNBILLEDHR
| UNBILLED
| UNBILLED
|- 
| '''Credit Account Group'''
| UNRECREV
| UNRECREV
| UNRECREV
|}
===Billing Rules===
{| class="checklist" | width="100%" 
|- 
!width="17%" ! Account Group
!width="11%" ! Invoice Description
!width="12%" ! Account
!width="18%" ! Subaccount
!width="8%" ! Include Non-Billable
!width="7%" ! Limit Qty
!width="8%" ! Limit Amount
!width="14%" ! Max. Limits Account Group
|- 
| UNBILLEDHR
| Project billing
| 403000
| 00-00-00-00-000
| OFF
| OFF
| ON
| CONTRACT
|- 
| UNBILLED
| Project billing
| 408000
| 00-00-00-00-000
| OFF
| OFF
| OFF
| 
|}]]></column>
			<column name="PlainText"><![CDATA[Project Allocation and Billing Rules Examples This section provides some examples of allocation and billing rules in the Projects 				module.  Budget-based Allocations The FPCPU, FPCPP, FPPCR, and FPPCU rules all use the allocation method  Budget  				and are designed for fixed-price projects. These projects calculate the billable 				amount based on the percent complete of the job done. Actual billing can be ongoing, 				when the task is finished, or when the whole project is finished, depending on the 				project task setting.  Rule FPCPU The rule is designed for fixed price projects that update General Ledger only through 				invoicing; between the billings, the project displays unbilled amounts as 				unrecognized revenue. The method is   Budget . Allocation Rules Step Description Sum Post Description Formula Account Group Update GL Debit Account Group Credit Account Group 10 PTD revenue (unrecognized)  OFF ON ='Unrecognized revenue' CONTRACT OFF NO DEBIT Replace with UNRECREV Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNRECREV Project billing 408000 00-00-00-00-000 OFF OFF ON CONTRACT A project that uses this rule is expected to have the off-balance account group 					 CONTRACT ; the budget of this group holds the contract amount, which is 				the maximum amount that you can bill to the customer. The total contract amount can 				be split among tasks, and each task will have its budget for account group 					 CONTRACT . Alternatively, you can create a special task that does not 				accept transactions from any module, but it holds the contract amount and is used in 				allocation and billing. All other tasks will have no budget for the account group 					 CONTRACT .  The allocation rule calculates the billable amount as  CONTRACT budget * percent 					complete of the task - previous billable amounts . The calculated amount is 				posted as a single-sided transaction and shown only in Projects. Single-sided 				transactions cannot be posted to the General Ledger. The General Ledger is updated 				by the billing rule, which:  Generates an invoice for the amount calculated by the allocation rule. Note that 					the billing account group  UNRECREV  is the same as the  credit  					account group in the allocation rule. Reverses allocation transactions used as a billing source: account group 						 UNRECREV  should have a zero balance after the billing. The reversal 					transaction is a Projects transaction, which should be released to update the 						 UNRECREV  balance. The total billable amount is limited by the budget of account category 					 CONTRACT .   A single-sided, budget-based credit allocation is the only case when a credit 					setting of the allocation rule is used in the billing rule. In all other cases, 					debit setting should be used.  Rule FPCPP This rule is designed for fixed-price projects that update the General Ledger with 				unrecognized revenue. The revenue is recognized during billing. The method is   					Budget . Allocation Rules Step Descr. Sum Post Descr. Formula Account Group Update GL Debit Credit 10 PTD revenue OFF ON ='Billable amount' CONTRACT ON Account¹: Replace with 111100 Subacct mask²: AA-AA-AA-AA-AAA Subaccount: 									00-00-00-00-000 Account¹: Replace with 220000  Subacct mask²: AA-AA-AA-AA-AAA Subaccount: 									00-00-00-00-000 ¹ When the debit or credit account is changed, the debit or credit account group 				is automatically set to  From Account ² Mask  AA  of the subaccount segment indicates that the segment should be 				taken from allocation rule. Other available masks are:  PP : The default subaccount of the project SS : The source transaction TT : The default subaccount of the task Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF ON CONTRACT Unlike FPCPU, allocation rule FPCPP updates the General Ledger with the amount of 				unrecognized revenue; therefore, it has both debit and credit settings. Note that 				the billing account group  UNBILLED  is the group of the  debit  account 					 111100 . As in the previous rule, FPCPP billing reverses allocation 				transactions used as the billing source. But in this case, reversal transactions are 				invisibly "attached" to the Accounts Receivable invoice and do not require a 				separate release.  Rule FPPCR This rule is designed for fixed-price projects that update the General Ledger with 				recognized revenue even between invoicing.  Allocation Rules Step Descr. Sum Post Description Formula Account Group Method Update GL Debit Credit 10 PTD revenue OFF ON = 'Recognized revenue' REVENUE Budget ON Account: Replace with 111100  Subacct mask: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000 Account: Replace with 403000  Subacct mask: AA-AA-AA-AA-AAA Subaccount: 00-00-00-00-000 Billing Rules Account Group Invoice Descr. Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNBILLED Project billing 403000 00-00-00-00-000 OFF OFF ON REVENUE Allocation rule FPPCR is different from FPCPP in that it updates the General Ledger 				with the amount of recognized revenue, so that the Profit and Loss report will show 				project revenue even before the Accounts Receivable invoice is generated. The 				billing rule reverses the allocation posting and re-posts revenue to the same 				account  403000  so that the revenue balance is not affected by the billing and 				effectively, invoice amounts are posted from the unbilled Accounts Receivable 				account  111100  to the Accounts Receivable account (as defined in customer 				master record).  Rule FPPCU The rule is designed for fixed-price projects that update the General Ledger only 				through invoicing; between the billings, the project displays unbilled amount and 				unrecognized revenue separately. The method is  Budget . Allocation Rules Step Descr. Sum Post Descr. Formula Account Group Update GL Debit Account Group Credit Account Group 10 Allocate billable amount OFF ON ='Project revenue' REVENUE OFF Replace with UNBILLED Replace with UNRECREV Billing Rules Account Group Invoice Descr. Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNBILLED Project billing 403000 00-00-00-00-000 OFF OFF ON REVENUE The FPPCU rule is very similar to FPCPU, except that it generates a double-sided 				allocation transaction (which has both debit and credit). Respectively, the billing 				rule uses the  debit  account group.  Transaction-based Allocations The following rules use the allocation method  Transaction  (for presentation 				purposes, the method is not shown in the tables below) and are designed for 				time-and-material projects and for cost-plus projects.  Rule TMR This rule is designed for simple time-and-material projects that recognize revenue 				during allocation and post it to the General Ledger.  Allocation Rules Settings Step 10 Step 20 Step 30 Step 40 Description Calculate billable labor Calculate billable material Re-invoice subcontractors Re-invoice travel expenses Sum OFF OFF OFF OFF Post ON ON ON ON Rate Code LABORATE BILLINRATE BILLINRATE Qty Formula =[PMTran. Qty] =[PMTran. Qty] =0 =0 Billable Qty Formula =[PMTran. BillableQty] =[PMTran. BillableQty] =0 =0 Amount Formula =[PMTran. BillableQty] * @Rate =[PMTran. Amount] * @Rate =[PMTran. Amount] * @Rate =[PMTran. Amount] Description Formula =IsNull([EPEmployee. AcctName, [PMTran. 									Description]) = IsNull ([InventoryItem. Descr], [PMTran. 									Description]) = IsNull ([Vendor. AcctName], [PMTran. 									Description]) =[PMTran. Description] Account Group LABOR MATERIAL SUBCON TRAVEL Update GL ON ON ON ON Debit Account Replace with 111100 Replace with 111100 Replace with 111100 Replace with 111100 Credit Account Replace with 403000 Replace with 401000 Replace with 408000 Replace with 408000 Groups by by Employee by Item by Vendor Full detail Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount  UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF OFF Step 10 of the allocation rule calculates billable labor by using the billing hourly 				rate  LABORATE . Steps 20-40 mark up non-labor expenses by multiplying them by 				the factor  MATERATE . Although  LABORATE  and  MATERATE  are both 				maintained as rate codes, their usage is different: hourly rate and mark-up factor. 				Note description formulas, e.g.  =IsNull([InventoryItem.Descr], 					[PMTran.Description]) . If the original transaction has an inventory ID, 				the allocation transaction will use the description of the inventory item. 				Otherwise, the original transaction description will be copied. The  Grouping  				option "compresses" original transactions into fewer allocation transactions 				according to their nature: labor expenses are grouped by employee, material expenses 				are grouped by inventory item, and subcontractor expenses are grouped by vendor. 				Travel expenses are not grouped.  Rule TMU This rule is designed for simple time-and-material projects that recognize revenue 				during billing; unrecognized revenue is shown in Projects but is not posted to 				General Ledger.  Allocation Rules Settings Step 10 Step 20 Step 30 Step 40 Description Revenue on labor Revenue on material Revenue on subcontractors Re-invoice travel expenses Sum OFF OFF OFF OFF Post ON ON ON ON Rate Code LABORATE BILLINRATE BILLINRATE Qty Formula = -[PMTran. Qty] = -[PMTran. Qty] =0 =0 Billable Qty Formula = -[PMTran. BillableQty] = -[PMTran. BillableQty] =0 =0 Amount Formula = -[PMTran. BillableQty] * @Rate = -[PMTran. Amount] * @Rate = -[PMTran. Amount] * @Rate = -[PMTran. Amount] Description Formula =[EPEmployee. AcctName] =[InventoryItem. Descr] =[Vendor. AcctName] =[PMTran. Description] Account Group LABOR MATERIAL SUBCON TRAVEL Update GL OFF OFF OFF OFF Debit Account Replace with UNRECREV Replace with UNRECREV Replace with UNRECREV Replace with UNRECREV Credit Account NO CREDIT NO CREDIT NO CREDIT NO CREDIT Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount  UNRECREV Project billing 408000 00-00-00-00-000 OFF OFF OFF The allocation rule generates single-sided transactions to update unrecognized 				revenue.   Note the negative sign in quantity and amount formulas. Single-sided credit is 					allowed only for budget-based allocations. Transaction-based allocation can 					create only single-sided debit transactions. To ensure that the liability 					account group  UNRECREV  ( credit  type) is updated correctly by the 						 debit  transaction, the transaction amount must be 					 negative . Rule TMSUM This time-and-material rule demonstrates the use of the  Sum  function in 				allocation.  Allocation Rules Settings Step 20 Step 30 Step 40 Step 100 Step 110 Description Select material Select sub-contractors Select travel Bill labor Bill other Sum OFF OFF OFF OFF ON Post OFF OFF OFF ON ON Rate Code LABORATE BILLINRATE Qty Formula =[PMTran. Qty] Billable Qty Formula =[PMTran. BillableQty] Amount Formula =[PMTran. Amount] *@Rate =[PMTran. Amount] * @Rate Description Formula ='Billable labor' ='Billable material' Account Group MATERIAL SUBCON TRAVEL LABOR Range From  10  To  90 Update GL OFF OFF OFF OFF OFF Debit Account Group Replace with UNBILLEDHR Replace with UNBILLED Credit Account Group Replace with UNRECREV Replace with UNRECREV Billing Rules  Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount  UNBILLEDHR Project billing 403000 00-00-00-00-000 OFF OFF OFF UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF OFF  Steps 20-40 of the allocation rule do not allocate expenses or calculate billable 				amounts; they only select transactions from respective account groups for further 				processing in Step 110. Step 100 is regular allocation step that calculates billable 				labor and posts it to the  UNBILLEDHR  account group. Step 110 does not select 				original transactions directly (its  Account Group  is blank) but takes input 				from previous steps (the  Range From/To  column). Note that the debit account 				groups in Step 100 and Step 110 are different. This allows you to bill them 				differently: The billing rule credits labor revenue to account  403000 , while 				other project revenues are credited to account  408000 . Both billing rules 				have the same invoice description  Project billing  so that each billing run 				will generate one invoice. To invoice labor separately from other charges, use a 				different  Invoice Description  in the billing rules.  Rule CPINT This rule is designed for internal cost-plus projects that allocate indirect expenses 				and do not generate billable revenue.  Allocation Rules Settings Step 10 Step 20 Step 30 Step 40 Description Burden on labor Burden on material Burden on subcontractors Burden on travel Sum OFF OFF OFF OFF Post ON ON ON ON Rate Code BURDENRATE BURDENRATE BURDENRATE BURDENRATE Qty Formula =[PMTran. Qty] =0 =0 =0 Billable Qty Formula =[PMTran. BillableQty] =0 =0 =0 Amount Formula =[PMTran. Amount]  *@Rate =[PMTran. Amount] *@Rate =[PMTran. Amount] *@Rate =[PMTran. Amount] *@Rate Description Formula = 'Burden on labor' = 'Burden on material' = 'Burden on sub-contractors' = 'Other burdens' Account Group LABOR MATERIAL SUBCON TRAVEL Update GL OFF OFF OFF OFF Debit Account Group BURDEN BURDEN BURDEN BURDEN Credit Account Group NO CREDIT NO CREDIT NO CREDIT NO CREDIT Steps 10-40 of the allocation rule calculate the project burden as a certain 				percentage of the direct costs. The calculated burden is not posted to General 				Ledger: actual indirect costs are posted in Accounts Payable or General Ledger as 				non-project transactions; the project allocation is designed to enable Projects 				reports to show the estimated project burden. This rule has no billing steps. It is 				designed for internal projects that have no customers to bill.  Rule CPSUM The rule is designed for billable cost-plus projects and demonstrates the  Sum  				allocation function.  Allocation Rules Settings Step 10 Step 20 Step 30 Step 40 Step 100 Step 110 Description Select labor Select material Select subcontractors Select travel Calculate burden Calculate billable Sum OFF OFF OFF OFF ON ON Post OFF OFF OFF OFF ON ON Rate Code BURDENRATE BILLINRATE Qty Formula =[PMTran. Qty] =[PMTran. Qty] Billable Qty Formula =[PMTran. BillableQty] =[PMTran. BillableQty] Amount Formula =[PMTran. Amount] *@Rate =[PMTran. Amount] *@Rate Description Formula ='Project burden' ='Project billable' Account Group LABOR MATERIAL SUBCON TRAVEL Range From  10  To  90 From  10  To  90 Update GL OFF OFF OFF OFF OFF ON Debit Account Group BURDEN Account 111100 Credit Account Group NO CREDIT Account 408000 Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount  UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF OFF Steps 10-40 of the allocation rule select original transactions from the respective 				account groups and keep them for further processing steps. Step 100 takes input from 				Steps 10-40, and calculates and posts the project burden without updating General 				Ledger. Step 110 takes the same input and calculates project revenue that is then 				invoiced by the billing rule.  Rule FPCOSTM This rule is an example of a "mixed-method" rule: HR-related costs (labor and travel) 				are billed under a fixed-price scheme, while material subcontractor expenses are 				handled in a time-and-materials manner.  Allocation Rules Settings Step 10 Step 20 Step 30 Description Calculate billable HR Calculate billable material Re-invoice subcontractors Sum OFF OFF OFF Post ON OFF ON Rate Code BILLINRATE BILLINRATE Qty Formula =[PMTran. Qty] =0 Billable Qty Formula =[PMTran. BillableQty] =0 Amount Formula =[PMTran. Amount] * @Rate =[PMTran. Amount] * @Rate Description Formula = 'Unrecognized revenue' = IsNull ([InventoryItem. Descr], [PMTran. 									Description]) = IsNull ( [Vendor. AcctName], [PMTran. 									Description]) Account Group CONTRACT MATERIAL SUBCON Method Budget Transaction Transaction Update GL OFF OFF ON Debit Account Group UNBILLEDHR UNBILLED UNBILLED Credit Account Group UNRECREV UNRECREV UNRECREV Billing Rules Account Group Invoice Description Account Subaccount Include Non-Billable Limit Qty Limit Amount Max. Limits Account Group UNBILLEDHR Project billing 403000 00-00-00-00-000 OFF OFF ON CONTRACT UNBILLED Project billing 408000 00-00-00-00-000 OFF OFF OFF ]]></column>
		</row>
	</rows>
</data>